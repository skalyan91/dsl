strict digraph deps {
  node [colorscheme=set312, style=filled];

   subgraph cluster_1 {
     label = "app/Main.hs";
     "maindemo" [label= "maindemo", color=1];
     "main" [label= "main", color=1];
   }

   subgraph cluster_3 {
     label = "src/AnyAll/BoolStruct.hs";
     "simplifyBoolStruct" [label= "simplifyBoolStruct", color=3];
     "siblingfyBoolStruct" [label= "siblingfyBoolStruct", color=3];
     "nnf" [label= "nnf", color=3];
     "mkNot" [label= "mkNot", color=3];
     "mkLeaf" [label= "mkLeaf", color=3];
     "mkAny" [label= "mkAny", color=3];
     "mkAll" [label= "mkAll", color=3];
     "mergeMatch" [label= "mergeMatch", color=3];
     "extractLeaves" [label= "extractLeaves", color=3];
     "boolStruct\'" [label= "boolStruct\'", color=3];
     "boolStructChildren" [label= "boolStructChildren", color=3];
     "boolStruct" [label= "boolStruct", color=3];
     "attemptMergeHeads" [label= "attemptMergeHeads", color=3];
     "alwaysLabeled" [label= "alwaysLabeled", color=3];
     "addJust" [label= "addJust", color=3];
   }

   subgraph cluster_4 {
     label = "src/AnyAll/PP.hs";
     "svwrap" [label= "svwrap", color=4];
     "softnormal" [label= "softnormal", color=4];
     "pythonStyle" [label= "pythonStyle", color=4];
     "ppline" [label= "ppline", color=4];
     "ppQTree" [label= "ppQTree", color=4];
     "mystyle" [label= "mystyle", color=4];
     "markbox" [label= "markbox", color=4];
     "haskellStyle" [label= "haskellStyle", color=4];
     "hardnormal" [label= "hardnormal", color=4];
     "docQ1" [label= "docQ1", color=4];
     "cStyle" [label= "cStyle", color=4];
   }

   subgraph cluster_5 {
     label = "src/AnyAll/Relevance.hs";
     "relevant" [label= "relevant", color=5];
     "mkRelevantLeaf" [label= "mkRelevantLeaf", color=5];
     "evaluate" [label= "evaluate", color=5];
     "dispositive" [label= "dispositive", color=5];
     "deriveInitVis" [label= "deriveInitVis", color=5];
   }

   subgraph cluster_6 {
     label = "src/AnyAll/SVGLadder.hs";
     "vAlign" [label= "vAlign", color=6];
     "translateCommand" [label= "translateCommand", color=6];
     "textBoxLengthTiny" [label= "textBoxLengthTiny", color=6];
     "textBoxLengthFull" [label= "textBoxLengthFull", color=6];
     "svgConnector" [label= "svgConnector", color=6];
     "rowLayouterS" [label= "rowLayouterS", color=6];
     "rowLayouter" [label= "rowLayouter", color=6];
     "rowConnectorData" [label= "rowConnectorData", color=6];
     "rowAlignMargins" [label= "rowAlignMargins", color=6];
     "reorderByConnectivity" [label= "reorderByConnectivity", color=6];
     "renderVerticalLine" [label= "renderVerticalLine", color=6];
     "renderHorizontalLine" [label= "renderHorizontalLine", color=6];
     "q2svg\'" [label= "q2svg\'", color=6];
     "q2svg" [label= "q2svg", color=6];
     "portTB" [label= "portTB", color=6];
     "portT" [label= "portT", color=6];
     "portR" [label= "portR", color=6];
     "portLR" [label= "portLR", color=6];
     "portL" [label= "portL", color=6];
     "portB" [label= "portB", color=6];
     "outboundCurve" [label= "outboundCurve", color=6];
     "orderConnects" [label= "orderConnects", color=6];
     "mysteryWidth" [label= "mysteryWidth", color=6];
     "mysteryHeight" [label= "mysteryHeight", color=6];
     "move" [label= "move", color=6];
     "mergeConnects" [label= "mergeConnects", color=6];
     "makeSvg\'" [label= "makeSvg\'", color=6];
     "makeSvg" [label= "makeSvg", color=6];
     "makeLenses" [label= "makeLenses", color=6];
     "mAInt" [label= "mAInt", color=6];
     "labelBoxR" [label= "labelBoxR", color=6];
     "labelBox" [label= "labelBox", color=6];
     "intToText" [label= "intToText", color=6];
     "infix" [label= "infix", color=6];
     "inboundCurve" [label= "inboundCurve", color=6];
     "hAlign" [label= "hAlign", color=6];
     "getTextColorsR" [label= "getTextColorsR", color=6];
     "getScale" [label= "getScale", color=6];
     "getColorsText" [label= "getColorsText", color=6];
     "getColorsBox" [label= "getColorsBox", color=6];
     "getBoxColorsR" [label= "getBoxColorsR", color=6];
     "extractSoft" [label= "extractSoft", color=6];
     "drawVerticalLine" [label= "drawVerticalLine", color=6];
     "drawPrePostLabelTopBottom" [label= "drawPrePostLabelTopBottom", color=6];
     "drawPreLabelTop" [label= "drawPreLabelTop", color=6];
     "drawLeafR" [label= "drawLeafR", color=6];
     "drawItemTiny" [label= "drawItemTiny", color=6];
     "drawItemFull" [label= "drawItemFull", color=6];
     "drawItem" [label= "drawItem", color=6];
     "drawHorizontalLine" [label= "drawHorizontalLine", color=6];
     "drawBoxContentR" [label= "drawBoxContentR", color=6];
     "drawBoxContent" [label= "drawBoxContent", color=6];
     "drawBoxCapR" [label= "drawBoxCapR", color=6];
     "drawBoxCap" [label= "drawBoxCap", color=6];
     "dimWidth" [label= "dimWidth", color=6];
     "dimHeight" [label= "dimHeight", color=6];
     "deriveConfidence" [label= "deriveConfidence", color=6];
     "deriveBoxSize" [label= "deriveBoxSize", color=6];
     "deriveBoxCap" [label= "deriveBoxCap", color=6];
     "defaultStroke_" [label= "defaultStroke_", color=6];
     "defaultPorts" [label= "defaultPorts", color=6];
     "defaultMargins" [label= "defaultMargins", color=6];
     "defaultDimensions" [label= "defaultDimensions", color=6];
     "defaultConnect" [label= "defaultConnect", color=6];
     "defaultBBox\'" [label= "defaultBBox\'", color=6];
     "defaultBBox" [label= "defaultBBox", color=6];
     "defaultAAVConfig" [label= "defaultAAVConfig", color=6];
     "decorateWithLabelR" [label= "decorateWithLabelR", color=6];
     "decorateWithLabelGuardR" [label= "decorateWithLabelGuardR", color=6];
     "decorateWithLabel" [label= "decorateWithLabel", color=6];
     "debugBox" [label= "debugBox", color=6];
     "curveColour" [label= "curveColour", color=6];
     "confidence" [label= "confidence", color=6];
     "combineOr" [label= "combineOr", color=6];
     "combineAndS" [label= "combineAndS", color=6];
     "combineAnd" [label= "combineAnd", color=6];
     "columnLayouter" [label= "columnLayouter", color=6];
     "columnAlignMargins" [label= "columnAlignMargins", color=6];
     "cRInt" [label= "cRInt", color=6];
     "cAInt" [label= "cAInt", color=6];
     "boxPorts" [label= "boxPorts", color=6];
     "boxMargins" [label= "boxMargins", color=6];
     "boxDims" [label= "boxDims", color=6];
     "boxConnect" [label= "boxConnect", color=6];
     "box" [label= "box", color=6];
     "bboxWidth" [label= "bboxWidth", color=6];
     "bboxHeight" [label= "bboxHeight", color=6];
     "bTopMargin" [label= "bTopMargin", color=6];
     "alignVCalcElement" [label= "alignVCalcElement", color=6];
     "alignV" [label= "alignV", color=6];
     "alignHCalcMove" [label= "alignHCalcMove", color=6];
     "alignH" [label= "alignH", color=6];
     "adjustSideMargins" [label= "adjustSideMargins", color=6];
     "adjustBoxMargins" [label= "adjustBoxMargins", color=6];
     "aavscaleVerticalLayout" [label= "aavscaleVerticalLayout", color=6];
     "aavscaleMargins" [label= "aavscaleMargins", color=6];
     "aavscaleHorizontalLayout" [label= "aavscaleHorizontalLayout", color=6];
     "aavscaleDims" [label= "aavscaleDims", color=6];
     "_" [label= "_", color=6];
   }

   subgraph cluster_7 {
     label = "src/AnyAll/Types.hs";
     "strPrefix" [label= "strPrefix", color=7];
     "parseMarkingKV" [label= "parseMarkingKV", color=7];
     "parseMarking" [label= "parseMarking", color=7];
     "maybeSecond" [label= "maybeSecond", color=7];
     "maybeFirst" [label= "maybeFirst", color=7];
     "labelFirst" [label= "labelFirst", color=7];
     "getViewsJSON" [label= "getViewsJSON", color=7];
     "getViews" [label= "getViews", color=7];
     "getSV" [label= "getSV", color=7];
     "getForUI" [label= "getForUI", color=7];
     "getDefault" [label= "getDefault", color=7];
     "getAsksJSON" [label= "getAsksJSON", color=7];
     "getAsks" [label= "getAsks", color=7];
     "fromJSON" [label= "fromJSON", color=7];
     "ask2view" [label= "ask2view", color=7];
     "ask2hide" [label= "ask2hide", color=7];
     "asJSONDefault" [label= "asJSONDefault", color=7];
     "asJSON" [label= "asJSON", color=7];
     "anyof" [label= "anyof", color=7];
     "allof" [label= "allof", color=7];
   }

"_" -> "_";
"_" -> "orderConnects";
"addJust" -> "addJust";
"adjustBoxMargins" -> "columnAlignMargins";
"adjustSideMargins" -> "box";
"adjustSideMargins" -> "rowAlignMargins";
"alignH" -> "adjustSideMargins";
"alignH" -> "alignHCalcMove";
"alignH" -> "bboxWidth";
"alignHCalcMove" -> "move";
"alignV" -> "adjustBoxMargins";
"alignV" -> "alignVCalcElement";
"alignV" -> "bboxHeight";
"alignV" -> "box";
"alignVCalcElement" -> "move";
"alwaysLabeled" -> "_";
"alwaysLabeled" -> "alwaysLabeled";
"asJSONDefault" -> "parseMarking";
"bTopMargin" -> "boxMargins";
"bboxHeight" -> "boxDims";
"bboxHeight" -> "dimHeight";
"bboxWidth" -> "boxDims";
"bboxWidth" -> "dimWidth";
"boolStruct" -> "boolStruct\'";
"boolStructChildren" -> "_";
"boolStruct\'" -> "boolStruct\'";
"cAInt" -> "intToText";
"cRInt" -> "intToText";
"cStyle" -> "mystyle";
"columnLayouter" -> "bboxHeight";
"columnLayouter" -> "bboxWidth";
"columnLayouter" -> "boxConnect";
"columnLayouter" -> "defaultBBox";
"columnLayouter" -> "getScale";
"columnLayouter" -> "inboundCurve";
"columnLayouter" -> "mergeConnects";
"columnLayouter" -> "move";
"columnLayouter" -> "outboundCurve";
"columnLayouter" -> "portL";
"columnLayouter" -> "portR";
"combineAnd" -> "bboxWidth";
"combineAnd" -> "getScale";
"combineAnd" -> "move";
"combineAnd" -> "portL";
"combineAnd" -> "portR";
"combineAnd" -> "rowLayouter";
"combineAnd" -> "vAlign";
"combineAndS" -> "bboxWidth";
"combineAndS" -> "move";
"combineAndS" -> "portL";
"combineAndS" -> "portR";
"combineAndS" -> "rowLayouterS";
"combineAndS" -> "vAlign";
"combineOr" -> "bboxHeight";
"combineOr" -> "bboxWidth";
"combineOr" -> "columnLayouter";
"combineOr" -> "defaultBBox";
"combineOr" -> "getScale";
"combineOr" -> "hAlign";
"combineOr" -> "move";
"combineOr" -> "reorderByConnectivity";
"confidence" -> "_";
"curveColour" -> "defaultStroke_";
"decorateWithLabel" -> "_";
"decorateWithLabel" -> "drawPreLabelTop";
"decorateWithLabel" -> "drawPrePostLabelTopBottom";
"decorateWithLabelGuardR" -> "decorateWithLabelR";
"decorateWithLabelR" -> "drawPreLabelTop";
"decorateWithLabelR" -> "drawPrePostLabelTopBottom";
"defaultBBox" -> "defaultBBox";
"defaultBBox" -> "defaultBBox\'";
"defaultBBox" -> "defaultPorts";
"defaultBBox\'" -> "defaultConnect";
"defaultBBox\'" -> "defaultDimensions";
"defaultBBox\'" -> "defaultMargins";
"defaultBBox\'" -> "defaultPorts";
"deriveBoxCap" -> "extractSoft";
"deriveConfidence" -> "_";
"dispositive" -> "dispositive";
"dispositive" -> "evaluate";
"docQ1" -> "_";
"docQ1" -> "docQ1";
"docQ1" -> "markbox";
"docQ1" -> "ppline";
"drawBoxCap" -> "deriveBoxCap";
"drawBoxCap" -> "drawHorizontalLine";
"drawBoxCap" -> "drawVerticalLine";
"drawBoxCapR" -> "deriveBoxSize";
"drawBoxCapR" -> "drawBoxCap";
"drawBoxContent" -> "_";
"drawBoxContentR" -> "deriveBoxSize";
"drawBoxContentR" -> "drawBoxContent";
"drawBoxContentR" -> "getTextColorsR";
"drawHorizontalLine" -> "renderHorizontalLine";
"drawItem" -> "drawItemFull";
"drawItem" -> "drawItemTiny";
"drawItemFull" -> "combineAnd";
"drawItemFull" -> "combineOr";
"drawItemFull" -> "decorateWithLabel";
"drawItemFull" -> "defaultBBox";
"drawItemFull" -> "defaultBBox\'";
"drawItemFull" -> "drawItemFull";
"drawItemFull" -> "drawLeafR";
"drawItemFull" -> "getScale";
"drawItemFull" -> "textBoxLengthFull";
"drawItemFull" -> "textBoxLengthTiny";
"drawItemTiny" -> "defaultBBox";
"drawItemTiny" -> "defaultBBox\'";
"drawItemTiny" -> "drawItemFull";
"drawItemTiny" -> "drawItemTiny";
"drawItemTiny" -> "drawLeafR";
"drawItemTiny" -> "getScale";
"drawItemTiny" -> "textBoxLengthFull";
"drawItemTiny" -> "textBoxLengthTiny";
"drawLeafR" -> "_";
"drawLeafR" -> "boxConnect";
"drawLeafR" -> "boxDims";
"drawLeafR" -> "deriveBoxSize";
"drawLeafR" -> "drawBoxCapR";
"drawLeafR" -> "drawBoxContentR";
"drawLeafR" -> "getBoxColorsR";
"drawPreLabelTop" -> "alignH";
"drawPreLabelTop" -> "bboxWidth";
"drawPreLabelTop" -> "getScale";
"drawPreLabelTop" -> "labelBox";
"drawPreLabelTop" -> "move";
"drawPrePostLabelTopBottom" -> "alignH";
"drawPrePostLabelTopBottom" -> "bboxHeight";
"drawPrePostLabelTopBottom" -> "bboxWidth";
"drawPrePostLabelTopBottom" -> "getScale";
"drawPrePostLabelTopBottom" -> "labelBox";
"drawPrePostLabelTopBottom" -> "move";
"drawVerticalLine" -> "renderVerticalLine";
"evaluate" -> "_";
"evaluate" -> "evaluate";
"extractLeaves" -> "_";
"extractLeaves" -> "extractLeaves";
"getAsks" -> "getSV";
"getAsksJSON" -> "getAsks";
"getBoxColorsR" -> "confidence";
"getBoxColorsR" -> "getColorsBox";
"getColorsText" -> "_";
"getForUI" -> "getAsks";
"getForUI" -> "getViews";
"getSV" -> "_";
"getTextColorsR" -> "confidence";
"getTextColorsR" -> "getColorsText";
"getViews" -> "getSV";
"getViewsJSON" -> "getViews";
"hAlign" -> "alignH";
"hardnormal" -> "relevant";
"haskellStyle" -> "mystyle";
"inboundCurve" -> "bboxHeight";
"inboundCurve" -> "cAInt";
"inboundCurve" -> "curveColour";
"inboundCurve" -> "getScale";
"inboundCurve" -> "mAInt";
"inboundCurve" -> "portL";
"labelBox" -> "defaultBBox";
"labelBox" -> "getScale";
"labelBox" -> "textBoxLengthFull";
"labelBoxR" -> "boxDims";
"labelBoxR" -> "deriveBoxSize";
"labelFirst" -> "_";
"mAInt" -> "intToText";
"main" -> "defaultAAVConfig";
"main" -> "getDefault";
"main" -> "hardnormal";
"main" -> "maindemo";
"main" -> "makeSvg";
"main" -> "nnf";
"main" -> "ppQTree";
"main" -> "q2svg\'";
"maindemo" -> "ppQTree";
"makeSvg" -> "box";
"makeSvg" -> "move";
"makeSvg" -> "mysteryHeight";
"makeSvg" -> "mysteryWidth";
"makeSvg\'" -> "makeSvg";
"markbox" -> "svwrap";
"maybeFirst" -> "labelFirst";
"maybeSecond" -> "_";
"mergeConnects" -> "_";
"mergeMatch" -> "attemptMergeHeads";
"mergeMatch" -> "mergeMatch";
"mkRelevantLeaf" -> "_";
"move" -> "translateCommand";
"mysteryHeight" -> "bboxHeight";
"mysteryHeight" -> "box";
"mysteryWidth" -> "bboxWidth";
"mysteryWidth" -> "box";
"mystyle" -> "_";
"mystyle" -> "mystyle";
"nnf" -> "nnf";
"orderConnects" -> "orderConnects";
"outboundCurve" -> "bboxHeight";
"outboundCurve" -> "bboxWidth";
"outboundCurve" -> "cAInt";
"outboundCurve" -> "curveColour";
"outboundCurve" -> "getScale";
"outboundCurve" -> "mAInt";
"outboundCurve" -> "portR";
"parseMarking" -> "parseMarkingKV";
"portB" -> "portTB";
"portL" -> "portLR";
"portLR" -> "bTopMargin";
"portLR" -> "bboxHeight";
"portR" -> "portLR";
"portT" -> "portTB";
"portTB" -> "bboxWidth";
"ppQTree" -> "alwaysLabeled";
"ppQTree" -> "asJSON";
"ppQTree" -> "cStyle";
"ppQTree" -> "docQ1";
"ppQTree" -> "getForUI";
"ppQTree" -> "hardnormal";
"ppQTree" -> "markbox";
"ppQTree" -> "ppline";
"ppQTree" -> "softnormal";
"pythonStyle" -> "mystyle";
"q2svg" -> "q2svg\'";
"q2svg\'" -> "drawItem";
"relevant" -> "ask2hide";
"relevant" -> "ask2view";
"relevant" -> "boolStructChildren";
"relevant" -> "deriveInitVis";
"relevant" -> "evaluate";
"relevant" -> "mkRelevantLeaf";
"relevant" -> "relevant";
"reorderByConnectivity" -> "orderConnects";
"rowConnectorData" -> "bboxWidth";
"rowConnectorData" -> "getScale";
"rowConnectorData" -> "portL";
"rowConnectorData" -> "portR";
"rowLayouter" -> "bboxHeight";
"rowLayouter" -> "bboxWidth";
"rowLayouter" -> "defaultBBox";
"rowLayouter" -> "getScale";
"rowLayouter" -> "move";
"rowLayouter" -> "portL";
"rowLayouter" -> "portR";
"rowLayouter" -> "rowConnectorData";
"rowLayouter" -> "svgConnector";
"rowLayouterS" -> "bboxHeight";
"rowLayouterS" -> "bboxWidth";
"rowLayouterS" -> "defaultBBox";
"rowLayouterS" -> "move";
"rowLayouterS" -> "portL";
"rowLayouterS" -> "portR";
"rowLayouterS" -> "rowConnectorData";
"rowLayouterS" -> "svgConnector";
"siblingfyBoolStruct" -> "_";
"siblingfyBoolStruct" -> "boolStruct";
"siblingfyBoolStruct" -> "mergeMatch";
"simplifyBoolStruct" -> "_";
"simplifyBoolStruct" -> "siblingfyBoolStruct";
"simplifyBoolStruct" -> "simplifyBoolStruct";
"softnormal" -> "relevant";
"svgConnector" -> "cRInt";
"svgConnector" -> "defaultStroke_";
"svgConnector" -> "mAInt";
"textBoxLengthTiny" -> "_";
"translateCommand" -> "intToText";
"vAlign" -> "alignV";
}
