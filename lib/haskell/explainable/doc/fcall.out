strict digraph deps {
  node [colorscheme=set312, style=filled];

   subgraph cluster_1 {
     label = "src/Explainable.hs";
     "xplainE" [label= "xplainE", color=1];
     "pathSpec" [label= "pathSpec", color=1];
     "origReader" [label= "origReader", color=1];
     "mkNod" [label= "mkNod", color=1];
     "historypath" [label= "historypath", color=1];
     "drawTreeOrg" [label= "drawTreeOrg", color=1];
   }

   subgraph cluster_2 {
     label = "src/Lib.hs";
     "x" [label= "x", color=2];
     "tryChoice" [label= "tryChoice", color=2];
     "tax_34" [label= "tax_34", color=2];
     "tax_2_3" [label= "tax_2_3", color=2];
     "taxPayableFor" [label= "taxPayableFor", color=2];
     "squashToTotals" [label= "squashToTotals", color=2];
     "someFunc" [label= "someFunc", color=2];
     "scenarios" [label= "scenarios", color=2];
     "runTests_1" [label= "runTests_1", color=2];
     "runTests" [label= "runTests", color=2];
     "runTax" [label= "runTax", color=2];
     "netIncome" [label= "netIncome", color=2];
     "int" [label= "int", color=2];
   }

   subgraph cluster_3 {
     label = "src/MathLang.hs";
     "xplainL" [label= "xplainL", color=3];
     "xplainF" [label= "xplainF", color=3];
     "x" [label= "x", color=3];
     "verbose" [label= "verbose", color=3];
     "unaEval" [label= "unaEval", color=3];
     "unMathList" [label= "unMathList", color=3];
     "toplevel" [label= "toplevel", color=3];
     "timesPositives\'" [label= "timesPositives\'", color=3];
     "timesPositives" [label= "timesPositives", color=3];
     "timesEach" [label= "timesEach", color=3];
     "sumOf" [label= "sumOf", color=3];
     "shw" [label= "shw", color=3];
     "retitle" [label= "retitle", color=3];
     "productOf" [label= "productOf", color=3];
     "positiveElementsOf" [label= "positiveElementsOf", color=3];
     "negativeElementsOf" [label= "negativeElementsOf", color=3];
     "infix" [label= "infix", color=3];
     "getvarP" [label= "getvarP", color=3];
     "getvarF" [label= "getvarF", color=3];
     "evalP" [label= "evalP", color=3];
     "evalList" [label= "evalList", color=3];
     "evalFP" [label= "evalFP", color=3];
     "eval" [label= "eval", color=3];
     "emptyState" [label= "emptyState", color=3];
     "doFold" [label= "doFold", color=3];
     "deepEvalList" [label= "deepEvalList", color=3];
     "binEval" [label= "binEval", color=3];
   }

   subgraph cluster_4 {
     label = "src/TaxDSL.hs";
     "x" [label= "x", color=4];
     "title" [label= "title", color=4];
     "thereIs_aggregation_of_income" [label= "thereIs_aggregation_of_income", color=4];
     "taxFor" [label= "taxFor", color=4];
     "startingWith" [label= "startingWith", color=4];
     "solidaritySurcharge" [label= "solidaritySurcharge", color=4];
     "section_34_1" [label= "section_34_1", color=4];
     "section_2_3" [label= "section_2_3", color=4];
     "scell" [label= "scell", color=4];
     "scanlM" [label= "scanlM", color=4];
     "s" [label= "s", color=4];
     "runSection" [label= "runSection", color=4];
     "runRow" [label= "runRow", color=4];
     "runReplaceSc" [label= "runReplaceSc", color=4];
     "runReplaceIs" [label= "runReplaceIs", color=4];
     "runExplainIO" [label= "runExplainIO", color=4];
     "rowNames" [label= "rowNames", color=4];
     "reRootLbl" [label= "reRootLbl", color=4];
     "rateTableM" [label= "rateTableM", color=4];
     "rateTable" [label= "rateTable", color=4];
     "prorateF" [label= "prorateF", color=4];
     "prorate" [label= "prorate", color=4];
     "progStack" [label= "progStack", color=4];
     "progDirectM" [label= "progDirectM", color=4];
     "progDirect" [label= "progDirect", color=4];
     "printExplanation" [label= "printExplanation", color=4];
     "orgExample" [label= "orgExample", color=4];
     "mkParent" [label= "mkParent", color=4];
     "metaFsc" [label= "metaFsc", color=4];
     "metaFis" [label= "metaFis", color=4];
     "mathList2col" [label= "mathList2col", color=4];
     "mapOnly" [label= "mapOnly", color=4];
     "mapAp" [label= "mapAp", color=4];
     "infixl" [label= "infixl", color=4];
     "infix" [label= "infix", color=4];
     "getColAsMathListM" [label= "getColAsMathListM", color=4];
     "getColAsMathList" [label= "getColAsMathList", color=4];
     "getCol" [label= "getCol", color=4];
     "explain" [label= "explain", color=4];
     "effectiveRateStacked" [label= "effectiveRateStacked", color=4];
     "effectiveRateDirect" [label= "effectiveRateDirect", color=4];
     "detimes" [label= "detimes", color=4];
     "deplus" [label= "deplus", color=4];
     "deminus" [label= "deminus", color=4];
     "defaultScenario" [label= "defaultScenario", color=4];
     "constCell" [label= "constCell", color=4];
     "colOpR" [label= "colOpR", color=4];
     "colOpLR" [label= "colOpLR", color=4];
     "colOpL" [label= "colOpL", color=4];
     "colOp" [label= "colOp", color=4];
     "colNames" [label= "colNames", color=4];
     "col2mathList" [label= "col2mathList", color=4];
     "chooseEffectiveEOTaxMethod" [label= "chooseEffectiveEOTaxMethod", color=4];
     "cell" [label= "cell", color=4];
     "asTable" [label= "asTable", color=4];
     "asExample" [label= "asExample", color=4];
     "asColumn" [label= "asColumn", color=4];
     "addCol" [label= "addCol", color=4];
   }

"addCol" -> "drawTreeOrg";
"addCol" -> "emptyState";
"addCol" -> "rowNames";
"addCol" -> "runRow";
"asColumn" -> "asTable";
"asExample" -> "asTable";
"asExample" -> "orgExample";
"binEval" -> "eval";
"binEval" -> "mkNod";
"binEval" -> "retitle";
"binEval" -> "title";
"binEval" -> "verbose";
"binEval" -> "x";
"chooseEffectiveEOTaxMethod" -> "explain";
"chooseEffectiveEOTaxMethod" -> "section_2_3";
"chooseEffectiveEOTaxMethod" -> "section_34_1";
"chooseEffectiveEOTaxMethod" -> "thereIs_aggregation_of_income";
"colOp" -> "mapAp";
"colOpL" -> "mapAp";
"colOpLR" -> "colOp";
"colOpLR" -> "colOpL";
"colOpLR" -> "colOpLR";
"colOpLR" -> "colOpR";
"colOpLR" -> "mapAp";
"colOpR" -> "mapAp";
"deepEvalList" -> "deepEvalList";
"deepEvalList" -> "eval";
"deepEvalList" -> "evalList";
"deminus" -> "cell";
"deminus" -> "x";
"deplus" -> "cell";
"deplus" -> "x";
"detimes" -> "cell";
"detimes" -> "x";
"doFold" -> "eval";
"doFold" -> "evalList";
"doFold" -> "retitle";
"drawTreeOrg" -> "drawTreeOrg";
"effectiveRateDirect" -> "progDirect";
"effectiveRateStacked" -> "progStack";
"eval" -> "binEval";
"eval" -> "doFold";
"eval" -> "eval";
"eval" -> "evalFP";
"eval" -> "getvarF";
"eval" -> "historypath";
"eval" -> "pathSpec";
"eval" -> "retitle";
"eval" -> "title";
"eval" -> "unaEval";
"eval" -> "verbose";
"eval" -> "x";
"evalFP" -> "evalP";
"evalFP" -> "mkNod";
"evalFP" -> "retitle";
"evalFP" -> "x";
"evalList" -> "eval";
"evalList" -> "evalList";
"evalList" -> "evalP";
"evalList" -> "mkNod";
"evalList" -> "retitle";
"evalList" -> "x";
"evalP" -> "eval";
"evalP" -> "evalFP";
"evalP" -> "evalP";
"evalP" -> "getvarP";
"evalP" -> "mkNod";
"evalP" -> "retitle";
"evalP" -> "shw";
"evalP" -> "title";
"evalP" -> "verbose";
"evalP" -> "x";
"getCol" -> "cell";
"getCol" -> "reRootLbl";
"getCol" -> "startingWith";
"getColAsMathList" -> "col2mathList";
"getColAsMathListM" -> "getColAsMathList";
"getColAsMathListM" -> "mkNod";
"getvarF" -> "x";
"getvarP" -> "x";
"infix" -> "s";
"mathList2col" -> "deepEvalList";
"metaFsc" -> "cell";
"metaFsc" -> "explain";
"metaFsc" -> "mapAp";
"metaFsc" -> "progDirect";
"metaFsc" -> "runReplaceIs";
"metaFsc" -> "scell";
"metaFsc" -> "taxFor";
"metaFsc" -> "title";
"metaFsc" -> "x";
"mkNod" -> "x";
"mkParent" -> "title";
"netIncome" -> "addCol";
"netIncome" -> "deminus";
"netIncome" -> "deplus";
"netIncome" -> "getCol";
"progDirect" -> "rateTable";
"progDirectM" -> "rateTableM";
"progStack" -> "rateTable";
"prorateF" -> "x";
"rateTable" -> "rateTable";
"rateTableM" -> "eval";
"rateTableM" -> "mkNod";
"rateTableM" -> "mkParent";
"rateTableM" -> "x";
"runExplainIO" -> "x";
"runReplaceIs" -> "metaFis";
"runReplaceSc" -> "metaFsc";
"runSection" -> "asExample";
"runSection" -> "runReplaceSc";
"runSection" -> "scanlM";
"runTax" -> "emptyState";
"runTax" -> "netIncome";
"runTax" -> "xplainE";
"runTests" -> "chooseEffectiveEOTaxMethod";
"runTests" -> "printExplanation";
"runTests" -> "runExplainIO";
"runTests" -> "runTax";
"runTests" -> "scenarios";
"runTests" -> "section_34_1";
"runTests" -> "tax_2_3";
"runTests_1" -> "asExample";
"runTests_1" -> "getColAsMathList";
"runTests_1" -> "netIncome";
"runTests_1" -> "positiveElementsOf";
"runTests_1" -> "productOf";
"runTests_1" -> "rowNames";
"runTests_1" -> "runTests_1";
"runTests_1" -> "scenarios";
"runTests_1" -> "sumOf";
"runTests_1" -> "timesEach";
"runTests_1" -> "timesPositives";
"runTests_1" -> "xplainF";
"runTests_1" -> "xplainL";
"s" -> "s";
"scanlM" -> "scanlM";
"scanlM" -> "x";
"scell" -> "cell";
"section_2_3" -> "runSection";
"section_34_1" -> "runSection";
"solidaritySurcharge" -> "progDirect";
"squashToTotals" -> "col2mathList";
"squashToTotals" -> "eval";
"squashToTotals" -> "sumOf";
"taxFor" -> "mapOnly";
"taxFor" -> "progDirect";
"taxPayableFor" -> "progDirectM";
"tax_2_3" -> "cell";
"tax_2_3" -> "origReader";
"tax_2_3" -> "progDirectM";
"tax_2_3" -> "squashToTotals";
"tax_34" -> "addCol";
"tax_34" -> "cell";
"tax_34" -> "col2mathList";
"tax_34" -> "deminus";
"tax_34" -> "deplus";
"tax_34" -> "eval";
"tax_34" -> "evalList";
"tax_34" -> "getCol";
"tax_34" -> "negativeElementsOf";
"tax_34" -> "origReader";
"tax_34" -> "positiveElementsOf";
"tax_34" -> "progDirectM";
"tax_34" -> "squashToTotals";
"tax_34" -> "sumOf";
"thereIs_aggregation_of_income" -> "cell";
"thereIs_aggregation_of_income" -> "explain";
"timesPositives" -> "timesPositives\'";
"title" -> "defaultScenario";
"title" -> "title";
"toplevel" -> "xplainF";
"unMathList" -> "x";
"unaEval" -> "eval";
"unaEval" -> "retitle";
"unaEval" -> "title";
"unaEval" -> "verbose";
"unaEval" -> "x";
"verbose" -> "x";
"x" -> "x";
"x" -> "eval";
"x" -> "x";
"x" -> "x";
"xplainE" -> "drawTreeOrg";
"xplainE" -> "emptyState";
"xplainF" -> "drawTreeOrg";
"xplainF" -> "emptyState";
"xplainF" -> "eval";
"xplainL" -> "deepEvalList";
"xplainL" -> "drawTreeOrg";
"xplainL" -> "emptyState";
}
