* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

natural4> test (suite: natural4-test, args: --match /megaparsing/indented-3/)

Passed:
""

Passed:
"\b"

Passed:
"\SOH,"

Passed:
">?\1083562"

Passed:
"A\DC35"

Passed:
"\nJ\10132P\44190"

Passed:
"(\178031i"

Passed:
"\1025327\44625"

Passed:
""

Passed:
"I"

Passed:
""

Passed:
"QO3\47453\138294\ESC"

Passed:
"\r"

Passed:
"\US\DEL/"

Passed:
"H~Mw"

Passed:
"\SUB"

Passed:
"\EM$9S"

Passed:
"\fs;@mUC8\ACK\"\1070598rt\36428\1074635o"

Passed:
""

Passed:
"m"

Passed:
"\FSE\FS3R'\1041963\1103278x7:o\1017805\1040205b2"

Passed:
"\SI\ETX\ACKbgK5\SYN\f\167125}b+\NAK\EM"

Passed:
"I9\GS4!#2\NAKT"

Passed:
"*j\58154p\1037646i\1032391\1076104M\984062{\1028882\196817\135181nBG*\61798"

Passed:
"V\65095\1028729\1019150pZ"

Passed:
"]\48182r\14862j^\1053709\62185;Z>\NAK;\DC1\32258_\1029530\196674\tb;"

Passed:
"9!h\1050485^\1084754\DC33&\158572\178982`\1098514\FS"

Passed:
"\RSX\186953Mm\f\DC15\DLE\SIr.Q\ESCt\175833x;\917595\aik3"

Passed:
"1\f"

Passed:
"\169537SWe\NAK\1048599\128833\171633q]\989312e\ETX\DC4f\DC4]"

Passed:
"\167920\137754/#\149431\1093710\f\EMA\1036651WE\142208\1006615ZiFRjI\1047619\1062329 8\DC3Z`\51069O"

Passed:
"\t\EOT\CAN\EMU#i\171963\199552xx\18611\\8ux\1032572+"

Passed:
"\SOHZdq\SYN"

Passed:
"U\STX\28944\FS\DC2\176601\1079368\175589f}4*\139415i\DEL@\a $\US\164341lt\1050606\v\94255i\1107694\b\STXa"

Passed:
"\DC2\SO\1003447\1097617\38245C\1004735\135980%MLq;$w98{E-4\1029582]LI"

Passed:
"\1050742r'\DC2\"\44320\1056112\ETB_L$\1019027\EM1\ETX\ETB(\CAN"

Passed:
"\997745-.q\RS)\17400fv\EMjz\198357a\1013787\\"

Passed:
"VsW\1039560\53302\1005305\23372BZ\175104\136865=u\1049060\FS?\ETB,\23611\SIu"

Passed:
">\DELi\"\134550H\992367"

Passed:
"-[\31754\95263\&0\1025141"

Passed:
"|L\NAK\1083101qP\54680\DEL\1011872\FS\STX\152417"

Passed:
"Y\CANR\STX\DC4\135818\NAK\151425x\1053132\1020331(\ETX+\44111 .\1085903\&7T\SI\DEL@%)\DC1]O"

Passed:
"m"

Passed:
"C\ENQ\ACK\60646_ X\1010450<\158980\78573\1037411QKF\ETX!\ETX&q\"n`\NAKM&s\1093566Z9_\176382\1070898e\SIQYu|;(8a"

Passed:
"d\1100365\USL"

Passed:
"'\DC3i\DLE\EOT\DEL8T\138306\1012044l\RS\165237\SO\DEL\131452A1kk\DC1"

Passed:
"xS]\NAK&@g\SYN\SOH\SYNOQ:Q\NUL\fMC1Q3\1045344sRg\1000565?\133040\1032748ah\1043541\1043555\ts\152325"

Passed:
"ln\DC4t\1105209u\DC4igDz>1\ETB{g\20389\EMTMM\64138aT9\DC2\1031454@)Zv)1QX\1017105"

Passed:
"J%\SO\GS \1014372t\1077007\b\1099687\t\SUB0\1005395\1107175"

Passed:
"X~\165580\&0,\132081\f9g\148040In.\995383\FS"

Passed:
"\DC4\DC1ol\1049685\f\t\\\r,]?\ACKgg+\1024711\&2\1083763<\1022565p\7757n\v\v~\1092416O?\1020624>&\ACK\1014207\&4:|7[EK|U\18456\1099686\983954\1074031)"

Passed:
"i*!\ETB\DLE\100338\12718t\8456lGlf|"

Passed:
"B\SO0\1058377\1089287E\ENQ|u\73997\FS"

Passed:
"_`\99432\DEL\58070Z\1008963\1013456`1\1017543k"

Passed:
"t\DC1"

Passed:
"t\190843"

Passed:
"5-\n"

Passed:
"'z<G{q\100132\"m1w-\137044P\1030848\FS\1094605vo\\\63368\ACK$\993759\58965\&3"

Passed:
"v\184400\3105+6I\65827Nq\984431d5\1039162\78527&N\SUB3R{\1098559Dj\FSJ\1054175\156801+tX9"

Passed:
"\EOT\DC1\SUBgb\1059637\151801^C \155140\95901ZNNG\DEL\136640wG~\STX\13839@^\119848\ETB\1033933\99369\ETBl\FS;\b\1043580H\DC1\1085045\165413E\DC4\5770\SYN\137559\SOHDD)\18759"

Passed:
"m:\DEL~\SOH;U^v\1032183IL\11367sVz6X%\1106018a(\33335\DLE\ETXo\NAK\"A~IIg\161734\1022777@\63912K!\1042060\74834\STX\ENQ]@N"

Passed:
"Bf\SOH \199151g\SO3\92469\1020197\SYN/^\181633t*MB\aS\ENQ1"

Passed:
"\SUB\993159.#`\FS\f\f\DLE=o}2a\USWJ\200510\&3\5182\&3z\119616;T1\ENQ)\DC44GBzy?8\46595\EM^-\RS\34359\161349/\EMls\"zP8)a\DC3H\RSk\47626\52166"

Passed:
"W\ACK[\39172\1084979ie\171274\RS;-\189217h\1039035\13387\DC3\SOf^B\158645\&1\1065290K\1086453\SYNT\1065814~I\STX"

Passed:
"T\EOT\150666\997121\30278\RS\a\EM\EOTkL#!2\6051.\GS^\1052461`\1010511C^O2`\31326tV\1023582Q\1101306^\RSpP\118848\1033460;&\SOH\30941\NAK\1106889s'6 \72728}90t{\182801\1030902\1092398\RSa{"

Passed:
"\a\SUB"

Passed:
"T\1097412yX\1065179E\STX\EM\142287\1039092\CAN\DC4\135937\6275\DEL\\\32792m\SOH\ESCm&tU\74235\fdj\1053447\201139\DC1'\"\1074025]\r`\t?\16013bia\35902\1058699\\[\1053118"

Passed:
"\\DA[m^,;\147045\RSr\SOH\173741\&1\983181N\125272\1028144O\14737\SOr\SYN/$\SYNY&\DEL\FS]P\"j\1089211\996555(\164422"

Passed:
"\1015917]\EMCGjp6\197107\FS\1112655_\f\f~\65441\&9+\ETB$\n\SO.\36648\td\US0*\b\28197L\1073944M5s2e\GSF<ow\SOC\f\DC3\1039599\&3 [SS"

Passed:
"f@YyD\1070390M\DC4s{\DLE))\SUBd\992065\1000739?\1103705f\ETX`j\1006583\180180\133070\10411QVm;\STX\15132.\1065436\1053454\1001683r\ETX\68208\n\140530\135081- \47102\1028729W-\EMC\4023LV\1033437\DC1\t\n\1065337~g\b\1047549\&9l\vG"

Passed:
"\1039493\CANwe\DC2\164656\&1\EOT+)Xk\v3D]\1062627\1010258z\24156\67318\USM\994447\EM\DEL6o"

Passed:
"\aAq$-\ETB?AB\NUL\1089632\ENQ6)\1004639\113698\999378\SOH#\DLEG1v\165667\169376\DC2/\FS\ETBY\DC1\9324\&8v)\1005622\1050986\&4.\59721%\18047\97262`\157287O?h}\140504H;\US\98945"

Passed:
"2\t^u\t3\1051543SA_Z<\ETBkBT\49839\&0'C\1072840\ESCTu\DC4\170394\1016181\95770(\49399U#\NUL\179506y-\170507J\61344\r\RS\1021105\153285,X\n\EOT&\DC1w$\GS\DLE\1107010DTb=\DC40 wU\ACK\GS\1052018"

Passed:
")W\DC4 \1054122H\50919)TD\998838\35707S8\EM<.\63951$V\DC1*\38162\STX\GS!y\1042288\EOT\159623\161244wV7\FSn\CANeH\NAK\"n`[\DEL\1008103"

Passed:
"U\1056822F\STXU\DLE/\1045233X\999976\ACKN\21211)[\au)R\b\157955o\34811t{\a"

Passed:
"M\n\EOT\CANq\179171\157588\995545\1103334D?\ETBCjK>C\b\t\v\v\NUL\DC2k\SUB\\jrF4q\1080613\128132y\2088\&8\v"

Passed:
"\60338\52677\19005`\fD/L\992997y\NULPSp2\SOHU\1999`CE\989335\&0\USAp\RS\1044304\"O\141904G\1044038.y<n\997293\&1\138751hr"

Passed:
"&>\1048276'}2\97350>l\36110!,\32965\DC4w\DC4I9\47604+\NUL\ENQ\EMP\182494\DC1\1112656\&6\tOH1ZI\SO*\SUB(\1055599\DC3QZ\6644x\1023395'qm\1069093\132530!o\1061734A\67283F\ACK\STX5p \SUBl\DC2i8\ENQ\DC1D\1015543\156771c\DC4f"

Passed:
"L?_\1101272h;!y\175465E\184741Z\EOTMU#N5h\1025231:b2\1064888^\ENQ\ESCJRz\1052548Gv\1015331g\144064\983386\173655\US\f@\SIy"

Passed:
"k\1003366Orgt\NUL\DC3\DLE]{n\DEL\55194\&9%p\1019992}n\r\1108240\DC3}\ESC\DLE+\1105204]H3\NUL\175447\RS\SUB\989069\r\1080255y\RS\200499c\DLER\NUL\110779\139259\&8\173120\SYNp\1041988`\1008962'\DEL\99581\EOT*\43024\ENQB\SUB\NAKqg\EM\1027397\39461\&40\SUB\45162N"

Passed:
"%y\DC3AU\1062444D\4563\63385\"<\"skf\100543(\990237/`iU\1101676\&8$r\99174o\1068926\142324\&5|\v\51283;Q\92508\1047881\1036872\172246a\134589T\40475$vq\141058ud\186961\DC3\RSHBHU\USwE\DEL\1037179>"

Passed:
"|O\")\SUB\159381\1047996\EOTJudn\v\72021h2]\134465't\1038960\197682\164780X\FS\DC4\r\1082695t\"\EOT\1009459QQ\1068942t\1066174zx\EM\1013366\ETX7\149442d=1\GS=\ETBXwZ&\149517\1002515\ESC5TJM\1102494\\DV8\1048922"

Passed:
"\78471\17910\b\\\1105799Q\STXK\1063107\SOHv*\SIY+\DC1\1055110\DC4L\f\1110929\1084936\DLE\EMx2\1077761}T\DC1\147415U\17986"

Passed:
"KT\SO\1038544$ew:\44334\ACK6R)\175337-O\NUL\SYNo\174585UO\GS]\SYNI\141564\12989\136578IJ(@\CAN"

Passed:
"\10426&"

Passed:
"Q\18543]R\1106065f\1107664\FSx~-%\n.\DC3\DC4&\70333\&4\9908]\184976l\4488c#\SYN\138234\t\"l\3525\ESC\1061532=\\\RS)\DC4\45387jt\r\3421\&8S(\ae\t{U"

Passed:
"%\120571;\63558&~\135443\119165\&6w,\1013117,4r~yvG\8766\&3`VFB'\EMHw\1071509@pPf\168332*J\1072658\a)\NUL6&m\1080524\1051623(a(&g.\CANn\SOH4~\14291$O\62414-6\ENQ\NAK\ETBc\99690\&0z)\172591;:\175404\US'\120655U<\ENQ/\NAK$T"

Passed:
"q9\n/kpei~f \"\SUB\1096218f\DEL]R[H\ESCc9\ETB85\23330<\1042665~\DC4x\r,\1094024V"

Passed:
"u[\EOT\DC4\DEL\SOHf\157226\139527\1064948/\143831:}P Z<>Kxq8\DLE#L\27014{\1032810q\1107827\DELOs\1070722Cx\b:6=F\SYN\21741P,\34477\&5"

Passed:
"H-:\990898@\1005331\SOH,\DLE\CAN\ETX\1094854\17221\EOT\SYN\1101248\&9\CAN\143205n\1101726\FSA'"

Passed:
"\163817\1092416H\a\SYN^3\1006947\ab$\SUB\111329\1053514\145127\47985Z\1034981\&5+\66604\180371\1003462\1048567.\145664\ACK\78423\182672xt\1057362q\142005\EM\1097574\169446^\50050D\EM\28082\132692v\DELs\162729@\1047025G\1082248)\1090219;i\72980R\v5]2\1098989\166645x@\DC3G\145414Ce\RS(-"

Passed:
"\36514R9\1097540\DC3\b\60220>7Sj\1109427\174484\170256\SUBd\1019125D\SI"

Passed:
"\DLE\NUL:\ETB\178564\r9\1105348\1037533\EM"

Passed:
"b\DLE#EqRyZuO3\1033572y\28876?(9\fh$\1075552\US6\DC2\39994\200268\1060196\&4\EOT1\r<\"=y>z4d\997286&qF\142199\ENQ67b\145291*=\DC3\US\993343X\NULLJNf\110658"

Passed:
"<}x\SYNM\1088543\100953z~"

Passed:
"\ETXe>1,\131520.Xwc\NUL\CAN\"\129304\\]}\SYND\DELy;\\\1056421\r\176701\991617~p\1045327W\DELyb\119310\ENQ\30047\SUB\1079035?J9\b7\1106236o\1004912QQ\132939\USS\135480\FS\NULv\119812\1037800Bx?EG\SOH\191075y\FSK\EMh\DC3\183048\ENQ6\197547#1<\r\t\1077146\&1\1032481F\1064006\147166\DLE\a\STX\\nXN\153463"

Passed:
"\1065723A%\1104564.\SO/aO\1095405#E!\1097799\EOT5\SOH\1105615!T\139055~%\172493gM\5844\190906\\ZLsrWi\1075810j\1016157^\1106679\n\1024560r\ETX\DEL\140441-K\180357d}\1010313>J\171015e^x1\135069iQ\1025940JS"

Passed:
"\aTC5g\NAKY\7876\1036697G\63299~}.\DC2\186301O\995383OpY\SUBQv\1051595\1093296mhx\ACK!:\RS}&x\1007243K\180670\1102406\&8?DI\ETB\GSk\1007359\DC1|z|\1047980>\127959`\1023137\DLEmx\ny)\NAK]\tv\134990\1003097\fN\1052222\NAKA1ot\bu2\1048105=\EOT\983876Yb"

Passed:
"\53889\r\th\67622"

Passed:
"\183331IT\128244\DC3\1017778\17152\1057913|8eOiV\188003x\127271]j\27158!\ENQ\1102895\SO\FS;k\984221\NUL\rZ\70869\DC4U"

+++ OK, passed 100 tests.
* Tokens
[Every,GoDeeper,Other "person",UnDeeper,Who,GoDeeper,Other "walks",UnDeeper,And,GoDeeper,Other "degustates",Means,GoDeeper,Other "eats",UnDeeper,Or,GoDeeper,Other "imbibes",Means,GoDeeper,Other "drinks",UnDeeper,And,GoDeeper,Other "swallows",UnDeeper,Or,GoDeeper,Other "spits",UnDeeper,UnDeeper,UnDeeper,Must,GoDeeper,Other "sing",UnDeeper]
* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / pRule                                                                                                             :1_1:Every:
*** / pRegRule                                                                                                        :1_1:Every:
**** / pRuleLabel                                                                                                    :1_1:Every:
***** / $>|                                                                                                         :1_1:Every:
**** / pRegRuleSugary                                                                                                :1_1:Every:
***** / someDeep                                                                                                    :1_1:Every:
****** / someDeep first part calls base directly                                                                   :1_1:Every:
**** / pRegRuleNormal                                                                                                :1_1:Every:
***** / permutationsReg                                                                                             :1_1:Every:
****** / regulative permutation with deontic-temporal                                                              :1_1:Every:
******* / WHERE                                                                                                   :1_1:Every:
******* / preambleParamText:[Having]                                                                              :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / preambleParamText:[Given]                                                                               :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / preambleParamText:[Upon]                                                                                :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / preambleBoolStructR [Unless]                                                                            :1_1:Every:
******* / preambleBoolStructR [When,If]                                                                           :1_1:Every:
******* / pDT                                                                                                     :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / pActor [Every,Party,TokAll]                                                                             :1_1:Every:
******** / someIndentation                                                                                        :1_2:GoDeeper:
********* / myindented: consuming GoDeeper                                                                       :1_2:GoDeeper:
********* \ myindented: consuming GoDeeper has returned GoDeeper                                                  :1_2:Other "pers:
********* / manyIndentation/leaf?                                                                                 :1_2:Other "pers:
********** / pMultiTermAka                                                                                       :1_2:Other "pers:
*********** / pAKA                                                                                              :1_2:Other "pers:
************ / slAKA                                                                                           :1_2:Other "pers:
************* / $*|                                                                                           :1_2:Other "pers:
************** / slAKA base                                                                                  :1_2:Other "pers:
*************** / slMultiTerm                                                                               :1_2:Other "pers:
**************** / |:| some                                                                                :1_2:Other "pers:
***************** / |:| base parser                                                                       :1_2:Other "pers:
***************** \ |:| base parser has returned ("person",0)                                              :2_2:UnDeeper:
***************** / |:| deeper                                                                             :2_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :2_2:UnDeeper:
***************** / |:| noMore                                                                             :2_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :2_2:UnDeeper:
**************** \ |:| some has returned (["person"],0)                                                     :2_2:UnDeeper:
*************** \ slMultiTerm has returned (["person"],0)                                                    :2_2:UnDeeper:
************** \ slAKA base has returned (["person"],0)                                                       :2_2:UnDeeper:
************* \ $*| has returned (["person"],0)                                                                :2_2:UnDeeper:
************* / |>>                                                                                            :2_2:UnDeeper:
************** / |>>/recurse                                                                                  :2_2:UnDeeper:
************** / |>>/base                                                                                     :2_2:UnDeeper:
*************** / slAKA optional akapart                                                                     :2_2:UnDeeper:
**************** / |?| optional something                                                                   :2_2:UnDeeper:
***************** / |>>                                                                                    :2_2:UnDeeper:
****************** / |>>/recurse                                                                          :2_2:UnDeeper:
****************** / |>>/base                                                                             :2_2:UnDeeper:
******************* / PAKA/akapart                                                                       :2_2:UnDeeper:
******************** / $>|                                                                              :2_2:UnDeeper:
********************* / Aka Token                                                                      :2_2:UnDeeper:
**************** \ |?| optional something has returned (Nothing,0)                                          :2_2:UnDeeper:
*************** \ slAKA optional akapart has returned (Nothing,0)                                            :2_2:UnDeeper:
*************** / |>>/base got Nothing                                                                       :2_2:UnDeeper:
************** \ |>>/base has returned (Nothing,0)                                                            :2_2:UnDeeper:
************* \ |>> has returned (Nothing,0)                                                                   :2_2:UnDeeper:
************* / |>>                                                                                            :2_2:UnDeeper:
************** / |>>/recurse                                                                                  :2_2:UnDeeper:
************** / |>>/base                                                                                     :2_2:UnDeeper:
*************** / slAKA optional typically                                                                   :2_2:UnDeeper:
**************** / |?| optional something                                                                   :2_2:UnDeeper:
***************** / |>>                                                                                    :2_2:UnDeeper:
****************** / |>>/recurse                                                                          :2_2:UnDeeper:
****************** / |>>/base                                                                             :2_2:UnDeeper:
******************* / typically                                                                          :2_2:UnDeeper:
******************** / $>|                                                                              :2_2:UnDeeper:
**************** \ |?| optional something has returned (Nothing,0)                                          :2_2:UnDeeper:
*************** \ slAKA optional typically has returned (Nothing,0)                                          :2_2:UnDeeper:
*************** / |>>/base got Nothing                                                                       :2_2:UnDeeper:
************** \ |>>/base has returned (Nothing,0)                                                            :2_2:UnDeeper:
************* \ |>> has returned (Nothing,0)                                                                   :2_2:UnDeeper:
************* / slAKA: proceeding after base and entityalias are retrieved ...                                 :2_2:UnDeeper:
************* / pAKA: entityalias = Nothing                                                                    :2_2:UnDeeper:
************ \ slAKA has returned (["person"],0)                                                                :2_2:UnDeeper:
************ / undeepers                                                                                        :2_2:UnDeeper:
************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                         :2_2:UnDeeper:
************* / sameLine: success!                                                                             :2_2:UnDeeper:
************ \ undeepers has returned ()                                                                        :2_2:UnDeeper:
*********** \ pAKA has returned ["person"]                                                                       :2_2:UnDeeper:
********** \ pMultiTermAka has returned ["person"]                                                                :2_2:UnDeeper:
********* \ manyIndentation/leaf? has returned ["person"]                                                          :2_2:UnDeeper:
********* / myindented: consuming UnDeeper                                                                         :2_2:UnDeeper:
********* \ myindented: consuming UnDeeper has returned UnDeeper                                                :2_1:Who:
******** \ someIndentation has returned ["person"]                                                               :2_1:Who:
******* \ pActor [Every,Party,TokAll] has returned (Every,Leaf (("person" :| [],Nothing) :| []))                  :2_1:Who:
******* / manyIndentation/leaf?                                                                                   :2_1:Who:
******** / preambleBoolStructR [Who,Which,Whose]                                                                 :2_1:Who:
********* / pBSR                                                                                                 :2_2:GoDeeper:
********** / ppp inner                                                                                          :2_2:GoDeeper:
*********** / term p                                                                                           :2_2:GoDeeper:
************ / term p/1a:label directly above                                                                 :2_2:GoDeeper:
************* / $*|                                                                                          :2_2:GoDeeper:
************** / |:| some                                                                                   :2_2:GoDeeper:
*************** / |:| base parser                                                                          :2_2:GoDeeper:
**************** / pNumAsText                                                                             :2_2:GoDeeper:
************ / term p/b:label to the left of line below, with EOL                                             :2_2:GoDeeper:
************* / |:| some                                                                                     :2_2:GoDeeper:
************** / |:| base parser                                                                            :2_2:GoDeeper:
*************** / pNumAsText                                                                               :2_2:GoDeeper:
************ / term p/notLabelTerm                                                                            :2_2:GoDeeper:
************* / term p/2:someIndentation expr p                                                              :2_2:GoDeeper:
************** / someIndentation                                                                            :2_2:GoDeeper:
*************** / myindented: consuming GoDeeper                                                           :2_2:GoDeeper:
*************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :2_2:Other "walk:
*************** / manyIndentation/leaf?                                                                     :2_2:Other "walk:
**************** / term p                                                                                  :2_2:Other "walk:
***************** / term p/1a:label directly above                                                        :2_2:Other "walk:
****************** / $*|                                                                                 :2_2:Other "walk:
******************* / |:| some                                                                          :2_2:Other "walk:
******************** / |:| base parser                                                                 :2_2:Other "walk:
******************** \ |:| base parser has returned ("walks",0)                                         :3_2:UnDeeper:
******************** / |:| deeper                                                                       :3_2:UnDeeper:
********************* / |:| some GoDeeper                                                              :3_2:UnDeeper:
******************** / |:| noMore                                                                       :3_2:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                   :3_2:UnDeeper:
******************* \ |:| some has returned (["walks"],0)                                                :3_2:UnDeeper:
******************* / pNumAsText                                                                         :3_2:UnDeeper:
***************** / term p/b:label to the left of line below, with EOL                                    :2_2:Other "walk:
****************** / |:| some                                                                            :2_2:Other "walk:
******************* / |:| base parser                                                                   :2_2:Other "walk:
******************* \ |:| base parser has returned ("walks",0)                                           :3_2:UnDeeper:
******************* / |:| deeper                                                                         :3_2:UnDeeper:
******************** / |:| some GoDeeper                                                                :3_2:UnDeeper:
******************* / |:| noMore                                                                         :3_2:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                     :3_2:UnDeeper:
****************** \ |:| some has returned (["walks"],0)                                                  :3_2:UnDeeper:
****************** / undeepers                                                                            :3_2:UnDeeper:
******************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers             :3_2:UnDeeper:
******************* / sameLine: success!                                                                 :3_2:UnDeeper:
****************** \ undeepers has returned ()                                                            :3_2:UnDeeper:
****************** / matching EOL                                                                         :3_2:UnDeeper:
***************** / term p/notLabelTerm                                                                   :2_2:Other "walk:
****************** / term p/2:someIndentation expr p                                                     :2_2:Other "walk:
******************* / someIndentation                                                                   :2_2:Other "walk:
******************** / myindented: consuming GoDeeper                                                  :2_2:Other "walk:
****************** / term p/3:plain p                                                                    :2_2:Other "walk:
******************* / pRelPred                                                                          :2_2:Other "walk:
******************** / slRelPred                                                                       :2_2:Other "walk:
********************* / nested simpleHorn                                                             :2_2:Other "walk:
********************** / |^|                                                                         :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slMultiTerm                                                               :2_2:Other "walk:
************************ / |:| some                                                                :2_2:Other "walk:
************************* / |:| base parser                                                       :2_2:Other "walk:
************************* \ |:| base parser has returned ("walks",0)                               :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["walks"],0)                                      :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["walks"],0)                                     :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************** / |^| deeps                                                                    :3_2:UnDeeper:
********************** \ |^| deeps has returned [UnDeeper]                                         :3_1:And:
********************* / RPConstraint                                                                  :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slMultiTerm                                                               :2_2:Other "walk:
************************ / |:| some                                                                :2_2:Other "walk:
************************* / |:| base parser                                                       :2_2:Other "walk:
************************* \ |:| base parser has returned ("walks",0)                               :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["walks"],0)                                      :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["walks"],0)                                     :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************** / |>| calling $>>                                                              :3_2:UnDeeper:
*********************** / $>>                                                                        :3_2:UnDeeper:
************************ / $>>/recurse                                                              :3_2:UnDeeper:
************************ / $>>/base                                                                 :3_2:UnDeeper:
********************* / RPBoolStructR                                                                 :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slMultiTerm                                                               :2_2:Other "walk:
************************ / |:| some                                                                :2_2:Other "walk:
************************* / |:| base parser                                                       :2_2:Other "walk:
************************* \ |:| base parser has returned ("walks",0)                               :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["walks"],0)                                      :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["walks"],0)                                     :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************** / |>| calling $>>                                                              :3_2:UnDeeper:
*********************** / $>>                                                                        :3_2:UnDeeper:
************************ / $>>/recurse                                                              :3_2:UnDeeper:
************************ / $>>/base                                                                 :3_2:UnDeeper:
********************* / RPMT                                                                          :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slAKA                                                                     :2_2:Other "walk:
************************ / $*|                                                                     :2_2:Other "walk:
************************* / slAKA base                                                            :2_2:Other "walk:
************************** / slMultiTerm                                                         :2_2:Other "walk:
*************************** / |:| some                                                          :2_2:Other "walk:
**************************** / |:| base parser                                                 :2_2:Other "walk:
**************************** \ |:| base parser has returned ("walks",0)                         :3_2:UnDeeper:
**************************** / |:| deeper                                                       :3_2:UnDeeper:
***************************** / |:| some GoDeeper                                              :3_2:UnDeeper:
**************************** / |:| noMore                                                       :3_2:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                   :3_2:UnDeeper:
*************************** \ |:| some has returned (["walks"],0)                                :3_2:UnDeeper:
************************** \ slMultiTerm has returned (["walks"],0)                               :3_2:UnDeeper:
************************* \ slAKA base has returned (["walks"],0)                                  :3_2:UnDeeper:
************************ \ $*| has returned (["walks"],0)                                           :3_2:UnDeeper:
************************ / |>>                                                                      :3_2:UnDeeper:
************************* / |>>/recurse                                                            :3_2:UnDeeper:
************************* / |>>/base                                                               :3_2:UnDeeper:
************************** / slAKA optional akapart                                               :3_2:UnDeeper:
*************************** / |?| optional something                                             :3_2:UnDeeper:
**************************** / |>>                                                              :3_2:UnDeeper:
***************************** / |>>/recurse                                                    :3_2:UnDeeper:
***************************** / |>>/base                                                       :3_2:UnDeeper:
****************************** / PAKA/akapart                                                 :3_2:UnDeeper:
******************************* / $>|                                                        :3_2:UnDeeper:
******************************** / Aka Token                                                :3_2:UnDeeper:
*************************** \ |?| optional something has returned (Nothing,0)                    :3_2:UnDeeper:
************************** \ slAKA optional akapart has returned (Nothing,0)                      :3_2:UnDeeper:
************************** / |>>/base got Nothing                                                 :3_2:UnDeeper:
************************* \ |>>/base has returned (Nothing,0)                                      :3_2:UnDeeper:
************************ \ |>> has returned (Nothing,0)                                             :3_2:UnDeeper:
************************ / |>>                                                                      :3_2:UnDeeper:
************************* / |>>/recurse                                                            :3_2:UnDeeper:
************************* / |>>/base                                                               :3_2:UnDeeper:
************************** / slAKA optional typically                                             :3_2:UnDeeper:
*************************** / |?| optional something                                             :3_2:UnDeeper:
**************************** / |>>                                                              :3_2:UnDeeper:
***************************** / |>>/recurse                                                    :3_2:UnDeeper:
***************************** / |>>/base                                                       :3_2:UnDeeper:
****************************** / typically                                                    :3_2:UnDeeper:
******************************* / $>|                                                        :3_2:UnDeeper:
*************************** \ |?| optional something has returned (Nothing,0)                    :3_2:UnDeeper:
************************** \ slAKA optional typically has returned (Nothing,0)                    :3_2:UnDeeper:
************************** / |>>/base got Nothing                                                 :3_2:UnDeeper:
************************* \ |>>/base has returned (Nothing,0)                                      :3_2:UnDeeper:
************************ \ |>> has returned (Nothing,0)                                             :3_2:UnDeeper:
************************ / slAKA: proceeding after base and entityalias are retrieved ...           :3_2:UnDeeper:
************************ / pAKA: entityalias = Nothing                                              :3_2:UnDeeper:
*********************** \ slAKA has returned (["walks"],0)                                           :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************* \ RPMT has returned (RPMT ["walks"],0)                                           :3_2:UnDeeper:
******************** \ slRelPred has returned (RPMT ["walks"],0)                                        :3_2:UnDeeper:
******************** / undeepers                                                                        :3_2:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers         :3_2:UnDeeper:
********************* / sameLine: success!                                                             :3_2:UnDeeper:
******************** \ undeepers has returned ()                                                        :3_2:UnDeeper:
******************* \ pRelPred has returned RPMT ["walks"]                                               :3_2:UnDeeper:
****************** \ term p/3:plain p has returned MyLeaf (RPMT ["walks"])                                :3_2:UnDeeper:
***************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["walks"])                               :3_2:UnDeeper:
**************** \ term p has returned MyLeaf (RPMT ["walks"])                                              :3_2:UnDeeper:
**************** / binary(Or)                                                                               :3_2:UnDeeper:
**************** / binary(And)                                                                              :3_2:UnDeeper:
**************** / binary(SetLess)                                                                          :3_2:UnDeeper:
**************** / binary(SetPlus)                                                                          :3_2:UnDeeper:
*************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["walks"])                                 :3_2:UnDeeper:
*************** / myindented: consuming UnDeeper                                                             :3_2:UnDeeper:
*************** \ myindented: consuming UnDeeper has returned UnDeeper                                    :3_1:And:
************** \ someIndentation has returned MyLeaf (RPMT ["walks"])                                      :3_1:And:
************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["walks"])                        :3_1:And:
************ \ term p/notLabelTerm has returned MyLeaf (RPMT ["walks"])                                      :3_1:And:
*********** \ term p has returned MyLeaf (RPMT ["walks"])                                                     :3_1:And:
*********** / binary(Or)                                                                                      :3_1:And:
*********** / binary(And)                                                                                     :3_1:And:
*********** \ binary(And) has returned And                                                                     :3_2:GoDeeper:
*********** / term p                                                                                           :3_2:GoDeeper:
************ / term p/1a:label directly above                                                                 :3_2:GoDeeper:
************* / $*|                                                                                          :3_2:GoDeeper:
************** / |:| some                                                                                   :3_2:GoDeeper:
*************** / |:| base parser                                                                          :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
************ / term p/b:label to the left of line below, with EOL                                             :3_2:GoDeeper:
************* / |:| some                                                                                     :3_2:GoDeeper:
************** / |:| base parser                                                                            :3_2:GoDeeper:
*************** / pNumAsText                                                                               :3_2:GoDeeper:
************ / term p/notLabelTerm                                                                            :3_2:GoDeeper:
************* / term p/2:someIndentation expr p                                                              :3_2:GoDeeper:
************** / someIndentation                                                                            :3_2:GoDeeper:
*************** / myindented: consuming GoDeeper                                                           :3_2:GoDeeper:
*************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :3_2:Other "degu:
*************** / manyIndentation/leaf?                                                                     :3_2:Other "degu:
**************** / term p                                                                                  :3_2:Other "degu:
***************** / term p/1a:label directly above                                                        :3_2:Other "degu:
****************** / $*|                                                                                 :3_2:Other "degu:
******************* / |:| some                                                                          :3_2:Other "degu:
******************** / |:| base parser                                                                 :3_2:Other "degu:
******************** \ |:| base parser has returned ("degustates",0)                                   :4_2:Means:
******************** / |:| deeper                                                                      :4_2:Means:
********************* / |:| some GoDeeper                                                             :4_2:Means:
******************** / |:| noMore                                                                      :4_2:Means:
******************** \ |:| noMore has returned ([],0)                                                  :4_2:Means:
******************* \ |:| some has returned (["degustates"],0)                                          :4_2:Means:
******************* / pNumAsText                                                                        :4_2:Means:
***************** / term p/b:label to the left of line below, with EOL                                    :3_2:Other "degu:
****************** / |:| some                                                                            :3_2:Other "degu:
******************* / |:| base parser                                                                   :3_2:Other "degu:
******************* \ |:| base parser has returned ("degustates",0)                                     :4_2:Means:
******************* / |:| deeper                                                                        :4_2:Means:
******************** / |:| some GoDeeper                                                               :4_2:Means:
******************* / |:| noMore                                                                        :4_2:Means:
******************* \ |:| noMore has returned ([],0)                                                    :4_2:Means:
****************** \ |:| some has returned (["degustates"],0)                                            :4_2:Means:
****************** / undeepers                                                                           :4_2:Means:
******************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers            :4_2:Means:
******************* / sameLine: success!                                                                :4_2:Means:
****************** \ undeepers has returned ()                                                           :4_2:Means:
****************** / matching EOL                                                                        :4_2:Means:
***************** / term p/notLabelTerm                                                                   :3_2:Other "degu:
****************** / term p/2:someIndentation expr p                                                     :3_2:Other "degu:
******************* / someIndentation                                                                   :3_2:Other "degu:
******************** / myindented: consuming GoDeeper                                                  :3_2:Other "degu:
****************** / term p/3:plain p                                                                    :3_2:Other "degu:
******************* / pRelPred                                                                          :3_2:Other "degu:
******************** / slRelPred                                                                       :3_2:Other "degu:
********************* / nested simpleHorn                                                             :3_2:Other "degu:
********************** / |^|                                                                         :3_2:Other "degu:
********************** / $*|                                                                         :3_2:Other "degu:
*********************** / slMultiTerm                                                               :3_2:Other "degu:
************************ / |:| some                                                                :3_2:Other "degu:
************************* / |:| base parser                                                       :3_2:Other "degu:
************************* \ |:| base parser has returned ("degustates",0)                         :4_2:Means:
************************* / |:| deeper                                                            :4_2:Means:
************************** / |:| some GoDeeper                                                   :4_2:Means:
************************* / |:| noMore                                                            :4_2:Means:
************************* \ |:| noMore has returned ([],0)                                        :4_2:Means:
************************ \ |:| some has returned (["degustates"],0)                                :4_2:Means:
*********************** \ slMultiTerm has returned (["degustates"],0)                               :4_2:Means:
********************** \ $*| has returned (["degustates"],0)                                         :4_2:Means:
********************** / |^| deeps                                                                   :4_2:Means:
********************** \ |^| deeps has returned []                                                   :4_2:Means:
********************** / pBSR                                                                         :4_3:GoDeeper:
*********************** / ppp inner                                                                  :4_3:GoDeeper:
************************ / term p                                                                   :4_3:GoDeeper:
************************* / term p/1a:label directly above                                         :4_3:GoDeeper:
************************** / $*|                                                                  :4_3:GoDeeper:
*************************** / |:| some                                                           :4_3:GoDeeper:
**************************** / |:| base parser                                                  :4_3:GoDeeper:
***************************** / pNumAsText                                                     :4_3:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                     :4_3:GoDeeper:
************************** / |:| some                                                             :4_3:GoDeeper:
*************************** / |:| base parser                                                    :4_3:GoDeeper:
**************************** / pNumAsText                                                       :4_3:GoDeeper:
************************* / term p/notLabelTerm                                                    :4_3:GoDeeper:
************************** / term p/2:someIndentation expr p                                      :4_3:GoDeeper:
*************************** / someIndentation                                                    :4_3:GoDeeper:
**************************** / myindented: consuming GoDeeper                                   :4_3:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper              :4_3:Other "eats:
**************************** / manyIndentation/leaf?                                             :4_3:Other "eats:
***************************** / term p                                                          :4_3:Other "eats:
****************************** / term p/1a:label directly above                                :4_3:Other "eats:
******************************* / $*|                                                         :4_3:Other "eats:
******************************** / |:| some                                                  :4_3:Other "eats:
********************************* / |:| base parser                                         :4_3:Other "eats:
********************************* \ |:| base parser has returned ("eats",0)                  :5_3:UnDeeper:
********************************* / |:| deeper                                               :5_3:UnDeeper:
********************************** / |:| some GoDeeper                                      :5_3:UnDeeper:
********************************* / |:| noMore                                               :5_3:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                           :5_3:UnDeeper:
******************************** \ |:| some has returned (["eats"],0)                         :5_3:UnDeeper:
******************************** / pNumAsText                                                 :5_3:UnDeeper:
****************************** / term p/b:label to the left of line below, with EOL            :4_3:Other "eats:
******************************* / |:| some                                                    :4_3:Other "eats:
******************************** / |:| base parser                                           :4_3:Other "eats:
******************************** \ |:| base parser has returned ("eats",0)                    :5_3:UnDeeper:
******************************** / |:| deeper                                                 :5_3:UnDeeper:
********************************* / |:| some GoDeeper                                        :5_3:UnDeeper:
******************************** / |:| noMore                                                 :5_3:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                             :5_3:UnDeeper:
******************************* \ |:| some has returned (["eats"],0)                           :5_3:UnDeeper:
******************************* / undeepers                                                    :5_3:UnDeeper:
******************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_3:UnDeeper:
******************************** / sameLine: success!                                         :5_3:UnDeeper:
******************************* \ undeepers has returned ()                                    :5_3:UnDeeper:
******************************* / matching EOL                                                 :5_3:UnDeeper:
****************************** / term p/notLabelTerm                                           :4_3:Other "eats:
******************************* / term p/2:someIndentation expr p                             :4_3:Other "eats:
******************************** / someIndentation                                           :4_3:Other "eats:
********************************* / myindented: consuming GoDeeper                          :4_3:Other "eats:
******************************* / term p/3:plain p                                            :4_3:Other "eats:
******************************** / pRelPred                                                  :4_3:Other "eats:
********************************* / slRelPred                                               :4_3:Other "eats:
********************************** / nested simpleHorn                                     :4_3:Other "eats:
*********************************** / |^|                                                 :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slMultiTerm                                       :4_3:Other "eats:
************************************* / |:| some                                        :4_3:Other "eats:
************************************** / |:| base parser                               :4_3:Other "eats:
************************************** \ |:| base parser has returned ("eats",0)        :5_3:UnDeeper:
************************************** / |:| deeper                                     :5_3:UnDeeper:
*************************************** / |:| some GoDeeper                            :5_3:UnDeeper:
************************************** / |:| noMore                                     :5_3:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                 :5_3:UnDeeper:
************************************* \ |:| some has returned (["eats"],0)               :5_3:UnDeeper:
************************************ \ slMultiTerm has returned (["eats"],0)              :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
*********************************** / |^| deeps                                            :5_3:UnDeeper:
*********************************** \ |^| deeps has returned [UnDeeper]                 :5_2:Or:
********************************** / RPConstraint                                          :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slMultiTerm                                       :4_3:Other "eats:
************************************* / |:| some                                        :4_3:Other "eats:
************************************** / |:| base parser                               :4_3:Other "eats:
************************************** \ |:| base parser has returned ("eats",0)        :5_3:UnDeeper:
************************************** / |:| deeper                                     :5_3:UnDeeper:
*************************************** / |:| some GoDeeper                            :5_3:UnDeeper:
************************************** / |:| noMore                                     :5_3:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                 :5_3:UnDeeper:
************************************* \ |:| some has returned (["eats"],0)               :5_3:UnDeeper:
************************************ \ slMultiTerm has returned (["eats"],0)              :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
*********************************** / |>| calling $>>                                      :5_3:UnDeeper:
************************************ / $>>                                                :5_3:UnDeeper:
************************************* / $>>/recurse                                      :5_3:UnDeeper:
************************************* / $>>/base                                         :5_3:UnDeeper:
********************************** / RPBoolStructR                                         :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slMultiTerm                                       :4_3:Other "eats:
************************************* / |:| some                                        :4_3:Other "eats:
************************************** / |:| base parser                               :4_3:Other "eats:
************************************** \ |:| base parser has returned ("eats",0)        :5_3:UnDeeper:
************************************** / |:| deeper                                     :5_3:UnDeeper:
*************************************** / |:| some GoDeeper                            :5_3:UnDeeper:
************************************** / |:| noMore                                     :5_3:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                 :5_3:UnDeeper:
************************************* \ |:| some has returned (["eats"],0)               :5_3:UnDeeper:
************************************ \ slMultiTerm has returned (["eats"],0)              :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
*********************************** / |>| calling $>>                                      :5_3:UnDeeper:
************************************ / $>>                                                :5_3:UnDeeper:
************************************* / $>>/recurse                                      :5_3:UnDeeper:
************************************* / $>>/base                                         :5_3:UnDeeper:
********************************** / RPMT                                                  :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slAKA                                             :4_3:Other "eats:
************************************* / $*|                                             :4_3:Other "eats:
************************************** / slAKA base                                    :4_3:Other "eats:
*************************************** / slMultiTerm                                 :4_3:Other "eats:
**************************************** / |:| some                                  :4_3:Other "eats:
***************************************** / |:| base parser                         :4_3:Other "eats:
***************************************** \ |:| base parser has returned ("eats",0)  :5_3:UnDeeper:
***************************************** / |:| deeper                               :5_3:UnDeeper:
****************************************** / |:| some GoDeeper                      :5_3:UnDeeper:
***************************************** / |:| noMore                               :5_3:UnDeeper:
***************************************** \ |:| noMore has returned ([],0)           :5_3:UnDeeper:
**************************************** \ |:| some has returned (["eats"],0)         :5_3:UnDeeper:
*************************************** \ slMultiTerm has returned (["eats"],0)        :5_3:UnDeeper:
************************************** \ slAKA base has returned (["eats"],0)           :5_3:UnDeeper:
************************************* \ $*| has returned (["eats"],0)                    :5_3:UnDeeper:
************************************* / |>>                                              :5_3:UnDeeper:
************************************** / |>>/recurse                                    :5_3:UnDeeper:
************************************** / |>>/base                                       :5_3:UnDeeper:
*************************************** / slAKA optional akapart                       :5_3:UnDeeper:
**************************************** / |?| optional something                     :5_3:UnDeeper:
***************************************** / |>>                                      :5_3:UnDeeper:
****************************************** / |>>/recurse                            :5_3:UnDeeper:
****************************************** / |>>/base                               :5_3:UnDeeper:
******************************************* / PAKA/akapart                         :5_3:UnDeeper:
******************************************** / $>|                                :5_3:UnDeeper:
********************************************* / Aka Token                        :5_3:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :5_3:UnDeeper:
*************************************** \ slAKA optional akapart has returned (Nothing,0) :5_3:UnDeeper:
*************************************** / |>>/base got Nothing                         :5_3:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)              :5_3:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                     :5_3:UnDeeper:
************************************* / |>>                                              :5_3:UnDeeper:
************************************** / |>>/recurse                                    :5_3:UnDeeper:
************************************** / |>>/base                                       :5_3:UnDeeper:
*************************************** / slAKA optional typically                     :5_3:UnDeeper:
**************************************** / |?| optional something                     :5_3:UnDeeper:
***************************************** / |>>                                      :5_3:UnDeeper:
****************************************** / |>>/recurse                            :5_3:UnDeeper:
****************************************** / |>>/base                               :5_3:UnDeeper:
******************************************* / typically                            :5_3:UnDeeper:
******************************************** / $>|                                :5_3:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :5_3:UnDeeper:
*************************************** \ slAKA optional typically has returned (Nothing,0) :5_3:UnDeeper:
*************************************** / |>>/base got Nothing                         :5_3:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)              :5_3:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                     :5_3:UnDeeper:
************************************* / slAKA: proceeding after base and entityalias are retrieved ... :5_3:UnDeeper:
************************************* / pAKA: entityalias = Nothing                      :5_3:UnDeeper:
************************************ \ slAKA has returned (["eats"],0)                    :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
********************************** \ RPMT has returned (RPMT ["eats"],0)                    :5_3:UnDeeper:
********************************* \ slRelPred has returned (RPMT ["eats"],0)                 :5_3:UnDeeper:
********************************* / undeepers                                                :5_3:UnDeeper:
********************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_3:UnDeeper:
********************************** / sameLine: success!                                     :5_3:UnDeeper:
********************************* \ undeepers has returned ()                                :5_3:UnDeeper:
******************************** \ pRelPred has returned RPMT ["eats"]                        :5_3:UnDeeper:
******************************* \ term p/3:plain p has returned MyLeaf (RPMT ["eats"])         :5_3:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["eats"])        :5_3:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["eats"])                       :5_3:UnDeeper:
***************************** / binary(Or)                                                       :5_3:UnDeeper:
***************************** / binary(And)                                                      :5_3:UnDeeper:
***************************** / binary(SetLess)                                                  :5_3:UnDeeper:
***************************** / binary(SetPlus)                                                  :5_3:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["eats"])          :5_3:UnDeeper:
**************************** / myindented: consuming UnDeeper                                     :5_3:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper            :5_2:Or:
*************************** \ someIndentation has returned MyLeaf (RPMT ["eats"])               :5_2:Or:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["eats"]) :5_2:Or:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["eats"])               :5_2:Or:
************************ \ term p has returned MyLeaf (RPMT ["eats"])                              :5_2:Or:
************************ / binary(Or)                                                              :5_2:Or:
************************ \ binary(Or) has returned Or                                               :5_3:GoDeeper:
************************ / term p                                                                   :5_3:GoDeeper:
************************* / term p/1a:label directly above                                         :5_3:GoDeeper:
************************** / $*|                                                                  :5_3:GoDeeper:
*************************** / |:| some                                                           :5_3:GoDeeper:
**************************** / |:| base parser                                                  :5_3:GoDeeper:
***************************** / pNumAsText                                                     :5_3:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                     :5_3:GoDeeper:
************************** / |:| some                                                             :5_3:GoDeeper:
*************************** / |:| base parser                                                    :5_3:GoDeeper:
**************************** / pNumAsText                                                       :5_3:GoDeeper:
************************* / term p/notLabelTerm                                                    :5_3:GoDeeper:
************************** / term p/2:someIndentation expr p                                      :5_3:GoDeeper:
*************************** / someIndentation                                                    :5_3:GoDeeper:
**************************** / myindented: consuming GoDeeper                                   :5_3:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper              :5_3:Other "imbi:
**************************** / manyIndentation/leaf?                                             :5_3:Other "imbi:
***************************** / term p                                                          :5_3:Other "imbi:
****************************** / term p/1a:label directly above                                :5_3:Other "imbi:
******************************* / $*|                                                         :5_3:Other "imbi:
******************************** / |:| some                                                  :5_3:Other "imbi:
********************************* / |:| base parser                                         :5_3:Other "imbi:
********************************* \ |:| base parser has returned ("imbibes",0)              :6_3:Means:
********************************* / |:| deeper                                              :6_3:Means:
********************************** / |:| some GoDeeper                                     :6_3:Means:
********************************* / |:| noMore                                              :6_3:Means:
********************************* \ |:| noMore has returned ([],0)                          :6_3:Means:
******************************** \ |:| some has returned (["imbibes"],0)                     :6_3:Means:
******************************** / pNumAsText                                                :6_3:Means:
****************************** / term p/b:label to the left of line below, with EOL            :5_3:Other "imbi:
******************************* / |:| some                                                    :5_3:Other "imbi:
******************************** / |:| base parser                                           :5_3:Other "imbi:
******************************** \ |:| base parser has returned ("imbibes",0)                :6_3:Means:
******************************** / |:| deeper                                                :6_3:Means:
********************************* / |:| some GoDeeper                                       :6_3:Means:
******************************** / |:| noMore                                                :6_3:Means:
******************************** \ |:| noMore has returned ([],0)                            :6_3:Means:
******************************* \ |:| some has returned (["imbibes"],0)                       :6_3:Means:
******************************* / undeepers                                                   :6_3:Means:
******************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :6_3:Means:
******************************** / sameLine: success!                                        :6_3:Means:
******************************* \ undeepers has returned ()                                   :6_3:Means:
******************************* / matching EOL                                                :6_3:Means:
****************************** / term p/notLabelTerm                                           :5_3:Other "imbi:
******************************* / term p/2:someIndentation expr p                             :5_3:Other "imbi:
******************************** / someIndentation                                           :5_3:Other "imbi:
********************************* / myindented: consuming GoDeeper                          :5_3:Other "imbi:
******************************* / term p/3:plain p                                            :5_3:Other "imbi:
******************************** / pRelPred                                                  :5_3:Other "imbi:
********************************* / slRelPred                                               :5_3:Other "imbi:
********************************** / nested simpleHorn                                     :5_3:Other "imbi:
*********************************** / |^|                                                 :5_3:Other "imbi:
*********************************** / $*|                                                 :5_3:Other "imbi:
************************************ / slMultiTerm                                       :5_3:Other "imbi:
************************************* / |:| some                                        :5_3:Other "imbi:
************************************** / |:| base parser                               :5_3:Other "imbi:
************************************** \ |:| base parser has returned ("imbibes",0)    :6_3:Means:
************************************** / |:| deeper                                    :6_3:Means:
*************************************** / |:| some GoDeeper                           :6_3:Means:
************************************** / |:| noMore                                    :6_3:Means:
************************************** \ |:| noMore has returned ([],0)                :6_3:Means:
************************************* \ |:| some has returned (["imbibes"],0)           :6_3:Means:
************************************ \ slMultiTerm has returned (["imbibes"],0)          :6_3:Means:
*********************************** \ $*| has returned (["imbibes"],0)                    :6_3:Means:
*********************************** / |^| deeps                                           :6_3:Means:
*********************************** \ |^| deeps has returned []                           :6_3:Means:
*********************************** / pBSR                                                 :6_4:GoDeeper:
************************************ / ppp inner                                          :6_4:GoDeeper:
************************************* / term p                                           :6_4:GoDeeper:
************************************** / term p/1a:label directly above                 :6_4:GoDeeper:
*************************************** / $*|                                          :6_4:GoDeeper:
**************************************** / |:| some                                   :6_4:GoDeeper:
***************************************** / |:| base parser                          :6_4:GoDeeper:
****************************************** / pNumAsText                             :6_4:GoDeeper:
************************************** / term p/b:label to the left of line below, with EOL :6_4:GoDeeper:
*************************************** / |:| some                                     :6_4:GoDeeper:
**************************************** / |:| base parser                            :6_4:GoDeeper:
***************************************** / pNumAsText                               :6_4:GoDeeper:
************************************** / term p/notLabelTerm                            :6_4:GoDeeper:
*************************************** / term p/2:someIndentation expr p              :6_4:GoDeeper:
**************************************** / someIndentation                            :6_4:GoDeeper:
***************************************** / myindented: consuming GoDeeper           :6_4:GoDeeper:
***************************************** \ myindented: consuming GoDeeper has returned GoDeeper :6_4:Other "drin:
***************************************** / manyIndentation/leaf?                     :6_4:Other "drin:
****************************************** / term p                                  :6_4:Other "drin:
******************************************* / term p/1a:label directly above        :6_4:Other "drin:
******************************************** / $*|                                 :6_4:Other "drin:
********************************************* / |:| some                          :6_4:Other "drin:
********************************************** / |:| base parser                 :6_4:Other "drin:
********************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
********************************************** / |:| deeper                       :7_4:UnDeeper:
*********************************************** / |:| some GoDeeper              :7_4:UnDeeper:
********************************************** / |:| noMore                       :7_4:UnDeeper:
********************************************** \ |:| noMore has returned ([],0)   :7_4:UnDeeper:
********************************************* \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
********************************************* / pNumAsText                         :7_4:UnDeeper:
******************************************* / term p/b:label to the left of line below, with EOL :6_4:Other "drin:
******************************************** / |:| some                            :6_4:Other "drin:
********************************************* / |:| base parser                   :6_4:Other "drin:
********************************************* \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
********************************************* / |:| deeper                         :7_4:UnDeeper:
********************************************** / |:| some GoDeeper                :7_4:UnDeeper:
********************************************* / |:| noMore                         :7_4:UnDeeper:
********************************************* \ |:| noMore has returned ([],0)     :7_4:UnDeeper:
******************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
******************************************** / undeepers                            :7_4:UnDeeper:
********************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_4:UnDeeper:
********************************************* / sameLine: success!                 :7_4:UnDeeper:
******************************************** \ undeepers has returned ()            :7_4:UnDeeper:
******************************************** / matching EOL                         :7_4:UnDeeper:
******************************************* / term p/notLabelTerm                   :6_4:Other "drin:
******************************************** / term p/2:someIndentation expr p     :6_4:Other "drin:
********************************************* / someIndentation                   :6_4:Other "drin:
********************************************** / myindented: consuming GoDeeper  :6_4:Other "drin:
******************************************** / term p/3:plain p                    :6_4:Other "drin:
********************************************* / pRelPred                          :6_4:Other "drin:
********************************************** / slRelPred                       :6_4:Other "drin:
*********************************************** / nested simpleHorn             :6_4:Other "drin:
************************************************ / |^|                         :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slMultiTerm               :6_4:Other "drin:
************************************************** / |:| some                :6_4:Other "drin:
*************************************************** / |:| base parser       :6_4:Other "drin:
*************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
*************************************************** / |:| deeper             :7_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :7_4:UnDeeper:
*************************************************** / |:| noMore             :7_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ / |^| deeps                    :7_4:UnDeeper:
************************************************ \ |^| deeps has returned [UnDeeper] :7_3:And:
*********************************************** / RPConstraint                  :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slMultiTerm               :6_4:Other "drin:
************************************************** / |:| some                :6_4:Other "drin:
*************************************************** / |:| base parser       :6_4:Other "drin:
*************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
*************************************************** / |:| deeper             :7_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :7_4:UnDeeper:
*************************************************** / |:| noMore             :7_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ / |>| calling $>>              :7_4:UnDeeper:
************************************************* / $>>                        :7_4:UnDeeper:
************************************************** / $>>/recurse              :7_4:UnDeeper:
************************************************** / $>>/base                 :7_4:UnDeeper:
*********************************************** / RPBoolStructR                 :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slMultiTerm               :6_4:Other "drin:
************************************************** / |:| some                :6_4:Other "drin:
*************************************************** / |:| base parser       :6_4:Other "drin:
*************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
*************************************************** / |:| deeper             :7_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :7_4:UnDeeper:
*************************************************** / |:| noMore             :7_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ / |>| calling $>>              :7_4:UnDeeper:
************************************************* / $>>                        :7_4:UnDeeper:
************************************************** / $>>/recurse              :7_4:UnDeeper:
************************************************** / $>>/base                 :7_4:UnDeeper:
*********************************************** / RPMT                          :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slAKA                     :6_4:Other "drin:
************************************************** / $*|                     :6_4:Other "drin:
*************************************************** / slAKA base            :6_4:Other "drin:
**************************************************** / slMultiTerm         :6_4:Other "drin:
***************************************************** / |:| some          :6_4:Other "drin:
****************************************************** / |:| base parser :6_4:Other "drin:
****************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
****************************************************** / |:| deeper       :7_4:UnDeeper:
******************************************************* / |:| some GoDeeper :7_4:UnDeeper:
****************************************************** / |:| noMore       :7_4:UnDeeper:
****************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
***************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
**************************************************** \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
*************************************************** \ slAKA base has returned (["drinks"],0) :7_4:UnDeeper:
************************************************** \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************** / |>>                      :7_4:UnDeeper:
*************************************************** / |>>/recurse            :7_4:UnDeeper:
*************************************************** / |>>/base               :7_4:UnDeeper:
**************************************************** / slAKA optional akapart :7_4:UnDeeper:
***************************************************** / |?| optional something :7_4:UnDeeper:
****************************************************** / |>>              :7_4:UnDeeper:
******************************************************* / |>>/recurse    :7_4:UnDeeper:
******************************************************* / |>>/base       :7_4:UnDeeper:
******************************************************** / PAKA/akapart :7_4:UnDeeper:
********************************************************* / $>|        :7_4:UnDeeper:
********************************************************** / Aka Token :7_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** \ slAKA optional akapart has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** / |>>/base got Nothing :7_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :7_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :7_4:UnDeeper:
************************************************** / |>>                      :7_4:UnDeeper:
*************************************************** / |>>/recurse            :7_4:UnDeeper:
*************************************************** / |>>/base               :7_4:UnDeeper:
**************************************************** / slAKA optional typically :7_4:UnDeeper:
***************************************************** / |?| optional something :7_4:UnDeeper:
****************************************************** / |>>              :7_4:UnDeeper:
******************************************************* / |>>/recurse    :7_4:UnDeeper:
******************************************************* / |>>/base       :7_4:UnDeeper:
******************************************************** / typically    :7_4:UnDeeper:
********************************************************* / $>|        :7_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** \ slAKA optional typically has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** / |>>/base got Nothing :7_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :7_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :7_4:UnDeeper:
************************************************** / slAKA: proceeding after base and entityalias are retrieved ... :7_4:UnDeeper:
************************************************** / pAKA: entityalias = Nothing :7_4:UnDeeper:
************************************************* \ slAKA has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
*********************************************** \ RPMT has returned (RPMT ["drinks"],0) :7_4:UnDeeper:
********************************************** \ slRelPred has returned (RPMT ["drinks"],0) :7_4:UnDeeper:
********************************************** / undeepers                        :7_4:UnDeeper:
*********************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_4:UnDeeper:
*********************************************** / sameLine: success!             :7_4:UnDeeper:
********************************************** \ undeepers has returned ()        :7_4:UnDeeper:
********************************************* \ pRelPred has returned RPMT ["drinks"] :7_4:UnDeeper:
******************************************** \ term p/3:plain p has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
******************************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
****************************************** \ term p has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
****************************************** / binary(Or)                               :7_4:UnDeeper:
****************************************** / binary(And)                              :7_4:UnDeeper:
****************************************** / binary(SetLess)                          :7_4:UnDeeper:
****************************************** / binary(SetPlus)                          :7_4:UnDeeper:
***************************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
***************************************** / myindented: consuming UnDeeper             :7_4:UnDeeper:
***************************************** \ myindented: consuming UnDeeper has returned UnDeeper :7_3:And:
**************************************** \ someIndentation has returned MyLeaf (RPMT ["drinks"]) :7_3:And:
*************************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["drinks"]) :7_3:And:
************************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["drinks"]) :7_3:And:
************************************* \ term p has returned MyLeaf (RPMT ["drinks"])    :7_3:And:
************************************* / binary(Or)                                      :7_3:And:
************************************* / binary(And)                                     :7_3:And:
************************************* \ binary(And) has returned And                     :7_4:GoDeeper:
************************************* / term p                                           :7_4:GoDeeper:
************************************** / term p/1a:label directly above                 :7_4:GoDeeper:
*************************************** / $*|                                          :7_4:GoDeeper:
**************************************** / |:| some                                   :7_4:GoDeeper:
***************************************** / |:| base parser                          :7_4:GoDeeper:
****************************************** / pNumAsText                             :7_4:GoDeeper:
************************************** / term p/b:label to the left of line below, with EOL :7_4:GoDeeper:
*************************************** / |:| some                                     :7_4:GoDeeper:
**************************************** / |:| base parser                            :7_4:GoDeeper:
***************************************** / pNumAsText                               :7_4:GoDeeper:
************************************** / term p/notLabelTerm                            :7_4:GoDeeper:
*************************************** / term p/2:someIndentation expr p              :7_4:GoDeeper:
**************************************** / someIndentation                            :7_4:GoDeeper:
***************************************** / myindented: consuming GoDeeper           :7_4:GoDeeper:
***************************************** \ myindented: consuming GoDeeper has returned GoDeeper :7_4:Other "swal:
***************************************** / manyIndentation/leaf?                     :7_4:Other "swal:
****************************************** / term p                                  :7_4:Other "swal:
******************************************* / term p/1a:label directly above        :7_4:Other "swal:
******************************************** / $*|                                 :7_4:Other "swal:
********************************************* / |:| some                          :7_4:Other "swal:
********************************************** / |:| base parser                 :7_4:Other "swal:
********************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
********************************************** / |:| deeper                       :8_4:UnDeeper:
*********************************************** / |:| some GoDeeper              :8_4:UnDeeper:
********************************************** / |:| noMore                       :8_4:UnDeeper:
********************************************** \ |:| noMore has returned ([],0)   :8_4:UnDeeper:
********************************************* \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
********************************************* / pNumAsText                         :8_4:UnDeeper:
******************************************* / term p/b:label to the left of line below, with EOL :7_4:Other "swal:
******************************************** / |:| some                            :7_4:Other "swal:
********************************************* / |:| base parser                   :7_4:Other "swal:
********************************************* \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
********************************************* / |:| deeper                         :8_4:UnDeeper:
********************************************** / |:| some GoDeeper                :8_4:UnDeeper:
********************************************* / |:| noMore                         :8_4:UnDeeper:
********************************************* \ |:| noMore has returned ([],0)     :8_4:UnDeeper:
******************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
******************************************** / undeepers                            :8_4:UnDeeper:
********************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :8_4:UnDeeper:
********************************************* / sameLine: success!                 :8_4:UnDeeper:
******************************************** \ undeepers has returned ()            :8_4:UnDeeper:
******************************************** / matching EOL                         :8_4:UnDeeper:
******************************************* / term p/notLabelTerm                   :7_4:Other "swal:
******************************************** / term p/2:someIndentation expr p     :7_4:Other "swal:
********************************************* / someIndentation                   :7_4:Other "swal:
********************************************** / myindented: consuming GoDeeper  :7_4:Other "swal:
******************************************** / term p/3:plain p                    :7_4:Other "swal:
********************************************* / pRelPred                          :7_4:Other "swal:
********************************************** / slRelPred                       :7_4:Other "swal:
*********************************************** / nested simpleHorn             :7_4:Other "swal:
************************************************ / |^|                         :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slMultiTerm               :7_4:Other "swal:
************************************************** / |:| some                :7_4:Other "swal:
*************************************************** / |:| base parser       :7_4:Other "swal:
*************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
*************************************************** / |:| deeper             :8_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :8_4:UnDeeper:
*************************************************** / |:| noMore             :8_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ / |^| deeps                    :8_4:UnDeeper:
************************************************ \ |^| deeps has returned [UnDeeper] :8_3:Or:
*********************************************** / RPConstraint                  :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slMultiTerm               :7_4:Other "swal:
************************************************** / |:| some                :7_4:Other "swal:
*************************************************** / |:| base parser       :7_4:Other "swal:
*************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
*************************************************** / |:| deeper             :8_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :8_4:UnDeeper:
*************************************************** / |:| noMore             :8_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ / |>| calling $>>              :8_4:UnDeeper:
************************************************* / $>>                        :8_4:UnDeeper:
************************************************** / $>>/recurse              :8_4:UnDeeper:
************************************************** / $>>/base                 :8_4:UnDeeper:
*********************************************** / RPBoolStructR                 :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slMultiTerm               :7_4:Other "swal:
************************************************** / |:| some                :7_4:Other "swal:
*************************************************** / |:| base parser       :7_4:Other "swal:
*************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
*************************************************** / |:| deeper             :8_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :8_4:UnDeeper:
*************************************************** / |:| noMore             :8_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ / |>| calling $>>              :8_4:UnDeeper:
************************************************* / $>>                        :8_4:UnDeeper:
************************************************** / $>>/recurse              :8_4:UnDeeper:
************************************************** / $>>/base                 :8_4:UnDeeper:
*********************************************** / RPMT                          :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slAKA                     :7_4:Other "swal:
************************************************** / $*|                     :7_4:Other "swal:
*************************************************** / slAKA base            :7_4:Other "swal:
**************************************************** / slMultiTerm         :7_4:Other "swal:
***************************************************** / |:| some          :7_4:Other "swal:
****************************************************** / |:| base parser :7_4:Other "swal:
****************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
****************************************************** / |:| deeper       :8_4:UnDeeper:
******************************************************* / |:| some GoDeeper :8_4:UnDeeper:
****************************************************** / |:| noMore       :8_4:UnDeeper:
****************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
***************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
**************************************************** \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
*************************************************** \ slAKA base has returned (["swallows"],0) :8_4:UnDeeper:
************************************************** \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************** / |>>                      :8_4:UnDeeper:
*************************************************** / |>>/recurse            :8_4:UnDeeper:
*************************************************** / |>>/base               :8_4:UnDeeper:
**************************************************** / slAKA optional akapart :8_4:UnDeeper:
***************************************************** / |?| optional something :8_4:UnDeeper:
****************************************************** / |>>              :8_4:UnDeeper:
******************************************************* / |>>/recurse    :8_4:UnDeeper:
******************************************************* / |>>/base       :8_4:UnDeeper:
******************************************************** / PAKA/akapart :8_4:UnDeeper:
********************************************************* / $>|        :8_4:UnDeeper:
********************************************************** / Aka Token :8_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** \ slAKA optional akapart has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** / |>>/base got Nothing :8_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :8_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :8_4:UnDeeper:
************************************************** / |>>                      :8_4:UnDeeper:
*************************************************** / |>>/recurse            :8_4:UnDeeper:
*************************************************** / |>>/base               :8_4:UnDeeper:
**************************************************** / slAKA optional typically :8_4:UnDeeper:
***************************************************** / |?| optional something :8_4:UnDeeper:
****************************************************** / |>>              :8_4:UnDeeper:
******************************************************* / |>>/recurse    :8_4:UnDeeper:
******************************************************* / |>>/base       :8_4:UnDeeper:
******************************************************** / typically    :8_4:UnDeeper:
********************************************************* / $>|        :8_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** \ slAKA optional typically has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** / |>>/base got Nothing :8_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :8_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :8_4:UnDeeper:
************************************************** / slAKA: proceeding after base and entityalias are retrieved ... :8_4:UnDeeper:
************************************************** / pAKA: entityalias = Nothing :8_4:UnDeeper:
************************************************* \ slAKA has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
*********************************************** \ RPMT has returned (RPMT ["swallows"],0) :8_4:UnDeeper:
********************************************** \ slRelPred has returned (RPMT ["swallows"],0) :8_4:UnDeeper:
********************************************** / undeepers                        :8_4:UnDeeper:
*********************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :8_4:UnDeeper:
*********************************************** / sameLine: success!             :8_4:UnDeeper:
********************************************** \ undeepers has returned ()        :8_4:UnDeeper:
********************************************* \ pRelPred has returned RPMT ["swallows"] :8_4:UnDeeper:
******************************************** \ term p/3:plain p has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
******************************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
****************************************** \ term p has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
****************************************** / binary(Or)                               :8_4:UnDeeper:
****************************************** / binary(And)                              :8_4:UnDeeper:
****************************************** / binary(SetLess)                          :8_4:UnDeeper:
****************************************** / binary(SetPlus)                          :8_4:UnDeeper:
***************************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
***************************************** / myindented: consuming UnDeeper             :8_4:UnDeeper:
***************************************** \ myindented: consuming UnDeeper has returned UnDeeper :8_3:Or:
**************************************** \ someIndentation has returned MyLeaf (RPMT ["swallows"]) :8_3:Or:
*************************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["swallows"]) :8_3:Or:
************************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["swallows"]) :8_3:Or:
************************************* \ term p has returned MyLeaf (RPMT ["swallows"])  :8_3:Or:
************************************* / binary(Or)                                      :8_3:Or:
************************************* \ binary(Or) has returned Or                       :8_4:GoDeeper:
************************************* / term p                                           :8_4:GoDeeper:
************************************** / term p/1a:label directly above                 :8_4:GoDeeper:
*************************************** / $*|                                          :8_4:GoDeeper:
**************************************** / |:| some                                   :8_4:GoDeeper:
***************************************** / |:| base parser                          :8_4:GoDeeper:
****************************************** / pNumAsText                             :8_4:GoDeeper:
************************************** / term p/b:label to the left of line below, with EOL :8_4:GoDeeper:
*************************************** / |:| some                                     :8_4:GoDeeper:
**************************************** / |:| base parser                            :8_4:GoDeeper:
***************************************** / pNumAsText                               :8_4:GoDeeper:
************************************** / term p/notLabelTerm                            :8_4:GoDeeper:
*************************************** / term p/2:someIndentation expr p              :8_4:GoDeeper:
**************************************** / someIndentation                            :8_4:GoDeeper:
***************************************** / myindented: consuming GoDeeper           :8_4:GoDeeper:
***************************************** \ myindented: consuming GoDeeper has returned GoDeeper :8_4:Other "spit:
***************************************** / manyIndentation/leaf?                     :8_4:Other "spit:
****************************************** / term p                                  :8_4:Other "spit:
******************************************* / term p/1a:label directly above        :8_4:Other "spit:
******************************************** / $*|                                 :8_4:Other "spit:
********************************************* / |:| some                          :8_4:Other "spit:
********************************************** / |:| base parser                 :8_4:Other "spit:
********************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
********************************************** / |:| deeper                   :9_2:UnDeeper:
*********************************************** / |:| some GoDeeper          :9_2:UnDeeper:
********************************************** / |:| noMore                   :9_2:UnDeeper:
********************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
********************************************* \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
********************************************* / pNumAsText                     :9_2:UnDeeper:
******************************************* / term p/b:label to the left of line below, with EOL :8_4:Other "spit:
******************************************** / |:| some                            :8_4:Other "spit:
********************************************* / |:| base parser                   :8_4:Other "spit:
********************************************* \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
********************************************* / |:| deeper                     :9_2:UnDeeper:
********************************************** / |:| some GoDeeper            :9_2:UnDeeper:
********************************************* / |:| noMore                     :9_2:UnDeeper:
********************************************* \ |:| noMore has returned ([],0) :9_2:UnDeeper:
******************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
******************************************** / undeepers                        :9_2:UnDeeper:
********************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :9_2:UnDeeper:
********************************************* / sameLine: success!             :9_2:UnDeeper:
******************************************** \ undeepers has returned ()        :9_2:UnDeeper:
******************************************** / matching EOL                     :9_2:UnDeeper:
******************************************* / term p/notLabelTerm                   :8_4:Other "spit:
******************************************** / term p/2:someIndentation expr p     :8_4:Other "spit:
********************************************* / someIndentation                   :8_4:Other "spit:
********************************************** / myindented: consuming GoDeeper  :8_4:Other "spit:
******************************************** / term p/3:plain p                    :8_4:Other "spit:
********************************************* / pRelPred                          :8_4:Other "spit:
********************************************** / slRelPred                       :8_4:Other "spit:
*********************************************** / nested simpleHorn             :8_4:Other "spit:
************************************************ / |^|                         :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slMultiTerm               :8_4:Other "spit:
************************************************** / |:| some                :8_4:Other "spit:
*************************************************** / |:| base parser       :8_4:Other "spit:
*************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
*************************************************** / |:| deeper         :9_2:UnDeeper:
**************************************************** / |:| some GoDeeper :9_2:UnDeeper:
*************************************************** / |:| noMore         :9_2:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
************************************************* \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************ / |^| deeps                :9_2:UnDeeper:
************************************************ \ |^| deeps has returned [UnDeeper,UnDeeper,UnDeeper] :9_1:Must:
*********************************************** / RPConstraint                  :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slMultiTerm               :8_4:Other "spit:
************************************************** / |:| some                :8_4:Other "spit:
*************************************************** / |:| base parser       :8_4:Other "spit:
*************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
*************************************************** / |:| deeper         :9_2:UnDeeper:
**************************************************** / |:| some GoDeeper :9_2:UnDeeper:
*************************************************** / |:| noMore         :9_2:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
************************************************* \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************ / |>| calling $>>          :9_2:UnDeeper:
************************************************* / $>>                    :9_2:UnDeeper:
************************************************** / $>>/recurse          :9_2:UnDeeper:
************************************************** / $>>/base             :9_2:UnDeeper:
*********************************************** / RPBoolStructR                 :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slMultiTerm               :8_4:Other "spit:
************************************************** / |:| some                :8_4:Other "spit:
*************************************************** / |:| base parser       :8_4:Other "spit:
*************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
*************************************************** / |:| deeper         :9_2:UnDeeper:
**************************************************** / |:| some GoDeeper :9_2:UnDeeper:
*************************************************** / |:| noMore         :9_2:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
************************************************* \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************ / |>| calling $>>          :9_2:UnDeeper:
************************************************* / $>>                    :9_2:UnDeeper:
************************************************** / $>>/recurse          :9_2:UnDeeper:
************************************************** / $>>/base             :9_2:UnDeeper:
*********************************************** / RPMT                          :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slAKA                     :8_4:Other "spit:
************************************************** / $*|                     :8_4:Other "spit:
*************************************************** / slAKA base            :8_4:Other "spit:
**************************************************** / slMultiTerm         :8_4:Other "spit:
***************************************************** / |:| some          :8_4:Other "spit:
****************************************************** / |:| base parser :8_4:Other "spit:
****************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
****************************************************** / |:| deeper   :9_2:UnDeeper:
******************************************************* / |:| some GoDeeper :9_2:UnDeeper:
****************************************************** / |:| noMore   :9_2:UnDeeper:
****************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
***************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
**************************************************** \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
*************************************************** \ slAKA base has returned (["spits"],0) :9_2:UnDeeper:
************************************************** \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************** / |>>                  :9_2:UnDeeper:
*************************************************** / |>>/recurse        :9_2:UnDeeper:
*************************************************** / |>>/base           :9_2:UnDeeper:
**************************************************** / slAKA optional akapart :9_2:UnDeeper:
***************************************************** / |?| optional something :9_2:UnDeeper:
****************************************************** / |>>          :9_2:UnDeeper:
******************************************************* / |>>/recurse :9_2:UnDeeper:
******************************************************* / |>>/base   :9_2:UnDeeper:
******************************************************** / PAKA/akapart :9_2:UnDeeper:
********************************************************* / $>|    :9_2:UnDeeper:
********************************************************** / Aka Token :9_2:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** \ slAKA optional akapart has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** / |>>/base got Nothing :9_2:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :9_2:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :9_2:UnDeeper:
************************************************** / |>>                  :9_2:UnDeeper:
*************************************************** / |>>/recurse        :9_2:UnDeeper:
*************************************************** / |>>/base           :9_2:UnDeeper:
**************************************************** / slAKA optional typically :9_2:UnDeeper:
***************************************************** / |?| optional something :9_2:UnDeeper:
****************************************************** / |>>          :9_2:UnDeeper:
******************************************************* / |>>/recurse :9_2:UnDeeper:
******************************************************* / |>>/base   :9_2:UnDeeper:
******************************************************** / typically :9_2:UnDeeper:
********************************************************* / $>|    :9_2:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** \ slAKA optional typically has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** / |>>/base got Nothing :9_2:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :9_2:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :9_2:UnDeeper:
************************************************** / slAKA: proceeding after base and entityalias are retrieved ... :9_2:UnDeeper:
************************************************** / pAKA: entityalias = Nothing :9_2:UnDeeper:
************************************************* \ slAKA has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
*********************************************** \ RPMT has returned (RPMT ["spits"],0) :9_2:UnDeeper:
********************************************** \ slRelPred has returned (RPMT ["spits"],0) :9_2:UnDeeper:
********************************************** / undeepers                    :9_2:UnDeeper:
*********************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :9_2:UnDeeper:
*********************************************** / sameLine: success!         :9_2:UnDeeper:
********************************************** \ undeepers has returned ()    :9_2:UnDeeper:
********************************************* \ pRelPred has returned RPMT ["spits"] :9_2:UnDeeper:
******************************************** \ term p/3:plain p has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
******************************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
****************************************** \ term p has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
****************************************** / binary(Or)                           :9_2:UnDeeper:
****************************************** / binary(And)                          :9_2:UnDeeper:
****************************************** / binary(SetLess)                      :9_2:UnDeeper:
****************************************** / binary(SetPlus)                      :9_2:UnDeeper:
***************************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
***************************************** / myindented: consuming UnDeeper         :9_2:UnDeeper:
***************************************** \ myindented: consuming UnDeeper has returned UnDeeper :9_3:UnDeeper:
**************************************** \ someIndentation has returned MyLeaf (RPMT ["spits"]) :9_3:UnDeeper:
*************************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["spits"]) :9_3:UnDeeper:
************************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["spits"]) :9_3:UnDeeper:
************************************* \ term p has returned MyLeaf (RPMT ["spits"])      :9_3:UnDeeper:
************************************* / binary(Or)                                       :9_3:UnDeeper:
************************************* / binary(And)                                      :9_3:UnDeeper:
************************************* / binary(SetLess)                                  :9_3:UnDeeper:
************************************* / binary(SetPlus)                                  :9_3:UnDeeper:
************************************ \ ppp inner has returned All Nothing [Leaf (RPMT ["drinks"]),Any Nothing [Leaf (RPMT ["swallows"]),Leaf (RPMT ["spits"])]] :9_3:UnDeeper:
*********************************** \ pBSR has returned All Nothing [Leaf (RPMT ["drinks"]),Any Nothing [Leaf (RPMT ["swallows"]),Leaf (RPMT ["spits"])]] :9_3:UnDeeper:
*********************************** / constructed simpleHorn; running tellIdFirst          :9_3:UnDeeper:
********************************** \ nested simpleHorn has returned (RPMT ["imbibes"],0)    :9_3:UnDeeper:
********************************* \ slRelPred has returned (RPMT ["imbibes"],0)              :9_3:UnDeeper:
********************************* / undeepers                                                :9_3:UnDeeper:
********************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :9_3:UnDeeper:
********************************** / sameLine: success!                                     :9_3:UnDeeper:
********************************* \ undeepers has returned ()                                :9_3:UnDeeper:
******************************** \ pRelPred has returned RPMT ["imbibes"]                     :9_3:UnDeeper:
******************************* \ term p/3:plain p has returned MyLeaf (RPMT ["imbibes"])      :9_3:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["imbibes"])     :9_3:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["imbibes"])                    :9_3:UnDeeper:
***************************** / binary(Or)                                                       :9_3:UnDeeper:
***************************** / binary(And)                                                      :9_3:UnDeeper:
***************************** / binary(SetLess)                                                  :9_3:UnDeeper:
***************************** / binary(SetPlus)                                                  :9_3:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["imbibes"])       :9_3:UnDeeper:
**************************** / myindented: consuming UnDeeper                                     :9_3:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                 :9_4:UnDeeper:
*************************** \ someIndentation has returned MyLeaf (RPMT ["imbibes"])                 :9_4:UnDeeper:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["imbibes"])   :9_4:UnDeeper:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["imbibes"])                 :9_4:UnDeeper:
************************ \ term p has returned MyLeaf (RPMT ["imbibes"])                                :9_4:UnDeeper:
************************ / binary(Or)                                                                   :9_4:UnDeeper:
************************ / binary(And)                                                                  :9_4:UnDeeper:
************************ / binary(SetLess)                                                              :9_4:UnDeeper:
************************ / binary(SetPlus)                                                              :9_4:UnDeeper:
*********************** \ ppp inner has returned Any Nothing [Leaf (RPMT ["eats"]),Leaf (RPMT ["imbibes"])] :9_4:UnDeeper:
********************** \ pBSR has returned Any Nothing [Leaf (RPMT ["eats"]),Leaf (RPMT ["imbibes"])]     :9_4:UnDeeper:
********************** / constructed simpleHorn; running tellIdFirst                                      :9_4:UnDeeper:
********************* \ nested simpleHorn has returned (RPMT ["degustates"],0)                             :9_4:UnDeeper:
******************** \ slRelPred has returned (RPMT ["degustates"],0)                                       :9_4:UnDeeper:
******************** / undeepers                                                                            :9_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers             :9_4:UnDeeper:
********************* / sameLine: success!                                                                 :9_4:UnDeeper:
******************** \ undeepers has returned ()                                                            :9_4:UnDeeper:
******************* \ pRelPred has returned RPMT ["degustates"]                                              :9_4:UnDeeper:
****************** \ term p/3:plain p has returned MyLeaf (RPMT ["degustates"])                               :9_4:UnDeeper:
***************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["degustates"])                              :9_4:UnDeeper:
**************** \ term p has returned MyLeaf (RPMT ["degustates"])                                             :9_4:UnDeeper:
**************** / binary(Or)                                                                                   :9_4:UnDeeper:
**************** / binary(And)                                                                                  :9_4:UnDeeper:
**************** / binary(SetLess)                                                                              :9_4:UnDeeper:
**************** / binary(SetPlus)                                                                              :9_4:UnDeeper:
*************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["degustates"])                                :9_4:UnDeeper:
*************** / myindented: consuming UnDeeper                                                                 :9_4:UnDeeper:
*************** \ myindented: consuming UnDeeper has returned UnDeeper                                    :9_1:Must:
************** \ someIndentation has returned MyLeaf (RPMT ["degustates"])                                 :9_1:Must:
************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["degustates"])                   :9_1:Must:
************ \ term p/notLabelTerm has returned MyLeaf (RPMT ["degustates"])                                 :9_1:Must:
*********** \ term p has returned MyLeaf (RPMT ["degustates"])                                                :9_1:Must:
*********** / binary(Or)                                                                                      :9_1:Must:
*********** / binary(And)                                                                                     :9_1:Must:
*********** / binary(SetLess)                                                                                 :9_1:Must:
*********** / binary(SetPlus)                                                                                 :9_1:Must:
********** \ ppp inner has returned All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]             :9_1:Must:
********* \ pBSR has returned All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]                    :9_1:Must:
******** \ preambleBoolStructR [Who,Which,Whose] has returned (Who,All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]) :9_1:Must:
******* \ manyIndentation/leaf? has returned (Who,All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]) :9_1:Must:
******* / WHERE                                                                                                   :9_1:Must:
******* / preambleParamText:[Having]                                                                              :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******* / preambleParamText:[Given]                                                                               :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******* / preambleParamText:[Upon]                                                                                :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******* / preambleBoolStructR [Unless]                                                                            :9_1:Must:
******* / preambleBoolStructR [When,If]                                                                           :9_1:Must:
******* / pDT                                                                                                     :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******** \ $>| has returned DMust                                                                                 :9_2:GoDeeper:
******** / |>| calling $>>                                                                                        :9_2:GoDeeper:
********* / $>>                                                                                                  :9_2:GoDeeper:
********** / $>>/recurse                                                                                        :9_2:GoDeeper:
*********** / $>>                                                                                               :9_2:Other "sing:
************ / $>>/recurse                                                                                     :9_2:Other "sing:
************ / $>>/base                                                                                        :9_2:Other "sing:
************* / pTemporal/eventually                                                                          :9_2:Other "sing:
************* / pTemporal/specifically                                                                        :9_2:Other "sing:
************** / $>|                                                                                         :9_2:Other "sing:
************* / pTemporal/vaguely                                                                             :9_2:Other "sing:
************* \ pTemporal/vaguely has returned Just (TemporalConstraint TVague (Just 0) "sing")                :1_2:UnDeeper:
************* / $>>/base got Just (Just (TemporalConstraint TVague (Just 0) "sing"))                           :1_2:UnDeeper:
************ \ $>>/base has returned (Just (Just (TemporalConstraint TVague (Just 0) "sing")),0)                :1_2:UnDeeper:
*********** \ $>> has returned (Just (Just (TemporalConstraint TVague (Just 0) "sing")),0)                       :1_2:UnDeeper:
********** \ $>>/recurse has returned (Just (Just (TemporalConstraint TVague (Just 0) "sing")),1)                 :1_2:UnDeeper:
********* \ $>> has returned (Just (Just (TemporalConstraint TVague (Just 0) "sing")),1)                           :1_2:UnDeeper:
******** \ |>| calling $>> has returned (Just (Just (TemporalConstraint TVague (Just 0) "sing")),1)                 :1_2:UnDeeper:
******** / undeepers                                                                                                :1_2:UnDeeper:
********* / sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                 :1_2:UnDeeper:
********* / sameLine: success!                                                                                :EOF:
******** \ undeepers has returned ()                                                                           :EOF:
******* \ pDT has returned (DMust,Just (TemporalConstraint TVague (Just 0) "sing"))                             :EOF:
******* / WHERE                                                                                                 :EOF:
******* / preambleParamText:[Having]                                                                            :EOF:
******** / $>|                                                                                                 :EOF:
******* / preambleParamText:[Given]                                                                             :EOF:
******** / $>|                                                                                                 :EOF:
******* / preambleParamText:[Upon]                                                                              :EOF:
******** / $>|                                                                                                 :EOF:
******* / preambleBoolStructR [Unless]                                                                          :EOF:
******* / preambleBoolStructR [When,If]                                                                         :EOF:
******* / pDoAction/Do                                                                                          :EOF:
****** / regulative permutation with deontic-action                                                                :1_1:Every:
******* / WHERE                                                                                                   :1_1:Every:
******* / preambleParamText:[Having]                                                                              :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / preambleParamText:[Given]                                                                               :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / preambleParamText:[Upon]                                                                                :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / preambleBoolStructR [Unless]                                                                            :1_1:Every:
******* / preambleBoolStructR [When,If]                                                                           :1_1:Every:
******* / pTemporal/eventually                                                                                    :1_1:Every:
******* / pTemporal/specifically                                                                                  :1_1:Every:
******** / $>|                                                                                                   :1_1:Every:
******* / pTemporal/vaguely                                                                                       :1_1:Every:
******* / pActor [Every,Party,TokAll]                                                                             :1_1:Every:
******** / someIndentation                                                                                        :1_2:GoDeeper:
********* / myindented: consuming GoDeeper                                                                       :1_2:GoDeeper:
********* \ myindented: consuming GoDeeper has returned GoDeeper                                                  :1_2:Other "pers:
********* / manyIndentation/leaf?                                                                                 :1_2:Other "pers:
********** / pMultiTermAka                                                                                       :1_2:Other "pers:
*********** / pAKA                                                                                              :1_2:Other "pers:
************ / slAKA                                                                                           :1_2:Other "pers:
************* / $*|                                                                                           :1_2:Other "pers:
************** / slAKA base                                                                                  :1_2:Other "pers:
*************** / slMultiTerm                                                                               :1_2:Other "pers:
**************** / |:| some                                                                                :1_2:Other "pers:
***************** / |:| base parser                                                                       :1_2:Other "pers:
***************** \ |:| base parser has returned ("person",0)                                              :2_2:UnDeeper:
***************** / |:| deeper                                                                             :2_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :2_2:UnDeeper:
***************** / |:| noMore                                                                             :2_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :2_2:UnDeeper:
**************** \ |:| some has returned (["person"],0)                                                     :2_2:UnDeeper:
*************** \ slMultiTerm has returned (["person"],0)                                                    :2_2:UnDeeper:
************** \ slAKA base has returned (["person"],0)                                                       :2_2:UnDeeper:
************* \ $*| has returned (["person"],0)                                                                :2_2:UnDeeper:
************* / |>>                                                                                            :2_2:UnDeeper:
************** / |>>/recurse                                                                                  :2_2:UnDeeper:
************** / |>>/base                                                                                     :2_2:UnDeeper:
*************** / slAKA optional akapart                                                                     :2_2:UnDeeper:
**************** / |?| optional something                                                                   :2_2:UnDeeper:
***************** / |>>                                                                                    :2_2:UnDeeper:
****************** / |>>/recurse                                                                          :2_2:UnDeeper:
****************** / |>>/base                                                                             :2_2:UnDeeper:
******************* / PAKA/akapart                                                                       :2_2:UnDeeper:
******************** / $>|                                                                              :2_2:UnDeeper:
********************* / Aka Token                                                                      :2_2:UnDeeper:
**************** \ |?| optional something has returned (Nothing,0)                                          :2_2:UnDeeper:
*************** \ slAKA optional akapart has returned (Nothing,0)                                            :2_2:UnDeeper:
*************** / |>>/base got Nothing                                                                       :2_2:UnDeeper:
************** \ |>>/base has returned (Nothing,0)                                                            :2_2:UnDeeper:
************* \ |>> has returned (Nothing,0)                                                                   :2_2:UnDeeper:
************* / |>>                                                                                            :2_2:UnDeeper:
************** / |>>/recurse                                                                                  :2_2:UnDeeper:
************** / |>>/base                                                                                     :2_2:UnDeeper:
*************** / slAKA optional typically                                                                   :2_2:UnDeeper:
**************** / |?| optional something                                                                   :2_2:UnDeeper:
***************** / |>>                                                                                    :2_2:UnDeeper:
****************** / |>>/recurse                                                                          :2_2:UnDeeper:
****************** / |>>/base                                                                             :2_2:UnDeeper:
******************* / typically                                                                          :2_2:UnDeeper:
******************** / $>|                                                                              :2_2:UnDeeper:
**************** \ |?| optional something has returned (Nothing,0)                                          :2_2:UnDeeper:
*************** \ slAKA optional typically has returned (Nothing,0)                                          :2_2:UnDeeper:
*************** / |>>/base got Nothing                                                                       :2_2:UnDeeper:
************** \ |>>/base has returned (Nothing,0)                                                            :2_2:UnDeeper:
************* \ |>> has returned (Nothing,0)                                                                   :2_2:UnDeeper:
************* / slAKA: proceeding after base and entityalias are retrieved ...                                 :2_2:UnDeeper:
************* / pAKA: entityalias = Nothing                                                                    :2_2:UnDeeper:
************ \ slAKA has returned (["person"],0)                                                                :2_2:UnDeeper:
************ / undeepers                                                                                        :2_2:UnDeeper:
************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                         :2_2:UnDeeper:
************* / sameLine: success!                                                                             :2_2:UnDeeper:
************ \ undeepers has returned ()                                                                        :2_2:UnDeeper:
*********** \ pAKA has returned ["person"]                                                                       :2_2:UnDeeper:
********** \ pMultiTermAka has returned ["person"]                                                                :2_2:UnDeeper:
********* \ manyIndentation/leaf? has returned ["person"]                                                          :2_2:UnDeeper:
********* / myindented: consuming UnDeeper                                                                         :2_2:UnDeeper:
********* \ myindented: consuming UnDeeper has returned UnDeeper                                                :2_1:Who:
******** \ someIndentation has returned ["person"]                                                               :2_1:Who:
******* \ pActor [Every,Party,TokAll] has returned (Every,Leaf (("person" :| [],Nothing) :| []))                  :2_1:Who:
******* / manyIndentation/leaf?                                                                                   :2_1:Who:
******** / preambleBoolStructR [Who,Which,Whose]                                                                 :2_1:Who:
********* / pBSR                                                                                                 :2_2:GoDeeper:
********** / ppp inner                                                                                          :2_2:GoDeeper:
*********** / term p                                                                                           :2_2:GoDeeper:
************ / term p/1a:label directly above                                                                 :2_2:GoDeeper:
************* / $*|                                                                                          :2_2:GoDeeper:
************** / |:| some                                                                                   :2_2:GoDeeper:
*************** / |:| base parser                                                                          :2_2:GoDeeper:
**************** / pNumAsText                                                                             :2_2:GoDeeper:
************ / term p/b:label to the left of line below, with EOL                                             :2_2:GoDeeper:
************* / |:| some                                                                                     :2_2:GoDeeper:
************** / |:| base parser                                                                            :2_2:GoDeeper:
*************** / pNumAsText                                                                               :2_2:GoDeeper:
************ / term p/notLabelTerm                                                                            :2_2:GoDeeper:
************* / term p/2:someIndentation expr p                                                              :2_2:GoDeeper:
************** / someIndentation                                                                            :2_2:GoDeeper:
*************** / myindented: consuming GoDeeper                                                           :2_2:GoDeeper:
*************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :2_2:Other "walk:
*************** / manyIndentation/leaf?                                                                     :2_2:Other "walk:
**************** / term p                                                                                  :2_2:Other "walk:
***************** / term p/1a:label directly above                                                        :2_2:Other "walk:
****************** / $*|                                                                                 :2_2:Other "walk:
******************* / |:| some                                                                          :2_2:Other "walk:
******************** / |:| base parser                                                                 :2_2:Other "walk:
******************** \ |:| base parser has returned ("walks",0)                                         :3_2:UnDeeper:
******************** / |:| deeper                                                                       :3_2:UnDeeper:
********************* / |:| some GoDeeper                                                              :3_2:UnDeeper:
******************** / |:| noMore                                                                       :3_2:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                   :3_2:UnDeeper:
******************* \ |:| some has returned (["walks"],0)                                                :3_2:UnDeeper:
******************* / pNumAsText                                                                         :3_2:UnDeeper:
***************** / term p/b:label to the left of line below, with EOL                                    :2_2:Other "walk:
****************** / |:| some                                                                            :2_2:Other "walk:
******************* / |:| base parser                                                                   :2_2:Other "walk:
******************* \ |:| base parser has returned ("walks",0)                                           :3_2:UnDeeper:
******************* / |:| deeper                                                                         :3_2:UnDeeper:
******************** / |:| some GoDeeper                                                                :3_2:UnDeeper:
******************* / |:| noMore                                                                         :3_2:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                     :3_2:UnDeeper:
****************** \ |:| some has returned (["walks"],0)                                                  :3_2:UnDeeper:
****************** / undeepers                                                                            :3_2:UnDeeper:
******************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers             :3_2:UnDeeper:
******************* / sameLine: success!                                                                 :3_2:UnDeeper:
****************** \ undeepers has returned ()                                                            :3_2:UnDeeper:
****************** / matching EOL                                                                         :3_2:UnDeeper:
***************** / term p/notLabelTerm                                                                   :2_2:Other "walk:
****************** / term p/2:someIndentation expr p                                                     :2_2:Other "walk:
******************* / someIndentation                                                                   :2_2:Other "walk:
******************** / myindented: consuming GoDeeper                                                  :2_2:Other "walk:
****************** / term p/3:plain p                                                                    :2_2:Other "walk:
******************* / pRelPred                                                                          :2_2:Other "walk:
******************** / slRelPred                                                                       :2_2:Other "walk:
********************* / nested simpleHorn                                                             :2_2:Other "walk:
********************** / |^|                                                                         :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slMultiTerm                                                               :2_2:Other "walk:
************************ / |:| some                                                                :2_2:Other "walk:
************************* / |:| base parser                                                       :2_2:Other "walk:
************************* \ |:| base parser has returned ("walks",0)                               :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["walks"],0)                                      :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["walks"],0)                                     :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************** / |^| deeps                                                                    :3_2:UnDeeper:
********************** \ |^| deeps has returned [UnDeeper]                                         :3_1:And:
********************* / RPConstraint                                                                  :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slMultiTerm                                                               :2_2:Other "walk:
************************ / |:| some                                                                :2_2:Other "walk:
************************* / |:| base parser                                                       :2_2:Other "walk:
************************* \ |:| base parser has returned ("walks",0)                               :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["walks"],0)                                      :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["walks"],0)                                     :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************** / |>| calling $>>                                                              :3_2:UnDeeper:
*********************** / $>>                                                                        :3_2:UnDeeper:
************************ / $>>/recurse                                                              :3_2:UnDeeper:
************************ / $>>/base                                                                 :3_2:UnDeeper:
********************* / RPBoolStructR                                                                 :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slMultiTerm                                                               :2_2:Other "walk:
************************ / |:| some                                                                :2_2:Other "walk:
************************* / |:| base parser                                                       :2_2:Other "walk:
************************* \ |:| base parser has returned ("walks",0)                               :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["walks"],0)                                      :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["walks"],0)                                     :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************** / |>| calling $>>                                                              :3_2:UnDeeper:
*********************** / $>>                                                                        :3_2:UnDeeper:
************************ / $>>/recurse                                                              :3_2:UnDeeper:
************************ / $>>/base                                                                 :3_2:UnDeeper:
********************* / RPMT                                                                          :2_2:Other "walk:
********************** / $*|                                                                         :2_2:Other "walk:
*********************** / slAKA                                                                     :2_2:Other "walk:
************************ / $*|                                                                     :2_2:Other "walk:
************************* / slAKA base                                                            :2_2:Other "walk:
************************** / slMultiTerm                                                         :2_2:Other "walk:
*************************** / |:| some                                                          :2_2:Other "walk:
**************************** / |:| base parser                                                 :2_2:Other "walk:
**************************** \ |:| base parser has returned ("walks",0)                         :3_2:UnDeeper:
**************************** / |:| deeper                                                       :3_2:UnDeeper:
***************************** / |:| some GoDeeper                                              :3_2:UnDeeper:
**************************** / |:| noMore                                                       :3_2:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                   :3_2:UnDeeper:
*************************** \ |:| some has returned (["walks"],0)                                :3_2:UnDeeper:
************************** \ slMultiTerm has returned (["walks"],0)                               :3_2:UnDeeper:
************************* \ slAKA base has returned (["walks"],0)                                  :3_2:UnDeeper:
************************ \ $*| has returned (["walks"],0)                                           :3_2:UnDeeper:
************************ / |>>                                                                      :3_2:UnDeeper:
************************* / |>>/recurse                                                            :3_2:UnDeeper:
************************* / |>>/base                                                               :3_2:UnDeeper:
************************** / slAKA optional akapart                                               :3_2:UnDeeper:
*************************** / |?| optional something                                             :3_2:UnDeeper:
**************************** / |>>                                                              :3_2:UnDeeper:
***************************** / |>>/recurse                                                    :3_2:UnDeeper:
***************************** / |>>/base                                                       :3_2:UnDeeper:
****************************** / PAKA/akapart                                                 :3_2:UnDeeper:
******************************* / $>|                                                        :3_2:UnDeeper:
******************************** / Aka Token                                                :3_2:UnDeeper:
*************************** \ |?| optional something has returned (Nothing,0)                    :3_2:UnDeeper:
************************** \ slAKA optional akapart has returned (Nothing,0)                      :3_2:UnDeeper:
************************** / |>>/base got Nothing                                                 :3_2:UnDeeper:
************************* \ |>>/base has returned (Nothing,0)                                      :3_2:UnDeeper:
************************ \ |>> has returned (Nothing,0)                                             :3_2:UnDeeper:
************************ / |>>                                                                      :3_2:UnDeeper:
************************* / |>>/recurse                                                            :3_2:UnDeeper:
************************* / |>>/base                                                               :3_2:UnDeeper:
************************** / slAKA optional typically                                             :3_2:UnDeeper:
*************************** / |?| optional something                                             :3_2:UnDeeper:
**************************** / |>>                                                              :3_2:UnDeeper:
***************************** / |>>/recurse                                                    :3_2:UnDeeper:
***************************** / |>>/base                                                       :3_2:UnDeeper:
****************************** / typically                                                    :3_2:UnDeeper:
******************************* / $>|                                                        :3_2:UnDeeper:
*************************** \ |?| optional something has returned (Nothing,0)                    :3_2:UnDeeper:
************************** \ slAKA optional typically has returned (Nothing,0)                    :3_2:UnDeeper:
************************** / |>>/base got Nothing                                                 :3_2:UnDeeper:
************************* \ |>>/base has returned (Nothing,0)                                      :3_2:UnDeeper:
************************ \ |>> has returned (Nothing,0)                                             :3_2:UnDeeper:
************************ / slAKA: proceeding after base and entityalias are retrieved ...           :3_2:UnDeeper:
************************ / pAKA: entityalias = Nothing                                              :3_2:UnDeeper:
*********************** \ slAKA has returned (["walks"],0)                                           :3_2:UnDeeper:
********************** \ $*| has returned (["walks"],0)                                               :3_2:UnDeeper:
********************* \ RPMT has returned (RPMT ["walks"],0)                                           :3_2:UnDeeper:
******************** \ slRelPred has returned (RPMT ["walks"],0)                                        :3_2:UnDeeper:
******************** / undeepers                                                                        :3_2:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers         :3_2:UnDeeper:
********************* / sameLine: success!                                                             :3_2:UnDeeper:
******************** \ undeepers has returned ()                                                        :3_2:UnDeeper:
******************* \ pRelPred has returned RPMT ["walks"]                                               :3_2:UnDeeper:
****************** \ term p/3:plain p has returned MyLeaf (RPMT ["walks"])                                :3_2:UnDeeper:
***************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["walks"])                               :3_2:UnDeeper:
**************** \ term p has returned MyLeaf (RPMT ["walks"])                                              :3_2:UnDeeper:
**************** / binary(Or)                                                                               :3_2:UnDeeper:
**************** / binary(And)                                                                              :3_2:UnDeeper:
**************** / binary(SetLess)                                                                          :3_2:UnDeeper:
**************** / binary(SetPlus)                                                                          :3_2:UnDeeper:
*************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["walks"])                                 :3_2:UnDeeper:
*************** / myindented: consuming UnDeeper                                                             :3_2:UnDeeper:
*************** \ myindented: consuming UnDeeper has returned UnDeeper                                    :3_1:And:
************** \ someIndentation has returned MyLeaf (RPMT ["walks"])                                      :3_1:And:
************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["walks"])                        :3_1:And:
************ \ term p/notLabelTerm has returned MyLeaf (RPMT ["walks"])                                      :3_1:And:
*********** \ term p has returned MyLeaf (RPMT ["walks"])                                                     :3_1:And:
*********** / binary(Or)                                                                                      :3_1:And:
*********** / binary(And)                                                                                     :3_1:And:
*********** \ binary(And) has returned And                                                                     :3_2:GoDeeper:
*********** / term p                                                                                           :3_2:GoDeeper:
************ / term p/1a:label directly above                                                                 :3_2:GoDeeper:
************* / $*|                                                                                          :3_2:GoDeeper:
************** / |:| some                                                                                   :3_2:GoDeeper:
*************** / |:| base parser                                                                          :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
************ / term p/b:label to the left of line below, with EOL                                             :3_2:GoDeeper:
************* / |:| some                                                                                     :3_2:GoDeeper:
************** / |:| base parser                                                                            :3_2:GoDeeper:
*************** / pNumAsText                                                                               :3_2:GoDeeper:
************ / term p/notLabelTerm                                                                            :3_2:GoDeeper:
************* / term p/2:someIndentation expr p                                                              :3_2:GoDeeper:
************** / someIndentation                                                                            :3_2:GoDeeper:
*************** / myindented: consuming GoDeeper                                                           :3_2:GoDeeper:
*************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :3_2:Other "degu:
*************** / manyIndentation/leaf?                                                                     :3_2:Other "degu:
**************** / term p                                                                                  :3_2:Other "degu:
***************** / term p/1a:label directly above                                                        :3_2:Other "degu:
****************** / $*|                                                                                 :3_2:Other "degu:
******************* / |:| some                                                                          :3_2:Other "degu:
******************** / |:| base parser                                                                 :3_2:Other "degu:
******************** \ |:| base parser has returned ("degustates",0)                                   :4_2:Means:
******************** / |:| deeper                                                                      :4_2:Means:
********************* / |:| some GoDeeper                                                             :4_2:Means:
******************** / |:| noMore                                                                      :4_2:Means:
******************** \ |:| noMore has returned ([],0)                                                  :4_2:Means:
******************* \ |:| some has returned (["degustates"],0)                                          :4_2:Means:
******************* / pNumAsText                                                                        :4_2:Means:
***************** / term p/b:label to the left of line below, with EOL                                    :3_2:Other "degu:
****************** / |:| some                                                                            :3_2:Other "degu:
******************* / |:| base parser                                                                   :3_2:Other "degu:
******************* \ |:| base parser has returned ("degustates",0)                                     :4_2:Means:
******************* / |:| deeper                                                                        :4_2:Means:
******************** / |:| some GoDeeper                                                               :4_2:Means:
******************* / |:| noMore                                                                        :4_2:Means:
******************* \ |:| noMore has returned ([],0)                                                    :4_2:Means:
****************** \ |:| some has returned (["degustates"],0)                                            :4_2:Means:
****************** / undeepers                                                                           :4_2:Means:
******************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers            :4_2:Means:
******************* / sameLine: success!                                                                :4_2:Means:
****************** \ undeepers has returned ()                                                           :4_2:Means:
****************** / matching EOL                                                                        :4_2:Means:
***************** / term p/notLabelTerm                                                                   :3_2:Other "degu:
****************** / term p/2:someIndentation expr p                                                     :3_2:Other "degu:
******************* / someIndentation                                                                   :3_2:Other "degu:
******************** / myindented: consuming GoDeeper                                                  :3_2:Other "degu:
****************** / term p/3:plain p                                                                    :3_2:Other "degu:
******************* / pRelPred                                                                          :3_2:Other "degu:
******************** / slRelPred                                                                       :3_2:Other "degu:
********************* / nested simpleHorn                                                             :3_2:Other "degu:
********************** / |^|                                                                         :3_2:Other "degu:
********************** / $*|                                                                         :3_2:Other "degu:
*********************** / slMultiTerm                                                               :3_2:Other "degu:
************************ / |:| some                                                                :3_2:Other "degu:
************************* / |:| base parser                                                       :3_2:Other "degu:
************************* \ |:| base parser has returned ("degustates",0)                         :4_2:Means:
************************* / |:| deeper                                                            :4_2:Means:
************************** / |:| some GoDeeper                                                   :4_2:Means:
************************* / |:| noMore                                                            :4_2:Means:
************************* \ |:| noMore has returned ([],0)                                        :4_2:Means:
************************ \ |:| some has returned (["degustates"],0)                                :4_2:Means:
*********************** \ slMultiTerm has returned (["degustates"],0)                               :4_2:Means:
********************** \ $*| has returned (["degustates"],0)                                         :4_2:Means:
********************** / |^| deeps                                                                   :4_2:Means:
********************** \ |^| deeps has returned []                                                   :4_2:Means:
********************** / pBSR                                                                         :4_3:GoDeeper:
*********************** / ppp inner                                                                  :4_3:GoDeeper:
************************ / term p                                                                   :4_3:GoDeeper:
************************* / term p/1a:label directly above                                         :4_3:GoDeeper:
************************** / $*|                                                                  :4_3:GoDeeper:
*************************** / |:| some                                                           :4_3:GoDeeper:
**************************** / |:| base parser                                                  :4_3:GoDeeper:
***************************** / pNumAsText                                                     :4_3:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                     :4_3:GoDeeper:
************************** / |:| some                                                             :4_3:GoDeeper:
*************************** / |:| base parser                                                    :4_3:GoDeeper:
**************************** / pNumAsText                                                       :4_3:GoDeeper:
************************* / term p/notLabelTerm                                                    :4_3:GoDeeper:
************************** / term p/2:someIndentation expr p                                      :4_3:GoDeeper:
*************************** / someIndentation                                                    :4_3:GoDeeper:
**************************** / myindented: consuming GoDeeper                                   :4_3:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper              :4_3:Other "eats:
**************************** / manyIndentation/leaf?                                             :4_3:Other "eats:
***************************** / term p                                                          :4_3:Other "eats:
****************************** / term p/1a:label directly above                                :4_3:Other "eats:
******************************* / $*|                                                         :4_3:Other "eats:
******************************** / |:| some                                                  :4_3:Other "eats:
********************************* / |:| base parser                                         :4_3:Other "eats:
********************************* \ |:| base parser has returned ("eats",0)                  :5_3:UnDeeper:
********************************* / |:| deeper                                               :5_3:UnDeeper:
********************************** / |:| some GoDeeper                                      :5_3:UnDeeper:
********************************* / |:| noMore                                               :5_3:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                           :5_3:UnDeeper:
******************************** \ |:| some has returned (["eats"],0)                         :5_3:UnDeeper:
******************************** / pNumAsText                                                 :5_3:UnDeeper:
****************************** / term p/b:label to the left of line below, with EOL            :4_3:Other "eats:
******************************* / |:| some                                                    :4_3:Other "eats:
******************************** / |:| base parser                                           :4_3:Other "eats:
******************************** \ |:| base parser has returned ("eats",0)                    :5_3:UnDeeper:
******************************** / |:| deeper                                                 :5_3:UnDeeper:
********************************* / |:| some GoDeeper                                        :5_3:UnDeeper:
******************************** / |:| noMore                                                 :5_3:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                             :5_3:UnDeeper:
******************************* \ |:| some has returned (["eats"],0)                           :5_3:UnDeeper:
******************************* / undeepers                                                    :5_3:UnDeeper:
******************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_3:UnDeeper:
******************************** / sameLine: success!                                         :5_3:UnDeeper:
******************************* \ undeepers has returned ()                                    :5_3:UnDeeper:
******************************* / matching EOL                                                 :5_3:UnDeeper:
****************************** / term p/notLabelTerm                                           :4_3:Other "eats:
******************************* / term p/2:someIndentation expr p                             :4_3:Other "eats:
******************************** / someIndentation                                           :4_3:Other "eats:
********************************* / myindented: consuming GoDeeper                          :4_3:Other "eats:
******************************* / term p/3:plain p                                            :4_3:Other "eats:
******************************** / pRelPred                                                  :4_3:Other "eats:
********************************* / slRelPred                                               :4_3:Other "eats:
********************************** / nested simpleHorn                                     :4_3:Other "eats:
*********************************** / |^|                                                 :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slMultiTerm                                       :4_3:Other "eats:
************************************* / |:| some                                        :4_3:Other "eats:
************************************** / |:| base parser                               :4_3:Other "eats:
************************************** \ |:| base parser has returned ("eats",0)        :5_3:UnDeeper:
************************************** / |:| deeper                                     :5_3:UnDeeper:
*************************************** / |:| some GoDeeper                            :5_3:UnDeeper:
************************************** / |:| noMore                                     :5_3:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                 :5_3:UnDeeper:
************************************* \ |:| some has returned (["eats"],0)               :5_3:UnDeeper:
************************************ \ slMultiTerm has returned (["eats"],0)              :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
*********************************** / |^| deeps                                            :5_3:UnDeeper:
*********************************** \ |^| deeps has returned [UnDeeper]                 :5_2:Or:
********************************** / RPConstraint                                          :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slMultiTerm                                       :4_3:Other "eats:
************************************* / |:| some                                        :4_3:Other "eats:
************************************** / |:| base parser                               :4_3:Other "eats:
************************************** \ |:| base parser has returned ("eats",0)        :5_3:UnDeeper:
************************************** / |:| deeper                                     :5_3:UnDeeper:
*************************************** / |:| some GoDeeper                            :5_3:UnDeeper:
************************************** / |:| noMore                                     :5_3:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                 :5_3:UnDeeper:
************************************* \ |:| some has returned (["eats"],0)               :5_3:UnDeeper:
************************************ \ slMultiTerm has returned (["eats"],0)              :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
*********************************** / |>| calling $>>                                      :5_3:UnDeeper:
************************************ / $>>                                                :5_3:UnDeeper:
************************************* / $>>/recurse                                      :5_3:UnDeeper:
************************************* / $>>/base                                         :5_3:UnDeeper:
********************************** / RPBoolStructR                                         :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slMultiTerm                                       :4_3:Other "eats:
************************************* / |:| some                                        :4_3:Other "eats:
************************************** / |:| base parser                               :4_3:Other "eats:
************************************** \ |:| base parser has returned ("eats",0)        :5_3:UnDeeper:
************************************** / |:| deeper                                     :5_3:UnDeeper:
*************************************** / |:| some GoDeeper                            :5_3:UnDeeper:
************************************** / |:| noMore                                     :5_3:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                 :5_3:UnDeeper:
************************************* \ |:| some has returned (["eats"],0)               :5_3:UnDeeper:
************************************ \ slMultiTerm has returned (["eats"],0)              :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
*********************************** / |>| calling $>>                                      :5_3:UnDeeper:
************************************ / $>>                                                :5_3:UnDeeper:
************************************* / $>>/recurse                                      :5_3:UnDeeper:
************************************* / $>>/base                                         :5_3:UnDeeper:
********************************** / RPMT                                                  :4_3:Other "eats:
*********************************** / $*|                                                 :4_3:Other "eats:
************************************ / slAKA                                             :4_3:Other "eats:
************************************* / $*|                                             :4_3:Other "eats:
************************************** / slAKA base                                    :4_3:Other "eats:
*************************************** / slMultiTerm                                 :4_3:Other "eats:
**************************************** / |:| some                                  :4_3:Other "eats:
***************************************** / |:| base parser                         :4_3:Other "eats:
***************************************** \ |:| base parser has returned ("eats",0)  :5_3:UnDeeper:
***************************************** / |:| deeper                               :5_3:UnDeeper:
****************************************** / |:| some GoDeeper                      :5_3:UnDeeper:
***************************************** / |:| noMore                               :5_3:UnDeeper:
***************************************** \ |:| noMore has returned ([],0)           :5_3:UnDeeper:
**************************************** \ |:| some has returned (["eats"],0)         :5_3:UnDeeper:
*************************************** \ slMultiTerm has returned (["eats"],0)        :5_3:UnDeeper:
************************************** \ slAKA base has returned (["eats"],0)           :5_3:UnDeeper:
************************************* \ $*| has returned (["eats"],0)                    :5_3:UnDeeper:
************************************* / |>>                                              :5_3:UnDeeper:
************************************** / |>>/recurse                                    :5_3:UnDeeper:
************************************** / |>>/base                                       :5_3:UnDeeper:
*************************************** / slAKA optional akapart                       :5_3:UnDeeper:
**************************************** / |?| optional something                     :5_3:UnDeeper:
***************************************** / |>>                                      :5_3:UnDeeper:
****************************************** / |>>/recurse                            :5_3:UnDeeper:
****************************************** / |>>/base                               :5_3:UnDeeper:
******************************************* / PAKA/akapart                         :5_3:UnDeeper:
******************************************** / $>|                                :5_3:UnDeeper:
********************************************* / Aka Token                        :5_3:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :5_3:UnDeeper:
*************************************** \ slAKA optional akapart has returned (Nothing,0) :5_3:UnDeeper:
*************************************** / |>>/base got Nothing                         :5_3:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)              :5_3:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                     :5_3:UnDeeper:
************************************* / |>>                                              :5_3:UnDeeper:
************************************** / |>>/recurse                                    :5_3:UnDeeper:
************************************** / |>>/base                                       :5_3:UnDeeper:
*************************************** / slAKA optional typically                     :5_3:UnDeeper:
**************************************** / |?| optional something                     :5_3:UnDeeper:
***************************************** / |>>                                      :5_3:UnDeeper:
****************************************** / |>>/recurse                            :5_3:UnDeeper:
****************************************** / |>>/base                               :5_3:UnDeeper:
******************************************* / typically                            :5_3:UnDeeper:
******************************************** / $>|                                :5_3:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :5_3:UnDeeper:
*************************************** \ slAKA optional typically has returned (Nothing,0) :5_3:UnDeeper:
*************************************** / |>>/base got Nothing                         :5_3:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)              :5_3:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                     :5_3:UnDeeper:
************************************* / slAKA: proceeding after base and entityalias are retrieved ... :5_3:UnDeeper:
************************************* / pAKA: entityalias = Nothing                      :5_3:UnDeeper:
************************************ \ slAKA has returned (["eats"],0)                    :5_3:UnDeeper:
*********************************** \ $*| has returned (["eats"],0)                        :5_3:UnDeeper:
********************************** \ RPMT has returned (RPMT ["eats"],0)                    :5_3:UnDeeper:
********************************* \ slRelPred has returned (RPMT ["eats"],0)                 :5_3:UnDeeper:
********************************* / undeepers                                                :5_3:UnDeeper:
********************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_3:UnDeeper:
********************************** / sameLine: success!                                     :5_3:UnDeeper:
********************************* \ undeepers has returned ()                                :5_3:UnDeeper:
******************************** \ pRelPred has returned RPMT ["eats"]                        :5_3:UnDeeper:
******************************* \ term p/3:plain p has returned MyLeaf (RPMT ["eats"])         :5_3:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["eats"])        :5_3:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["eats"])                       :5_3:UnDeeper:
***************************** / binary(Or)                                                       :5_3:UnDeeper:
***************************** / binary(And)                                                      :5_3:UnDeeper:
***************************** / binary(SetLess)                                                  :5_3:UnDeeper:
***************************** / binary(SetPlus)                                                  :5_3:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["eats"])          :5_3:UnDeeper:
**************************** / myindented: consuming UnDeeper                                     :5_3:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper            :5_2:Or:
*************************** \ someIndentation has returned MyLeaf (RPMT ["eats"])               :5_2:Or:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["eats"]) :5_2:Or:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["eats"])               :5_2:Or:
************************ \ term p has returned MyLeaf (RPMT ["eats"])                              :5_2:Or:
************************ / binary(Or)                                                              :5_2:Or:
************************ \ binary(Or) has returned Or                                               :5_3:GoDeeper:
************************ / term p                                                                   :5_3:GoDeeper:
************************* / term p/1a:label directly above                                         :5_3:GoDeeper:
************************** / $*|                                                                  :5_3:GoDeeper:
*************************** / |:| some                                                           :5_3:GoDeeper:
**************************** / |:| base parser                                                  :5_3:GoDeeper:
***************************** / pNumAsText                                                     :5_3:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                     :5_3:GoDeeper:
************************** / |:| some                                                             :5_3:GoDeeper:
*************************** / |:| base parser                                                    :5_3:GoDeeper:
**************************** / pNumAsText                                                       :5_3:GoDeeper:
************************* / term p/notLabelTerm                                                    :5_3:GoDeeper:
************************** / term p/2:someIndentation expr p                                      :5_3:GoDeeper:
*************************** / someIndentation                                                    :5_3:GoDeeper:
**************************** / myindented: consuming GoDeeper                                   :5_3:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper              :5_3:Other "imbi:
**************************** / manyIndentation/leaf?                                             :5_3:Other "imbi:
***************************** / term p                                                          :5_3:Other "imbi:
****************************** / term p/1a:label directly above                                :5_3:Other "imbi:
******************************* / $*|                                                         :5_3:Other "imbi:
******************************** / |:| some                                                  :5_3:Other "imbi:
********************************* / |:| base parser                                         :5_3:Other "imbi:
********************************* \ |:| base parser has returned ("imbibes",0)              :6_3:Means:
********************************* / |:| deeper                                              :6_3:Means:
********************************** / |:| some GoDeeper                                     :6_3:Means:
********************************* / |:| noMore                                              :6_3:Means:
********************************* \ |:| noMore has returned ([],0)                          :6_3:Means:
******************************** \ |:| some has returned (["imbibes"],0)                     :6_3:Means:
******************************** / pNumAsText                                                :6_3:Means:
****************************** / term p/b:label to the left of line below, with EOL            :5_3:Other "imbi:
******************************* / |:| some                                                    :5_3:Other "imbi:
******************************** / |:| base parser                                           :5_3:Other "imbi:
******************************** \ |:| base parser has returned ("imbibes",0)                :6_3:Means:
******************************** / |:| deeper                                                :6_3:Means:
********************************* / |:| some GoDeeper                                       :6_3:Means:
******************************** / |:| noMore                                                :6_3:Means:
******************************** \ |:| noMore has returned ([],0)                            :6_3:Means:
******************************* \ |:| some has returned (["imbibes"],0)                       :6_3:Means:
******************************* / undeepers                                                   :6_3:Means:
******************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :6_3:Means:
******************************** / sameLine: success!                                        :6_3:Means:
******************************* \ undeepers has returned ()                                   :6_3:Means:
******************************* / matching EOL                                                :6_3:Means:
****************************** / term p/notLabelTerm                                           :5_3:Other "imbi:
******************************* / term p/2:someIndentation expr p                             :5_3:Other "imbi:
******************************** / someIndentation                                           :5_3:Other "imbi:
********************************* / myindented: consuming GoDeeper                          :5_3:Other "imbi:
******************************* / term p/3:plain p                                            :5_3:Other "imbi:
******************************** / pRelPred                                                  :5_3:Other "imbi:
********************************* / slRelPred                                               :5_3:Other "imbi:
********************************** / nested simpleHorn                                     :5_3:Other "imbi:
*********************************** / |^|                                                 :5_3:Other "imbi:
*********************************** / $*|                                                 :5_3:Other "imbi:
************************************ / slMultiTerm                                       :5_3:Other "imbi:
************************************* / |:| some                                        :5_3:Other "imbi:
************************************** / |:| base parser                               :5_3:Other "imbi:
************************************** \ |:| base parser has returned ("imbibes",0)    :6_3:Means:
************************************** / |:| deeper                                    :6_3:Means:
*************************************** / |:| some GoDeeper                           :6_3:Means:
************************************** / |:| noMore                                    :6_3:Means:
************************************** \ |:| noMore has returned ([],0)                :6_3:Means:
************************************* \ |:| some has returned (["imbibes"],0)           :6_3:Means:
************************************ \ slMultiTerm has returned (["imbibes"],0)          :6_3:Means:
*********************************** \ $*| has returned (["imbibes"],0)                    :6_3:Means:
*********************************** / |^| deeps                                           :6_3:Means:
*********************************** \ |^| deeps has returned []                           :6_3:Means:
*********************************** / pBSR                                                 :6_4:GoDeeper:
************************************ / ppp inner                                          :6_4:GoDeeper:
************************************* / term p                                           :6_4:GoDeeper:
************************************** / term p/1a:label directly above                 :6_4:GoDeeper:
*************************************** / $*|                                          :6_4:GoDeeper:
**************************************** / |:| some                                   :6_4:GoDeeper:
***************************************** / |:| base parser                          :6_4:GoDeeper:
****************************************** / pNumAsText                             :6_4:GoDeeper:
************************************** / term p/b:label to the left of line below, with EOL :6_4:GoDeeper:
*************************************** / |:| some                                     :6_4:GoDeeper:
**************************************** / |:| base parser                            :6_4:GoDeeper:
***************************************** / pNumAsText                               :6_4:GoDeeper:
************************************** / term p/notLabelTerm                            :6_4:GoDeeper:
*************************************** / term p/2:someIndentation expr p              :6_4:GoDeeper:
**************************************** / someIndentation                            :6_4:GoDeeper:
***************************************** / myindented: consuming GoDeeper           :6_4:GoDeeper:
***************************************** \ myindented: consuming GoDeeper has returned GoDeeper :6_4:Other "drin:
***************************************** / manyIndentation/leaf?                     :6_4:Other "drin:
****************************************** / term p                                  :6_4:Other "drin:
******************************************* / term p/1a:label directly above        :6_4:Other "drin:
******************************************** / $*|                                 :6_4:Other "drin:
********************************************* / |:| some                          :6_4:Other "drin:
********************************************** / |:| base parser                 :6_4:Other "drin:
********************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
********************************************** / |:| deeper                       :7_4:UnDeeper:
*********************************************** / |:| some GoDeeper              :7_4:UnDeeper:
********************************************** / |:| noMore                       :7_4:UnDeeper:
********************************************** \ |:| noMore has returned ([],0)   :7_4:UnDeeper:
********************************************* \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
********************************************* / pNumAsText                         :7_4:UnDeeper:
******************************************* / term p/b:label to the left of line below, with EOL :6_4:Other "drin:
******************************************** / |:| some                            :6_4:Other "drin:
********************************************* / |:| base parser                   :6_4:Other "drin:
********************************************* \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
********************************************* / |:| deeper                         :7_4:UnDeeper:
********************************************** / |:| some GoDeeper                :7_4:UnDeeper:
********************************************* / |:| noMore                         :7_4:UnDeeper:
********************************************* \ |:| noMore has returned ([],0)     :7_4:UnDeeper:
******************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
******************************************** / undeepers                            :7_4:UnDeeper:
********************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_4:UnDeeper:
********************************************* / sameLine: success!                 :7_4:UnDeeper:
******************************************** \ undeepers has returned ()            :7_4:UnDeeper:
******************************************** / matching EOL                         :7_4:UnDeeper:
******************************************* / term p/notLabelTerm                   :6_4:Other "drin:
******************************************** / term p/2:someIndentation expr p     :6_4:Other "drin:
********************************************* / someIndentation                   :6_4:Other "drin:
********************************************** / myindented: consuming GoDeeper  :6_4:Other "drin:
******************************************** / term p/3:plain p                    :6_4:Other "drin:
********************************************* / pRelPred                          :6_4:Other "drin:
********************************************** / slRelPred                       :6_4:Other "drin:
*********************************************** / nested simpleHorn             :6_4:Other "drin:
************************************************ / |^|                         :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slMultiTerm               :6_4:Other "drin:
************************************************** / |:| some                :6_4:Other "drin:
*************************************************** / |:| base parser       :6_4:Other "drin:
*************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
*************************************************** / |:| deeper             :7_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :7_4:UnDeeper:
*************************************************** / |:| noMore             :7_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ / |^| deeps                    :7_4:UnDeeper:
************************************************ \ |^| deeps has returned [UnDeeper] :7_3:And:
*********************************************** / RPConstraint                  :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slMultiTerm               :6_4:Other "drin:
************************************************** / |:| some                :6_4:Other "drin:
*************************************************** / |:| base parser       :6_4:Other "drin:
*************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
*************************************************** / |:| deeper             :7_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :7_4:UnDeeper:
*************************************************** / |:| noMore             :7_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ / |>| calling $>>              :7_4:UnDeeper:
************************************************* / $>>                        :7_4:UnDeeper:
************************************************** / $>>/recurse              :7_4:UnDeeper:
************************************************** / $>>/base                 :7_4:UnDeeper:
*********************************************** / RPBoolStructR                 :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slMultiTerm               :6_4:Other "drin:
************************************************** / |:| some                :6_4:Other "drin:
*************************************************** / |:| base parser       :6_4:Other "drin:
*************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
*************************************************** / |:| deeper             :7_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :7_4:UnDeeper:
*************************************************** / |:| noMore             :7_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ / |>| calling $>>              :7_4:UnDeeper:
************************************************* / $>>                        :7_4:UnDeeper:
************************************************** / $>>/recurse              :7_4:UnDeeper:
************************************************** / $>>/base                 :7_4:UnDeeper:
*********************************************** / RPMT                          :6_4:Other "drin:
************************************************ / $*|                         :6_4:Other "drin:
************************************************* / slAKA                     :6_4:Other "drin:
************************************************** / $*|                     :6_4:Other "drin:
*************************************************** / slAKA base            :6_4:Other "drin:
**************************************************** / slMultiTerm         :6_4:Other "drin:
***************************************************** / |:| some          :6_4:Other "drin:
****************************************************** / |:| base parser :6_4:Other "drin:
****************************************************** \ |:| base parser has returned ("drinks",0) :7_4:UnDeeper:
****************************************************** / |:| deeper       :7_4:UnDeeper:
******************************************************* / |:| some GoDeeper :7_4:UnDeeper:
****************************************************** / |:| noMore       :7_4:UnDeeper:
****************************************************** \ |:| noMore has returned ([],0) :7_4:UnDeeper:
***************************************************** \ |:| some has returned (["drinks"],0) :7_4:UnDeeper:
**************************************************** \ slMultiTerm has returned (["drinks"],0) :7_4:UnDeeper:
*************************************************** \ slAKA base has returned (["drinks"],0) :7_4:UnDeeper:
************************************************** \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
************************************************** / |>>                      :7_4:UnDeeper:
*************************************************** / |>>/recurse            :7_4:UnDeeper:
*************************************************** / |>>/base               :7_4:UnDeeper:
**************************************************** / slAKA optional akapart :7_4:UnDeeper:
***************************************************** / |?| optional something :7_4:UnDeeper:
****************************************************** / |>>              :7_4:UnDeeper:
******************************************************* / |>>/recurse    :7_4:UnDeeper:
******************************************************* / |>>/base       :7_4:UnDeeper:
******************************************************** / PAKA/akapart :7_4:UnDeeper:
********************************************************* / $>|        :7_4:UnDeeper:
********************************************************** / Aka Token :7_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** \ slAKA optional akapart has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** / |>>/base got Nothing :7_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :7_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :7_4:UnDeeper:
************************************************** / |>>                      :7_4:UnDeeper:
*************************************************** / |>>/recurse            :7_4:UnDeeper:
*************************************************** / |>>/base               :7_4:UnDeeper:
**************************************************** / slAKA optional typically :7_4:UnDeeper:
***************************************************** / |?| optional something :7_4:UnDeeper:
****************************************************** / |>>              :7_4:UnDeeper:
******************************************************* / |>>/recurse    :7_4:UnDeeper:
******************************************************* / |>>/base       :7_4:UnDeeper:
******************************************************** / typically    :7_4:UnDeeper:
********************************************************* / $>|        :7_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** \ slAKA optional typically has returned (Nothing,0) :7_4:UnDeeper:
**************************************************** / |>>/base got Nothing :7_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :7_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :7_4:UnDeeper:
************************************************** / slAKA: proceeding after base and entityalias are retrieved ... :7_4:UnDeeper:
************************************************** / pAKA: entityalias = Nothing :7_4:UnDeeper:
************************************************* \ slAKA has returned (["drinks"],0) :7_4:UnDeeper:
************************************************ \ $*| has returned (["drinks"],0) :7_4:UnDeeper:
*********************************************** \ RPMT has returned (RPMT ["drinks"],0) :7_4:UnDeeper:
********************************************** \ slRelPred has returned (RPMT ["drinks"],0) :7_4:UnDeeper:
********************************************** / undeepers                        :7_4:UnDeeper:
*********************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_4:UnDeeper:
*********************************************** / sameLine: success!             :7_4:UnDeeper:
********************************************** \ undeepers has returned ()        :7_4:UnDeeper:
********************************************* \ pRelPred has returned RPMT ["drinks"] :7_4:UnDeeper:
******************************************** \ term p/3:plain p has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
******************************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
****************************************** \ term p has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
****************************************** / binary(Or)                               :7_4:UnDeeper:
****************************************** / binary(And)                              :7_4:UnDeeper:
****************************************** / binary(SetLess)                          :7_4:UnDeeper:
****************************************** / binary(SetPlus)                          :7_4:UnDeeper:
***************************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["drinks"]) :7_4:UnDeeper:
***************************************** / myindented: consuming UnDeeper             :7_4:UnDeeper:
***************************************** \ myindented: consuming UnDeeper has returned UnDeeper :7_3:And:
**************************************** \ someIndentation has returned MyLeaf (RPMT ["drinks"]) :7_3:And:
*************************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["drinks"]) :7_3:And:
************************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["drinks"]) :7_3:And:
************************************* \ term p has returned MyLeaf (RPMT ["drinks"])    :7_3:And:
************************************* / binary(Or)                                      :7_3:And:
************************************* / binary(And)                                     :7_3:And:
************************************* \ binary(And) has returned And                     :7_4:GoDeeper:
************************************* / term p                                           :7_4:GoDeeper:
************************************** / term p/1a:label directly above                 :7_4:GoDeeper:
*************************************** / $*|                                          :7_4:GoDeeper:
**************************************** / |:| some                                   :7_4:GoDeeper:
***************************************** / |:| base parser                          :7_4:GoDeeper:
****************************************** / pNumAsText                             :7_4:GoDeeper:
************************************** / term p/b:label to the left of line below, with EOL :7_4:GoDeeper:
*************************************** / |:| some                                     :7_4:GoDeeper:
**************************************** / |:| base parser                            :7_4:GoDeeper:
***************************************** / pNumAsText                               :7_4:GoDeeper:
************************************** / term p/notLabelTerm                            :7_4:GoDeeper:
*************************************** / term p/2:someIndentation expr p              :7_4:GoDeeper:
**************************************** / someIndentation                            :7_4:GoDeeper:
***************************************** / myindented: consuming GoDeeper           :7_4:GoDeeper:
***************************************** \ myindented: consuming GoDeeper has returned GoDeeper :7_4:Other "swal:
***************************************** / manyIndentation/leaf?                     :7_4:Other "swal:
****************************************** / term p                                  :7_4:Other "swal:
******************************************* / term p/1a:label directly above        :7_4:Other "swal:
******************************************** / $*|                                 :7_4:Other "swal:
********************************************* / |:| some                          :7_4:Other "swal:
********************************************** / |:| base parser                 :7_4:Other "swal:
********************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
********************************************** / |:| deeper                       :8_4:UnDeeper:
*********************************************** / |:| some GoDeeper              :8_4:UnDeeper:
********************************************** / |:| noMore                       :8_4:UnDeeper:
********************************************** \ |:| noMore has returned ([],0)   :8_4:UnDeeper:
********************************************* \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
********************************************* / pNumAsText                         :8_4:UnDeeper:
******************************************* / term p/b:label to the left of line below, with EOL :7_4:Other "swal:
******************************************** / |:| some                            :7_4:Other "swal:
********************************************* / |:| base parser                   :7_4:Other "swal:
********************************************* \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
********************************************* / |:| deeper                         :8_4:UnDeeper:
********************************************** / |:| some GoDeeper                :8_4:UnDeeper:
********************************************* / |:| noMore                         :8_4:UnDeeper:
********************************************* \ |:| noMore has returned ([],0)     :8_4:UnDeeper:
******************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
******************************************** / undeepers                            :8_4:UnDeeper:
********************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :8_4:UnDeeper:
********************************************* / sameLine: success!                 :8_4:UnDeeper:
******************************************** \ undeepers has returned ()            :8_4:UnDeeper:
******************************************** / matching EOL                         :8_4:UnDeeper:
******************************************* / term p/notLabelTerm                   :7_4:Other "swal:
******************************************** / term p/2:someIndentation expr p     :7_4:Other "swal:
********************************************* / someIndentation                   :7_4:Other "swal:
********************************************** / myindented: consuming GoDeeper  :7_4:Other "swal:
******************************************** / term p/3:plain p                    :7_4:Other "swal:
********************************************* / pRelPred                          :7_4:Other "swal:
********************************************** / slRelPred                       :7_4:Other "swal:
*********************************************** / nested simpleHorn             :7_4:Other "swal:
************************************************ / |^|                         :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slMultiTerm               :7_4:Other "swal:
************************************************** / |:| some                :7_4:Other "swal:
*************************************************** / |:| base parser       :7_4:Other "swal:
*************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
*************************************************** / |:| deeper             :8_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :8_4:UnDeeper:
*************************************************** / |:| noMore             :8_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ / |^| deeps                    :8_4:UnDeeper:
************************************************ \ |^| deeps has returned [UnDeeper] :8_3:Or:
*********************************************** / RPConstraint                  :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slMultiTerm               :7_4:Other "swal:
************************************************** / |:| some                :7_4:Other "swal:
*************************************************** / |:| base parser       :7_4:Other "swal:
*************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
*************************************************** / |:| deeper             :8_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :8_4:UnDeeper:
*************************************************** / |:| noMore             :8_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ / |>| calling $>>              :8_4:UnDeeper:
************************************************* / $>>                        :8_4:UnDeeper:
************************************************** / $>>/recurse              :8_4:UnDeeper:
************************************************** / $>>/base                 :8_4:UnDeeper:
*********************************************** / RPBoolStructR                 :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slMultiTerm               :7_4:Other "swal:
************************************************** / |:| some                :7_4:Other "swal:
*************************************************** / |:| base parser       :7_4:Other "swal:
*************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
*************************************************** / |:| deeper             :8_4:UnDeeper:
**************************************************** / |:| some GoDeeper    :8_4:UnDeeper:
*************************************************** / |:| noMore             :8_4:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
************************************************* \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ / |>| calling $>>              :8_4:UnDeeper:
************************************************* / $>>                        :8_4:UnDeeper:
************************************************** / $>>/recurse              :8_4:UnDeeper:
************************************************** / $>>/base                 :8_4:UnDeeper:
*********************************************** / RPMT                          :7_4:Other "swal:
************************************************ / $*|                         :7_4:Other "swal:
************************************************* / slAKA                     :7_4:Other "swal:
************************************************** / $*|                     :7_4:Other "swal:
*************************************************** / slAKA base            :7_4:Other "swal:
**************************************************** / slMultiTerm         :7_4:Other "swal:
***************************************************** / |:| some          :7_4:Other "swal:
****************************************************** / |:| base parser :7_4:Other "swal:
****************************************************** \ |:| base parser has returned ("swallows",0) :8_4:UnDeeper:
****************************************************** / |:| deeper       :8_4:UnDeeper:
******************************************************* / |:| some GoDeeper :8_4:UnDeeper:
****************************************************** / |:| noMore       :8_4:UnDeeper:
****************************************************** \ |:| noMore has returned ([],0) :8_4:UnDeeper:
***************************************************** \ |:| some has returned (["swallows"],0) :8_4:UnDeeper:
**************************************************** \ slMultiTerm has returned (["swallows"],0) :8_4:UnDeeper:
*************************************************** \ slAKA base has returned (["swallows"],0) :8_4:UnDeeper:
************************************************** \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
************************************************** / |>>                      :8_4:UnDeeper:
*************************************************** / |>>/recurse            :8_4:UnDeeper:
*************************************************** / |>>/base               :8_4:UnDeeper:
**************************************************** / slAKA optional akapart :8_4:UnDeeper:
***************************************************** / |?| optional something :8_4:UnDeeper:
****************************************************** / |>>              :8_4:UnDeeper:
******************************************************* / |>>/recurse    :8_4:UnDeeper:
******************************************************* / |>>/base       :8_4:UnDeeper:
******************************************************** / PAKA/akapart :8_4:UnDeeper:
********************************************************* / $>|        :8_4:UnDeeper:
********************************************************** / Aka Token :8_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** \ slAKA optional akapart has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** / |>>/base got Nothing :8_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :8_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :8_4:UnDeeper:
************************************************** / |>>                      :8_4:UnDeeper:
*************************************************** / |>>/recurse            :8_4:UnDeeper:
*************************************************** / |>>/base               :8_4:UnDeeper:
**************************************************** / slAKA optional typically :8_4:UnDeeper:
***************************************************** / |?| optional something :8_4:UnDeeper:
****************************************************** / |>>              :8_4:UnDeeper:
******************************************************* / |>>/recurse    :8_4:UnDeeper:
******************************************************* / |>>/base       :8_4:UnDeeper:
******************************************************** / typically    :8_4:UnDeeper:
********************************************************* / $>|        :8_4:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** \ slAKA optional typically has returned (Nothing,0) :8_4:UnDeeper:
**************************************************** / |>>/base got Nothing :8_4:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :8_4:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :8_4:UnDeeper:
************************************************** / slAKA: proceeding after base and entityalias are retrieved ... :8_4:UnDeeper:
************************************************** / pAKA: entityalias = Nothing :8_4:UnDeeper:
************************************************* \ slAKA has returned (["swallows"],0) :8_4:UnDeeper:
************************************************ \ $*| has returned (["swallows"],0) :8_4:UnDeeper:
*********************************************** \ RPMT has returned (RPMT ["swallows"],0) :8_4:UnDeeper:
********************************************** \ slRelPred has returned (RPMT ["swallows"],0) :8_4:UnDeeper:
********************************************** / undeepers                        :8_4:UnDeeper:
*********************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :8_4:UnDeeper:
*********************************************** / sameLine: success!             :8_4:UnDeeper:
********************************************** \ undeepers has returned ()        :8_4:UnDeeper:
********************************************* \ pRelPred has returned RPMT ["swallows"] :8_4:UnDeeper:
******************************************** \ term p/3:plain p has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
******************************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
****************************************** \ term p has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
****************************************** / binary(Or)                               :8_4:UnDeeper:
****************************************** / binary(And)                              :8_4:UnDeeper:
****************************************** / binary(SetLess)                          :8_4:UnDeeper:
****************************************** / binary(SetPlus)                          :8_4:UnDeeper:
***************************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["swallows"]) :8_4:UnDeeper:
***************************************** / myindented: consuming UnDeeper             :8_4:UnDeeper:
***************************************** \ myindented: consuming UnDeeper has returned UnDeeper :8_3:Or:
**************************************** \ someIndentation has returned MyLeaf (RPMT ["swallows"]) :8_3:Or:
*************************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["swallows"]) :8_3:Or:
************************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["swallows"]) :8_3:Or:
************************************* \ term p has returned MyLeaf (RPMT ["swallows"])  :8_3:Or:
************************************* / binary(Or)                                      :8_3:Or:
************************************* \ binary(Or) has returned Or                       :8_4:GoDeeper:
************************************* / term p                                           :8_4:GoDeeper:
************************************** / term p/1a:label directly above                 :8_4:GoDeeper:
*************************************** / $*|                                          :8_4:GoDeeper:
**************************************** / |:| some                                   :8_4:GoDeeper:
***************************************** / |:| base parser                          :8_4:GoDeeper:
****************************************** / pNumAsText                             :8_4:GoDeeper:
************************************** / term p/b:label to the left of line below, with EOL :8_4:GoDeeper:
*************************************** / |:| some                                     :8_4:GoDeeper:
**************************************** / |:| base parser                            :8_4:GoDeeper:
***************************************** / pNumAsText                               :8_4:GoDeeper:
************************************** / term p/notLabelTerm                            :8_4:GoDeeper:
*************************************** / term p/2:someIndentation expr p              :8_4:GoDeeper:
**************************************** / someIndentation                            :8_4:GoDeeper:
***************************************** / myindented: consuming GoDeeper           :8_4:GoDeeper:
***************************************** \ myindented: consuming GoDeeper has returned GoDeeper :8_4:Other "spit:
***************************************** / manyIndentation/leaf?                     :8_4:Other "spit:
****************************************** / term p                                  :8_4:Other "spit:
******************************************* / term p/1a:label directly above        :8_4:Other "spit:
******************************************** / $*|                                 :8_4:Other "spit:
********************************************* / |:| some                          :8_4:Other "spit:
********************************************** / |:| base parser                 :8_4:Other "spit:
********************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
********************************************** / |:| deeper                   :9_2:UnDeeper:
*********************************************** / |:| some GoDeeper          :9_2:UnDeeper:
********************************************** / |:| noMore                   :9_2:UnDeeper:
********************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
********************************************* \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
********************************************* / pNumAsText                     :9_2:UnDeeper:
******************************************* / term p/b:label to the left of line below, with EOL :8_4:Other "spit:
******************************************** / |:| some                            :8_4:Other "spit:
********************************************* / |:| base parser                   :8_4:Other "spit:
********************************************* \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
********************************************* / |:| deeper                     :9_2:UnDeeper:
********************************************** / |:| some GoDeeper            :9_2:UnDeeper:
********************************************* / |:| noMore                     :9_2:UnDeeper:
********************************************* \ |:| noMore has returned ([],0) :9_2:UnDeeper:
******************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
******************************************** / undeepers                        :9_2:UnDeeper:
********************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :9_2:UnDeeper:
********************************************* / sameLine: success!             :9_2:UnDeeper:
******************************************** \ undeepers has returned ()        :9_2:UnDeeper:
******************************************** / matching EOL                     :9_2:UnDeeper:
******************************************* / term p/notLabelTerm                   :8_4:Other "spit:
******************************************** / term p/2:someIndentation expr p     :8_4:Other "spit:
********************************************* / someIndentation                   :8_4:Other "spit:
********************************************** / myindented: consuming GoDeeper  :8_4:Other "spit:
******************************************** / term p/3:plain p                    :8_4:Other "spit:
********************************************* / pRelPred                          :8_4:Other "spit:
********************************************** / slRelPred                       :8_4:Other "spit:
*********************************************** / nested simpleHorn             :8_4:Other "spit:
************************************************ / |^|                         :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slMultiTerm               :8_4:Other "spit:
************************************************** / |:| some                :8_4:Other "spit:
*************************************************** / |:| base parser       :8_4:Other "spit:
*************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
*************************************************** / |:| deeper         :9_2:UnDeeper:
**************************************************** / |:| some GoDeeper :9_2:UnDeeper:
*************************************************** / |:| noMore         :9_2:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
************************************************* \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************ / |^| deeps                :9_2:UnDeeper:
************************************************ \ |^| deeps has returned [UnDeeper,UnDeeper,UnDeeper] :9_1:Must:
*********************************************** / RPConstraint                  :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slMultiTerm               :8_4:Other "spit:
************************************************** / |:| some                :8_4:Other "spit:
*************************************************** / |:| base parser       :8_4:Other "spit:
*************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
*************************************************** / |:| deeper         :9_2:UnDeeper:
**************************************************** / |:| some GoDeeper :9_2:UnDeeper:
*************************************************** / |:| noMore         :9_2:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
************************************************* \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************ / |>| calling $>>          :9_2:UnDeeper:
************************************************* / $>>                    :9_2:UnDeeper:
************************************************** / $>>/recurse          :9_2:UnDeeper:
************************************************** / $>>/base             :9_2:UnDeeper:
*********************************************** / RPBoolStructR                 :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slMultiTerm               :8_4:Other "spit:
************************************************** / |:| some                :8_4:Other "spit:
*************************************************** / |:| base parser       :8_4:Other "spit:
*************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
*************************************************** / |:| deeper         :9_2:UnDeeper:
**************************************************** / |:| some GoDeeper :9_2:UnDeeper:
*************************************************** / |:| noMore         :9_2:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
************************************************* \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************ / |>| calling $>>          :9_2:UnDeeper:
************************************************* / $>>                    :9_2:UnDeeper:
************************************************** / $>>/recurse          :9_2:UnDeeper:
************************************************** / $>>/base             :9_2:UnDeeper:
*********************************************** / RPMT                          :8_4:Other "spit:
************************************************ / $*|                         :8_4:Other "spit:
************************************************* / slAKA                     :8_4:Other "spit:
************************************************** / $*|                     :8_4:Other "spit:
*************************************************** / slAKA base            :8_4:Other "spit:
**************************************************** / slMultiTerm         :8_4:Other "spit:
***************************************************** / |:| some          :8_4:Other "spit:
****************************************************** / |:| base parser :8_4:Other "spit:
****************************************************** \ |:| base parser has returned ("spits",0) :9_2:UnDeeper:
****************************************************** / |:| deeper   :9_2:UnDeeper:
******************************************************* / |:| some GoDeeper :9_2:UnDeeper:
****************************************************** / |:| noMore   :9_2:UnDeeper:
****************************************************** \ |:| noMore has returned ([],0) :9_2:UnDeeper:
***************************************************** \ |:| some has returned (["spits"],0) :9_2:UnDeeper:
**************************************************** \ slMultiTerm has returned (["spits"],0) :9_2:UnDeeper:
*************************************************** \ slAKA base has returned (["spits"],0) :9_2:UnDeeper:
************************************************** \ $*| has returned (["spits"],0) :9_2:UnDeeper:
************************************************** / |>>                  :9_2:UnDeeper:
*************************************************** / |>>/recurse        :9_2:UnDeeper:
*************************************************** / |>>/base           :9_2:UnDeeper:
**************************************************** / slAKA optional akapart :9_2:UnDeeper:
***************************************************** / |?| optional something :9_2:UnDeeper:
****************************************************** / |>>          :9_2:UnDeeper:
******************************************************* / |>>/recurse :9_2:UnDeeper:
******************************************************* / |>>/base   :9_2:UnDeeper:
******************************************************** / PAKA/akapart :9_2:UnDeeper:
********************************************************* / $>|    :9_2:UnDeeper:
********************************************************** / Aka Token :9_2:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** \ slAKA optional akapart has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** / |>>/base got Nothing :9_2:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :9_2:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :9_2:UnDeeper:
************************************************** / |>>                  :9_2:UnDeeper:
*************************************************** / |>>/recurse        :9_2:UnDeeper:
*************************************************** / |>>/base           :9_2:UnDeeper:
**************************************************** / slAKA optional typically :9_2:UnDeeper:
***************************************************** / |?| optional something :9_2:UnDeeper:
****************************************************** / |>>          :9_2:UnDeeper:
******************************************************* / |>>/recurse :9_2:UnDeeper:
******************************************************* / |>>/base   :9_2:UnDeeper:
******************************************************** / typically :9_2:UnDeeper:
********************************************************* / $>|    :9_2:UnDeeper:
***************************************************** \ |?| optional something has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** \ slAKA optional typically has returned (Nothing,0) :9_2:UnDeeper:
**************************************************** / |>>/base got Nothing :9_2:UnDeeper:
*************************************************** \ |>>/base has returned (Nothing,0) :9_2:UnDeeper:
************************************************** \ |>> has returned (Nothing,0) :9_2:UnDeeper:
************************************************** / slAKA: proceeding after base and entityalias are retrieved ... :9_2:UnDeeper:
************************************************** / pAKA: entityalias = Nothing :9_2:UnDeeper:
************************************************* \ slAKA has returned (["spits"],0) :9_2:UnDeeper:
************************************************ \ $*| has returned (["spits"],0) :9_2:UnDeeper:
*********************************************** \ RPMT has returned (RPMT ["spits"],0) :9_2:UnDeeper:
********************************************** \ slRelPred has returned (RPMT ["spits"],0) :9_2:UnDeeper:
********************************************** / undeepers                    :9_2:UnDeeper:
*********************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :9_2:UnDeeper:
*********************************************** / sameLine: success!         :9_2:UnDeeper:
********************************************** \ undeepers has returned ()    :9_2:UnDeeper:
********************************************* \ pRelPred has returned RPMT ["spits"] :9_2:UnDeeper:
******************************************** \ term p/3:plain p has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
******************************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
****************************************** \ term p has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
****************************************** / binary(Or)                           :9_2:UnDeeper:
****************************************** / binary(And)                          :9_2:UnDeeper:
****************************************** / binary(SetLess)                      :9_2:UnDeeper:
****************************************** / binary(SetPlus)                      :9_2:UnDeeper:
***************************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["spits"]) :9_2:UnDeeper:
***************************************** / myindented: consuming UnDeeper         :9_2:UnDeeper:
***************************************** \ myindented: consuming UnDeeper has returned UnDeeper :9_3:UnDeeper:
**************************************** \ someIndentation has returned MyLeaf (RPMT ["spits"]) :9_3:UnDeeper:
*************************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["spits"]) :9_3:UnDeeper:
************************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["spits"]) :9_3:UnDeeper:
************************************* \ term p has returned MyLeaf (RPMT ["spits"])      :9_3:UnDeeper:
************************************* / binary(Or)                                       :9_3:UnDeeper:
************************************* / binary(And)                                      :9_3:UnDeeper:
************************************* / binary(SetLess)                                  :9_3:UnDeeper:
************************************* / binary(SetPlus)                                  :9_3:UnDeeper:
************************************ \ ppp inner has returned All Nothing [Leaf (RPMT ["drinks"]),Any Nothing [Leaf (RPMT ["swallows"]),Leaf (RPMT ["spits"])]] :9_3:UnDeeper:
*********************************** \ pBSR has returned All Nothing [Leaf (RPMT ["drinks"]),Any Nothing [Leaf (RPMT ["swallows"]),Leaf (RPMT ["spits"])]] :9_3:UnDeeper:
*********************************** / constructed simpleHorn; running tellIdFirst          :9_3:UnDeeper:
********************************** \ nested simpleHorn has returned (RPMT ["imbibes"],0)    :9_3:UnDeeper:
********************************* \ slRelPred has returned (RPMT ["imbibes"],0)              :9_3:UnDeeper:
********************************* / undeepers                                                :9_3:UnDeeper:
********************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :9_3:UnDeeper:
********************************** / sameLine: success!                                     :9_3:UnDeeper:
********************************* \ undeepers has returned ()                                :9_3:UnDeeper:
******************************** \ pRelPred has returned RPMT ["imbibes"]                     :9_3:UnDeeper:
******************************* \ term p/3:plain p has returned MyLeaf (RPMT ["imbibes"])      :9_3:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["imbibes"])     :9_3:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["imbibes"])                    :9_3:UnDeeper:
***************************** / binary(Or)                                                       :9_3:UnDeeper:
***************************** / binary(And)                                                      :9_3:UnDeeper:
***************************** / binary(SetLess)                                                  :9_3:UnDeeper:
***************************** / binary(SetPlus)                                                  :9_3:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["imbibes"])       :9_3:UnDeeper:
**************************** / myindented: consuming UnDeeper                                     :9_3:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                 :9_4:UnDeeper:
*************************** \ someIndentation has returned MyLeaf (RPMT ["imbibes"])                 :9_4:UnDeeper:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["imbibes"])   :9_4:UnDeeper:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["imbibes"])                 :9_4:UnDeeper:
************************ \ term p has returned MyLeaf (RPMT ["imbibes"])                                :9_4:UnDeeper:
************************ / binary(Or)                                                                   :9_4:UnDeeper:
************************ / binary(And)                                                                  :9_4:UnDeeper:
************************ / binary(SetLess)                                                              :9_4:UnDeeper:
************************ / binary(SetPlus)                                                              :9_4:UnDeeper:
*********************** \ ppp inner has returned Any Nothing [Leaf (RPMT ["eats"]),Leaf (RPMT ["imbibes"])] :9_4:UnDeeper:
********************** \ pBSR has returned Any Nothing [Leaf (RPMT ["eats"]),Leaf (RPMT ["imbibes"])]     :9_4:UnDeeper:
********************** / constructed simpleHorn; running tellIdFirst                                      :9_4:UnDeeper:
********************* \ nested simpleHorn has returned (RPMT ["degustates"],0)                             :9_4:UnDeeper:
******************** \ slRelPred has returned (RPMT ["degustates"],0)                                       :9_4:UnDeeper:
******************** / undeepers                                                                            :9_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers             :9_4:UnDeeper:
********************* / sameLine: success!                                                                 :9_4:UnDeeper:
******************** \ undeepers has returned ()                                                            :9_4:UnDeeper:
******************* \ pRelPred has returned RPMT ["degustates"]                                              :9_4:UnDeeper:
****************** \ term p/3:plain p has returned MyLeaf (RPMT ["degustates"])                               :9_4:UnDeeper:
***************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["degustates"])                              :9_4:UnDeeper:
**************** \ term p has returned MyLeaf (RPMT ["degustates"])                                             :9_4:UnDeeper:
**************** / binary(Or)                                                                                   :9_4:UnDeeper:
**************** / binary(And)                                                                                  :9_4:UnDeeper:
**************** / binary(SetLess)                                                                              :9_4:UnDeeper:
**************** / binary(SetPlus)                                                                              :9_4:UnDeeper:
*************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["degustates"])                                :9_4:UnDeeper:
*************** / myindented: consuming UnDeeper                                                                 :9_4:UnDeeper:
*************** \ myindented: consuming UnDeeper has returned UnDeeper                                    :9_1:Must:
************** \ someIndentation has returned MyLeaf (RPMT ["degustates"])                                 :9_1:Must:
************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["degustates"])                   :9_1:Must:
************ \ term p/notLabelTerm has returned MyLeaf (RPMT ["degustates"])                                 :9_1:Must:
*********** \ term p has returned MyLeaf (RPMT ["degustates"])                                                :9_1:Must:
*********** / binary(Or)                                                                                      :9_1:Must:
*********** / binary(And)                                                                                     :9_1:Must:
*********** / binary(SetLess)                                                                                 :9_1:Must:
*********** / binary(SetPlus)                                                                                 :9_1:Must:
********** \ ppp inner has returned All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]             :9_1:Must:
********* \ pBSR has returned All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]                    :9_1:Must:
******** \ preambleBoolStructR [Who,Which,Whose] has returned (Who,All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]) :9_1:Must:
******* \ manyIndentation/leaf? has returned (Who,All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]) :9_1:Must:
******* / WHERE                                                                                                   :9_1:Must:
******* / preambleParamText:[Having]                                                                              :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******* / preambleParamText:[Given]                                                                               :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******* / preambleParamText:[Upon]                                                                                :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******* / preambleBoolStructR [Unless]                                                                            :9_1:Must:
******* / preambleBoolStructR [When,If]                                                                           :9_1:Must:
******* / pTemporal/eventually                                                                                    :9_1:Must:
******* / pTemporal/specifically                                                                                  :9_1:Must:
******** / $>|                                                                                                   :9_1:Must:
******* / pTemporal/vaguely                                                                                       :9_1:Must:
******* / pDA                                                                                                     :9_1:Must:
******** / pAction calling dBoolStructP                                                                           :9_2:GoDeeper:
********* / dBoolStructP calling exprP                                                                           :9_2:GoDeeper:
********** / expr pParamText                                                                                    :9_2:GoDeeper:
*********** / term p                                                                                           :9_2:GoDeeper:
************ / term p/1a:label directly above                                                                 :9_2:GoDeeper:
************* / $*|                                                                                          :9_2:GoDeeper:
************** / |:| some                                                                                   :9_2:GoDeeper:
*************** / |:| base parser                                                                          :9_2:GoDeeper:
**************** / pNumAsText                                                                             :9_2:GoDeeper:
************ / term p/b:label to the left of line below, with EOL                                             :9_2:GoDeeper:
************* / |:| some                                                                                     :9_2:GoDeeper:
************** / |:| base parser                                                                            :9_2:GoDeeper:
*************** / pNumAsText                                                                               :9_2:GoDeeper:
************ / term p/notLabelTerm                                                                            :9_2:GoDeeper:
************* / term p/2:someIndentation expr p                                                              :9_2:GoDeeper:
************** / someIndentation                                                                            :9_2:GoDeeper:
*************** / myindented: consuming GoDeeper                                                           :9_2:GoDeeper:
*************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :9_2:Other "sing:
*************** / manyIndentation/leaf?                                                                     :9_2:Other "sing:
**************** / term p                                                                                  :9_2:Other "sing:
***************** / term p/1a:label directly above                                                        :9_2:Other "sing:
****************** / $*|                                                                                 :9_2:Other "sing:
******************* / |:| some                                                                          :9_2:Other "sing:
******************** / |:| base parser                                                                 :9_2:Other "sing:
******************** \ |:| base parser has returned ("sing",0)                                          :1_2:UnDeeper:
******************** / |:| deeper                                                                       :1_2:UnDeeper:
********************* / |:| some GoDeeper                                                              :1_2:UnDeeper:
******************** / |:| noMore                                                                       :1_2:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                   :1_2:UnDeeper:
******************* \ |:| some has returned (["sing"],0)                                                 :1_2:UnDeeper:
******************* / pNumAsText                                                                         :1_2:UnDeeper:
***************** / term p/b:label to the left of line below, with EOL                                    :9_2:Other "sing:
****************** / |:| some                                                                            :9_2:Other "sing:
******************* / |:| base parser                                                                   :9_2:Other "sing:
******************* \ |:| base parser has returned ("sing",0)                                            :1_2:UnDeeper:
******************* / |:| deeper                                                                         :1_2:UnDeeper:
******************** / |:| some GoDeeper                                                                :1_2:UnDeeper:
******************* / |:| noMore                                                                         :1_2:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                     :1_2:UnDeeper:
****************** \ |:| some has returned (["sing"],0)                                                   :1_2:UnDeeper:
****************** / undeepers                                                                            :1_2:UnDeeper:
******************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers             :1_2:UnDeeper:
******************* / sameLine: success!                                                                 :1_2:UnDeeper:
****************** \ undeepers has returned ()                                                            :1_2:UnDeeper:
****************** / matching EOL                                                                         :1_2:UnDeeper:
***************** / term p/notLabelTerm                                                                   :9_2:Other "sing:
****************** / term p/2:someIndentation expr p                                                     :9_2:Other "sing:
******************* / someIndentation                                                                   :9_2:Other "sing:
******************** / myindented: consuming GoDeeper                                                  :9_2:Other "sing:
****************** / term p/3:plain p                                                                    :9_2:Other "sing:
******************* / pParamText                                                                        :9_2:Other "sing:
******************** / pParamText(flat) first line: pKeyValues                                         :9_2:Other "sing:
********************* / pKeyValuesAka                                                                 :9_2:Other "sing:
********************** / slAKA                                                                       :9_2:Other "sing:
*********************** / $*|                                                                       :9_2:Other "sing:
************************ / slAKA base                                                              :9_2:Other "sing:
************************* / slKeyValues                                                           :9_2:Other "sing:
************************** / $*|                                                                 :9_2:Other "sing:
*************************** / |:| some                                                          :9_2:Other "sing:
**************************** / |:| base parser                                                 :9_2:Other "sing:
**************************** \ |:| base parser has returned ("sing",0)                          :1_2:UnDeeper:
**************************** / |:| deeper                                                       :1_2:UnDeeper:
***************************** / |:| some GoDeeper                                              :1_2:UnDeeper:
**************************** / |:| noMore                                                       :1_2:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                   :1_2:UnDeeper:
*************************** \ |:| some has returned (["sing"],0)                                 :1_2:UnDeeper:
************************** \ $*| has returned (["sing"],0)                                        :1_2:UnDeeper:
************************** / |>>                                                                  :1_2:UnDeeper:
*************************** / |>>/recurse                                                        :1_2:UnDeeper:
*************************** / |>>/base                                                           :1_2:UnDeeper:
**************************** / |?| optional something                                           :1_2:UnDeeper:
***************************** / |>>                                                            :1_2:UnDeeper:
****************************** / |>>/recurse                                                  :1_2:UnDeeper:
****************************** / |>>/base                                                     :1_2:UnDeeper:
******************************* / slTypeSig                                                  :1_2:UnDeeper:
******************************** / $>|                                                      :1_2:UnDeeper:
**************************** \ |?| optional something has returned (Nothing,0)                  :1_2:UnDeeper:
**************************** / |>>/base got Nothing                                             :1_2:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                  :1_2:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                         :1_2:UnDeeper:
************************* \ slKeyValues has returned (("sing" :| [],Nothing),0)                    :1_2:UnDeeper:
************************ \ slAKA base has returned (("sing" :| [],Nothing),0)                       :1_2:UnDeeper:
*********************** \ $*| has returned (("sing" :| [],Nothing),0)                                :1_2:UnDeeper:
*********************** / |>>                                                                        :1_2:UnDeeper:
************************ / |>>/recurse                                                              :1_2:UnDeeper:
************************ / |>>/base                                                                 :1_2:UnDeeper:
************************* / slAKA optional akapart                                                 :1_2:UnDeeper:
************************** / |?| optional something                                               :1_2:UnDeeper:
*************************** / |>>                                                                :1_2:UnDeeper:
**************************** / |>>/recurse                                                      :1_2:UnDeeper:
**************************** / |>>/base                                                         :1_2:UnDeeper:
***************************** / PAKA/akapart                                                   :1_2:UnDeeper:
****************************** / $>|                                                          :1_2:UnDeeper:
******************************* / Aka Token                                                  :1_2:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                      :1_2:UnDeeper:
************************* \ slAKA optional akapart has returned (Nothing,0)                        :1_2:UnDeeper:
************************* / |>>/base got Nothing                                                   :1_2:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                        :1_2:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                               :1_2:UnDeeper:
*********************** / |>>                                                                        :1_2:UnDeeper:
************************ / |>>/recurse                                                              :1_2:UnDeeper:
************************ / |>>/base                                                                 :1_2:UnDeeper:
************************* / slAKA optional typically                                               :1_2:UnDeeper:
************************** / |?| optional something                                               :1_2:UnDeeper:
*************************** / |>>                                                                :1_2:UnDeeper:
**************************** / |>>/recurse                                                      :1_2:UnDeeper:
**************************** / |>>/base                                                         :1_2:UnDeeper:
***************************** / typically                                                      :1_2:UnDeeper:
****************************** / $>|                                                          :1_2:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                      :1_2:UnDeeper:
************************* \ slAKA optional typically has returned (Nothing,0)                      :1_2:UnDeeper:
************************* / |>>/base got Nothing                                                   :1_2:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                        :1_2:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                               :1_2:UnDeeper:
*********************** / slAKA: proceeding after base and entityalias are retrieved ...             :1_2:UnDeeper:
*********************** / pAKA: entityalias = Nothing                                                :1_2:UnDeeper:
********************** \ slAKA has returned (("sing" :| [],Nothing),0)                                :1_2:UnDeeper:
********************** / undeepers                                                                    :1_2:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers     :1_2:UnDeeper:
*********************** / sameLine: success!                                                         :1_2:UnDeeper:
********************** \ undeepers has returned ()                                                    :1_2:UnDeeper:
********************* \ pKeyValuesAka has returned ("sing" :| [],Nothing)                              :1_2:UnDeeper:
******************** \ pParamText(flat) first line: pKeyValues has returned ("sing" :| [],Nothing)      :1_2:UnDeeper:
******************** / pParamText(flat) subsequent lines: sameMany pKeyValues                           :1_2:UnDeeper:
********************* / manyIndentation/leaf?                                                          :1_2:UnDeeper:
********************** / sameMany                                                                     :1_2:UnDeeper:
*********************** / pKeyValuesAka                                                              :1_2:UnDeeper:
************************ / slAKA                                                                    :1_2:UnDeeper:
************************* / $*|                                                                    :1_2:UnDeeper:
************************** / slAKA base                                                           :1_2:UnDeeper:
*************************** / slKeyValues                                                        :1_2:UnDeeper:
**************************** / $*|                                                              :1_2:UnDeeper:
***************************** / |:| some                                                       :1_2:UnDeeper:
****************************** / |:| base parser                                              :1_2:UnDeeper:
******************************* / pNumAsText                                                 :1_2:UnDeeper:
********************** \ sameMany has returned []                                                     :1_2:UnDeeper:
********************* \ manyIndentation/leaf? has returned []                                          :1_2:UnDeeper:
******************** \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned []           :1_2:UnDeeper:
******************* \ pParamText has returned ("sing" :| [],Nothing) :| []                               :1_2:UnDeeper:
****************** \ term p/3:plain p has returned MyLeaf (("sing" :| [],Nothing) :| [])                  :1_2:UnDeeper:
***************** \ term p/notLabelTerm has returned MyLeaf (("sing" :| [],Nothing) :| [])                 :1_2:UnDeeper:
**************** \ term p has returned MyLeaf (("sing" :| [],Nothing) :| [])                                :1_2:UnDeeper:
**************** / binary(Or)                                                                               :1_2:UnDeeper:
**************** / binary(And)                                                                              :1_2:UnDeeper:
**************** / binary(SetLess)                                                                          :1_2:UnDeeper:
**************** / binary(SetPlus)                                                                          :1_2:UnDeeper:
*************** \ manyIndentation/leaf? has returned MyLeaf (("sing" :| [],Nothing) :| [])                   :1_2:UnDeeper:
*************** / myindented: consuming UnDeeper                                                             :1_2:UnDeeper:
*************** \ myindented: consuming UnDeeper has returned UnDeeper                                  :EOF:
************** \ someIndentation has returned MyLeaf (("sing" :| [],Nothing) :| [])                      :EOF:
************* \ term p/2:someIndentation expr p has returned MyLeaf (("sing" :| [],Nothing) :| [])        :EOF:
************ \ term p/notLabelTerm has returned MyLeaf (("sing" :| [],Nothing) :| [])                      :EOF:
*********** \ term p has returned MyLeaf (("sing" :| [],Nothing) :| [])                                     :EOF:
*********** / binary(Or)                                                                                    :EOF:
*********** / binary(And)                                                                                   :EOF:
*********** / binary(SetLess)                                                                               :EOF:
*********** / binary(SetPlus)                                                                               :EOF:
********** \ expr pParamText has returned MyLeaf (("sing" :| [],Nothing) :| [])                              :EOF:
********* \ dBoolStructP calling exprP has returned Leaf (("sing" :| [],Nothing) :| [])                       :EOF:
******** \ pAction calling dBoolStructP has returned Leaf (("sing" :| [],Nothing) :| [])                       :EOF:
******* \ pDA has returned (DMust,Leaf (("sing" :| [],Nothing) :| []))                                          :EOF:
******* / WHERE                                                                                                 :EOF:
******* / preambleParamText:[Having]                                                                            :EOF:
******** / $>|                                                                                                 :EOF:
******* / preambleParamText:[Given]                                                                             :EOF:
******** / $>|                                                                                                 :EOF:
******* / preambleParamText:[Upon]                                                                              :EOF:
******** / $>|                                                                                                 :EOF:
******* / preambleBoolStructR [Unless]                                                                          :EOF:
******* / preambleBoolStructR [When,If]                                                                         :EOF:
******* / pTemporal/eventually                                                                                  :EOF:
******* / pTemporal/specifically                                                                                :EOF:
******** / $>|                                                                                                 :EOF:
******* / pTemporal/vaguely                                                                                     :EOF:
****** \ regulative permutation with deontic-action has returned RuleBody {rbaction = Leaf (("sing" :| [],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMust, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (Every,Leaf (("person" :| [],Nothing) :| [])), rbwho = Just (Who,All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), rbwhere = []} :EOF:
***** \ permutationsReg has returned RuleBody {rbaction = Leaf (("sing" :| [],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMust, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (Every,Leaf (("person" :| [],Nothing) :| [])), rbwho = Just (Who,All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), rbwhere = []} :EOF:
***** / pHenceLest-Hence                                                                                          :EOF:
***** / pHenceLest-Lest                                                                                           :EOF:
****   pRegRuleNormal: permutations returned rulebody RuleBody {rbaction = Leaf (("sing" :| [],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMust, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (Every,Leaf (("person" :| [],Nothing) :| [])), rbwho = Just (Who,All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), rbwhere = []} :EOF:
****   pRegRuleNormal: the positive preamble is Nothing                                                           :EOF:
****   pRegRuleNormal: the negative preamble is Nothing                                                           :EOF:
****   pRegRuleNormal: returning Regulative {subj = Leaf (("person" :| [],Nothing) :| []), keyword = Every, who = Just (All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), cond = Nothing, deontic = DMust, action = Leaf (("sing" :| [],Nothing) :| []), temporal = Nothing, hence = Nothing, lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Nothing, upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []} :EOF:
**** \ pRegRuleNormal has returned Regulative {subj = Leaf (("person" :| [],Nothing) :| []), keyword = Every, who = Just (All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), cond = Nothing, deontic = DMust, action = Leaf (("sing" :| [],Nothing) :| []), temporal = Nothing, hence = Nothing, lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Nothing, upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []} :EOF:
*** \ pRegRule has returned Regulative {subj = Leaf (("person" :| [],Nothing) :| []), keyword = Every, who = Just (All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), cond = Nothing, deontic = DMust, action = Leaf (("sing" :| [],Nothing) :| []), temporal = Nothing, hence = Nothing, lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Nothing, upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []} :EOF:
** \ pRule has returned Regulative {subj = Leaf (("person" :| [],Nothing) :| []), keyword = Every, who = Just (All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), cond = Nothing, deontic = DMust, action = Leaf (("sing" :| [],Nothing) :| []), temporal = Nothing, hence = Nothing, lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 1, version = Nothing}), upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []} :EOF:
** / pRule                                                                                                           :EOF:
* final
:PROPERTIES:
:VISIBILITY: all
:END:


megaparsing
  indented-3 FAILED [1]

Failures:

  test/Spec.hs:120:3: 
  1) megaparsing indented-3
       expected: [[Regulative {subj = Leaf (("person" :| [],Nothing) :| []), keyword = Every, who = Just (All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), cond = Nothing, deontic = DMust, action = Leaf (("sing" :| [],Nothing) :| []), temporal = Nothing, hence = Nothing, lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 1, version = Nothing}), upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []},Hornlike {name = ["degustates"], keyword = Means, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPMT ["degustates"], hBody = Just (Any Nothing [Leaf (RPMT ["eats"]),Leaf (RPMT ["imbibes"])])}], rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 3, srccol = 3, version = Nothing}), defaults = [], symtab = []},Hornlike {name = ["imbibes"], keyword = Means, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPMT ["imbibes"], hBody = Just (All Nothing [Leaf (RPMT ["drinks"]),Any Nothing [Leaf (RPMT ["swallows"]),Leaf (RPMT ["spits"])]])}], rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 4, srccol = 5, version = Nothing}), defaults = [], symtab = []}]]
        but got: [[Regulative {subj = Leaf (("person" :| [],Nothing) :| []), keyword = Every, who = Just (All Nothing [Leaf (RPMT ["walks"]),Leaf (RPMT ["degustates"])]), cond = Nothing, deontic = DMust, action = Leaf (("sing" :| [],Nothing) :| []), temporal = Nothing, hence = Nothing, lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 1, version = Nothing}), upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []},Hornlike {name = ["imbibes"], keyword = Means, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPBoolStructR ["imbibes"] RPis (All Nothing [Leaf (RPMT ["drinks"]),Any Nothing [Leaf (RPMT ["swallows"]),Leaf (RPMT ["spits"])]]), hBody = Nothing}], rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 3, srccol = 5, version = Nothing}), defaults = [], symtab = []},Hornlike {name = ["degustates"], keyword = Means, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPBoolStructR ["degustates"] RPis (Any Nothing [Leaf (RPMT ["eats"]),Leaf (RPMT ["imbibes"])]), hBody = Nothing}], rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing}), defaults = [], symtab = []}]]

  To rerun use: --match "/megaparsing/indented-3/"

Randomized with seed 1468997485

Finished in 0.0291 seconds
1 example, 1 failure

natural4> Test suite natural4-test failed
Test suite failure for package natural4-0.1.0.0
    natural4-test:  exited with: ExitFailure 1
Logs printed to console

