* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

natural4> test (suite: natural4-test, args: --match /PDPA/inline-1-l/)

* Tokens
[GoDeeper,Other "Bad",UnDeeper,Means,GoDeeper,Other "any",GoDeeper,Other "unauthorised",GoDeeper,Other "access",UnDeeper,Or,GoDeeper,Other "use",UnDeeper,Or,GoDeeper,Other "disclosure",UnDeeper,Or,GoDeeper,Other "copying",UnDeeper,Or,GoDeeper,Other "modification",UnDeeper,Or,GoDeeper,Other "disposal",GoDeeper,Typically,GoDeeper,Other "True",UnDeeper,UnDeeper,UnDeeper,UnDeeper,Other "of personal data",UnDeeper]
1_2:GoDeeper   > |<|
1_2:GoDeeper   > |<* starting
* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / $*|                                                                                                                :1_2:GoDeeper:
*** / |>>/recurse                                                                                                      :1_2:GoDeeper:
**** / |>>/recurse                                                                                                     :1_2:Other "Bad":
|>>/recurse> IN: Other "Bad" UnDeeper Means GoDeeper Othe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=1:
|>>/recurse> unexpected Other "Bad"
|>>/recurse> expecting GoDeeper

**** / |>>/base                                                                                                        :1_2:Other "Bad":
***** / subject slMultiTerm                                                                                           :1_2:Other "Bad":
****** / slMultiTerm                                                                                                 :1_2:Other "Bad":
******* / someSL                                                                                                    :1_2:Other "Bad":
someSL> IN: Other "Bad" UnDeeper Means GoDeeper Othe <…>
someSL> MATCH (COK): Other "Bad"
someSL> VALUE: ((["Bad"],0),[])

******* \ someSL has returned (["Bad"],0)                                                                            :2_2:UnDeeper:
slMultiTerm> IN: Other "Bad" UnDeeper Means GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "Bad"
slMultiTerm> VALUE: ((["Bad"],0),[])

****** \ slMultiTerm has returned (["Bad"],0)                                                                         :2_2:UnDeeper:
subject slMultiTerm> IN: Other "Bad" UnDeeper Means GoDeeper Othe <…>
subject slMultiTerm> MATCH (COK): Other "Bad"
subject slMultiTerm> VALUE: ((["Bad"],0),[])

***** \ subject slMultiTerm has returned (["Bad"],0)                                                                   :2_2:UnDeeper:
***** > |>>/base got ["Bad"]                                                                                           :2_2:UnDeeper:
|>>/base> IN: Other "Bad" UnDeeper Means GoDeeper Othe <…>
|>>/base> MATCH (COK): Other "Bad"
|>>/base> VALUE: ((["Bad"],0),[])

**** \ |>>/base has returned (["Bad"],0)                                                                                :2_2:UnDeeper:
|>>/recurse> IN: GoDeeper Other "Bad" UnDeeper Means GoDe <…>
|>>/recurse> MATCH (COK): GoDeeper Other "Bad"
|>>/recurse> VALUE: ((["Bad"],1),[])

*** \ |>>/recurse has returned (["Bad"],1)                                                                               :2_2:UnDeeper:
$*|> IN: GoDeeper Other "Bad" UnDeeper Means GoDe <…>
$*|> MATCH (COK): GoDeeper Other "Bad"
$*|> VALUE: ((["Bad"],1),[])

** \ $*| has returned (["Bad"],1)                                                                                         :2_2:UnDeeper:
** / |<*/parent                                                                                                           :2_2:UnDeeper:
*** > |<*/recurse                                                                                                        :2_2:UnDeeper:
*** > |<*/recurse matched 1 UnDeepers                                                                                  :2_2:GoDeeper:
|<*/parent> IN: UnDeeper Means GoDeeper Other "any" GoDe <…>
|<*/parent> MATCH (COK): UnDeeper Means
|<*/parent> VALUE: ((Means,-1),[])

** \ |<*/parent has returned (Means,-1)                                                                                 :2_2:GoDeeper:
** / made it to pBSR                                                                                                    :2_2:GoDeeper:
*** / pBSR                                                                                                             :2_2:GoDeeper:
**** / ppp inner                                                                                                      :2_2:GoDeeper:
***** / expression                                                                                                   :2_2:GoDeeper:
****** / labelPrefix                                                                                                :2_2:GoDeeper:
labelPrefix> IN: GoDeeper Other "any" GoDeeper Other "una <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=4:
labelPrefix> unexpected GoDeeper
labelPrefix> expecting Other text

****** / term p                                                                                                     :2_2:GoDeeper:
******* / term p/1a:label directly above                                                                           :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / someSL                                                                                               :2_2:GoDeeper:
********** / pNumAsText                                                                                         :2_2:GoDeeper:
pNumAsText> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "any" GoDeeper Other "una <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "any" GoDeeper Other "una <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=4:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

******* / term p/b:label to the left of line below, with EOL                                                       :2_2:GoDeeper:
******** / someSL                                                                                                 :2_2:GoDeeper:
********* / pNumAsText                                                                                           :2_2:GoDeeper:
pNumAsText> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "any" GoDeeper Other "una <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "any" GoDeeper Other "una <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=4:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******* / term p/notLabelTerm                                                                                      :2_2:GoDeeper:
******** / term p/2:someIndentation expr p                                                                        :2_2:GoDeeper:
********* / someIndentation                                                                                      :2_2:GoDeeper:
********** / myindented: consuming GoDeeper                                                                     :2_2:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "any" GoDeeper Other "una <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

********** \ myindented: consuming GoDeeper has returned GoDeeper                                                :2_2:Other "any":
********** / manyIndentation/leaf?                                                                               :2_2:Other "any":
*********** / expression                                                                                        :2_2:Other "any":
************ / labelPrefix                                                                                     :2_2:Other "any":
labelPrefix> IN: Other "any" GoDeeper Other "unauthorised <…>
labelPrefix> MATCH (COK): Other "any"
labelPrefix> VALUE: ("any",[])

************ \ labelPrefix has returned "any"                                                                   :2_3:GoDeeper:
************ / term p                                                                                           :2_3:GoDeeper:
************* / term p/1a:label directly above                                                                 :2_3:GoDeeper:
************** / $*|                                                                                          :2_3:GoDeeper:
*************** / someSL                                                                                     :2_3:GoDeeper:
**************** / pNumAsText                                                                               :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=6:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=6:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=6:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

************* / term p/b:label to the left of line below, with EOL                                             :2_3:GoDeeper:
************** / someSL                                                                                       :2_3:GoDeeper:
*************** / pNumAsText                                                                                 :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=6:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=6:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

************* / term p/notLabelTerm                                                                            :2_3:GoDeeper:
************** / term p/2:someIndentation expr p                                                              :2_3:GoDeeper:
*************** / someIndentation                                                                            :2_3:GoDeeper:
**************** / myindented: consuming GoDeeper                                                           :2_3:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

**************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :2_3:Other "unau:
**************** / manyIndentation/leaf?                                                                     :2_3:Other "unau:
***************** / expression                                                                              :2_3:Other "unau:
****************** / labelPrefix                                                                           :2_3:Other "unau:
labelPrefix> IN: Other "unauthorised" GoDeeper Other "acc <…>
labelPrefix> MATCH (COK): Other "unauthorised"
labelPrefix> VALUE: ("unauthorised",[])

****************** \ labelPrefix has returned "unauthorised"                                                :2_4:GoDeeper:
****************** / term p                                                                                 :2_4:GoDeeper:
******************* / term p/1a:label directly above                                                       :2_4:GoDeeper:
******************** / $*|                                                                                :2_4:GoDeeper:
********************* / someSL                                                                           :2_4:GoDeeper:
********************** / pNumAsText                                                                     :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=8:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=8:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=8:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

******************* / term p/b:label to the left of line below, with EOL                                   :2_4:GoDeeper:
******************** / someSL                                                                             :2_4:GoDeeper:
********************* / pNumAsText                                                                       :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=8:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=8:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******************* / term p/notLabelTerm                                                                  :2_4:GoDeeper:
******************** / term p/2:someIndentation expr p                                                    :2_4:GoDeeper:
********************* / someIndentation                                                                  :2_4:GoDeeper:
********************** / myindented: consuming GoDeeper                                                 :2_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented: consuming GoDeeper has returned GoDeeper                            :2_4:Other "acce:
********************** / manyIndentation/leaf?                                                           :2_4:Other "acce:
*********************** / expression                                                                    :2_4:Other "acce:
************************ / labelPrefix                                                                 :2_4:Other "acce:
labelPrefix> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=10:
labelPrefix> unexpected UnDeeper

************************ / term p                                                                      :2_4:Other "acce:
************************* / term p/1a:label directly above                                            :2_4:Other "acce:
************************** / $*|                                                                     :2_4:Other "acce:
*************************** / someSL                                                                :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

*************************** \ someSL has returned (["access"],0)                                     :3_4:UnDeeper:
*************************** / pNumAsText                                                             :3_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=10:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (CERR): Other "access"
$*|> ERROR:
$*|> offset=10:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/1a:label directly above> MATCH (CERR): Other "access"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=10:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

************************* / term p/b:label to the left of line below, with EOL                        :2_4:Other "acce:
************************** / someSL                                                                  :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

************************** \ someSL has returned (["access"],0)                                       :3_4:UnDeeper:
************************** / undeepers                                                                :3_4:UnDeeper:
*************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :3_4:UnDeeper:
*************************** > sameLine: success!                                                     :3_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************** \ undeepers has returned ()                                                :3_4:UnDeeper:
************************** / matching EOL                                                             :3_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=10:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "access"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=10:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

************************* / term p/notLabelTerm                                                       :2_4:Other "acce:
************************** / term p/2:someIndentation expr p                                         :2_4:Other "acce:
*************************** / someIndentation                                                       :2_4:Other "acce:
**************************** / myindented: consuming GoDeeper                                      :2_4:Other "acce:
myindented: consuming GoDeeper> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=9:
myindented: consuming GoDeeper> unexpected Other "access"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=9:
someIndentation> unexpected Other "access"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=9:
term p/2:someIndentation expr p> unexpected Other "access"
term p/2:someIndentation expr p> expecting GoDeeper

************************** / term p/3:plain p                                                        :2_4:Other "acce:
*************************** / pRelPred                                                              :2_4:Other "acce:
**************************** / slRelPred                                                           :2_4:Other "acce:
***************************** / nested simpleHorn                                                 :2_4:Other "acce:
****************************** > |^|                                                             :2_4:Other "acce:
****************************** / $*|                                                             :2_4:Other "acce:
******************************* / slMultiTerm                                                   :2_4:Other "acce:
******************************** / someSL                                                      :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

******************************** \ someSL has returned (["access"],0)                           :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

******************************* \ slMultiTerm has returned (["access"],0)                        :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

****************************** \ $*| has returned (["access"],0)                                  :3_4:UnDeeper:
****************************** / |^| deeps                                                        :3_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

****************************** \ |^| deeps has returned ([()],-1)                              :3_3:Or:
nested simpleHorn> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
nested simpleHorn> MATCH (CERR): Other "access" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=11:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

***************************** / RPConstraint                                                      :2_4:Other "acce:
****************************** / $*|                                                             :2_4:Other "acce:
******************************* / slMultiTerm                                                   :2_4:Other "acce:
******************************** / someSL                                                      :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

******************************** \ someSL has returned (["access"],0)                           :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

******************************* \ slMultiTerm has returned (["access"],0)                        :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

****************************** \ $*| has returned (["access"],0)                                  :3_4:UnDeeper:
****************************** / |>| calling $>>                                                  :3_4:UnDeeper:
******************************* / |>>/recurse                                                    :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=10:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPConstraint> MATCH (CERR): Other "access"
RPConstraint> ERROR:
RPConstraint> offset=10:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPBoolStructR                                                     :2_4:Other "acce:
****************************** / $*|                                                             :2_4:Other "acce:
******************************* / slMultiTerm                                                   :2_4:Other "acce:
******************************** / someSL                                                      :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

******************************** \ someSL has returned (["access"],0)                           :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

******************************* \ slMultiTerm has returned (["access"],0)                        :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

****************************** \ $*| has returned (["access"],0)                                  :3_4:UnDeeper:
****************************** / |>| calling $>>                                                  :3_4:UnDeeper:
******************************* / |>>/recurse                                                    :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=10:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPBoolStructR> MATCH (CERR): Other "access"
RPBoolStructR> ERROR:
RPBoolStructR> offset=10:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPMT                                                              :2_4:Other "acce:
****************************** / $*|                                                             :2_4:Other "acce:
******************************* / slAKA                                                         :2_4:Other "acce:
******************************** / $*|                                                         :2_4:Other "acce:
********************************* / slAKA base                                                :2_4:Other "acce:
********************************** / slMultiTerm                                             :2_4:Other "acce:
*********************************** / someSL                                                :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

*********************************** \ someSL has returned (["access"],0)                     :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********************************** \ slMultiTerm has returned (["access"],0)                  :3_4:UnDeeper:
slAKA base> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slAKA base> MATCH (COK): Other "access"
slAKA base> VALUE: ((["access"],0),[])

********************************* \ slAKA base has returned (["access"],0)                     :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************************** \ $*| has returned (["access"],0)                              :3_4:UnDeeper:
******************************** / |>>/recurse                                                  :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :3_4:UnDeeper:
********************************* / slAKA optional akapart                                     :3_4:UnDeeper:
********************************** / |?| optional something                                   :3_4:UnDeeper:
*********************************** / |>>/recurse                                            :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :3_4:UnDeeper:
************************************ / PAKA/akapart                                         :3_4:UnDeeper:
************************************* / $>|                                                :3_4:UnDeeper:
************************************** / Aka Token                                        :3_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=10:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=10:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=10:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :3_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional akapart has returned (Nothing,0)            :3_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :3_4:UnDeeper:
******************************** / |>>/recurse                                                  :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :3_4:UnDeeper:
********************************* / slAKA optional typically                                   :3_4:UnDeeper:
********************************** / |?| optional something                                   :3_4:UnDeeper:
*********************************** / |>>/recurse                                            :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :3_4:UnDeeper:
************************************ / typically                                            :3_4:UnDeeper:
************************************* / $>|                                                :3_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=10:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=10:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :3_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional typically has returned (Nothing,0)          :3_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :3_4:UnDeeper:
******************************** > slAKA: proceeding after base and entityalias are retrieved ... :3_4:UnDeeper:
******************************** > pAKA: entityalias = Nothing                                  :3_4:UnDeeper:
slAKA> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slAKA> MATCH (COK): Other "access"
slAKA> VALUE: ((["access"],0),[])

******************************* \ slAKA has returned (["access"],0)                              :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

****************************** \ $*| has returned (["access"],0)                                  :3_4:UnDeeper:
RPMT> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPMT> MATCH (COK): Other "access"
RPMT> VALUE: ((RPMT ["access"],0),[])

***************************** \ RPMT has returned (RPMT ["access"],0)                              :3_4:UnDeeper:
slRelPred> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slRelPred> MATCH (COK): Other "access"
slRelPred> VALUE: ((RPMT ["access"],0),[])

**************************** \ slRelPred has returned (RPMT ["access"],0)                           :3_4:UnDeeper:
**************************** / undeepers                                                            :3_4:UnDeeper:
***************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :3_4:UnDeeper:
***************************** > sameLine: success!                                                 :3_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************************** \ undeepers has returned ()                                            :3_4:UnDeeper:
pRelPred> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
pRelPred> MATCH (COK): Other "access"
pRelPred> VALUE: (RPMT ["access"],[])

*************************** \ pRelPred has returned RPMT ["access"]                                  :3_4:UnDeeper:
term p/3:plain p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/3:plain p> MATCH (COK): Other "access"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["access"]),[])

************************** \ term p/3:plain p has returned MyLeaf (RPMT ["access"])                   :3_4:UnDeeper:
term p/notLabelTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/notLabelTerm> MATCH (COK): Other "access"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["access"]),[])

************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                  :3_4:UnDeeper:
term p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p> MATCH (COK): Other "access"
term p> VALUE: (MyLeaf (RPMT ["access"]),[])

************************ \ term p has returned MyLeaf (RPMT ["access"])                                 :3_4:UnDeeper:
************************ / binary(Or)                                                                   :3_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=10:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************************ / binary(And)                                                                  :3_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=10:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************************ / binary(SetLess)                                                              :3_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=10:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************************ / binary(SetPlus)                                                              :3_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=10:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
expression> MATCH (COK): Other "access"
expression> VALUE: (MyLeaf (RPMT ["access"]),[])

*********************** \ expression has returned MyLeaf (RPMT ["access"])                               :3_4:UnDeeper:
manyIndentation/leaf?> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
manyIndentation/leaf?> MATCH (COK): Other "access"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["access"]),[])

********************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["access"])                      :3_4:UnDeeper:
********************** / myindented: consuming UnDeeper                                                   :3_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

********************** \ myindented: consuming UnDeeper has returned UnDeeper                          :3_3:Or:
someIndentation> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someIndentation> MATCH (COK): GoDeeper Other "access" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["access"]),[])

********************* \ someIndentation has returned MyLeaf (RPMT ["access"])                           :3_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "access" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["access"]),[])

******************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["access"])             :3_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "access" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["access"]),[])

******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                           :3_3:Or:
term p> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p> MATCH (COK): GoDeeper Other "access" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["access"]),[])

****************** \ term p has returned MyLeaf (RPMT ["access"])                                          :3_3:Or:
****************** / binary(Or)                                                                            :3_3:Or:
binary(Or)> IN: Or GoDeeper Other "use" UnDeeper Or GoDe <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

****************** \ binary(Or) has returned Or                                                             :3_4:GoDeeper:
****************** / term p                                                                                 :3_4:GoDeeper:
******************* / term p/1a:label directly above                                                       :3_4:GoDeeper:
******************** / $*|                                                                                :3_4:GoDeeper:
********************* / someSL                                                                           :3_4:GoDeeper:
********************** / pNumAsText                                                                     :3_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=12:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=12:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=12:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=12:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

******************* / term p/b:label to the left of line below, with EOL                                   :3_4:GoDeeper:
******************** / someSL                                                                             :3_4:GoDeeper:
********************* / pNumAsText                                                                       :3_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=12:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=12:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=12:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******************* / term p/notLabelTerm                                                                  :3_4:GoDeeper:
******************** / term p/2:someIndentation expr p                                                    :3_4:GoDeeper:
********************* / someIndentation                                                                  :3_4:GoDeeper:
********************** / myindented: consuming GoDeeper                                                 :3_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented: consuming GoDeeper has returned GoDeeper                            :3_4:Other "use":
********************** / manyIndentation/leaf?                                                           :3_4:Other "use":
*********************** / expression                                                                    :3_4:Other "use":
************************ / labelPrefix                                                                 :3_4:Other "use":
labelPrefix> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=14:
labelPrefix> unexpected UnDeeper

************************ / term p                                                                      :3_4:Other "use":
************************* / term p/1a:label directly above                                            :3_4:Other "use":
************************** / $*|                                                                     :3_4:Other "use":
*************************** / someSL                                                                :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

*************************** \ someSL has returned (["use"],0)                                        :4_4:UnDeeper:
*************************** / pNumAsText                                                             :4_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=14:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (CERR): Other "use"
$*|> ERROR:
$*|> offset=14:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/1a:label directly above> MATCH (CERR): Other "use"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=14:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

************************* / term p/b:label to the left of line below, with EOL                        :3_4:Other "use":
************************** / someSL                                                                  :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

************************** \ someSL has returned (["use"],0)                                          :4_4:UnDeeper:
************************** / undeepers                                                                :4_4:UnDeeper:
*************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :4_4:UnDeeper:
*************************** > sameLine: success!                                                     :4_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************** \ undeepers has returned ()                                                :4_4:UnDeeper:
************************** / matching EOL                                                             :4_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=14:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "use"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=14:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

************************* / term p/notLabelTerm                                                       :3_4:Other "use":
************************** / term p/2:someIndentation expr p                                         :3_4:Other "use":
*************************** / someIndentation                                                       :3_4:Other "use":
**************************** / myindented: consuming GoDeeper                                      :3_4:Other "use":
myindented: consuming GoDeeper> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=13:
myindented: consuming GoDeeper> unexpected Other "use"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=13:
someIndentation> unexpected Other "use"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=13:
term p/2:someIndentation expr p> unexpected Other "use"
term p/2:someIndentation expr p> expecting GoDeeper

************************** / term p/3:plain p                                                        :3_4:Other "use":
*************************** / pRelPred                                                              :3_4:Other "use":
**************************** / slRelPred                                                           :3_4:Other "use":
***************************** / nested simpleHorn                                                 :3_4:Other "use":
****************************** > |^|                                                             :3_4:Other "use":
****************************** / $*|                                                             :3_4:Other "use":
******************************* / slMultiTerm                                                   :3_4:Other "use":
******************************** / someSL                                                      :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

******************************** \ someSL has returned (["use"],0)                              :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

******************************* \ slMultiTerm has returned (["use"],0)                           :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

****************************** \ $*| has returned (["use"],0)                                     :4_4:UnDeeper:
****************************** / |^| deeps                                                        :4_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

****************************** \ |^| deeps has returned ([()],-1)                              :4_3:Or:
nested simpleHorn> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
nested simpleHorn> MATCH (CERR): Other "use" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=15:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

***************************** / RPConstraint                                                      :3_4:Other "use":
****************************** / $*|                                                             :3_4:Other "use":
******************************* / slMultiTerm                                                   :3_4:Other "use":
******************************** / someSL                                                      :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

******************************** \ someSL has returned (["use"],0)                              :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

******************************* \ slMultiTerm has returned (["use"],0)                           :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

****************************** \ $*| has returned (["use"],0)                                     :4_4:UnDeeper:
****************************** / |>| calling $>>                                                  :4_4:UnDeeper:
******************************* / |>>/recurse                                                    :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=14:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPConstraint> MATCH (CERR): Other "use"
RPConstraint> ERROR:
RPConstraint> offset=14:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPBoolStructR                                                     :3_4:Other "use":
****************************** / $*|                                                             :3_4:Other "use":
******************************* / slMultiTerm                                                   :3_4:Other "use":
******************************** / someSL                                                      :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

******************************** \ someSL has returned (["use"],0)                              :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

******************************* \ slMultiTerm has returned (["use"],0)                           :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

****************************** \ $*| has returned (["use"],0)                                     :4_4:UnDeeper:
****************************** / |>| calling $>>                                                  :4_4:UnDeeper:
******************************* / |>>/recurse                                                    :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=14:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPBoolStructR> MATCH (CERR): Other "use"
RPBoolStructR> ERROR:
RPBoolStructR> offset=14:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPMT                                                              :3_4:Other "use":
****************************** / $*|                                                             :3_4:Other "use":
******************************* / slAKA                                                         :3_4:Other "use":
******************************** / $*|                                                         :3_4:Other "use":
********************************* / slAKA base                                                :3_4:Other "use":
********************************** / slMultiTerm                                             :3_4:Other "use":
*********************************** / someSL                                                :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

*********************************** \ someSL has returned (["use"],0)                        :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

********************************** \ slMultiTerm has returned (["use"],0)                     :4_4:UnDeeper:
slAKA base> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slAKA base> MATCH (COK): Other "use"
slAKA base> VALUE: ((["use"],0),[])

********************************* \ slAKA base has returned (["use"],0)                        :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************************** \ $*| has returned (["use"],0)                                 :4_4:UnDeeper:
******************************** / |>>/recurse                                                  :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :4_4:UnDeeper:
********************************* / slAKA optional akapart                                     :4_4:UnDeeper:
********************************** / |?| optional something                                   :4_4:UnDeeper:
*********************************** / |>>/recurse                                            :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :4_4:UnDeeper:
************************************ / PAKA/akapart                                         :4_4:UnDeeper:
************************************* / $>|                                                :4_4:UnDeeper:
************************************** / Aka Token                                        :4_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=14:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=14:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=14:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :4_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional akapart has returned (Nothing,0)            :4_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :4_4:UnDeeper:
******************************** / |>>/recurse                                                  :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :4_4:UnDeeper:
********************************* / slAKA optional typically                                   :4_4:UnDeeper:
********************************** / |?| optional something                                   :4_4:UnDeeper:
*********************************** / |>>/recurse                                            :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :4_4:UnDeeper:
************************************ / typically                                            :4_4:UnDeeper:
************************************* / $>|                                                :4_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=14:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=14:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :4_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional typically has returned (Nothing,0)          :4_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :4_4:UnDeeper:
******************************** > slAKA: proceeding after base and entityalias are retrieved ... :4_4:UnDeeper:
******************************** > pAKA: entityalias = Nothing                                  :4_4:UnDeeper:
slAKA> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slAKA> MATCH (COK): Other "use"
slAKA> VALUE: ((["use"],0),[])

******************************* \ slAKA has returned (["use"],0)                                 :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

****************************** \ $*| has returned (["use"],0)                                     :4_4:UnDeeper:
RPMT> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPMT> MATCH (COK): Other "use"
RPMT> VALUE: ((RPMT ["use"],0),[])

***************************** \ RPMT has returned (RPMT ["use"],0)                                 :4_4:UnDeeper:
slRelPred> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slRelPred> MATCH (COK): Other "use"
slRelPred> VALUE: ((RPMT ["use"],0),[])

**************************** \ slRelPred has returned (RPMT ["use"],0)                              :4_4:UnDeeper:
**************************** / undeepers                                                            :4_4:UnDeeper:
***************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :4_4:UnDeeper:
***************************** > sameLine: success!                                                 :4_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************************** \ undeepers has returned ()                                            :4_4:UnDeeper:
pRelPred> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
pRelPred> MATCH (COK): Other "use"
pRelPred> VALUE: (RPMT ["use"],[])

*************************** \ pRelPred has returned RPMT ["use"]                                     :4_4:UnDeeper:
term p/3:plain p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/3:plain p> MATCH (COK): Other "use"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["use"]),[])

************************** \ term p/3:plain p has returned MyLeaf (RPMT ["use"])                      :4_4:UnDeeper:
term p/notLabelTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/notLabelTerm> MATCH (COK): Other "use"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["use"]),[])

************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])                     :4_4:UnDeeper:
term p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p> MATCH (COK): Other "use"
term p> VALUE: (MyLeaf (RPMT ["use"]),[])

************************ \ term p has returned MyLeaf (RPMT ["use"])                                    :4_4:UnDeeper:
************************ / binary(Or)                                                                   :4_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=14:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************************ / binary(And)                                                                  :4_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=14:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************************ / binary(SetLess)                                                              :4_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=14:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************************ / binary(SetPlus)                                                              :4_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=14:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
expression> MATCH (COK): Other "use"
expression> VALUE: (MyLeaf (RPMT ["use"]),[])

*********************** \ expression has returned MyLeaf (RPMT ["use"])                                  :4_4:UnDeeper:
manyIndentation/leaf?> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
manyIndentation/leaf?> MATCH (COK): Other "use"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["use"]),[])

********************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["use"])                         :4_4:UnDeeper:
********************** / myindented: consuming UnDeeper                                                   :4_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

********************** \ myindented: consuming UnDeeper has returned UnDeeper                          :4_3:Or:
someIndentation> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someIndentation> MATCH (COK): GoDeeper Other "use" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["use"]),[])

********************* \ someIndentation has returned MyLeaf (RPMT ["use"])                              :4_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "use" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["use"]),[])

******************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["use"])                :4_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "use" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["use"]),[])

******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])                              :4_3:Or:
term p> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p> MATCH (COK): GoDeeper Other "use" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["use"]),[])

****************** \ term p has returned MyLeaf (RPMT ["use"])                                             :4_3:Or:
****************** / binary(Or)                                                                            :4_3:Or:
binary(Or)> IN: Or GoDeeper Other "disclosure" UnDeeper  <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

****************** \ binary(Or) has returned Or                                                             :4_4:GoDeeper:
****************** / term p                                                                                 :4_4:GoDeeper:
******************* / term p/1a:label directly above                                                       :4_4:GoDeeper:
******************** / $*|                                                                                :4_4:GoDeeper:
********************* / someSL                                                                           :4_4:GoDeeper:
********************** / pNumAsText                                                                     :4_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=16:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=16:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=16:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=16:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

******************* / term p/b:label to the left of line below, with EOL                                   :4_4:GoDeeper:
******************** / someSL                                                                             :4_4:GoDeeper:
********************* / pNumAsText                                                                       :4_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=16:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=16:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=16:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******************* / term p/notLabelTerm                                                                  :4_4:GoDeeper:
******************** / term p/2:someIndentation expr p                                                    :4_4:GoDeeper:
********************* / someIndentation                                                                  :4_4:GoDeeper:
********************** / myindented: consuming GoDeeper                                                 :4_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented: consuming GoDeeper has returned GoDeeper                            :4_4:Other "disc:
********************** / manyIndentation/leaf?                                                           :4_4:Other "disc:
*********************** / expression                                                                    :4_4:Other "disc:
************************ / labelPrefix                                                                 :4_4:Other "disc:
labelPrefix> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=18:
labelPrefix> unexpected UnDeeper

************************ / term p                                                                      :4_4:Other "disc:
************************* / term p/1a:label directly above                                            :4_4:Other "disc:
************************** / $*|                                                                     :4_4:Other "disc:
*************************** / someSL                                                                :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

*************************** \ someSL has returned (["disclosure"],0)                                 :5_4:UnDeeper:
*************************** / pNumAsText                                                             :5_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=18:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (CERR): Other "disclosure"
$*|> ERROR:
$*|> offset=18:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/1a:label directly above> MATCH (CERR): Other "disclosure"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=18:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

************************* / term p/b:label to the left of line below, with EOL                        :4_4:Other "disc:
************************** / someSL                                                                  :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

************************** \ someSL has returned (["disclosure"],0)                                   :5_4:UnDeeper:
************************** / undeepers                                                                :5_4:UnDeeper:
*************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_4:UnDeeper:
*************************** > sameLine: success!                                                     :5_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************** \ undeepers has returned ()                                                :5_4:UnDeeper:
************************** / matching EOL                                                             :5_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=18:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "disclosure"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=18:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

************************* / term p/notLabelTerm                                                       :4_4:Other "disc:
************************** / term p/2:someIndentation expr p                                         :4_4:Other "disc:
*************************** / someIndentation                                                       :4_4:Other "disc:
**************************** / myindented: consuming GoDeeper                                      :4_4:Other "disc:
myindented: consuming GoDeeper> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=17:
myindented: consuming GoDeeper> unexpected Other "disclosure"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=17:
someIndentation> unexpected Other "disclosure"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=17:
term p/2:someIndentation expr p> unexpected Other "disclosure"
term p/2:someIndentation expr p> expecting GoDeeper

************************** / term p/3:plain p                                                        :4_4:Other "disc:
*************************** / pRelPred                                                              :4_4:Other "disc:
**************************** / slRelPred                                                           :4_4:Other "disc:
***************************** / nested simpleHorn                                                 :4_4:Other "disc:
****************************** > |^|                                                             :4_4:Other "disc:
****************************** / $*|                                                             :4_4:Other "disc:
******************************* / slMultiTerm                                                   :4_4:Other "disc:
******************************** / someSL                                                      :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

******************************** \ someSL has returned (["disclosure"],0)                       :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

******************************* \ slMultiTerm has returned (["disclosure"],0)                    :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

****************************** \ $*| has returned (["disclosure"],0)                              :5_4:UnDeeper:
****************************** / |^| deeps                                                        :5_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

****************************** \ |^| deeps has returned ([()],-1)                              :5_3:Or:
nested simpleHorn> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
nested simpleHorn> MATCH (CERR): Other "disclosure" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=19:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

***************************** / RPConstraint                                                      :4_4:Other "disc:
****************************** / $*|                                                             :4_4:Other "disc:
******************************* / slMultiTerm                                                   :4_4:Other "disc:
******************************** / someSL                                                      :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

******************************** \ someSL has returned (["disclosure"],0)                       :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

******************************* \ slMultiTerm has returned (["disclosure"],0)                    :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

****************************** \ $*| has returned (["disclosure"],0)                              :5_4:UnDeeper:
****************************** / |>| calling $>>                                                  :5_4:UnDeeper:
******************************* / |>>/recurse                                                    :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=18:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPConstraint> MATCH (CERR): Other "disclosure"
RPConstraint> ERROR:
RPConstraint> offset=18:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPBoolStructR                                                     :4_4:Other "disc:
****************************** / $*|                                                             :4_4:Other "disc:
******************************* / slMultiTerm                                                   :4_4:Other "disc:
******************************** / someSL                                                      :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

******************************** \ someSL has returned (["disclosure"],0)                       :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

******************************* \ slMultiTerm has returned (["disclosure"],0)                    :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

****************************** \ $*| has returned (["disclosure"],0)                              :5_4:UnDeeper:
****************************** / |>| calling $>>                                                  :5_4:UnDeeper:
******************************* / |>>/recurse                                                    :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=18:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPBoolStructR> MATCH (CERR): Other "disclosure"
RPBoolStructR> ERROR:
RPBoolStructR> offset=18:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPMT                                                              :4_4:Other "disc:
****************************** / $*|                                                             :4_4:Other "disc:
******************************* / slAKA                                                         :4_4:Other "disc:
******************************** / $*|                                                         :4_4:Other "disc:
********************************* / slAKA base                                                :4_4:Other "disc:
********************************** / slMultiTerm                                             :4_4:Other "disc:
*********************************** / someSL                                                :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

*********************************** \ someSL has returned (["disclosure"],0)                 :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

********************************** \ slMultiTerm has returned (["disclosure"],0)              :5_4:UnDeeper:
slAKA base> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slAKA base> MATCH (COK): Other "disclosure"
slAKA base> VALUE: ((["disclosure"],0),[])

********************************* \ slAKA base has returned (["disclosure"],0)                 :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************************** \ $*| has returned (["disclosure"],0)                          :5_4:UnDeeper:
******************************** / |>>/recurse                                                  :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :5_4:UnDeeper:
********************************* / slAKA optional akapart                                     :5_4:UnDeeper:
********************************** / |?| optional something                                   :5_4:UnDeeper:
*********************************** / |>>/recurse                                            :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :5_4:UnDeeper:
************************************ / PAKA/akapart                                         :5_4:UnDeeper:
************************************* / $>|                                                :5_4:UnDeeper:
************************************** / Aka Token                                        :5_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=18:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=18:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=18:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :5_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional akapart has returned (Nothing,0)            :5_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :5_4:UnDeeper:
******************************** / |>>/recurse                                                  :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :5_4:UnDeeper:
********************************* / slAKA optional typically                                   :5_4:UnDeeper:
********************************** / |?| optional something                                   :5_4:UnDeeper:
*********************************** / |>>/recurse                                            :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :5_4:UnDeeper:
************************************ / typically                                            :5_4:UnDeeper:
************************************* / $>|                                                :5_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=18:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=18:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :5_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional typically has returned (Nothing,0)          :5_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :5_4:UnDeeper:
******************************** > slAKA: proceeding after base and entityalias are retrieved ... :5_4:UnDeeper:
******************************** > pAKA: entityalias = Nothing                                  :5_4:UnDeeper:
slAKA> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slAKA> MATCH (COK): Other "disclosure"
slAKA> VALUE: ((["disclosure"],0),[])

******************************* \ slAKA has returned (["disclosure"],0)                          :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

****************************** \ $*| has returned (["disclosure"],0)                              :5_4:UnDeeper:
RPMT> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPMT> MATCH (COK): Other "disclosure"
RPMT> VALUE: ((RPMT ["disclosure"],0),[])

***************************** \ RPMT has returned (RPMT ["disclosure"],0)                          :5_4:UnDeeper:
slRelPred> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slRelPred> MATCH (COK): Other "disclosure"
slRelPred> VALUE: ((RPMT ["disclosure"],0),[])

**************************** \ slRelPred has returned (RPMT ["disclosure"],0)                       :5_4:UnDeeper:
**************************** / undeepers                                                            :5_4:UnDeeper:
***************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_4:UnDeeper:
***************************** > sameLine: success!                                                 :5_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************************** \ undeepers has returned ()                                            :5_4:UnDeeper:
pRelPred> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
pRelPred> MATCH (COK): Other "disclosure"
pRelPred> VALUE: (RPMT ["disclosure"],[])

*************************** \ pRelPred has returned RPMT ["disclosure"]                              :5_4:UnDeeper:
term p/3:plain p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/3:plain p> MATCH (COK): Other "disclosure"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************************** \ term p/3:plain p has returned MyLeaf (RPMT ["disclosure"])               :5_4:UnDeeper:
term p/notLabelTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/notLabelTerm> MATCH (COK): Other "disclosure"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])              :5_4:UnDeeper:
term p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p> MATCH (COK): Other "disclosure"
term p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************************ \ term p has returned MyLeaf (RPMT ["disclosure"])                             :5_4:UnDeeper:
************************ / binary(Or)                                                                   :5_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=18:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************************ / binary(And)                                                                  :5_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=18:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************************ / binary(SetLess)                                                              :5_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=18:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************************ / binary(SetPlus)                                                              :5_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=18:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
expression> MATCH (COK): Other "disclosure"
expression> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

*********************** \ expression has returned MyLeaf (RPMT ["disclosure"])                           :5_4:UnDeeper:
manyIndentation/leaf?> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
manyIndentation/leaf?> MATCH (COK): Other "disclosure"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

********************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["disclosure"])                  :5_4:UnDeeper:
********************** / myindented: consuming UnDeeper                                                   :5_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

********************** \ myindented: consuming UnDeeper has returned UnDeeper                          :5_3:Or:
someIndentation> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someIndentation> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

********************* \ someIndentation has returned MyLeaf (RPMT ["disclosure"])                       :5_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

******************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["disclosure"])         :5_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])                       :5_3:Or:
term p> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

****************** \ term p has returned MyLeaf (RPMT ["disclosure"])                                      :5_3:Or:
****************** / binary(Or)                                                                            :5_3:Or:
binary(Or)> IN: Or GoDeeper Other "copying" UnDeeper Or  <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

****************** \ binary(Or) has returned Or                                                             :5_4:GoDeeper:
****************** / term p                                                                                 :5_4:GoDeeper:
******************* / term p/1a:label directly above                                                       :5_4:GoDeeper:
******************** / $*|                                                                                :5_4:GoDeeper:
********************* / someSL                                                                           :5_4:GoDeeper:
********************** / pNumAsText                                                                     :5_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=20:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=20:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=20:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=20:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

******************* / term p/b:label to the left of line below, with EOL                                   :5_4:GoDeeper:
******************** / someSL                                                                             :5_4:GoDeeper:
********************* / pNumAsText                                                                       :5_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=20:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=20:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=20:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******************* / term p/notLabelTerm                                                                  :5_4:GoDeeper:
******************** / term p/2:someIndentation expr p                                                    :5_4:GoDeeper:
********************* / someIndentation                                                                  :5_4:GoDeeper:
********************** / myindented: consuming GoDeeper                                                 :5_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented: consuming GoDeeper has returned GoDeeper                            :5_4:Other "copy:
********************** / manyIndentation/leaf?                                                           :5_4:Other "copy:
*********************** / expression                                                                    :5_4:Other "copy:
************************ / labelPrefix                                                                 :5_4:Other "copy:
labelPrefix> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=22:
labelPrefix> unexpected UnDeeper

************************ / term p                                                                      :5_4:Other "copy:
************************* / term p/1a:label directly above                                            :5_4:Other "copy:
************************** / $*|                                                                     :5_4:Other "copy:
*************************** / someSL                                                                :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

*************************** \ someSL has returned (["copying"],0)                                    :6_4:UnDeeper:
*************************** / pNumAsText                                                             :6_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "modification <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=22:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (CERR): Other "copying"
$*|> ERROR:
$*|> offset=22:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/1a:label directly above> MATCH (CERR): Other "copying"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=22:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

************************* / term p/b:label to the left of line below, with EOL                        :5_4:Other "copy:
************************** / someSL                                                                  :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

************************** \ someSL has returned (["copying"],0)                                      :6_4:UnDeeper:
************************** / undeepers                                                                :6_4:UnDeeper:
*************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :6_4:UnDeeper:
*************************** > sameLine: success!                                                     :6_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "modification <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************** \ undeepers has returned ()                                                :6_4:UnDeeper:
************************** / matching EOL                                                             :6_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "modification <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=22:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "copying"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=22:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

************************* / term p/notLabelTerm                                                       :5_4:Other "copy:
************************** / term p/2:someIndentation expr p                                         :5_4:Other "copy:
*************************** / someIndentation                                                       :5_4:Other "copy:
**************************** / myindented: consuming GoDeeper                                      :5_4:Other "copy:
myindented: consuming GoDeeper> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=21:
myindented: consuming GoDeeper> unexpected Other "copying"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=21:
someIndentation> unexpected Other "copying"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=21:
term p/2:someIndentation expr p> unexpected Other "copying"
term p/2:someIndentation expr p> expecting GoDeeper

************************** / term p/3:plain p                                                        :5_4:Other "copy:
*************************** / pRelPred                                                              :5_4:Other "copy:
**************************** / slRelPred                                                           :5_4:Other "copy:
***************************** / nested simpleHorn                                                 :5_4:Other "copy:
****************************** > |^|                                                             :5_4:Other "copy:
****************************** / $*|                                                             :5_4:Other "copy:
******************************* / slMultiTerm                                                   :5_4:Other "copy:
******************************** / someSL                                                      :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

******************************** \ someSL has returned (["copying"],0)                          :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

******************************* \ slMultiTerm has returned (["copying"],0)                       :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

****************************** \ $*| has returned (["copying"],0)                                 :6_4:UnDeeper:
****************************** / |^| deeps                                                        :6_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "modification <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

****************************** \ |^| deeps has returned ([()],-1)                              :6_3:Or:
nested simpleHorn> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
nested simpleHorn> MATCH (CERR): Other "copying" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=23:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

***************************** / RPConstraint                                                      :5_4:Other "copy:
****************************** / $*|                                                             :5_4:Other "copy:
******************************* / slMultiTerm                                                   :5_4:Other "copy:
******************************** / someSL                                                      :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

******************************** \ someSL has returned (["copying"],0)                          :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

******************************* \ slMultiTerm has returned (["copying"],0)                       :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

****************************** \ $*| has returned (["copying"],0)                                 :6_4:UnDeeper:
****************************** / |>| calling $>>                                                  :6_4:UnDeeper:
******************************* / |>>/recurse                                                    :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "modification <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=22:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPConstraint> MATCH (CERR): Other "copying"
RPConstraint> ERROR:
RPConstraint> offset=22:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPBoolStructR                                                     :5_4:Other "copy:
****************************** / $*|                                                             :5_4:Other "copy:
******************************* / slMultiTerm                                                   :5_4:Other "copy:
******************************** / someSL                                                      :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

******************************** \ someSL has returned (["copying"],0)                          :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

******************************* \ slMultiTerm has returned (["copying"],0)                       :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

****************************** \ $*| has returned (["copying"],0)                                 :6_4:UnDeeper:
****************************** / |>| calling $>>                                                  :6_4:UnDeeper:
******************************* / |>>/recurse                                                    :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "modification <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=22:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPBoolStructR> MATCH (CERR): Other "copying"
RPBoolStructR> ERROR:
RPBoolStructR> offset=22:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPMT                                                              :5_4:Other "copy:
****************************** / $*|                                                             :5_4:Other "copy:
******************************* / slAKA                                                         :5_4:Other "copy:
******************************** / $*|                                                         :5_4:Other "copy:
********************************* / slAKA base                                                :5_4:Other "copy:
********************************** / slMultiTerm                                             :5_4:Other "copy:
*********************************** / someSL                                                :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

*********************************** \ someSL has returned (["copying"],0)                    :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

********************************** \ slMultiTerm has returned (["copying"],0)                 :6_4:UnDeeper:
slAKA base> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slAKA base> MATCH (COK): Other "copying"
slAKA base> VALUE: ((["copying"],0),[])

********************************* \ slAKA base has returned (["copying"],0)                    :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************************** \ $*| has returned (["copying"],0)                             :6_4:UnDeeper:
******************************** / |>>/recurse                                                  :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :6_4:UnDeeper:
********************************* / slAKA optional akapart                                     :6_4:UnDeeper:
********************************** / |?| optional something                                   :6_4:UnDeeper:
*********************************** / |>>/recurse                                            :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :6_4:UnDeeper:
************************************ / PAKA/akapart                                         :6_4:UnDeeper:
************************************* / $>|                                                :6_4:UnDeeper:
************************************** / Aka Token                                        :6_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "modification <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=22:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "modification <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=22:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "modification <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=22:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "modification <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :6_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "modification <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional akapart has returned (Nothing,0)            :6_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :6_4:UnDeeper:
******************************** / |>>/recurse                                                  :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :6_4:UnDeeper:
********************************* / slAKA optional typically                                   :6_4:UnDeeper:
********************************** / |?| optional something                                   :6_4:UnDeeper:
*********************************** / |>>/recurse                                            :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :6_4:UnDeeper:
************************************ / typically                                            :6_4:UnDeeper:
************************************* / $>|                                                :6_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "modification <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=22:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "modification <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=22:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "modification <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :6_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "modification <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional typically has returned (Nothing,0)          :6_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :6_4:UnDeeper:
******************************** > slAKA: proceeding after base and entityalias are retrieved ... :6_4:UnDeeper:
******************************** > pAKA: entityalias = Nothing                                  :6_4:UnDeeper:
slAKA> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slAKA> MATCH (COK): Other "copying"
slAKA> VALUE: ((["copying"],0),[])

******************************* \ slAKA has returned (["copying"],0)                             :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

****************************** \ $*| has returned (["copying"],0)                                 :6_4:UnDeeper:
RPMT> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPMT> MATCH (COK): Other "copying"
RPMT> VALUE: ((RPMT ["copying"],0),[])

***************************** \ RPMT has returned (RPMT ["copying"],0)                             :6_4:UnDeeper:
slRelPred> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slRelPred> MATCH (COK): Other "copying"
slRelPred> VALUE: ((RPMT ["copying"],0),[])

**************************** \ slRelPred has returned (RPMT ["copying"],0)                          :6_4:UnDeeper:
**************************** / undeepers                                                            :6_4:UnDeeper:
***************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :6_4:UnDeeper:
***************************** > sameLine: success!                                                 :6_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "modification <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************************** \ undeepers has returned ()                                            :6_4:UnDeeper:
pRelPred> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
pRelPred> MATCH (COK): Other "copying"
pRelPred> VALUE: (RPMT ["copying"],[])

*************************** \ pRelPred has returned RPMT ["copying"]                                 :6_4:UnDeeper:
term p/3:plain p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/3:plain p> MATCH (COK): Other "copying"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["copying"]),[])

************************** \ term p/3:plain p has returned MyLeaf (RPMT ["copying"])                  :6_4:UnDeeper:
term p/notLabelTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/notLabelTerm> MATCH (COK): Other "copying"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["copying"]),[])

************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])                 :6_4:UnDeeper:
term p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p> MATCH (COK): Other "copying"
term p> VALUE: (MyLeaf (RPMT ["copying"]),[])

************************ \ term p has returned MyLeaf (RPMT ["copying"])                                :6_4:UnDeeper:
************************ / binary(Or)                                                                   :6_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=22:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************************ / binary(And)                                                                  :6_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=22:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************************ / binary(SetLess)                                                              :6_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=22:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************************ / binary(SetPlus)                                                              :6_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=22:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
expression> MATCH (COK): Other "copying"
expression> VALUE: (MyLeaf (RPMT ["copying"]),[])

*********************** \ expression has returned MyLeaf (RPMT ["copying"])                              :6_4:UnDeeper:
manyIndentation/leaf?> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
manyIndentation/leaf?> MATCH (COK): Other "copying"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["copying"]),[])

********************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["copying"])                     :6_4:UnDeeper:
********************** / myindented: consuming UnDeeper                                                   :6_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "modification <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

********************** \ myindented: consuming UnDeeper has returned UnDeeper                          :6_3:Or:
someIndentation> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someIndentation> MATCH (COK): GoDeeper Other "copying" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["copying"]),[])

********************* \ someIndentation has returned MyLeaf (RPMT ["copying"])                          :6_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["copying"]),[])

******************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["copying"])            :6_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["copying"]),[])

******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])                          :6_3:Or:
term p> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["copying"]),[])

****************** \ term p has returned MyLeaf (RPMT ["copying"])                                         :6_3:Or:
****************** / binary(Or)                                                                            :6_3:Or:
binary(Or)> IN: Or GoDeeper Other "modification" UnDeepe <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

****************** \ binary(Or) has returned Or                                                             :6_4:GoDeeper:
****************** / term p                                                                                 :6_4:GoDeeper:
******************* / term p/1a:label directly above                                                       :6_4:GoDeeper:
******************** / $*|                                                                                :6_4:GoDeeper:
********************* / someSL                                                                           :6_4:GoDeeper:
********************** / pNumAsText                                                                     :6_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "modification" UnDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=24:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "modification" UnDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=24:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "modification" UnDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=24:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=24:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

******************* / term p/b:label to the left of line below, with EOL                                   :6_4:GoDeeper:
******************** / someSL                                                                             :6_4:GoDeeper:
********************* / pNumAsText                                                                       :6_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "modification" UnDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=24:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "modification" UnDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=24:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=24:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******************* / term p/notLabelTerm                                                                  :6_4:GoDeeper:
******************** / term p/2:someIndentation expr p                                                    :6_4:GoDeeper:
********************* / someIndentation                                                                  :6_4:GoDeeper:
********************** / myindented: consuming GoDeeper                                                 :6_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "modification" UnDeeper O <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented: consuming GoDeeper has returned GoDeeper                            :6_4:Other "modi:
********************** / manyIndentation/leaf?                                                           :6_4:Other "modi:
*********************** / expression                                                                    :6_4:Other "modi:
************************ / labelPrefix                                                                 :6_4:Other "modi:
labelPrefix> IN: Other "modification" UnDeeper Or GoDeepe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=26:
labelPrefix> unexpected UnDeeper

************************ / term p                                                                      :6_4:Other "modi:
************************* / term p/1a:label directly above                                            :6_4:Other "modi:
************************** / $*|                                                                     :6_4:Other "modi:
*************************** / someSL                                                                :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

*************************** \ someSL has returned (["modification"],0)                               :7_4:UnDeeper:
*************************** / pNumAsText                                                             :7_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=26:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (CERR): Other "modification"
$*|> ERROR:
$*|> offset=26:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/1a:label directly above> MATCH (CERR): Other "modification"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=26:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

************************* / term p/b:label to the left of line below, with EOL                        :6_4:Other "modi:
************************** / someSL                                                                  :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

************************** \ someSL has returned (["modification"],0)                                 :7_4:UnDeeper:
************************** / undeepers                                                                :7_4:UnDeeper:
*************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_4:UnDeeper:
*************************** > sameLine: success!                                                     :7_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************** \ undeepers has returned ()                                                :7_4:UnDeeper:
************************** / matching EOL                                                             :7_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=26:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "modification"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=26:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

************************* / term p/notLabelTerm                                                       :6_4:Other "modi:
************************** / term p/2:someIndentation expr p                                         :6_4:Other "modi:
*************************** / someIndentation                                                       :6_4:Other "modi:
**************************** / myindented: consuming GoDeeper                                      :6_4:Other "modi:
myindented: consuming GoDeeper> IN: Other "modification" UnDeeper Or GoDeepe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=25:
myindented: consuming GoDeeper> unexpected Other "modification"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "modification" UnDeeper Or GoDeepe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=25:
someIndentation> unexpected Other "modification"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=25:
term p/2:someIndentation expr p> unexpected Other "modification"
term p/2:someIndentation expr p> expecting GoDeeper

************************** / term p/3:plain p                                                        :6_4:Other "modi:
*************************** / pRelPred                                                              :6_4:Other "modi:
**************************** / slRelPred                                                           :6_4:Other "modi:
***************************** / nested simpleHorn                                                 :6_4:Other "modi:
****************************** > |^|                                                             :6_4:Other "modi:
****************************** / $*|                                                             :6_4:Other "modi:
******************************* / slMultiTerm                                                   :6_4:Other "modi:
******************************** / someSL                                                      :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

******************************** \ someSL has returned (["modification"],0)                     :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

******************************* \ slMultiTerm has returned (["modification"],0)                  :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

****************************** \ $*| has returned (["modification"],0)                            :7_4:UnDeeper:
****************************** / |^| deeps                                                        :7_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

****************************** \ |^| deeps has returned ([()],-1)                              :7_3:Or:
nested simpleHorn> IN: Other "modification" UnDeeper Or GoDeepe <…>
nested simpleHorn> MATCH (CERR): Other "modification" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=27:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

***************************** / RPConstraint                                                      :6_4:Other "modi:
****************************** / $*|                                                             :6_4:Other "modi:
******************************* / slMultiTerm                                                   :6_4:Other "modi:
******************************** / someSL                                                      :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

******************************** \ someSL has returned (["modification"],0)                     :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

******************************* \ slMultiTerm has returned (["modification"],0)                  :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

****************************** \ $*| has returned (["modification"],0)                            :7_4:UnDeeper:
****************************** / |>| calling $>>                                                  :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=26:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPConstraint> MATCH (CERR): Other "modification"
RPConstraint> ERROR:
RPConstraint> offset=26:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPBoolStructR                                                     :6_4:Other "modi:
****************************** / $*|                                                             :6_4:Other "modi:
******************************* / slMultiTerm                                                   :6_4:Other "modi:
******************************** / someSL                                                      :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

******************************** \ someSL has returned (["modification"],0)                     :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

******************************* \ slMultiTerm has returned (["modification"],0)                  :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

****************************** \ $*| has returned (["modification"],0)                            :7_4:UnDeeper:
****************************** / |>| calling $>>                                                  :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************* / |>>/base                                                       :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=26:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPBoolStructR> MATCH (CERR): Other "modification"
RPBoolStructR> ERROR:
RPBoolStructR> offset=26:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

***************************** / RPMT                                                              :6_4:Other "modi:
****************************** / $*|                                                             :6_4:Other "modi:
******************************* / slAKA                                                         :6_4:Other "modi:
******************************** / $*|                                                         :6_4:Other "modi:
********************************* / slAKA base                                                :6_4:Other "modi:
********************************** / slMultiTerm                                             :6_4:Other "modi:
*********************************** / someSL                                                :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

*********************************** \ someSL has returned (["modification"],0)               :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

********************************** \ slMultiTerm has returned (["modification"],0)            :7_4:UnDeeper:
slAKA base> IN: Other "modification" UnDeeper Or GoDeepe <…>
slAKA base> MATCH (COK): Other "modification"
slAKA base> VALUE: ((["modification"],0),[])

********************************* \ slAKA base has returned (["modification"],0)               :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************************** \ $*| has returned (["modification"],0)                        :7_4:UnDeeper:
******************************** / |>>/recurse                                                  :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :7_4:UnDeeper:
********************************* / slAKA optional akapart                                     :7_4:UnDeeper:
********************************** / |?| optional something                                   :7_4:UnDeeper:
*********************************** / |>>/recurse                                            :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :7_4:UnDeeper:
************************************ / PAKA/akapart                                         :7_4:UnDeeper:
************************************* / $>|                                                :7_4:UnDeeper:
************************************** / Aka Token                                        :7_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=26:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=26:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=26:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :7_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional akapart has returned (Nothing,0)            :7_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :7_4:UnDeeper:
******************************** / |>>/recurse                                                  :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

******************************** / |>>/base                                                     :7_4:UnDeeper:
********************************* / slAKA optional typically                                   :7_4:UnDeeper:
********************************** / |?| optional something                                   :7_4:UnDeeper:
*********************************** / |>>/recurse                                            :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

*********************************** / |>>/base                                               :7_4:UnDeeper:
************************************ / typically                                            :7_4:UnDeeper:
************************************* / $>|                                                :7_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=26:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=26:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)          :7_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional typically has returned (Nothing,0)          :7_4:UnDeeper:
********************************* > |>>/base got Nothing                                       :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                            :7_4:UnDeeper:
******************************** > slAKA: proceeding after base and entityalias are retrieved ... :7_4:UnDeeper:
******************************** > pAKA: entityalias = Nothing                                  :7_4:UnDeeper:
slAKA> IN: Other "modification" UnDeeper Or GoDeepe <…>
slAKA> MATCH (COK): Other "modification"
slAKA> VALUE: ((["modification"],0),[])

******************************* \ slAKA has returned (["modification"],0)                        :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

****************************** \ $*| has returned (["modification"],0)                            :7_4:UnDeeper:
RPMT> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPMT> MATCH (COK): Other "modification"
RPMT> VALUE: ((RPMT ["modification"],0),[])

***************************** \ RPMT has returned (RPMT ["modification"],0)                        :7_4:UnDeeper:
slRelPred> IN: Other "modification" UnDeeper Or GoDeepe <…>
slRelPred> MATCH (COK): Other "modification"
slRelPred> VALUE: ((RPMT ["modification"],0),[])

**************************** \ slRelPred has returned (RPMT ["modification"],0)                     :7_4:UnDeeper:
**************************** / undeepers                                                            :7_4:UnDeeper:
***************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_4:UnDeeper:
***************************** > sameLine: success!                                                 :7_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************************** \ undeepers has returned ()                                            :7_4:UnDeeper:
pRelPred> IN: Other "modification" UnDeeper Or GoDeepe <…>
pRelPred> MATCH (COK): Other "modification"
pRelPred> VALUE: (RPMT ["modification"],[])

*************************** \ pRelPred has returned RPMT ["modification"]                            :7_4:UnDeeper:
term p/3:plain p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/3:plain p> MATCH (COK): Other "modification"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["modification"]),[])

************************** \ term p/3:plain p has returned MyLeaf (RPMT ["modification"])             :7_4:UnDeeper:
term p/notLabelTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/notLabelTerm> MATCH (COK): Other "modification"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["modification"]),[])

************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])            :7_4:UnDeeper:
term p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p> MATCH (COK): Other "modification"
term p> VALUE: (MyLeaf (RPMT ["modification"]),[])

************************ \ term p has returned MyLeaf (RPMT ["modification"])                           :7_4:UnDeeper:
************************ / binary(Or)                                                                   :7_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=26:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************************ / binary(And)                                                                  :7_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=26:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************************ / binary(SetLess)                                                              :7_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=26:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************************ / binary(SetPlus)                                                              :7_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=26:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "modification" UnDeeper Or GoDeepe <…>
expression> MATCH (COK): Other "modification"
expression> VALUE: (MyLeaf (RPMT ["modification"]),[])

*********************** \ expression has returned MyLeaf (RPMT ["modification"])                         :7_4:UnDeeper:
manyIndentation/leaf?> IN: Other "modification" UnDeeper Or GoDeepe <…>
manyIndentation/leaf?> MATCH (COK): Other "modification"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["modification"]),[])

********************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["modification"])                :7_4:UnDeeper:
********************** / myindented: consuming UnDeeper                                                   :7_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

********************** \ myindented: consuming UnDeeper has returned UnDeeper                          :7_3:Or:
someIndentation> IN: GoDeeper Other "modification" UnDeeper O <…>
someIndentation> MATCH (COK): GoDeeper Other "modification" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["modification"]),[])

********************* \ someIndentation has returned MyLeaf (RPMT ["modification"])                     :7_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["modification"]),[])

******************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["modification"])       :7_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["modification"]),[])

******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])                     :7_3:Or:
term p> IN: GoDeeper Other "modification" UnDeeper O <…>
term p> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["modification"]),[])

****************** \ term p has returned MyLeaf (RPMT ["modification"])                                    :7_3:Or:
****************** / binary(Or)                                                                            :7_3:Or:
binary(Or)> IN: Or GoDeeper Other "disposal" GoDeeper Ty <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

****************** \ binary(Or) has returned Or                                                             :7_4:GoDeeper:
****************** / term p                                                                                 :7_4:GoDeeper:
******************* / term p/1a:label directly above                                                       :7_4:GoDeeper:
******************** / $*|                                                                                :7_4:GoDeeper:
********************* / someSL                                                                           :7_4:GoDeeper:
********************** / pNumAsText                                                                     :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=28:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

******************* / term p/b:label to the left of line below, with EOL                                   :7_4:GoDeeper:
******************** / someSL                                                                             :7_4:GoDeeper:
********************* / pNumAsText                                                                       :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=28:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******************* / term p/notLabelTerm                                                                  :7_4:GoDeeper:
******************** / term p/2:someIndentation expr p                                                    :7_4:GoDeeper:
********************* / someIndentation                                                                  :7_4:GoDeeper:
********************** / myindented: consuming GoDeeper                                                 :7_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented: consuming GoDeeper has returned GoDeeper                            :7_4:Other "disp:
********************** / manyIndentation/leaf?                                                           :7_4:Other "disp:
*********************** / expression                                                                    :7_4:Other "disp:
************************ / labelPrefix                                                                 :7_4:Other "disp:
labelPrefix> IN: Other "disposal" GoDeeper Typically GoDe <…>
labelPrefix> MATCH (COK): Other "disposal"
labelPrefix> VALUE: ("disposal",[])

************************ \ labelPrefix has returned "disposal"                                          :7_5:GoDeeper:
************************ / term p                                                                       :7_5:GoDeeper:
************************* / term p/1a:label directly above                                             :7_5:GoDeeper:
************************** / $*|                                                                      :7_5:GoDeeper:
*************************** / someSL                                                                 :7_5:GoDeeper:
**************************** / pNumAsText                                                           :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=30:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

************************* / term p/b:label to the left of line below, with EOL                         :7_5:GoDeeper:
************************** / someSL                                                                   :7_5:GoDeeper:
*************************** / pNumAsText                                                             :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=30:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

************************* / term p/notLabelTerm                                                        :7_5:GoDeeper:
************************** / term p/2:someIndentation expr p                                          :7_5:GoDeeper:
*************************** / someIndentation                                                        :7_5:GoDeeper:
**************************** / myindented: consuming GoDeeper                                       :7_5:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Typically GoDeeper Other "True" <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

**************************** \ myindented: consuming GoDeeper has returned GoDeeper                  :7_5:Typically:
**************************** / manyIndentation/leaf?                                                 :7_5:Typically:
***************************** / expression                                                          :7_5:Typically:
****************************** / labelPrefix                                                       :7_5:Typically:
labelPrefix> IN: Typically GoDeeper Other "True" UnDeeper <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=31:
labelPrefix> unexpected Typically
labelPrefix> expecting Other text

****************************** / term p                                                            :7_5:Typically:
******************************* / term p/1a:label directly above                                  :7_5:Typically:
******************************** / $*|                                                           :7_5:Typically:
********************************* / someSL                                                      :7_5:Typically:
********************************** / pNumAsText                                                :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=31:
term p/1a:label directly above> unexpected Typically
term p/1a:label directly above> expecting Other text or TNumber 1234

******************************* / term p/b:label to the left of line below, with EOL              :7_5:Typically:
******************************** / someSL                                                        :7_5:Typically:
********************************* / pNumAsText                                                  :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=31:
term p/b:label to the left of line below, with EOL> unexpected Typically
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

******************************* / term p/notLabelTerm                                             :7_5:Typically:
******************************** / term p/2:someIndentation expr p                               :7_5:Typically:
********************************* / someIndentation                                             :7_5:Typically:
********************************** / myindented: consuming GoDeeper                            :7_5:Typically:
myindented: consuming GoDeeper> IN: Typically GoDeeper Other "True" UnDeeper <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=31:
myindented: consuming GoDeeper> unexpected Typically
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper

******************************** / term p/3:plain p                                              :7_5:Typically:
********************************* / pRelPred                                                    :7_5:Typically:
********************************** / slRelPred                                                 :7_5:Typically:
*********************************** / nested simpleHorn                                       :7_5:Typically:
************************************ > |^|                                                   :7_5:Typically:
************************************ / $*|                                                   :7_5:Typically:
************************************* / slMultiTerm                                         :7_5:Typically:
************************************** / someSL                                            :7_5:Typically:
*************************************** / pNumAsText                                      :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: Typically GoDeeper Other "True" UnDeeper <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=31:
nested simpleHorn> unexpected Typically
nested simpleHorn> expecting Other text or TNumber 1234

*********************************** / RPConstraint                                            :7_5:Typically:
************************************ / $*|                                                   :7_5:Typically:
************************************* / slMultiTerm                                         :7_5:Typically:
************************************** / someSL                                            :7_5:Typically:
*************************************** / pNumAsText                                      :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=31:
RPConstraint> unexpected Typically
RPConstraint> expecting Other text or TNumber 1234

*********************************** / RPBoolStructR                                           :7_5:Typically:
************************************ / $*|                                                   :7_5:Typically:
************************************* / slMultiTerm                                         :7_5:Typically:
************************************** / someSL                                            :7_5:Typically:
*************************************** / pNumAsText                                      :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=31:
RPBoolStructR> unexpected Typically
RPBoolStructR> expecting Other text or TNumber 1234

*********************************** / RPMT                                                    :7_5:Typically:
************************************ / $*|                                                   :7_5:Typically:
************************************* / slAKA                                               :7_5:Typically:
************************************** / $*|                                               :7_5:Typically:
*************************************** / slAKA base                                      :7_5:Typically:
**************************************** / slMultiTerm                                   :7_5:Typically:
***************************************** / someSL                                      :7_5:Typically:
****************************************** / pNumAsText                                :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: Typically GoDeeper Other "True" UnDeeper <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=31:
slAKA base> unexpected Typically
slAKA base> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

slAKA> IN: Typically GoDeeper Other "True" UnDeeper <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=31:
slAKA> unexpected Typically
slAKA> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPMT> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=31:
RPMT> unexpected Typically
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: Typically GoDeeper Other "True" UnDeeper <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=31:
slRelPred> unexpected Typically
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: Typically GoDeeper Other "True" UnDeeper <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=31:
pRelPred> unexpected Typically
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=31:
term p/3:plain p> unexpected Typically
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper or term

term p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, Other text, TNumber 1234, or term

expression> IN: Typically GoDeeper Other "True" UnDeeper <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting expression

manyIndentation/leaf?> IN: Typically GoDeeper Other "True" UnDeeper <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting expression

**************************** / manyIndentation/deeper; calling someIndentation                       :7_5:Typically:
***************************** / someIndentation                                                     :7_5:Typically:
****************************** / myindented: consuming GoDeeper                                    :7_5:Typically:
myindented: consuming GoDeeper> IN: Typically GoDeeper Other "True" UnDeeper <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=31:
myindented: consuming GoDeeper> unexpected Typically
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=31:
manyIndentation/deeper; calling someIndentation> unexpected Typically
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Typically GoDeeper Other "True" <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper or expression

term p/2:someIndentation expr p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper or expression

************************** / term p/3:plain p                                                         :7_5:GoDeeper:
*************************** / pRelPred                                                               :7_5:GoDeeper:
**************************** / slRelPred                                                            :7_5:GoDeeper:
***************************** / nested simpleHorn                                                  :7_5:GoDeeper:
****************************** > |^|                                                              :7_5:GoDeeper:
****************************** / $*|                                                              :7_5:GoDeeper:
******************************* / slMultiTerm                                                    :7_5:GoDeeper:
******************************** / someSL                                                       :7_5:GoDeeper:
********************************* / pNumAsText                                                 :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Typically GoDeeper Other "True" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=30:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

***************************** / RPConstraint                                                       :7_5:GoDeeper:
****************************** / $*|                                                              :7_5:GoDeeper:
******************************* / slMultiTerm                                                    :7_5:GoDeeper:
******************************** / someSL                                                       :7_5:GoDeeper:
********************************* / pNumAsText                                                 :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=30:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

***************************** / RPBoolStructR                                                      :7_5:GoDeeper:
****************************** / $*|                                                              :7_5:GoDeeper:
******************************* / slMultiTerm                                                    :7_5:GoDeeper:
******************************** / someSL                                                       :7_5:GoDeeper:
********************************* / pNumAsText                                                 :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=30:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

***************************** / RPMT                                                               :7_5:GoDeeper:
****************************** / $*|                                                              :7_5:GoDeeper:
******************************* / slAKA                                                          :7_5:GoDeeper:
******************************** / $*|                                                          :7_5:GoDeeper:
********************************* / slAKA base                                                 :7_5:GoDeeper:
********************************** / slMultiTerm                                              :7_5:GoDeeper:
*********************************** / someSL                                                 :7_5:GoDeeper:
************************************ / pNumAsText                                           :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Typically GoDeeper Other "True" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=30:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Typically GoDeeper Other "True" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=30:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=30:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Typically GoDeeper Other "True" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=30:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Typically GoDeeper Other "True" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=30:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=30:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper or expression

term p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper or expression

expression> IN: Other "disposal" GoDeeper Typically GoDe <…>
expression> MATCH (CERR): Other "disposal"
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting GoDeeper, MPNot, or expression

manyIndentation/leaf?> IN: Other "disposal" GoDeeper Typically GoDe <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting GoDeeper, MPNot, or expression

********************** / manyIndentation/deeper; calling someIndentation                                 :7_4:Other "disp:
*********************** / someIndentation                                                               :7_4:Other "disp:
************************ / myindented: consuming GoDeeper                                              :7_4:Other "disp:
myindented: consuming GoDeeper> IN: Other "disposal" GoDeeper Typically GoDe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=29:
myindented: consuming GoDeeper> unexpected Other "disposal"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "disposal" GoDeeper Typically GoDe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=29:
someIndentation> unexpected Other "disposal"
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Other "disposal" GoDeeper Typically GoDe <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=29:
manyIndentation/deeper; calling someIndentation> unexpected Other "disposal"
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper, MPNot, or expression

term p/2:someIndentation expr p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper, MPNot, or expression

******************** / term p/3:plain p                                                                   :7_4:GoDeeper:
********************* / pRelPred                                                                         :7_4:GoDeeper:
********************** / slRelPred                                                                      :7_4:GoDeeper:
*********************** / nested simpleHorn                                                            :7_4:GoDeeper:
************************ > |^|                                                                        :7_4:GoDeeper:
************************ / $*|                                                                        :7_4:GoDeeper:
************************* / slMultiTerm                                                              :7_4:GoDeeper:
************************** / someSL                                                                 :7_4:GoDeeper:
*************************** / pNumAsText                                                           :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=28:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

*********************** / RPConstraint                                                                 :7_4:GoDeeper:
************************ / $*|                                                                        :7_4:GoDeeper:
************************* / slMultiTerm                                                              :7_4:GoDeeper:
************************** / someSL                                                                 :7_4:GoDeeper:
*************************** / pNumAsText                                                           :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=28:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

*********************** / RPBoolStructR                                                                :7_4:GoDeeper:
************************ / $*|                                                                        :7_4:GoDeeper:
************************* / slMultiTerm                                                              :7_4:GoDeeper:
************************** / someSL                                                                 :7_4:GoDeeper:
*************************** / pNumAsText                                                           :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=28:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

*********************** / RPMT                                                                         :7_4:GoDeeper:
************************ / $*|                                                                        :7_4:GoDeeper:
************************* / slAKA                                                                    :7_4:GoDeeper:
************************** / $*|                                                                    :7_4:GoDeeper:
*************************** / slAKA base                                                           :7_4:GoDeeper:
**************************** / slMultiTerm                                                        :7_4:GoDeeper:
***************************** / someSL                                                           :7_4:GoDeeper:
****************************** / pNumAsText                                                     :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=28:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=28:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=28:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=28:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=28:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=28:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper, MPNot, or expression

term p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, MPNot, or expression

expression> IN: Other "unauthorised" GoDeeper Other "acc <…>
expression> MATCH (CERR): Other "unauthorised" GoDeeper Other "acc <…>
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting GoDeeper, MPNot, or expression

manyIndentation/leaf?> IN: Other "unauthorised" GoDeeper Other "acc <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting GoDeeper, MPNot, or expression

**************** / manyIndentation/deeper; calling someIndentation                                           :2_3:Other "unau:
***************** / someIndentation                                                                         :2_3:Other "unau:
****************** / myindented: consuming GoDeeper                                                        :2_3:Other "unau:
myindented: consuming GoDeeper> IN: Other "unauthorised" GoDeeper Other "acc <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=7:
myindented: consuming GoDeeper> unexpected Other "unauthorised"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "unauthorised" GoDeeper Other "acc <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=7:
someIndentation> unexpected Other "unauthorised"
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Other "unauthorised" GoDeeper Other "acc <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=7:
manyIndentation/deeper; calling someIndentation> unexpected Other "unauthorised"
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper, MPNot, or expression

term p/2:someIndentation expr p> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper, MPNot, or expression

************** / term p/3:plain p                                                                             :2_3:GoDeeper:
*************** / pRelPred                                                                                   :2_3:GoDeeper:
**************** / slRelPred                                                                                :2_3:GoDeeper:
***************** / nested simpleHorn                                                                      :2_3:GoDeeper:
****************** > |^|                                                                                  :2_3:GoDeeper:
****************** / $*|                                                                                  :2_3:GoDeeper:
******************* / slMultiTerm                                                                        :2_3:GoDeeper:
******************** / someSL                                                                           :2_3:GoDeeper:
********************* / pNumAsText                                                                     :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=6:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=6:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=6:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=6:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

***************** / RPConstraint                                                                           :2_3:GoDeeper:
****************** / $*|                                                                                  :2_3:GoDeeper:
******************* / slMultiTerm                                                                        :2_3:GoDeeper:
******************** / someSL                                                                           :2_3:GoDeeper:
********************* / pNumAsText                                                                     :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=6:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=6:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=6:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=6:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

***************** / RPBoolStructR                                                                          :2_3:GoDeeper:
****************** / $*|                                                                                  :2_3:GoDeeper:
******************* / slMultiTerm                                                                        :2_3:GoDeeper:
******************** / someSL                                                                           :2_3:GoDeeper:
********************* / pNumAsText                                                                     :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=6:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=6:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=6:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=6:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

***************** / RPMT                                                                                   :2_3:GoDeeper:
****************** / $*|                                                                                  :2_3:GoDeeper:
******************* / slAKA                                                                              :2_3:GoDeeper:
******************** / $*|                                                                              :2_3:GoDeeper:
********************* / slAKA base                                                                     :2_3:GoDeeper:
********************** / slMultiTerm                                                                  :2_3:GoDeeper:
*********************** / someSL                                                                     :2_3:GoDeeper:
************************ / pNumAsText                                                               :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=6:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=6:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=6:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=6:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=6:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=6:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=6:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=6:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=6:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=6:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper, MPNot, or expression

term p> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, MPNot, or expression

expression> IN: Other "any" GoDeeper Other "unauthorised <…>
expression> MATCH (CERR): Other "any"
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting GoDeeper, MPNot, or expression

manyIndentation/leaf?> IN: Other "any" GoDeeper Other "unauthorised <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting GoDeeper, MPNot, or expression

********** / manyIndentation/deeper; calling someIndentation                                                     :2_2:Other "any":
*********** / someIndentation                                                                                   :2_2:Other "any":
************ / myindented: consuming GoDeeper                                                                  :2_2:Other "any":
myindented: consuming GoDeeper> IN: Other "any" GoDeeper Other "unauthorised <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=5:
myindented: consuming GoDeeper> unexpected Other "any"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "any" GoDeeper Other "unauthorised <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=5:
someIndentation> unexpected Other "any"
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Other "any" GoDeeper Other "unauthorised <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=5:
manyIndentation/deeper; calling someIndentation> unexpected Other "any"
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Other "any" GoDeeper Other "una <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper, MPNot, or expression

term p/2:someIndentation expr p> IN: GoDeeper Other "any" GoDeeper Other "una <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper, MPNot, or expression

******** / term p/3:plain p                                                                                       :2_2:GoDeeper:
********* / pRelPred                                                                                             :2_2:GoDeeper:
********** / slRelPred                                                                                          :2_2:GoDeeper:
*********** / nested simpleHorn                                                                                :2_2:GoDeeper:
************ > |^|                                                                                            :2_2:GoDeeper:
************ / $*|                                                                                            :2_2:GoDeeper:
************* / slMultiTerm                                                                                  :2_2:GoDeeper:
************** / someSL                                                                                     :2_2:GoDeeper:
*************** / pNumAsText                                                                               :2_2:GoDeeper:
pNumAsText> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "any" GoDeeper Other "una <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "any" GoDeeper Other "una <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Other "any" GoDeeper Other "una <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

*********** / RPConstraint                                                                                     :2_2:GoDeeper:
************ / $*|                                                                                            :2_2:GoDeeper:
************* / slMultiTerm                                                                                  :2_2:GoDeeper:
************** / someSL                                                                                     :2_2:GoDeeper:
*************** / pNumAsText                                                                               :2_2:GoDeeper:
pNumAsText> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "any" GoDeeper Other "una <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "any" GoDeeper Other "una <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Other "any" GoDeeper Other "una <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

*********** / RPBoolStructR                                                                                    :2_2:GoDeeper:
************ / $*|                                                                                            :2_2:GoDeeper:
************* / slMultiTerm                                                                                  :2_2:GoDeeper:
************** / someSL                                                                                     :2_2:GoDeeper:
*************** / pNumAsText                                                                               :2_2:GoDeeper:
pNumAsText> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "any" GoDeeper Other "una <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "any" GoDeeper Other "una <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Other "any" GoDeeper Other "una <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

*********** / RPMT                                                                                             :2_2:GoDeeper:
************ / $*|                                                                                            :2_2:GoDeeper:
************* / slAKA                                                                                        :2_2:GoDeeper:
************** / $*|                                                                                        :2_2:GoDeeper:
*************** / slAKA base                                                                               :2_2:GoDeeper:
**************** / slMultiTerm                                                                            :2_2:GoDeeper:
***************** / someSL                                                                               :2_2:GoDeeper:
****************** / pNumAsText                                                                         :2_2:GoDeeper:
pNumAsText> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "any" GoDeeper Other "una <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "any" GoDeeper Other "una <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Other "any" GoDeeper Other "una <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Other "any" GoDeeper Other "una <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Other "any" GoDeeper Other "una <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Other "any" GoDeeper Other "una <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Other "any" GoDeeper Other "una <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=4:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Other "any" GoDeeper Other "una <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper, MPNot, or expression

term p> IN: GoDeeper Other "any" GoDeeper Other "una <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, MPNot, or expression

expression> IN: GoDeeper Other "any" GoDeeper Other "una <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting expression

ppp inner> IN: GoDeeper Other "any" GoDeeper Other "una <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=31:
ppp inner> unexpected Typically
ppp inner> expecting expression

**** / withPrePost                                                                                                    :2_2:GoDeeper:
***** > |<* starting                                                                                                 :2_2:GoDeeper:
***** / $*|                                                                                                          :2_2:GoDeeper:
****** / pre part                                                                                                   :2_2:GoDeeper:
******* / aboveNextLineKeyword                                                                                      :2_2:Other "any":
******** / expectUnDeepers                                                                                         :2_2:Other "any":
********* / pNumAsText                                                                                             :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["any","GD","unauthorised","GD","access"]                                                         :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: Other "any" GoDeeper Other "unauthorised <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                          :2_2:Other "any":
******** > aNLK: determined undp_count = 1                                                                         :2_2:Other "any":
******** > ->| trying to consume 1 GoDeepers                                                                       :2_2:Other "any":
******** / $*|                                                                                                     :2_2:Other "any":
$*|> IN: Other "any" GoDeeper Other "unauthorised <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                 :2_2:Other "any":
aboveNextLineKeyword> IN: Other "any" GoDeeper Other "unauthorised <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=5:
aboveNextLineKeyword> unexpected Other "any"
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                             :2_2:Other "any":
******* / aboveNextLineKeyword                                                                                       :2_3:GoDeeper:
******** / expectUnDeepers                                                                                          :2_3:GoDeeper:
********* / pNumAsText                                                                                             :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["GD","unauthorised","GD","access"]                                                               :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                           :2_3:GoDeeper:
******** > aNLK: determined undp_count = 1                                                                          :2_3:GoDeeper:
******** > ->| trying to consume 1 GoDeepers                                                                        :2_3:GoDeeper:
******** / $*|                                                                                                      :2_3:GoDeeper:
$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                  :2_3:GoDeeper:
******** > ->| success                                                                                               :2_3:Other "unau:
******** / |>>/recurse                                                                                               :2_3:Other "unau:
|>>/recurse> IN: Other "unauthorised" GoDeeper Other "acc <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=7:
|>>/recurse> unexpected Other "unauthorised"
|>>/recurse> expecting GoDeeper

******** / |>>/base                                                                                                  :2_3:Other "unau:
********* / slMultiTerm                                                                                             :2_3:Other "unau:
********** / someSL                                                                                                :2_3:Other "unau:
someSL> IN: Other "unauthorised" GoDeeper Other "acc <…>
someSL> MATCH (COK): Other "unauthorised" GoDeeper Other "acc <…>
someSL> VALUE: ((["unauthorised","access"],1),[])

********** \ someSL has returned (["unauthorised","access"],1)                                                        :3_4:UnDeeper:
slMultiTerm> IN: Other "unauthorised" GoDeeper Other "acc <…>
slMultiTerm> MATCH (COK): Other "unauthorised" GoDeeper Other "acc <…>
slMultiTerm> VALUE: ((["unauthorised","access"],1),[])

********* \ slMultiTerm has returned (["unauthorised","access"],1)                                                     :3_4:UnDeeper:
********* > |>>/base got ["unauthorised","access"]                                                                     :3_4:UnDeeper:
|>>/base> IN: Other "unauthorised" GoDeeper Other "acc <…>
|>>/base> MATCH (COK): Other "unauthorised" GoDeeper Other "acc <…>
|>>/base> VALUE: ((["unauthorised","access"],1),[])

******** \ |>>/base has returned (["unauthorised","access"],1)                                                          :3_4:UnDeeper:
******** > aNLK: current depth is 2                                                                                     :3_4:UnDeeper:
******** > |<|                                                                                                          :3_4:UnDeeper:
******** > |<* starting                                                                                                 :3_4:UnDeeper:
******** / |<*/parent                                                                                                   :3_4:UnDeeper:
********* > |<*/recurse                                                                                                :3_4:UnDeeper:
********* > |<*/recurse matched 1 UnDeepers                                                                          :3_4:GoDeeper:
|<*/parent> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|<*/parent> MATCH (COK): UnDeeper Or
|<*/parent> VALUE: ((Or,-1),[])

******** \ |<*/parent has returned (Or,-1)                                                                            :3_4:GoDeeper:
******** > aNLK: slMultiTerm is ["unauthorised","access"]                                                             :3_4:GoDeeper:
aboveNextLineKeyword> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
aboveNextLineKeyword> MATCH (CERR): GoDeeper Other "unauthorised" GoDeeper O <…>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=12:
aboveNextLineKeyword> aNLK: expecting depth 1 but the cursor seems to be placed such that we have 2; a different backtrack will probably fare better

******* > /*= lookAhead failed, delegating to plain /+=                                                              :2_3:GoDeeper:
******* / aboveNextLineKeyword                                                                                        :2_3:Other "unau:
******** / expectUnDeepers                                                                                           :2_3:Other "unau:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["unauthorised","GD","access"]                                                                    :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: Other "unauthorised" GoDeeper Other "acc <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                            :2_3:Other "unau:
******** > aNLK: determined undp_count = 1                                                                           :2_3:Other "unau:
******** > ->| trying to consume 1 GoDeepers                                                                         :2_3:Other "unau:
******** / $*|                                                                                                       :2_3:Other "unau:
$*|> IN: Other "unauthorised" GoDeeper Other "acc <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                   :2_3:Other "unau:
aboveNextLineKeyword> IN: Other "unauthorised" GoDeeper Other "acc <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=7:
aboveNextLineKeyword> unexpected Other "unauthorised"
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                               :2_3:Other "unau:
******* / aboveNextLineKeyword                                                                                         :2_4:GoDeeper:
******** / expectUnDeepers                                                                                            :2_4:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["GD","access"]                                                                                   :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                             :2_4:GoDeeper:
******** > aNLK: determined undp_count = 1                                                                            :2_4:GoDeeper:
******** > ->| trying to consume 1 GoDeepers                                                                          :2_4:GoDeeper:
******** / $*|                                                                                                        :2_4:GoDeeper:
$*|> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                    :2_4:GoDeeper:
******** > ->| success                                                                                                 :2_4:Other "acce:
******** / |>>/recurse                                                                                                 :2_4:Other "acce:
|>>/recurse> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=9:
|>>/recurse> unexpected Other "access"
|>>/recurse> expecting GoDeeper

******** / |>>/base                                                                                                    :2_4:Other "acce:
********* / slMultiTerm                                                                                               :2_4:Other "acce:
********** / someSL                                                                                                  :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********** \ someSL has returned (["access"],0)                                                                       :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********* \ slMultiTerm has returned (["access"],0)                                                                    :3_4:UnDeeper:
********* > |>>/base got ["access"]                                                                                    :3_4:UnDeeper:
|>>/base> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
|>>/base> MATCH (COK): Other "access"
|>>/base> VALUE: ((["access"],0),[])

******** \ |>>/base has returned (["access"],0)                                                                         :3_4:UnDeeper:
******** > aNLK: current depth is 1                                                                                     :3_4:UnDeeper:
******** > |<|                                                                                                          :3_4:UnDeeper:
******** > |<* starting                                                                                                 :3_4:UnDeeper:
******** / |<*/parent                                                                                                   :3_4:UnDeeper:
********* > |<*/recurse                                                                                                :3_4:UnDeeper:
********* > |<*/recurse matched 1 UnDeepers                                                                          :3_4:GoDeeper:
|<*/parent> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|<*/parent> MATCH (COK): UnDeeper Or
|<*/parent> VALUE: ((Or,-1),[])

******** \ |<*/parent has returned (Or,-1)                                                                            :3_4:GoDeeper:
******** > aNLK: slMultiTerm is ["access"]                                                                            :3_4:GoDeeper:
aboveNextLineKeyword> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
aboveNextLineKeyword> MATCH (COK): GoDeeper Other "access" UnDeeper Or
aboveNextLineKeyword> VALUE: (((["access"],Or),0),[])

******* \ aboveNextLineKeyword has returned ((["access"],Or),0)                                                        :3_4:GoDeeper:
******* > /*= lookAhead succeeded, recursing greedily                                                                  :2_4:GoDeeper:
******* / aboveNextLineKeyword                                                                                          :2_4:Other "acce:
******** / expectUnDeepers                                                                                             :2_4:Other "acce:
********* > ignoring ["access"]                                                                                        :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                              :2_4:Other "acce:
******** > aNLK: determined undp_count = 1                                                                             :2_4:Other "acce:
******** > ->| trying to consume 1 GoDeepers                                                                           :2_4:Other "acce:
******** / $*|                                                                                                         :2_4:Other "acce:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                     :2_4:Other "acce:
aboveNextLineKeyword> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=9:
aboveNextLineKeyword> unexpected Other "access"
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                                 :2_4:Other "acce:
******* / aboveNextLineKeyword                                                                                           :3_4:UnDeeper:
******** / expectUnDeepers                                                                                              :3_4:UnDeeper:
********* > ignoring []                                                                                                :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                               :3_4:UnDeeper:
******** > aNLK: determined undp_count = 1                                                                              :3_4:UnDeeper:
******** > ->| trying to consume 1 GoDeepers                                                                            :3_4:UnDeeper:
******** / $*|                                                                                                          :3_4:UnDeeper:
$*|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                      :3_4:UnDeeper:
aboveNextLineKeyword> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=10:
aboveNextLineKeyword> unexpected UnDeeper
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                                  :3_4:UnDeeper:
******* > /*= lookAhead succeeded, greedy recursion failed (no p1); returning p2.                                      :2_4:GoDeeper:
pre part> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pre part> MATCH (COK): GoDeeper Other "any" GoDeeper Other "una <…>
pre part> VALUE: ((["any","unauthorised"],2),[])

****** \ pre part has returned (["any","unauthorised"],2)                                                               :2_4:GoDeeper:
$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (COK): GoDeeper Other "any" GoDeeper Other "una <…>
$*|> VALUE: ((["any","unauthorised"],2),[])

***** \ $*| has returned (["any","unauthorised"],2)                                                                      :2_4:GoDeeper:
***** / made it to inner base parser                                                                                     :2_4:GoDeeper:
****** / ppp inner                                                                                                      :2_4:GoDeeper:
******* / expression                                                                                                   :2_4:GoDeeper:
******** / labelPrefix                                                                                                :2_4:GoDeeper:
labelPrefix> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=8:
labelPrefix> unexpected GoDeeper
labelPrefix> expecting Other text

******** / term p                                                                                                     :2_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :2_4:GoDeeper:
********** / $*|                                                                                                    :2_4:GoDeeper:
*********** / someSL                                                                                               :2_4:GoDeeper:
************ / pNumAsText                                                                                         :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=8:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=8:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=8:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :2_4:GoDeeper:
********** / someSL                                                                                                 :2_4:GoDeeper:
*********** / pNumAsText                                                                                           :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=8:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=8:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :2_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :2_4:GoDeeper:
*********** / someIndentation                                                                                      :2_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :2_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :2_4:Other "acce:
************ / manyIndentation/leaf?                                                                               :2_4:Other "acce:
************* / expression                                                                                        :2_4:Other "acce:
************** / labelPrefix                                                                                     :2_4:Other "acce:
labelPrefix> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=10:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :2_4:Other "acce:
*************** / term p/1a:label directly above                                                                :2_4:Other "acce:
**************** / $*|                                                                                         :2_4:Other "acce:
***************** / someSL                                                                                    :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

***************** \ someSL has returned (["access"],0)                                                         :3_4:UnDeeper:
***************** / pNumAsText                                                                                 :3_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=10:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (CERR): Other "access"
$*|> ERROR:
$*|> offset=10:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/1a:label directly above> MATCH (CERR): Other "access"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=10:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :2_4:Other "acce:
**************** / someSL                                                                                      :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

**************** \ someSL has returned (["access"],0)                                                           :3_4:UnDeeper:
**************** / undeepers                                                                                    :3_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :3_4:UnDeeper:
***************** > sameLine: success!                                                                         :3_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :3_4:UnDeeper:
**************** / matching EOL                                                                                 :3_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=10:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "access"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=10:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :2_4:Other "acce:
**************** / term p/2:someIndentation expr p                                                             :2_4:Other "acce:
***************** / someIndentation                                                                           :2_4:Other "acce:
****************** / myindented: consuming GoDeeper                                                          :2_4:Other "acce:
myindented: consuming GoDeeper> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=9:
myindented: consuming GoDeeper> unexpected Other "access"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=9:
someIndentation> unexpected Other "access"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=9:
term p/2:someIndentation expr p> unexpected Other "access"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :2_4:Other "acce:
***************** / pRelPred                                                                                  :2_4:Other "acce:
****************** / slRelPred                                                                               :2_4:Other "acce:
******************* / nested simpleHorn                                                                     :2_4:Other "acce:
******************** > |^|                                                                                 :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slMultiTerm                                                                       :2_4:Other "acce:
********************** / someSL                                                                          :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********************** \ someSL has returned (["access"],0)                                               :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********************* \ slMultiTerm has returned (["access"],0)                                            :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
******************** / |^| deeps                                                                            :3_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :3_3:Or:
nested simpleHorn> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
nested simpleHorn> MATCH (CERR): Other "access" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=11:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slMultiTerm                                                                       :2_4:Other "acce:
********************** / someSL                                                                          :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********************** \ someSL has returned (["access"],0)                                               :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********************* \ slMultiTerm has returned (["access"],0)                                            :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
******************** / |>| calling $>>                                                                      :3_4:UnDeeper:
********************* / |>>/recurse                                                                        :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=10:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPConstraint> MATCH (CERR): Other "access"
RPConstraint> ERROR:
RPConstraint> offset=10:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slMultiTerm                                                                       :2_4:Other "acce:
********************** / someSL                                                                          :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********************** \ someSL has returned (["access"],0)                                               :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********************* \ slMultiTerm has returned (["access"],0)                                            :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
******************** / |>| calling $>>                                                                      :3_4:UnDeeper:
********************* / |>>/recurse                                                                        :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=10:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPBoolStructR> MATCH (CERR): Other "access"
RPBoolStructR> ERROR:
RPBoolStructR> offset=10:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slAKA                                                                             :2_4:Other "acce:
********************** / $*|                                                                             :2_4:Other "acce:
*********************** / slAKA base                                                                    :2_4:Other "acce:
************************ / slMultiTerm                                                                 :2_4:Other "acce:
************************* / someSL                                                                    :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

************************* \ someSL has returned (["access"],0)                                         :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

************************ \ slMultiTerm has returned (["access"],0)                                      :3_4:UnDeeper:
slAKA base> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slAKA base> MATCH (COK): Other "access"
slAKA base> VALUE: ((["access"],0),[])

*********************** \ slAKA base has returned (["access"],0)                                         :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

********************** \ $*| has returned (["access"],0)                                                  :3_4:UnDeeper:
********************** / |>>/recurse                                                                      :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :3_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :3_4:UnDeeper:
************************ / |?| optional something                                                       :3_4:UnDeeper:
************************* / |>>/recurse                                                                :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :3_4:UnDeeper:
************************** / PAKA/akapart                                                             :3_4:UnDeeper:
*************************** / $>|                                                                    :3_4:UnDeeper:
**************************** / Aka Token                                                            :3_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=10:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=10:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=10:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :3_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :3_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :3_4:UnDeeper:
********************** / |>>/recurse                                                                      :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :3_4:UnDeeper:
*********************** / slAKA optional typically                                                       :3_4:UnDeeper:
************************ / |?| optional something                                                       :3_4:UnDeeper:
************************* / |>>/recurse                                                                :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :3_4:UnDeeper:
************************** / typically                                                                :3_4:UnDeeper:
*************************** / $>|                                                                    :3_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=10:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=10:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :3_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :3_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :3_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :3_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :3_4:UnDeeper:
slAKA> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slAKA> MATCH (COK): Other "access"
slAKA> VALUE: ((["access"],0),[])

********************* \ slAKA has returned (["access"],0)                                                  :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
RPMT> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPMT> MATCH (COK): Other "access"
RPMT> VALUE: ((RPMT ["access"],0),[])

******************* \ RPMT has returned (RPMT ["access"],0)                                                  :3_4:UnDeeper:
slRelPred> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slRelPred> MATCH (COK): Other "access"
slRelPred> VALUE: ((RPMT ["access"],0),[])

****************** \ slRelPred has returned (RPMT ["access"],0)                                               :3_4:UnDeeper:
****************** / undeepers                                                                                :3_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :3_4:UnDeeper:
******************* > sameLine: success!                                                                     :3_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :3_4:UnDeeper:
pRelPred> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
pRelPred> MATCH (COK): Other "access"
pRelPred> VALUE: (RPMT ["access"],[])

***************** \ pRelPred has returned RPMT ["access"]                                                      :3_4:UnDeeper:
term p/3:plain p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/3:plain p> MATCH (COK): Other "access"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["access"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["access"])                                       :3_4:UnDeeper:
term p/notLabelTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/notLabelTerm> MATCH (COK): Other "access"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["access"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                      :3_4:UnDeeper:
term p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p> MATCH (COK): Other "access"
term p> VALUE: (MyLeaf (RPMT ["access"]),[])

************** \ term p has returned MyLeaf (RPMT ["access"])                                                     :3_4:UnDeeper:
************** / binary(Or)                                                                                       :3_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=10:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :3_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=10:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :3_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=10:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :3_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=10:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
expression> MATCH (COK): Other "access"
expression> VALUE: (MyLeaf (RPMT ["access"]),[])

************* \ expression has returned MyLeaf (RPMT ["access"])                                                   :3_4:UnDeeper:
manyIndentation/leaf?> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
manyIndentation/leaf?> MATCH (COK): Other "access"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["access"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["access"])                                          :3_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :3_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :3_3:Or:
someIndentation> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someIndentation> MATCH (COK): GoDeeper Other "access" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["access"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["access"])                                               :3_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "access" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["access"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["access"])                                 :3_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "access" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["access"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                               :3_3:Or:
term p> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p> MATCH (COK): GoDeeper Other "access" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["access"]),[])

******** \ term p has returned MyLeaf (RPMT ["access"])                                                              :3_3:Or:
******** / binary(Or)                                                                                                :3_3:Or:
binary(Or)> IN: Or GoDeeper Other "use" UnDeeper Or GoDe <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :3_4:GoDeeper:
******** / term p                                                                                                     :3_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :3_4:GoDeeper:
********** / $*|                                                                                                    :3_4:GoDeeper:
*********** / someSL                                                                                               :3_4:GoDeeper:
************ / pNumAsText                                                                                         :3_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=12:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=12:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=12:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=12:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :3_4:GoDeeper:
********** / someSL                                                                                                 :3_4:GoDeeper:
*********** / pNumAsText                                                                                           :3_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=12:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=12:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=12:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :3_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :3_4:GoDeeper:
*********** / someIndentation                                                                                      :3_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :3_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :3_4:Other "use":
************ / manyIndentation/leaf?                                                                               :3_4:Other "use":
************* / expression                                                                                        :3_4:Other "use":
************** / labelPrefix                                                                                     :3_4:Other "use":
labelPrefix> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=14:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :3_4:Other "use":
*************** / term p/1a:label directly above                                                                :3_4:Other "use":
**************** / $*|                                                                                         :3_4:Other "use":
***************** / someSL                                                                                    :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

***************** \ someSL has returned (["use"],0)                                                            :4_4:UnDeeper:
***************** / pNumAsText                                                                                 :4_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=14:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (CERR): Other "use"
$*|> ERROR:
$*|> offset=14:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/1a:label directly above> MATCH (CERR): Other "use"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=14:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :3_4:Other "use":
**************** / someSL                                                                                      :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

**************** \ someSL has returned (["use"],0)                                                              :4_4:UnDeeper:
**************** / undeepers                                                                                    :4_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :4_4:UnDeeper:
***************** > sameLine: success!                                                                         :4_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :4_4:UnDeeper:
**************** / matching EOL                                                                                 :4_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=14:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "use"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=14:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :3_4:Other "use":
**************** / term p/2:someIndentation expr p                                                             :3_4:Other "use":
***************** / someIndentation                                                                           :3_4:Other "use":
****************** / myindented: consuming GoDeeper                                                          :3_4:Other "use":
myindented: consuming GoDeeper> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=13:
myindented: consuming GoDeeper> unexpected Other "use"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=13:
someIndentation> unexpected Other "use"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=13:
term p/2:someIndentation expr p> unexpected Other "use"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :3_4:Other "use":
***************** / pRelPred                                                                                  :3_4:Other "use":
****************** / slRelPred                                                                               :3_4:Other "use":
******************* / nested simpleHorn                                                                     :3_4:Other "use":
******************** > |^|                                                                                 :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slMultiTerm                                                                       :3_4:Other "use":
********************** / someSL                                                                          :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

********************** \ someSL has returned (["use"],0)                                                  :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

********************* \ slMultiTerm has returned (["use"],0)                                               :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
******************** / |^| deeps                                                                            :4_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :4_3:Or:
nested simpleHorn> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
nested simpleHorn> MATCH (CERR): Other "use" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=15:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slMultiTerm                                                                       :3_4:Other "use":
********************** / someSL                                                                          :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

********************** \ someSL has returned (["use"],0)                                                  :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

********************* \ slMultiTerm has returned (["use"],0)                                               :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
******************** / |>| calling $>>                                                                      :4_4:UnDeeper:
********************* / |>>/recurse                                                                        :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=14:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPConstraint> MATCH (CERR): Other "use"
RPConstraint> ERROR:
RPConstraint> offset=14:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slMultiTerm                                                                       :3_4:Other "use":
********************** / someSL                                                                          :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

********************** \ someSL has returned (["use"],0)                                                  :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

********************* \ slMultiTerm has returned (["use"],0)                                               :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
******************** / |>| calling $>>                                                                      :4_4:UnDeeper:
********************* / |>>/recurse                                                                        :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=14:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPBoolStructR> MATCH (CERR): Other "use"
RPBoolStructR> ERROR:
RPBoolStructR> offset=14:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slAKA                                                                             :3_4:Other "use":
********************** / $*|                                                                             :3_4:Other "use":
*********************** / slAKA base                                                                    :3_4:Other "use":
************************ / slMultiTerm                                                                 :3_4:Other "use":
************************* / someSL                                                                    :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

************************* \ someSL has returned (["use"],0)                                            :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

************************ \ slMultiTerm has returned (["use"],0)                                         :4_4:UnDeeper:
slAKA base> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slAKA base> MATCH (COK): Other "use"
slAKA base> VALUE: ((["use"],0),[])

*********************** \ slAKA base has returned (["use"],0)                                            :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

********************** \ $*| has returned (["use"],0)                                                     :4_4:UnDeeper:
********************** / |>>/recurse                                                                      :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :4_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :4_4:UnDeeper:
************************ / |?| optional something                                                       :4_4:UnDeeper:
************************* / |>>/recurse                                                                :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :4_4:UnDeeper:
************************** / PAKA/akapart                                                             :4_4:UnDeeper:
*************************** / $>|                                                                    :4_4:UnDeeper:
**************************** / Aka Token                                                            :4_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=14:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=14:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=14:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :4_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :4_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :4_4:UnDeeper:
********************** / |>>/recurse                                                                      :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :4_4:UnDeeper:
*********************** / slAKA optional typically                                                       :4_4:UnDeeper:
************************ / |?| optional something                                                       :4_4:UnDeeper:
************************* / |>>/recurse                                                                :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :4_4:UnDeeper:
************************** / typically                                                                :4_4:UnDeeper:
*************************** / $>|                                                                    :4_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=14:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=14:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :4_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :4_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :4_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :4_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :4_4:UnDeeper:
slAKA> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slAKA> MATCH (COK): Other "use"
slAKA> VALUE: ((["use"],0),[])

********************* \ slAKA has returned (["use"],0)                                                     :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
RPMT> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPMT> MATCH (COK): Other "use"
RPMT> VALUE: ((RPMT ["use"],0),[])

******************* \ RPMT has returned (RPMT ["use"],0)                                                     :4_4:UnDeeper:
slRelPred> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slRelPred> MATCH (COK): Other "use"
slRelPred> VALUE: ((RPMT ["use"],0),[])

****************** \ slRelPred has returned (RPMT ["use"],0)                                                  :4_4:UnDeeper:
****************** / undeepers                                                                                :4_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :4_4:UnDeeper:
******************* > sameLine: success!                                                                     :4_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :4_4:UnDeeper:
pRelPred> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
pRelPred> MATCH (COK): Other "use"
pRelPred> VALUE: (RPMT ["use"],[])

***************** \ pRelPred has returned RPMT ["use"]                                                         :4_4:UnDeeper:
term p/3:plain p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/3:plain p> MATCH (COK): Other "use"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["use"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["use"])                                          :4_4:UnDeeper:
term p/notLabelTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/notLabelTerm> MATCH (COK): Other "use"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["use"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])                                         :4_4:UnDeeper:
term p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p> MATCH (COK): Other "use"
term p> VALUE: (MyLeaf (RPMT ["use"]),[])

************** \ term p has returned MyLeaf (RPMT ["use"])                                                        :4_4:UnDeeper:
************** / binary(Or)                                                                                       :4_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=14:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :4_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=14:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :4_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=14:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :4_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=14:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
expression> MATCH (COK): Other "use"
expression> VALUE: (MyLeaf (RPMT ["use"]),[])

************* \ expression has returned MyLeaf (RPMT ["use"])                                                      :4_4:UnDeeper:
manyIndentation/leaf?> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
manyIndentation/leaf?> MATCH (COK): Other "use"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["use"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["use"])                                             :4_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :4_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :4_3:Or:
someIndentation> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someIndentation> MATCH (COK): GoDeeper Other "use" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["use"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["use"])                                                  :4_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "use" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["use"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["use"])                                    :4_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "use" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["use"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])                                                  :4_3:Or:
term p> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p> MATCH (COK): GoDeeper Other "use" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["use"]),[])

******** \ term p has returned MyLeaf (RPMT ["use"])                                                                 :4_3:Or:
******** / binary(Or)                                                                                                :4_3:Or:
binary(Or)> IN: Or GoDeeper Other "disclosure" UnDeeper  <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :4_4:GoDeeper:
******** / term p                                                                                                     :4_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :4_4:GoDeeper:
********** / $*|                                                                                                    :4_4:GoDeeper:
*********** / someSL                                                                                               :4_4:GoDeeper:
************ / pNumAsText                                                                                         :4_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=16:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=16:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=16:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=16:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :4_4:GoDeeper:
********** / someSL                                                                                                 :4_4:GoDeeper:
*********** / pNumAsText                                                                                           :4_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=16:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=16:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=16:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :4_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :4_4:GoDeeper:
*********** / someIndentation                                                                                      :4_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :4_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :4_4:Other "disc:
************ / manyIndentation/leaf?                                                                               :4_4:Other "disc:
************* / expression                                                                                        :4_4:Other "disc:
************** / labelPrefix                                                                                     :4_4:Other "disc:
labelPrefix> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=18:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :4_4:Other "disc:
*************** / term p/1a:label directly above                                                                :4_4:Other "disc:
**************** / $*|                                                                                         :4_4:Other "disc:
***************** / someSL                                                                                    :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

***************** \ someSL has returned (["disclosure"],0)                                                     :5_4:UnDeeper:
***************** / pNumAsText                                                                                 :5_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=18:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (CERR): Other "disclosure"
$*|> ERROR:
$*|> offset=18:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/1a:label directly above> MATCH (CERR): Other "disclosure"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=18:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :4_4:Other "disc:
**************** / someSL                                                                                      :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

**************** \ someSL has returned (["disclosure"],0)                                                       :5_4:UnDeeper:
**************** / undeepers                                                                                    :5_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :5_4:UnDeeper:
***************** > sameLine: success!                                                                         :5_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :5_4:UnDeeper:
**************** / matching EOL                                                                                 :5_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=18:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "disclosure"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=18:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :4_4:Other "disc:
**************** / term p/2:someIndentation expr p                                                             :4_4:Other "disc:
***************** / someIndentation                                                                           :4_4:Other "disc:
****************** / myindented: consuming GoDeeper                                                          :4_4:Other "disc:
myindented: consuming GoDeeper> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=17:
myindented: consuming GoDeeper> unexpected Other "disclosure"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=17:
someIndentation> unexpected Other "disclosure"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=17:
term p/2:someIndentation expr p> unexpected Other "disclosure"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :4_4:Other "disc:
***************** / pRelPred                                                                                  :4_4:Other "disc:
****************** / slRelPred                                                                               :4_4:Other "disc:
******************* / nested simpleHorn                                                                     :4_4:Other "disc:
******************** > |^|                                                                                 :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slMultiTerm                                                                       :4_4:Other "disc:
********************** / someSL                                                                          :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

********************** \ someSL has returned (["disclosure"],0)                                           :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

********************* \ slMultiTerm has returned (["disclosure"],0)                                        :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
******************** / |^| deeps                                                                            :5_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :5_3:Or:
nested simpleHorn> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
nested simpleHorn> MATCH (CERR): Other "disclosure" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=19:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slMultiTerm                                                                       :4_4:Other "disc:
********************** / someSL                                                                          :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

********************** \ someSL has returned (["disclosure"],0)                                           :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

********************* \ slMultiTerm has returned (["disclosure"],0)                                        :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
******************** / |>| calling $>>                                                                      :5_4:UnDeeper:
********************* / |>>/recurse                                                                        :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=18:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPConstraint> MATCH (CERR): Other "disclosure"
RPConstraint> ERROR:
RPConstraint> offset=18:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slMultiTerm                                                                       :4_4:Other "disc:
********************** / someSL                                                                          :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

********************** \ someSL has returned (["disclosure"],0)                                           :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

********************* \ slMultiTerm has returned (["disclosure"],0)                                        :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
******************** / |>| calling $>>                                                                      :5_4:UnDeeper:
********************* / |>>/recurse                                                                        :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=18:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPBoolStructR> MATCH (CERR): Other "disclosure"
RPBoolStructR> ERROR:
RPBoolStructR> offset=18:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slAKA                                                                             :4_4:Other "disc:
********************** / $*|                                                                             :4_4:Other "disc:
*********************** / slAKA base                                                                    :4_4:Other "disc:
************************ / slMultiTerm                                                                 :4_4:Other "disc:
************************* / someSL                                                                    :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

************************* \ someSL has returned (["disclosure"],0)                                     :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

************************ \ slMultiTerm has returned (["disclosure"],0)                                  :5_4:UnDeeper:
slAKA base> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slAKA base> MATCH (COK): Other "disclosure"
slAKA base> VALUE: ((["disclosure"],0),[])

*********************** \ slAKA base has returned (["disclosure"],0)                                     :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

********************** \ $*| has returned (["disclosure"],0)                                              :5_4:UnDeeper:
********************** / |>>/recurse                                                                      :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :5_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :5_4:UnDeeper:
************************ / |?| optional something                                                       :5_4:UnDeeper:
************************* / |>>/recurse                                                                :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :5_4:UnDeeper:
************************** / PAKA/akapart                                                             :5_4:UnDeeper:
*************************** / $>|                                                                    :5_4:UnDeeper:
**************************** / Aka Token                                                            :5_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=18:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=18:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=18:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :5_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :5_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :5_4:UnDeeper:
********************** / |>>/recurse                                                                      :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :5_4:UnDeeper:
*********************** / slAKA optional typically                                                       :5_4:UnDeeper:
************************ / |?| optional something                                                       :5_4:UnDeeper:
************************* / |>>/recurse                                                                :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :5_4:UnDeeper:
************************** / typically                                                                :5_4:UnDeeper:
*************************** / $>|                                                                    :5_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=18:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=18:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :5_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :5_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :5_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :5_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :5_4:UnDeeper:
slAKA> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slAKA> MATCH (COK): Other "disclosure"
slAKA> VALUE: ((["disclosure"],0),[])

********************* \ slAKA has returned (["disclosure"],0)                                              :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
RPMT> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPMT> MATCH (COK): Other "disclosure"
RPMT> VALUE: ((RPMT ["disclosure"],0),[])

******************* \ RPMT has returned (RPMT ["disclosure"],0)                                              :5_4:UnDeeper:
slRelPred> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slRelPred> MATCH (COK): Other "disclosure"
slRelPred> VALUE: ((RPMT ["disclosure"],0),[])

****************** \ slRelPred has returned (RPMT ["disclosure"],0)                                           :5_4:UnDeeper:
****************** / undeepers                                                                                :5_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :5_4:UnDeeper:
******************* > sameLine: success!                                                                     :5_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :5_4:UnDeeper:
pRelPred> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
pRelPred> MATCH (COK): Other "disclosure"
pRelPred> VALUE: (RPMT ["disclosure"],[])

***************** \ pRelPred has returned RPMT ["disclosure"]                                                  :5_4:UnDeeper:
term p/3:plain p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/3:plain p> MATCH (COK): Other "disclosure"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["disclosure"])                                   :5_4:UnDeeper:
term p/notLabelTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/notLabelTerm> MATCH (COK): Other "disclosure"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])                                  :5_4:UnDeeper:
term p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p> MATCH (COK): Other "disclosure"
term p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************** \ term p has returned MyLeaf (RPMT ["disclosure"])                                                 :5_4:UnDeeper:
************** / binary(Or)                                                                                       :5_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=18:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :5_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=18:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :5_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=18:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :5_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=18:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
expression> MATCH (COK): Other "disclosure"
expression> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************* \ expression has returned MyLeaf (RPMT ["disclosure"])                                               :5_4:UnDeeper:
manyIndentation/leaf?> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
manyIndentation/leaf?> MATCH (COK): Other "disclosure"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["disclosure"])                                      :5_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :5_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :5_3:Or:
someIndentation> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someIndentation> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["disclosure"])                                           :5_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["disclosure"])                             :5_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])                                           :5_3:Or:
term p> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

******** \ term p has returned MyLeaf (RPMT ["disclosure"])                                                          :5_3:Or:
******** / binary(Or)                                                                                                :5_3:Or:
binary(Or)> IN: Or GoDeeper Other "copying" UnDeeper Or  <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :5_4:GoDeeper:
******** / term p                                                                                                     :5_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :5_4:GoDeeper:
********** / $*|                                                                                                    :5_4:GoDeeper:
*********** / someSL                                                                                               :5_4:GoDeeper:
************ / pNumAsText                                                                                         :5_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=20:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=20:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=20:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=20:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :5_4:GoDeeper:
********** / someSL                                                                                                 :5_4:GoDeeper:
*********** / pNumAsText                                                                                           :5_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=20:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=20:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=20:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :5_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :5_4:GoDeeper:
*********** / someIndentation                                                                                      :5_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :5_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :5_4:Other "copy:
************ / manyIndentation/leaf?                                                                               :5_4:Other "copy:
************* / expression                                                                                        :5_4:Other "copy:
************** / labelPrefix                                                                                     :5_4:Other "copy:
labelPrefix> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=22:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :5_4:Other "copy:
*************** / term p/1a:label directly above                                                                :5_4:Other "copy:
**************** / $*|                                                                                         :5_4:Other "copy:
***************** / someSL                                                                                    :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

***************** \ someSL has returned (["copying"],0)                                                        :6_4:UnDeeper:
***************** / pNumAsText                                                                                 :6_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "modification <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=22:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (CERR): Other "copying"
$*|> ERROR:
$*|> offset=22:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/1a:label directly above> MATCH (CERR): Other "copying"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=22:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :5_4:Other "copy:
**************** / someSL                                                                                      :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

**************** \ someSL has returned (["copying"],0)                                                          :6_4:UnDeeper:
**************** / undeepers                                                                                    :6_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :6_4:UnDeeper:
***************** > sameLine: success!                                                                         :6_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "modification <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :6_4:UnDeeper:
**************** / matching EOL                                                                                 :6_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "modification <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=22:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "copying"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=22:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :5_4:Other "copy:
**************** / term p/2:someIndentation expr p                                                             :5_4:Other "copy:
***************** / someIndentation                                                                           :5_4:Other "copy:
****************** / myindented: consuming GoDeeper                                                          :5_4:Other "copy:
myindented: consuming GoDeeper> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=21:
myindented: consuming GoDeeper> unexpected Other "copying"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=21:
someIndentation> unexpected Other "copying"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=21:
term p/2:someIndentation expr p> unexpected Other "copying"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :5_4:Other "copy:
***************** / pRelPred                                                                                  :5_4:Other "copy:
****************** / slRelPred                                                                               :5_4:Other "copy:
******************* / nested simpleHorn                                                                     :5_4:Other "copy:
******************** > |^|                                                                                 :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slMultiTerm                                                                       :5_4:Other "copy:
********************** / someSL                                                                          :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

********************** \ someSL has returned (["copying"],0)                                              :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

********************* \ slMultiTerm has returned (["copying"],0)                                           :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
******************** / |^| deeps                                                                            :6_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "modification <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :6_3:Or:
nested simpleHorn> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
nested simpleHorn> MATCH (CERR): Other "copying" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=23:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slMultiTerm                                                                       :5_4:Other "copy:
********************** / someSL                                                                          :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

********************** \ someSL has returned (["copying"],0)                                              :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

********************* \ slMultiTerm has returned (["copying"],0)                                           :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
******************** / |>| calling $>>                                                                      :6_4:UnDeeper:
********************* / |>>/recurse                                                                        :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "modification <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=22:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPConstraint> MATCH (CERR): Other "copying"
RPConstraint> ERROR:
RPConstraint> offset=22:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slMultiTerm                                                                       :5_4:Other "copy:
********************** / someSL                                                                          :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

********************** \ someSL has returned (["copying"],0)                                              :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

********************* \ slMultiTerm has returned (["copying"],0)                                           :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
******************** / |>| calling $>>                                                                      :6_4:UnDeeper:
********************* / |>>/recurse                                                                        :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "modification <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=22:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPBoolStructR> MATCH (CERR): Other "copying"
RPBoolStructR> ERROR:
RPBoolStructR> offset=22:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slAKA                                                                             :5_4:Other "copy:
********************** / $*|                                                                             :5_4:Other "copy:
*********************** / slAKA base                                                                    :5_4:Other "copy:
************************ / slMultiTerm                                                                 :5_4:Other "copy:
************************* / someSL                                                                    :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

************************* \ someSL has returned (["copying"],0)                                        :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

************************ \ slMultiTerm has returned (["copying"],0)                                     :6_4:UnDeeper:
slAKA base> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slAKA base> MATCH (COK): Other "copying"
slAKA base> VALUE: ((["copying"],0),[])

*********************** \ slAKA base has returned (["copying"],0)                                        :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

********************** \ $*| has returned (["copying"],0)                                                 :6_4:UnDeeper:
********************** / |>>/recurse                                                                      :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :6_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :6_4:UnDeeper:
************************ / |?| optional something                                                       :6_4:UnDeeper:
************************* / |>>/recurse                                                                :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :6_4:UnDeeper:
************************** / PAKA/akapart                                                             :6_4:UnDeeper:
*************************** / $>|                                                                    :6_4:UnDeeper:
**************************** / Aka Token                                                            :6_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "modification <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=22:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "modification <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=22:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "modification <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=22:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "modification <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :6_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "modification <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :6_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :6_4:UnDeeper:
********************** / |>>/recurse                                                                      :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :6_4:UnDeeper:
*********************** / slAKA optional typically                                                       :6_4:UnDeeper:
************************ / |?| optional something                                                       :6_4:UnDeeper:
************************* / |>>/recurse                                                                :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :6_4:UnDeeper:
************************** / typically                                                                :6_4:UnDeeper:
*************************** / $>|                                                                    :6_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "modification <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=22:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "modification <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=22:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "modification <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :6_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "modification <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :6_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :6_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :6_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :6_4:UnDeeper:
slAKA> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slAKA> MATCH (COK): Other "copying"
slAKA> VALUE: ((["copying"],0),[])

********************* \ slAKA has returned (["copying"],0)                                                 :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
RPMT> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPMT> MATCH (COK): Other "copying"
RPMT> VALUE: ((RPMT ["copying"],0),[])

******************* \ RPMT has returned (RPMT ["copying"],0)                                                 :6_4:UnDeeper:
slRelPred> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slRelPred> MATCH (COK): Other "copying"
slRelPred> VALUE: ((RPMT ["copying"],0),[])

****************** \ slRelPred has returned (RPMT ["copying"],0)                                              :6_4:UnDeeper:
****************** / undeepers                                                                                :6_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :6_4:UnDeeper:
******************* > sameLine: success!                                                                     :6_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "modification <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :6_4:UnDeeper:
pRelPred> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
pRelPred> MATCH (COK): Other "copying"
pRelPred> VALUE: (RPMT ["copying"],[])

***************** \ pRelPred has returned RPMT ["copying"]                                                     :6_4:UnDeeper:
term p/3:plain p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/3:plain p> MATCH (COK): Other "copying"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["copying"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["copying"])                                      :6_4:UnDeeper:
term p/notLabelTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/notLabelTerm> MATCH (COK): Other "copying"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["copying"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])                                     :6_4:UnDeeper:
term p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p> MATCH (COK): Other "copying"
term p> VALUE: (MyLeaf (RPMT ["copying"]),[])

************** \ term p has returned MyLeaf (RPMT ["copying"])                                                    :6_4:UnDeeper:
************** / binary(Or)                                                                                       :6_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=22:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :6_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=22:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :6_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=22:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :6_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=22:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
expression> MATCH (COK): Other "copying"
expression> VALUE: (MyLeaf (RPMT ["copying"]),[])

************* \ expression has returned MyLeaf (RPMT ["copying"])                                                  :6_4:UnDeeper:
manyIndentation/leaf?> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
manyIndentation/leaf?> MATCH (COK): Other "copying"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["copying"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["copying"])                                         :6_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :6_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "modification <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :6_3:Or:
someIndentation> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someIndentation> MATCH (COK): GoDeeper Other "copying" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["copying"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["copying"])                                              :6_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["copying"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["copying"])                                :6_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["copying"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])                                              :6_3:Or:
term p> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["copying"]),[])

******** \ term p has returned MyLeaf (RPMT ["copying"])                                                             :6_3:Or:
******** / binary(Or)                                                                                                :6_3:Or:
binary(Or)> IN: Or GoDeeper Other "modification" UnDeepe <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :6_4:GoDeeper:
******** / term p                                                                                                     :6_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :6_4:GoDeeper:
********** / $*|                                                                                                    :6_4:GoDeeper:
*********** / someSL                                                                                               :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "modification" UnDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=24:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "modification" UnDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=24:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "modification" UnDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=24:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=24:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :6_4:GoDeeper:
********** / someSL                                                                                                 :6_4:GoDeeper:
*********** / pNumAsText                                                                                           :6_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "modification" UnDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=24:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "modification" UnDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=24:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=24:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :6_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :6_4:GoDeeper:
*********** / someIndentation                                                                                      :6_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :6_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "modification" UnDeeper O <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :6_4:Other "modi:
************ / manyIndentation/leaf?                                                                               :6_4:Other "modi:
************* / expression                                                                                        :6_4:Other "modi:
************** / labelPrefix                                                                                     :6_4:Other "modi:
labelPrefix> IN: Other "modification" UnDeeper Or GoDeepe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=26:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :6_4:Other "modi:
*************** / term p/1a:label directly above                                                                :6_4:Other "modi:
**************** / $*|                                                                                         :6_4:Other "modi:
***************** / someSL                                                                                    :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

***************** \ someSL has returned (["modification"],0)                                                   :7_4:UnDeeper:
***************** / pNumAsText                                                                                 :7_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=26:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (CERR): Other "modification"
$*|> ERROR:
$*|> offset=26:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/1a:label directly above> MATCH (CERR): Other "modification"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=26:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :6_4:Other "modi:
**************** / someSL                                                                                      :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

**************** \ someSL has returned (["modification"],0)                                                     :7_4:UnDeeper:
**************** / undeepers                                                                                    :7_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :7_4:UnDeeper:
***************** > sameLine: success!                                                                         :7_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :7_4:UnDeeper:
**************** / matching EOL                                                                                 :7_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=26:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "modification"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=26:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :6_4:Other "modi:
**************** / term p/2:someIndentation expr p                                                             :6_4:Other "modi:
***************** / someIndentation                                                                           :6_4:Other "modi:
****************** / myindented: consuming GoDeeper                                                          :6_4:Other "modi:
myindented: consuming GoDeeper> IN: Other "modification" UnDeeper Or GoDeepe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=25:
myindented: consuming GoDeeper> unexpected Other "modification"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "modification" UnDeeper Or GoDeepe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=25:
someIndentation> unexpected Other "modification"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=25:
term p/2:someIndentation expr p> unexpected Other "modification"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :6_4:Other "modi:
***************** / pRelPred                                                                                  :6_4:Other "modi:
****************** / slRelPred                                                                               :6_4:Other "modi:
******************* / nested simpleHorn                                                                     :6_4:Other "modi:
******************** > |^|                                                                                 :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slMultiTerm                                                                       :6_4:Other "modi:
********************** / someSL                                                                          :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

********************** \ someSL has returned (["modification"],0)                                         :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

********************* \ slMultiTerm has returned (["modification"],0)                                      :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
******************** / |^| deeps                                                                            :7_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :7_3:Or:
nested simpleHorn> IN: Other "modification" UnDeeper Or GoDeepe <…>
nested simpleHorn> MATCH (CERR): Other "modification" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=27:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slMultiTerm                                                                       :6_4:Other "modi:
********************** / someSL                                                                          :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

********************** \ someSL has returned (["modification"],0)                                         :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

********************* \ slMultiTerm has returned (["modification"],0)                                      :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
******************** / |>| calling $>>                                                                      :7_4:UnDeeper:
********************* / |>>/recurse                                                                        :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=26:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPConstraint> MATCH (CERR): Other "modification"
RPConstraint> ERROR:
RPConstraint> offset=26:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slMultiTerm                                                                       :6_4:Other "modi:
********************** / someSL                                                                          :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

********************** \ someSL has returned (["modification"],0)                                         :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

********************* \ slMultiTerm has returned (["modification"],0)                                      :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
******************** / |>| calling $>>                                                                      :7_4:UnDeeper:
********************* / |>>/recurse                                                                        :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=26:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPBoolStructR> MATCH (CERR): Other "modification"
RPBoolStructR> ERROR:
RPBoolStructR> offset=26:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slAKA                                                                             :6_4:Other "modi:
********************** / $*|                                                                             :6_4:Other "modi:
*********************** / slAKA base                                                                    :6_4:Other "modi:
************************ / slMultiTerm                                                                 :6_4:Other "modi:
************************* / someSL                                                                    :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

************************* \ someSL has returned (["modification"],0)                                   :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

************************ \ slMultiTerm has returned (["modification"],0)                                :7_4:UnDeeper:
slAKA base> IN: Other "modification" UnDeeper Or GoDeepe <…>
slAKA base> MATCH (COK): Other "modification"
slAKA base> VALUE: ((["modification"],0),[])

*********************** \ slAKA base has returned (["modification"],0)                                   :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

********************** \ $*| has returned (["modification"],0)                                            :7_4:UnDeeper:
********************** / |>>/recurse                                                                      :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :7_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :7_4:UnDeeper:
************************ / |?| optional something                                                       :7_4:UnDeeper:
************************* / |>>/recurse                                                                :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :7_4:UnDeeper:
************************** / PAKA/akapart                                                             :7_4:UnDeeper:
*************************** / $>|                                                                    :7_4:UnDeeper:
**************************** / Aka Token                                                            :7_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=26:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=26:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=26:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :7_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :7_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :7_4:UnDeeper:
********************** / |>>/recurse                                                                      :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :7_4:UnDeeper:
*********************** / slAKA optional typically                                                       :7_4:UnDeeper:
************************ / |?| optional something                                                       :7_4:UnDeeper:
************************* / |>>/recurse                                                                :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :7_4:UnDeeper:
************************** / typically                                                                :7_4:UnDeeper:
*************************** / $>|                                                                    :7_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=26:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=26:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :7_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :7_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :7_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :7_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :7_4:UnDeeper:
slAKA> IN: Other "modification" UnDeeper Or GoDeepe <…>
slAKA> MATCH (COK): Other "modification"
slAKA> VALUE: ((["modification"],0),[])

********************* \ slAKA has returned (["modification"],0)                                            :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
RPMT> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPMT> MATCH (COK): Other "modification"
RPMT> VALUE: ((RPMT ["modification"],0),[])

******************* \ RPMT has returned (RPMT ["modification"],0)                                            :7_4:UnDeeper:
slRelPred> IN: Other "modification" UnDeeper Or GoDeepe <…>
slRelPred> MATCH (COK): Other "modification"
slRelPred> VALUE: ((RPMT ["modification"],0),[])

****************** \ slRelPred has returned (RPMT ["modification"],0)                                         :7_4:UnDeeper:
****************** / undeepers                                                                                :7_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :7_4:UnDeeper:
******************* > sameLine: success!                                                                     :7_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :7_4:UnDeeper:
pRelPred> IN: Other "modification" UnDeeper Or GoDeepe <…>
pRelPred> MATCH (COK): Other "modification"
pRelPred> VALUE: (RPMT ["modification"],[])

***************** \ pRelPred has returned RPMT ["modification"]                                                :7_4:UnDeeper:
term p/3:plain p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/3:plain p> MATCH (COK): Other "modification"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["modification"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["modification"])                                 :7_4:UnDeeper:
term p/notLabelTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/notLabelTerm> MATCH (COK): Other "modification"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["modification"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])                                :7_4:UnDeeper:
term p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p> MATCH (COK): Other "modification"
term p> VALUE: (MyLeaf (RPMT ["modification"]),[])

************** \ term p has returned MyLeaf (RPMT ["modification"])                                               :7_4:UnDeeper:
************** / binary(Or)                                                                                       :7_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=26:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :7_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=26:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :7_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=26:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :7_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=26:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "modification" UnDeeper Or GoDeepe <…>
expression> MATCH (COK): Other "modification"
expression> VALUE: (MyLeaf (RPMT ["modification"]),[])

************* \ expression has returned MyLeaf (RPMT ["modification"])                                             :7_4:UnDeeper:
manyIndentation/leaf?> IN: Other "modification" UnDeeper Or GoDeepe <…>
manyIndentation/leaf?> MATCH (COK): Other "modification"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["modification"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["modification"])                                    :7_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :7_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :7_3:Or:
someIndentation> IN: GoDeeper Other "modification" UnDeeper O <…>
someIndentation> MATCH (COK): GoDeeper Other "modification" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["modification"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["modification"])                                         :7_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["modification"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["modification"])                           :7_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["modification"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])                                         :7_3:Or:
term p> IN: GoDeeper Other "modification" UnDeeper O <…>
term p> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["modification"]),[])

******** \ term p has returned MyLeaf (RPMT ["modification"])                                                        :7_3:Or:
******** / binary(Or)                                                                                                :7_3:Or:
binary(Or)> IN: Or GoDeeper Other "disposal" GoDeeper Ty <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :7_4:GoDeeper:
******** / term p                                                                                                     :7_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :7_4:GoDeeper:
********** / $*|                                                                                                    :7_4:GoDeeper:
*********** / someSL                                                                                               :7_4:GoDeeper:
************ / pNumAsText                                                                                         :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=28:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :7_4:GoDeeper:
********** / someSL                                                                                                 :7_4:GoDeeper:
*********** / pNumAsText                                                                                           :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=28:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :7_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :7_4:GoDeeper:
*********** / someIndentation                                                                                      :7_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :7_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :7_4:Other "disp:
************ / manyIndentation/leaf?                                                                               :7_4:Other "disp:
************* / expression                                                                                        :7_4:Other "disp:
************** / labelPrefix                                                                                     :7_4:Other "disp:
labelPrefix> IN: Other "disposal" GoDeeper Typically GoDe <…>
labelPrefix> MATCH (COK): Other "disposal"
labelPrefix> VALUE: ("disposal",[])

************** \ labelPrefix has returned "disposal"                                                              :7_5:GoDeeper:
************** / term p                                                                                           :7_5:GoDeeper:
*************** / term p/1a:label directly above                                                                 :7_5:GoDeeper:
**************** / $*|                                                                                          :7_5:GoDeeper:
***************** / someSL                                                                                     :7_5:GoDeeper:
****************** / pNumAsText                                                                               :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=30:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                             :7_5:GoDeeper:
**************** / someSL                                                                                       :7_5:GoDeeper:
***************** / pNumAsText                                                                                 :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=30:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

*************** / term p/notLabelTerm                                                                            :7_5:GoDeeper:
**************** / term p/2:someIndentation expr p                                                              :7_5:GoDeeper:
***************** / someIndentation                                                                            :7_5:GoDeeper:
****************** / myindented: consuming GoDeeper                                                           :7_5:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Typically GoDeeper Other "True" <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

****************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :7_5:Typically:
****************** / manyIndentation/leaf?                                                                     :7_5:Typically:
******************* / expression                                                                              :7_5:Typically:
******************** / labelPrefix                                                                           :7_5:Typically:
labelPrefix> IN: Typically GoDeeper Other "True" UnDeeper <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=31:
labelPrefix> unexpected Typically
labelPrefix> expecting Other text

******************** / term p                                                                                :7_5:Typically:
********************* / term p/1a:label directly above                                                      :7_5:Typically:
********************** / $*|                                                                               :7_5:Typically:
*********************** / someSL                                                                          :7_5:Typically:
************************ / pNumAsText                                                                    :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=31:
term p/1a:label directly above> unexpected Typically
term p/1a:label directly above> expecting Other text or TNumber 1234

********************* / term p/b:label to the left of line below, with EOL                                  :7_5:Typically:
********************** / someSL                                                                            :7_5:Typically:
*********************** / pNumAsText                                                                      :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=31:
term p/b:label to the left of line below, with EOL> unexpected Typically
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********************* / term p/notLabelTerm                                                                 :7_5:Typically:
********************** / term p/2:someIndentation expr p                                                   :7_5:Typically:
*********************** / someIndentation                                                                 :7_5:Typically:
************************ / myindented: consuming GoDeeper                                                :7_5:Typically:
myindented: consuming GoDeeper> IN: Typically GoDeeper Other "True" UnDeeper <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=31:
myindented: consuming GoDeeper> unexpected Typically
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper

********************** / term p/3:plain p                                                                  :7_5:Typically:
*********************** / pRelPred                                                                        :7_5:Typically:
************************ / slRelPred                                                                     :7_5:Typically:
************************* / nested simpleHorn                                                           :7_5:Typically:
************************** > |^|                                                                       :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slMultiTerm                                                             :7_5:Typically:
**************************** / someSL                                                                :7_5:Typically:
***************************** / pNumAsText                                                          :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: Typically GoDeeper Other "True" UnDeeper <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=31:
nested simpleHorn> unexpected Typically
nested simpleHorn> expecting Other text or TNumber 1234

************************* / RPConstraint                                                                :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slMultiTerm                                                             :7_5:Typically:
**************************** / someSL                                                                :7_5:Typically:
***************************** / pNumAsText                                                          :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=31:
RPConstraint> unexpected Typically
RPConstraint> expecting Other text or TNumber 1234

************************* / RPBoolStructR                                                               :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slMultiTerm                                                             :7_5:Typically:
**************************** / someSL                                                                :7_5:Typically:
***************************** / pNumAsText                                                          :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=31:
RPBoolStructR> unexpected Typically
RPBoolStructR> expecting Other text or TNumber 1234

************************* / RPMT                                                                        :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slAKA                                                                   :7_5:Typically:
**************************** / $*|                                                                   :7_5:Typically:
***************************** / slAKA base                                                          :7_5:Typically:
****************************** / slMultiTerm                                                       :7_5:Typically:
******************************* / someSL                                                          :7_5:Typically:
******************************** / pNumAsText                                                    :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: Typically GoDeeper Other "True" UnDeeper <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=31:
slAKA base> unexpected Typically
slAKA base> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

slAKA> IN: Typically GoDeeper Other "True" UnDeeper <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=31:
slAKA> unexpected Typically
slAKA> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPMT> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=31:
RPMT> unexpected Typically
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: Typically GoDeeper Other "True" UnDeeper <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=31:
slRelPred> unexpected Typically
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: Typically GoDeeper Other "True" UnDeeper <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=31:
pRelPred> unexpected Typically
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=31:
term p/3:plain p> unexpected Typically
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper or term

term p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, Other text, TNumber 1234, or term

expression> IN: Typically GoDeeper Other "True" UnDeeper <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting expression

manyIndentation/leaf?> IN: Typically GoDeeper Other "True" UnDeeper <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting expression

****************** / manyIndentation/deeper; calling someIndentation                                           :7_5:Typically:
******************* / someIndentation                                                                         :7_5:Typically:
******************** / myindented: consuming GoDeeper                                                        :7_5:Typically:
myindented: consuming GoDeeper> IN: Typically GoDeeper Other "True" UnDeeper <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=31:
myindented: consuming GoDeeper> unexpected Typically
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=31:
manyIndentation/deeper; calling someIndentation> unexpected Typically
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Typically GoDeeper Other "True" <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper or expression

term p/2:someIndentation expr p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper or expression

**************** / term p/3:plain p                                                                             :7_5:GoDeeper:
***************** / pRelPred                                                                                   :7_5:GoDeeper:
****************** / slRelPred                                                                                :7_5:GoDeeper:
******************* / nested simpleHorn                                                                      :7_5:GoDeeper:
******************** > |^|                                                                                  :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slMultiTerm                                                                        :7_5:GoDeeper:
********************** / someSL                                                                           :7_5:GoDeeper:
*********************** / pNumAsText                                                                     :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Typically GoDeeper Other "True" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=30:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

******************* / RPConstraint                                                                           :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slMultiTerm                                                                        :7_5:GoDeeper:
********************** / someSL                                                                           :7_5:GoDeeper:
*********************** / pNumAsText                                                                     :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=30:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

******************* / RPBoolStructR                                                                          :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slMultiTerm                                                                        :7_5:GoDeeper:
********************** / someSL                                                                           :7_5:GoDeeper:
*********************** / pNumAsText                                                                     :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=30:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

******************* / RPMT                                                                                   :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slAKA                                                                              :7_5:GoDeeper:
********************** / $*|                                                                              :7_5:GoDeeper:
*********************** / slAKA base                                                                     :7_5:GoDeeper:
************************ / slMultiTerm                                                                  :7_5:GoDeeper:
************************* / someSL                                                                     :7_5:GoDeeper:
************************** / pNumAsText                                                               :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Typically GoDeeper Other "True" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=30:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Typically GoDeeper Other "True" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=30:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=30:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Typically GoDeeper Other "True" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=30:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Typically GoDeeper Other "True" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=30:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=30:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper or expression

term p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper or expression

expression> IN: Other "disposal" GoDeeper Typically GoDe <…>
expression> MATCH (CERR): Other "disposal"
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting GoDeeper, MPNot, or expression

manyIndentation/leaf?> IN: Other "disposal" GoDeeper Typically GoDe <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting GoDeeper, MPNot, or expression

************ / manyIndentation/deeper; calling someIndentation                                                     :7_4:Other "disp:
************* / someIndentation                                                                                   :7_4:Other "disp:
************** / myindented: consuming GoDeeper                                                                  :7_4:Other "disp:
myindented: consuming GoDeeper> IN: Other "disposal" GoDeeper Typically GoDe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=29:
myindented: consuming GoDeeper> unexpected Other "disposal"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "disposal" GoDeeper Typically GoDe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=29:
someIndentation> unexpected Other "disposal"
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Other "disposal" GoDeeper Typically GoDe <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=29:
manyIndentation/deeper; calling someIndentation> unexpected Other "disposal"
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper, MPNot, or expression

term p/2:someIndentation expr p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper, MPNot, or expression

********** / term p/3:plain p                                                                                       :7_4:GoDeeper:
*********** / pRelPred                                                                                             :7_4:GoDeeper:
************ / slRelPred                                                                                          :7_4:GoDeeper:
************* / nested simpleHorn                                                                                :7_4:GoDeeper:
************** > |^|                                                                                            :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slMultiTerm                                                                                  :7_4:GoDeeper:
**************** / someSL                                                                                     :7_4:GoDeeper:
***************** / pNumAsText                                                                               :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=28:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

************* / RPConstraint                                                                                     :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slMultiTerm                                                                                  :7_4:GoDeeper:
**************** / someSL                                                                                     :7_4:GoDeeper:
***************** / pNumAsText                                                                               :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=28:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

************* / RPBoolStructR                                                                                    :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slMultiTerm                                                                                  :7_4:GoDeeper:
**************** / someSL                                                                                     :7_4:GoDeeper:
***************** / pNumAsText                                                                               :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=28:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

************* / RPMT                                                                                             :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slAKA                                                                                        :7_4:GoDeeper:
**************** / $*|                                                                                        :7_4:GoDeeper:
***************** / slAKA base                                                                               :7_4:GoDeeper:
****************** / slMultiTerm                                                                            :7_4:GoDeeper:
******************* / someSL                                                                               :7_4:GoDeeper:
******************** / pNumAsText                                                                         :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=28:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=28:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=28:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=28:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=28:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=28:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper, MPNot, or expression

term p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, MPNot, or expression

expression> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
expression> MATCH (CERR): GoDeeper Other "access" UnDeeper Or GoDe <…>
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting GoDeeper, MPNot, or expression

ppp inner> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
ppp inner> MATCH (CERR): GoDeeper Other "access" UnDeeper Or GoDe <…>
ppp inner> ERROR:
ppp inner> offset=31:
ppp inner> unexpected Typically
ppp inner> expecting GoDeeper, MPNot, or expression

made it to inner base parser> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
made it to inner base parser> MATCH (CERR): GoDeeper Other "access" UnDeeper Or GoDe <…>
made it to inner base parser> ERROR:
made it to inner base parser> offset=31:
made it to inner base parser> unexpected Typically
made it to inner base parser> expecting GoDeeper, MPNot, or expression

withPrePost> IN: GoDeeper Other "any" GoDeeper Other "una <…>
withPrePost> MATCH (CERR): GoDeeper Other "any" GoDeeper Other "una <…>
withPrePost> ERROR:
withPrePost> offset=31:
withPrePost> unexpected Typically
withPrePost> expecting GoDeeper, MPNot, or expression

**** / withPreOnly                                                                                                    :2_2:GoDeeper:
***** / $*|                                                                                                          :2_2:GoDeeper:
****** / pre part                                                                                                   :2_2:GoDeeper:
******* / aboveNextLineKeyword                                                                                      :2_2:Other "any":
******** / expectUnDeepers                                                                                         :2_2:Other "any":
********* / pNumAsText                                                                                             :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["any","GD","unauthorised","GD","access"]                                                         :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: Other "any" GoDeeper Other "unauthorised <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                          :2_2:Other "any":
******** > aNLK: determined undp_count = 1                                                                         :2_2:Other "any":
******** > ->| trying to consume 1 GoDeepers                                                                       :2_2:Other "any":
******** / $*|                                                                                                     :2_2:Other "any":
$*|> IN: Other "any" GoDeeper Other "unauthorised <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                 :2_2:Other "any":
aboveNextLineKeyword> IN: Other "any" GoDeeper Other "unauthorised <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=5:
aboveNextLineKeyword> unexpected Other "any"
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                             :2_2:Other "any":
******* / aboveNextLineKeyword                                                                                       :2_3:GoDeeper:
******** / expectUnDeepers                                                                                          :2_3:GoDeeper:
********* / pNumAsText                                                                                             :2_3:GoDeeper:
pNumAsText> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=6:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["GD","unauthorised","GD","access"]                                                               :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                           :2_3:GoDeeper:
******** > aNLK: determined undp_count = 1                                                                          :2_3:GoDeeper:
******** > ->| trying to consume 1 GoDeepers                                                                        :2_3:GoDeeper:
******** / $*|                                                                                                      :2_3:GoDeeper:
$*|> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                  :2_3:GoDeeper:
******** > ->| success                                                                                               :2_3:Other "unau:
******** / |>>/recurse                                                                                               :2_3:Other "unau:
|>>/recurse> IN: Other "unauthorised" GoDeeper Other "acc <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=7:
|>>/recurse> unexpected Other "unauthorised"
|>>/recurse> expecting GoDeeper

******** / |>>/base                                                                                                  :2_3:Other "unau:
********* / slMultiTerm                                                                                             :2_3:Other "unau:
********** / someSL                                                                                                :2_3:Other "unau:
someSL> IN: Other "unauthorised" GoDeeper Other "acc <…>
someSL> MATCH (COK): Other "unauthorised" GoDeeper Other "acc <…>
someSL> VALUE: ((["unauthorised","access"],1),[])

********** \ someSL has returned (["unauthorised","access"],1)                                                        :3_4:UnDeeper:
slMultiTerm> IN: Other "unauthorised" GoDeeper Other "acc <…>
slMultiTerm> MATCH (COK): Other "unauthorised" GoDeeper Other "acc <…>
slMultiTerm> VALUE: ((["unauthorised","access"],1),[])

********* \ slMultiTerm has returned (["unauthorised","access"],1)                                                     :3_4:UnDeeper:
********* > |>>/base got ["unauthorised","access"]                                                                     :3_4:UnDeeper:
|>>/base> IN: Other "unauthorised" GoDeeper Other "acc <…>
|>>/base> MATCH (COK): Other "unauthorised" GoDeeper Other "acc <…>
|>>/base> VALUE: ((["unauthorised","access"],1),[])

******** \ |>>/base has returned (["unauthorised","access"],1)                                                          :3_4:UnDeeper:
******** > aNLK: current depth is 2                                                                                     :3_4:UnDeeper:
******** > |<|                                                                                                          :3_4:UnDeeper:
******** > |<* starting                                                                                                 :3_4:UnDeeper:
******** / |<*/parent                                                                                                   :3_4:UnDeeper:
********* > |<*/recurse                                                                                                :3_4:UnDeeper:
********* > |<*/recurse matched 1 UnDeepers                                                                          :3_4:GoDeeper:
|<*/parent> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|<*/parent> MATCH (COK): UnDeeper Or
|<*/parent> VALUE: ((Or,-1),[])

******** \ |<*/parent has returned (Or,-1)                                                                            :3_4:GoDeeper:
******** > aNLK: slMultiTerm is ["unauthorised","access"]                                                             :3_4:GoDeeper:
aboveNextLineKeyword> IN: GoDeeper Other "unauthorised" GoDeeper O <…>
aboveNextLineKeyword> MATCH (CERR): GoDeeper Other "unauthorised" GoDeeper O <…>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=12:
aboveNextLineKeyword> aNLK: expecting depth 1 but the cursor seems to be placed such that we have 2; a different backtrack will probably fare better

******* > /*= lookAhead failed, delegating to plain /+=                                                              :2_3:GoDeeper:
******* / aboveNextLineKeyword                                                                                        :2_3:Other "unau:
******** / expectUnDeepers                                                                                           :2_3:Other "unau:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["unauthorised","GD","access"]                                                                    :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: Other "unauthorised" GoDeeper Other "acc <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                            :2_3:Other "unau:
******** > aNLK: determined undp_count = 1                                                                           :2_3:Other "unau:
******** > ->| trying to consume 1 GoDeepers                                                                         :2_3:Other "unau:
******** / $*|                                                                                                       :2_3:Other "unau:
$*|> IN: Other "unauthorised" GoDeeper Other "acc <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                   :2_3:Other "unau:
aboveNextLineKeyword> IN: Other "unauthorised" GoDeeper Other "acc <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=7:
aboveNextLineKeyword> unexpected Other "unauthorised"
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                               :2_3:Other "unau:
******* / aboveNextLineKeyword                                                                                         :2_4:GoDeeper:
******** / expectUnDeepers                                                                                            :2_4:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

********* > ignoring ["GD","access"]                                                                                   :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                             :2_4:GoDeeper:
******** > aNLK: determined undp_count = 1                                                                            :2_4:GoDeeper:
******** > ->| trying to consume 1 GoDeepers                                                                          :2_4:GoDeeper:
******** / $*|                                                                                                        :2_4:GoDeeper:
$*|> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                    :2_4:GoDeeper:
******** > ->| success                                                                                                 :2_4:Other "acce:
******** / |>>/recurse                                                                                                 :2_4:Other "acce:
|>>/recurse> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=9:
|>>/recurse> unexpected Other "access"
|>>/recurse> expecting GoDeeper

******** / |>>/base                                                                                                    :2_4:Other "acce:
********* / slMultiTerm                                                                                               :2_4:Other "acce:
********** / someSL                                                                                                  :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********** \ someSL has returned (["access"],0)                                                                       :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********* \ slMultiTerm has returned (["access"],0)                                                                    :3_4:UnDeeper:
********* > |>>/base got ["access"]                                                                                    :3_4:UnDeeper:
|>>/base> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
|>>/base> MATCH (COK): Other "access"
|>>/base> VALUE: ((["access"],0),[])

******** \ |>>/base has returned (["access"],0)                                                                         :3_4:UnDeeper:
******** > aNLK: current depth is 1                                                                                     :3_4:UnDeeper:
******** > |<|                                                                                                          :3_4:UnDeeper:
******** > |<* starting                                                                                                 :3_4:UnDeeper:
******** / |<*/parent                                                                                                   :3_4:UnDeeper:
********* > |<*/recurse                                                                                                :3_4:UnDeeper:
********* > |<*/recurse matched 1 UnDeepers                                                                          :3_4:GoDeeper:
|<*/parent> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|<*/parent> MATCH (COK): UnDeeper Or
|<*/parent> VALUE: ((Or,-1),[])

******** \ |<*/parent has returned (Or,-1)                                                                            :3_4:GoDeeper:
******** > aNLK: slMultiTerm is ["access"]                                                                            :3_4:GoDeeper:
aboveNextLineKeyword> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
aboveNextLineKeyword> MATCH (COK): GoDeeper Other "access" UnDeeper Or
aboveNextLineKeyword> VALUE: (((["access"],Or),0),[])

******* \ aboveNextLineKeyword has returned ((["access"],Or),0)                                                        :3_4:GoDeeper:
******* > /*= lookAhead succeeded, recursing greedily                                                                  :2_4:GoDeeper:
******* / aboveNextLineKeyword                                                                                          :2_4:Other "acce:
******** / expectUnDeepers                                                                                             :2_4:Other "acce:
********* > ignoring ["access"]                                                                                        :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                              :2_4:Other "acce:
******** > aNLK: determined undp_count = 1                                                                             :2_4:Other "acce:
******** > ->| trying to consume 1 GoDeepers                                                                           :2_4:Other "acce:
******** / $*|                                                                                                         :2_4:Other "acce:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                     :2_4:Other "acce:
aboveNextLineKeyword> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=9:
aboveNextLineKeyword> unexpected Other "access"
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                                 :2_4:Other "acce:
******* / aboveNextLineKeyword                                                                                           :3_4:UnDeeper:
******** / expectUnDeepers                                                                                              :3_4:UnDeeper:
********* > ignoring []                                                                                                :3_4:UnDeeper:
********* > matched undeepers [UnDeeper]                                                                            :3_3:Or:
expectUnDeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
expectUnDeepers> MATCH (EOK): <EMPTY>
expectUnDeepers> VALUE: (1,[])

******** \ expectUnDeepers has returned 1                                                                               :3_4:UnDeeper:
******** > aNLK: determined undp_count = 1                                                                              :3_4:UnDeeper:
******** > ->| trying to consume 1 GoDeepers                                                                            :3_4:UnDeeper:
******** / $*|                                                                                                          :3_4:UnDeeper:
$*|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$*|> MATCH (EOK): <EMPTY>
$*|> VALUE: (((),0),[])

******** \ $*| has returned ((),0)                                                                                      :3_4:UnDeeper:
aboveNextLineKeyword> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
aboveNextLineKeyword> MATCH (EERR): <EMPTY>
aboveNextLineKeyword> ERROR:
aboveNextLineKeyword> offset=10:
aboveNextLineKeyword> unexpected UnDeeper
aboveNextLineKeyword> expecting GoDeeper

******* > /*= lookAhead failed, delegating to plain /+=                                                                  :3_4:UnDeeper:
******* > /*= lookAhead succeeded, greedy recursion failed (no p1); returning p2.                                      :2_4:GoDeeper:
pre part> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pre part> MATCH (COK): GoDeeper Other "any" GoDeeper Other "una <…>
pre part> VALUE: ((["any","unauthorised"],2),[])

****** \ pre part has returned (["any","unauthorised"],2)                                                               :2_4:GoDeeper:
$*|> IN: GoDeeper Other "any" GoDeeper Other "una <…>
$*|> MATCH (COK): GoDeeper Other "any" GoDeeper Other "una <…>
$*|> VALUE: ((["any","unauthorised"],2),[])

***** \ $*| has returned (["any","unauthorised"],2)                                                                      :2_4:GoDeeper:
***** / made it to inner parser                                                                                          :2_4:GoDeeper:
****** / ppp inner                                                                                                      :2_4:GoDeeper:
******* / expression                                                                                                   :2_4:GoDeeper:
******** / labelPrefix                                                                                                :2_4:GoDeeper:
labelPrefix> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=8:
labelPrefix> unexpected GoDeeper
labelPrefix> expecting Other text

******** / term p                                                                                                     :2_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :2_4:GoDeeper:
********** / $*|                                                                                                    :2_4:GoDeeper:
*********** / someSL                                                                                               :2_4:GoDeeper:
************ / pNumAsText                                                                                         :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=8:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=8:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=8:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :2_4:GoDeeper:
********** / someSL                                                                                                 :2_4:GoDeeper:
*********** / pNumAsText                                                                                           :2_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=8:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=8:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=8:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :2_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :2_4:GoDeeper:
*********** / someIndentation                                                                                      :2_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :2_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :2_4:Other "acce:
************ / manyIndentation/leaf?                                                                               :2_4:Other "acce:
************* / expression                                                                                        :2_4:Other "acce:
************** / labelPrefix                                                                                     :2_4:Other "acce:
labelPrefix> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=10:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :2_4:Other "acce:
*************** / term p/1a:label directly above                                                                :2_4:Other "acce:
**************** / $*|                                                                                         :2_4:Other "acce:
***************** / someSL                                                                                    :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

***************** \ someSL has returned (["access"],0)                                                         :3_4:UnDeeper:
***************** / pNumAsText                                                                                 :3_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=10:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (CERR): Other "access"
$*|> ERROR:
$*|> offset=10:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/1a:label directly above> MATCH (CERR): Other "access"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=10:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :2_4:Other "acce:
**************** / someSL                                                                                      :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

**************** \ someSL has returned (["access"],0)                                                           :3_4:UnDeeper:
**************** / undeepers                                                                                    :3_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :3_4:UnDeeper:
***************** > sameLine: success!                                                                         :3_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :3_4:UnDeeper:
**************** / matching EOL                                                                                 :3_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=10:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "access"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=10:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :2_4:Other "acce:
**************** / term p/2:someIndentation expr p                                                             :2_4:Other "acce:
***************** / someIndentation                                                                           :2_4:Other "acce:
****************** / myindented: consuming GoDeeper                                                          :2_4:Other "acce:
myindented: consuming GoDeeper> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=9:
myindented: consuming GoDeeper> unexpected Other "access"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=9:
someIndentation> unexpected Other "access"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=9:
term p/2:someIndentation expr p> unexpected Other "access"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :2_4:Other "acce:
***************** / pRelPred                                                                                  :2_4:Other "acce:
****************** / slRelPred                                                                               :2_4:Other "acce:
******************* / nested simpleHorn                                                                     :2_4:Other "acce:
******************** > |^|                                                                                 :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slMultiTerm                                                                       :2_4:Other "acce:
********************** / someSL                                                                          :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********************** \ someSL has returned (["access"],0)                                               :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********************* \ slMultiTerm has returned (["access"],0)                                            :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
******************** / |^| deeps                                                                            :3_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :3_3:Or:
nested simpleHorn> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
nested simpleHorn> MATCH (CERR): Other "access" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=11:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slMultiTerm                                                                       :2_4:Other "acce:
********************** / someSL                                                                          :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********************** \ someSL has returned (["access"],0)                                               :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********************* \ slMultiTerm has returned (["access"],0)                                            :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
******************** / |>| calling $>>                                                                      :3_4:UnDeeper:
********************* / |>>/recurse                                                                        :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=10:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPConstraint> MATCH (CERR): Other "access"
RPConstraint> ERROR:
RPConstraint> offset=10:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slMultiTerm                                                                       :2_4:Other "acce:
********************** / someSL                                                                          :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

********************** \ someSL has returned (["access"],0)                                               :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

********************* \ slMultiTerm has returned (["access"],0)                                            :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
******************** / |>| calling $>>                                                                      :3_4:UnDeeper:
********************* / |>>/recurse                                                                        :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=10:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPBoolStructR> MATCH (CERR): Other "access"
RPBoolStructR> ERROR:
RPBoolStructR> offset=10:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :2_4:Other "acce:
******************** / $*|                                                                                 :2_4:Other "acce:
********************* / slAKA                                                                             :2_4:Other "acce:
********************** / $*|                                                                             :2_4:Other "acce:
*********************** / slAKA base                                                                    :2_4:Other "acce:
************************ / slMultiTerm                                                                 :2_4:Other "acce:
************************* / someSL                                                                    :2_4:Other "acce:
someSL> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
someSL> MATCH (COK): Other "access"
someSL> VALUE: ((["access"],0),[])

************************* \ someSL has returned (["access"],0)                                         :3_4:UnDeeper:
slMultiTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slMultiTerm> MATCH (COK): Other "access"
slMultiTerm> VALUE: ((["access"],0),[])

************************ \ slMultiTerm has returned (["access"],0)                                      :3_4:UnDeeper:
slAKA base> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slAKA base> MATCH (COK): Other "access"
slAKA base> VALUE: ((["access"],0),[])

*********************** \ slAKA base has returned (["access"],0)                                         :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

********************** \ $*| has returned (["access"],0)                                                  :3_4:UnDeeper:
********************** / |>>/recurse                                                                      :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :3_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :3_4:UnDeeper:
************************ / |?| optional something                                                       :3_4:UnDeeper:
************************* / |>>/recurse                                                                :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :3_4:UnDeeper:
************************** / PAKA/akapart                                                             :3_4:UnDeeper:
*************************** / $>|                                                                    :3_4:UnDeeper:
**************************** / Aka Token                                                            :3_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=10:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=10:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=10:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :3_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :3_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :3_4:UnDeeper:
********************** / |>>/recurse                                                                      :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :3_4:UnDeeper:
*********************** / slAKA optional typically                                                       :3_4:UnDeeper:
************************ / |?| optional something                                                       :3_4:UnDeeper:
************************* / |>>/recurse                                                                :3_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :3_4:UnDeeper:
************************** / typically                                                                :3_4:UnDeeper:
*************************** / $>|                                                                    :3_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=10:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=10:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=10:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :3_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :3_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :3_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :3_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :3_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :3_4:UnDeeper:
slAKA> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slAKA> MATCH (COK): Other "access"
slAKA> VALUE: ((["access"],0),[])

********************* \ slAKA has returned (["access"],0)                                                  :3_4:UnDeeper:
$*|> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
$*|> MATCH (COK): Other "access"
$*|> VALUE: ((["access"],0),[])

******************** \ $*| has returned (["access"],0)                                                      :3_4:UnDeeper:
RPMT> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
RPMT> MATCH (COK): Other "access"
RPMT> VALUE: ((RPMT ["access"],0),[])

******************* \ RPMT has returned (RPMT ["access"],0)                                                  :3_4:UnDeeper:
slRelPred> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
slRelPred> MATCH (COK): Other "access"
slRelPred> VALUE: ((RPMT ["access"],0),[])

****************** \ slRelPred has returned (RPMT ["access"],0)                                               :3_4:UnDeeper:
****************** / undeepers                                                                                :3_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :3_4:UnDeeper:
******************* > sameLine: success!                                                                     :3_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :3_4:UnDeeper:
pRelPred> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
pRelPred> MATCH (COK): Other "access"
pRelPred> VALUE: (RPMT ["access"],[])

***************** \ pRelPred has returned RPMT ["access"]                                                      :3_4:UnDeeper:
term p/3:plain p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/3:plain p> MATCH (COK): Other "access"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["access"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["access"])                                       :3_4:UnDeeper:
term p/notLabelTerm> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p/notLabelTerm> MATCH (COK): Other "access"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["access"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                      :3_4:UnDeeper:
term p> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
term p> MATCH (COK): Other "access"
term p> VALUE: (MyLeaf (RPMT ["access"]),[])

************** \ term p has returned MyLeaf (RPMT ["access"])                                                     :3_4:UnDeeper:
************** / binary(Or)                                                                                       :3_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=10:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :3_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=10:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :3_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=10:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :3_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=10:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
expression> MATCH (COK): Other "access"
expression> VALUE: (MyLeaf (RPMT ["access"]),[])

************* \ expression has returned MyLeaf (RPMT ["access"])                                                   :3_4:UnDeeper:
manyIndentation/leaf?> IN: Other "access" UnDeeper Or GoDeeper Othe <…>
manyIndentation/leaf?> MATCH (COK): Other "access"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["access"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["access"])                                          :3_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :3_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "use" UnDeepe <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :3_3:Or:
someIndentation> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
someIndentation> MATCH (COK): GoDeeper Other "access" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["access"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["access"])                                               :3_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "access" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["access"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["access"])                                 :3_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "access" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["access"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                               :3_3:Or:
term p> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
term p> MATCH (COK): GoDeeper Other "access" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["access"]),[])

******** \ term p has returned MyLeaf (RPMT ["access"])                                                              :3_3:Or:
******** / binary(Or)                                                                                                :3_3:Or:
binary(Or)> IN: Or GoDeeper Other "use" UnDeeper Or GoDe <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :3_4:GoDeeper:
******** / term p                                                                                                     :3_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :3_4:GoDeeper:
********** / $*|                                                                                                    :3_4:GoDeeper:
*********** / someSL                                                                                               :3_4:GoDeeper:
************ / pNumAsText                                                                                         :3_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=12:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=12:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=12:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=12:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :3_4:GoDeeper:
********** / someSL                                                                                                 :3_4:GoDeeper:
*********** / pNumAsText                                                                                           :3_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=12:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=12:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=12:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :3_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :3_4:GoDeeper:
*********** / someIndentation                                                                                      :3_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :3_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :3_4:Other "use":
************ / manyIndentation/leaf?                                                                               :3_4:Other "use":
************* / expression                                                                                        :3_4:Other "use":
************** / labelPrefix                                                                                     :3_4:Other "use":
labelPrefix> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=14:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :3_4:Other "use":
*************** / term p/1a:label directly above                                                                :3_4:Other "use":
**************** / $*|                                                                                         :3_4:Other "use":
***************** / someSL                                                                                    :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

***************** \ someSL has returned (["use"],0)                                                            :4_4:UnDeeper:
***************** / pNumAsText                                                                                 :4_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=14:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (CERR): Other "use"
$*|> ERROR:
$*|> offset=14:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/1a:label directly above> MATCH (CERR): Other "use"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=14:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :3_4:Other "use":
**************** / someSL                                                                                      :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

**************** \ someSL has returned (["use"],0)                                                              :4_4:UnDeeper:
**************** / undeepers                                                                                    :4_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :4_4:UnDeeper:
***************** > sameLine: success!                                                                         :4_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :4_4:UnDeeper:
**************** / matching EOL                                                                                 :4_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=14:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "use"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=14:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :3_4:Other "use":
**************** / term p/2:someIndentation expr p                                                             :3_4:Other "use":
***************** / someIndentation                                                                           :3_4:Other "use":
****************** / myindented: consuming GoDeeper                                                          :3_4:Other "use":
myindented: consuming GoDeeper> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=13:
myindented: consuming GoDeeper> unexpected Other "use"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=13:
someIndentation> unexpected Other "use"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=13:
term p/2:someIndentation expr p> unexpected Other "use"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :3_4:Other "use":
***************** / pRelPred                                                                                  :3_4:Other "use":
****************** / slRelPred                                                                               :3_4:Other "use":
******************* / nested simpleHorn                                                                     :3_4:Other "use":
******************** > |^|                                                                                 :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slMultiTerm                                                                       :3_4:Other "use":
********************** / someSL                                                                          :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

********************** \ someSL has returned (["use"],0)                                                  :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

********************* \ slMultiTerm has returned (["use"],0)                                               :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
******************** / |^| deeps                                                                            :4_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :4_3:Or:
nested simpleHorn> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
nested simpleHorn> MATCH (CERR): Other "use" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=15:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slMultiTerm                                                                       :3_4:Other "use":
********************** / someSL                                                                          :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

********************** \ someSL has returned (["use"],0)                                                  :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

********************* \ slMultiTerm has returned (["use"],0)                                               :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
******************** / |>| calling $>>                                                                      :4_4:UnDeeper:
********************* / |>>/recurse                                                                        :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=14:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPConstraint> MATCH (CERR): Other "use"
RPConstraint> ERROR:
RPConstraint> offset=14:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slMultiTerm                                                                       :3_4:Other "use":
********************** / someSL                                                                          :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

********************** \ someSL has returned (["use"],0)                                                  :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

********************* \ slMultiTerm has returned (["use"],0)                                               :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
******************** / |>| calling $>>                                                                      :4_4:UnDeeper:
********************* / |>>/recurse                                                                        :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=14:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPBoolStructR> MATCH (CERR): Other "use"
RPBoolStructR> ERROR:
RPBoolStructR> offset=14:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :3_4:Other "use":
******************** / $*|                                                                                 :3_4:Other "use":
********************* / slAKA                                                                             :3_4:Other "use":
********************** / $*|                                                                             :3_4:Other "use":
*********************** / slAKA base                                                                    :3_4:Other "use":
************************ / slMultiTerm                                                                 :3_4:Other "use":
************************* / someSL                                                                    :3_4:Other "use":
someSL> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
someSL> MATCH (COK): Other "use"
someSL> VALUE: ((["use"],0),[])

************************* \ someSL has returned (["use"],0)                                            :4_4:UnDeeper:
slMultiTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slMultiTerm> MATCH (COK): Other "use"
slMultiTerm> VALUE: ((["use"],0),[])

************************ \ slMultiTerm has returned (["use"],0)                                         :4_4:UnDeeper:
slAKA base> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slAKA base> MATCH (COK): Other "use"
slAKA base> VALUE: ((["use"],0),[])

*********************** \ slAKA base has returned (["use"],0)                                            :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

********************** \ $*| has returned (["use"],0)                                                     :4_4:UnDeeper:
********************** / |>>/recurse                                                                      :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :4_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :4_4:UnDeeper:
************************ / |?| optional something                                                       :4_4:UnDeeper:
************************* / |>>/recurse                                                                :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :4_4:UnDeeper:
************************** / PAKA/akapart                                                             :4_4:UnDeeper:
*************************** / $>|                                                                    :4_4:UnDeeper:
**************************** / Aka Token                                                            :4_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=14:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=14:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=14:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :4_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :4_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :4_4:UnDeeper:
********************** / |>>/recurse                                                                      :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :4_4:UnDeeper:
*********************** / slAKA optional typically                                                       :4_4:UnDeeper:
************************ / |?| optional something                                                       :4_4:UnDeeper:
************************* / |>>/recurse                                                                :4_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=14:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :4_4:UnDeeper:
************************** / typically                                                                :4_4:UnDeeper:
*************************** / $>|                                                                    :4_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=14:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=14:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=14:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :4_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :4_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :4_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :4_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :4_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :4_4:UnDeeper:
slAKA> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slAKA> MATCH (COK): Other "use"
slAKA> VALUE: ((["use"],0),[])

********************* \ slAKA has returned (["use"],0)                                                     :4_4:UnDeeper:
$*|> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
$*|> MATCH (COK): Other "use"
$*|> VALUE: ((["use"],0),[])

******************** \ $*| has returned (["use"],0)                                                         :4_4:UnDeeper:
RPMT> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
RPMT> MATCH (COK): Other "use"
RPMT> VALUE: ((RPMT ["use"],0),[])

******************* \ RPMT has returned (RPMT ["use"],0)                                                     :4_4:UnDeeper:
slRelPred> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
slRelPred> MATCH (COK): Other "use"
slRelPred> VALUE: ((RPMT ["use"],0),[])

****************** \ slRelPred has returned (RPMT ["use"],0)                                                  :4_4:UnDeeper:
****************** / undeepers                                                                                :4_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :4_4:UnDeeper:
******************* > sameLine: success!                                                                     :4_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :4_4:UnDeeper:
pRelPred> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
pRelPred> MATCH (COK): Other "use"
pRelPred> VALUE: (RPMT ["use"],[])

***************** \ pRelPred has returned RPMT ["use"]                                                         :4_4:UnDeeper:
term p/3:plain p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/3:plain p> MATCH (COK): Other "use"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["use"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["use"])                                          :4_4:UnDeeper:
term p/notLabelTerm> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p/notLabelTerm> MATCH (COK): Other "use"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["use"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])                                         :4_4:UnDeeper:
term p> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
term p> MATCH (COK): Other "use"
term p> VALUE: (MyLeaf (RPMT ["use"]),[])

************** \ term p has returned MyLeaf (RPMT ["use"])                                                        :4_4:UnDeeper:
************** / binary(Or)                                                                                       :4_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=14:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :4_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=14:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :4_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=14:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :4_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=14:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
expression> MATCH (COK): Other "use"
expression> VALUE: (MyLeaf (RPMT ["use"]),[])

************* \ expression has returned MyLeaf (RPMT ["use"])                                                      :4_4:UnDeeper:
manyIndentation/leaf?> IN: Other "use" UnDeeper Or GoDeeper Other " <…>
manyIndentation/leaf?> MATCH (COK): Other "use"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["use"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["use"])                                             :4_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :4_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "disclosure"  <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :4_3:Or:
someIndentation> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
someIndentation> MATCH (COK): GoDeeper Other "use" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["use"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["use"])                                                  :4_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "use" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["use"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["use"])                                    :4_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "use" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["use"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])                                                  :4_3:Or:
term p> IN: GoDeeper Other "use" UnDeeper Or GoDeepe <…>
term p> MATCH (COK): GoDeeper Other "use" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["use"]),[])

******** \ term p has returned MyLeaf (RPMT ["use"])                                                                 :4_3:Or:
******** / binary(Or)                                                                                                :4_3:Or:
binary(Or)> IN: Or GoDeeper Other "disclosure" UnDeeper  <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :4_4:GoDeeper:
******** / term p                                                                                                     :4_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :4_4:GoDeeper:
********** / $*|                                                                                                    :4_4:GoDeeper:
*********** / someSL                                                                                               :4_4:GoDeeper:
************ / pNumAsText                                                                                         :4_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=16:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=16:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=16:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=16:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :4_4:GoDeeper:
********** / someSL                                                                                                 :4_4:GoDeeper:
*********** / pNumAsText                                                                                           :4_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=16:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=16:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=16:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :4_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :4_4:GoDeeper:
*********** / someIndentation                                                                                      :4_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :4_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :4_4:Other "disc:
************ / manyIndentation/leaf?                                                                               :4_4:Other "disc:
************* / expression                                                                                        :4_4:Other "disc:
************** / labelPrefix                                                                                     :4_4:Other "disc:
labelPrefix> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=18:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :4_4:Other "disc:
*************** / term p/1a:label directly above                                                                :4_4:Other "disc:
**************** / $*|                                                                                         :4_4:Other "disc:
***************** / someSL                                                                                    :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

***************** \ someSL has returned (["disclosure"],0)                                                     :5_4:UnDeeper:
***************** / pNumAsText                                                                                 :5_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=18:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (CERR): Other "disclosure"
$*|> ERROR:
$*|> offset=18:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/1a:label directly above> MATCH (CERR): Other "disclosure"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=18:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :4_4:Other "disc:
**************** / someSL                                                                                      :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

**************** \ someSL has returned (["disclosure"],0)                                                       :5_4:UnDeeper:
**************** / undeepers                                                                                    :5_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :5_4:UnDeeper:
***************** > sameLine: success!                                                                         :5_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :5_4:UnDeeper:
**************** / matching EOL                                                                                 :5_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=18:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "disclosure"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=18:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :4_4:Other "disc:
**************** / term p/2:someIndentation expr p                                                             :4_4:Other "disc:
***************** / someIndentation                                                                           :4_4:Other "disc:
****************** / myindented: consuming GoDeeper                                                          :4_4:Other "disc:
myindented: consuming GoDeeper> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=17:
myindented: consuming GoDeeper> unexpected Other "disclosure"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=17:
someIndentation> unexpected Other "disclosure"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=17:
term p/2:someIndentation expr p> unexpected Other "disclosure"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :4_4:Other "disc:
***************** / pRelPred                                                                                  :4_4:Other "disc:
****************** / slRelPred                                                                               :4_4:Other "disc:
******************* / nested simpleHorn                                                                     :4_4:Other "disc:
******************** > |^|                                                                                 :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slMultiTerm                                                                       :4_4:Other "disc:
********************** / someSL                                                                          :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

********************** \ someSL has returned (["disclosure"],0)                                           :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

********************* \ slMultiTerm has returned (["disclosure"],0)                                        :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
******************** / |^| deeps                                                                            :5_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :5_3:Or:
nested simpleHorn> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
nested simpleHorn> MATCH (CERR): Other "disclosure" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=19:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slMultiTerm                                                                       :4_4:Other "disc:
********************** / someSL                                                                          :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

********************** \ someSL has returned (["disclosure"],0)                                           :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

********************* \ slMultiTerm has returned (["disclosure"],0)                                        :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
******************** / |>| calling $>>                                                                      :5_4:UnDeeper:
********************* / |>>/recurse                                                                        :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=18:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPConstraint> MATCH (CERR): Other "disclosure"
RPConstraint> ERROR:
RPConstraint> offset=18:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slMultiTerm                                                                       :4_4:Other "disc:
********************** / someSL                                                                          :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

********************** \ someSL has returned (["disclosure"],0)                                           :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

********************* \ slMultiTerm has returned (["disclosure"],0)                                        :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
******************** / |>| calling $>>                                                                      :5_4:UnDeeper:
********************* / |>>/recurse                                                                        :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=18:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPBoolStructR> MATCH (CERR): Other "disclosure"
RPBoolStructR> ERROR:
RPBoolStructR> offset=18:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :4_4:Other "disc:
******************** / $*|                                                                                 :4_4:Other "disc:
********************* / slAKA                                                                             :4_4:Other "disc:
********************** / $*|                                                                             :4_4:Other "disc:
*********************** / slAKA base                                                                    :4_4:Other "disc:
************************ / slMultiTerm                                                                 :4_4:Other "disc:
************************* / someSL                                                                    :4_4:Other "disc:
someSL> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
someSL> MATCH (COK): Other "disclosure"
someSL> VALUE: ((["disclosure"],0),[])

************************* \ someSL has returned (["disclosure"],0)                                     :5_4:UnDeeper:
slMultiTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slMultiTerm> MATCH (COK): Other "disclosure"
slMultiTerm> VALUE: ((["disclosure"],0),[])

************************ \ slMultiTerm has returned (["disclosure"],0)                                  :5_4:UnDeeper:
slAKA base> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slAKA base> MATCH (COK): Other "disclosure"
slAKA base> VALUE: ((["disclosure"],0),[])

*********************** \ slAKA base has returned (["disclosure"],0)                                     :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

********************** \ $*| has returned (["disclosure"],0)                                              :5_4:UnDeeper:
********************** / |>>/recurse                                                                      :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :5_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :5_4:UnDeeper:
************************ / |?| optional something                                                       :5_4:UnDeeper:
************************* / |>>/recurse                                                                :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :5_4:UnDeeper:
************************** / PAKA/akapart                                                             :5_4:UnDeeper:
*************************** / $>|                                                                    :5_4:UnDeeper:
**************************** / Aka Token                                                            :5_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=18:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=18:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=18:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :5_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :5_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :5_4:UnDeeper:
********************** / |>>/recurse                                                                      :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :5_4:UnDeeper:
*********************** / slAKA optional typically                                                       :5_4:UnDeeper:
************************ / |?| optional something                                                       :5_4:UnDeeper:
************************* / |>>/recurse                                                                :5_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=18:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :5_4:UnDeeper:
************************** / typically                                                                :5_4:UnDeeper:
*************************** / $>|                                                                    :5_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=18:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=18:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=18:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :5_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :5_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :5_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :5_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :5_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :5_4:UnDeeper:
slAKA> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slAKA> MATCH (COK): Other "disclosure"
slAKA> VALUE: ((["disclosure"],0),[])

********************* \ slAKA has returned (["disclosure"],0)                                              :5_4:UnDeeper:
$*|> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
$*|> MATCH (COK): Other "disclosure"
$*|> VALUE: ((["disclosure"],0),[])

******************** \ $*| has returned (["disclosure"],0)                                                  :5_4:UnDeeper:
RPMT> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
RPMT> MATCH (COK): Other "disclosure"
RPMT> VALUE: ((RPMT ["disclosure"],0),[])

******************* \ RPMT has returned (RPMT ["disclosure"],0)                                              :5_4:UnDeeper:
slRelPred> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
slRelPred> MATCH (COK): Other "disclosure"
slRelPred> VALUE: ((RPMT ["disclosure"],0),[])

****************** \ slRelPred has returned (RPMT ["disclosure"],0)                                           :5_4:UnDeeper:
****************** / undeepers                                                                                :5_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :5_4:UnDeeper:
******************* > sameLine: success!                                                                     :5_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :5_4:UnDeeper:
pRelPred> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
pRelPred> MATCH (COK): Other "disclosure"
pRelPred> VALUE: (RPMT ["disclosure"],[])

***************** \ pRelPred has returned RPMT ["disclosure"]                                                  :5_4:UnDeeper:
term p/3:plain p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/3:plain p> MATCH (COK): Other "disclosure"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["disclosure"])                                   :5_4:UnDeeper:
term p/notLabelTerm> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p/notLabelTerm> MATCH (COK): Other "disclosure"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])                                  :5_4:UnDeeper:
term p> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
term p> MATCH (COK): Other "disclosure"
term p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************** \ term p has returned MyLeaf (RPMT ["disclosure"])                                                 :5_4:UnDeeper:
************** / binary(Or)                                                                                       :5_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=18:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :5_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=18:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :5_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=18:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :5_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=18:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
expression> MATCH (COK): Other "disclosure"
expression> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************* \ expression has returned MyLeaf (RPMT ["disclosure"])                                               :5_4:UnDeeper:
manyIndentation/leaf?> IN: Other "disclosure" UnDeeper Or GoDeeper  <…>
manyIndentation/leaf?> MATCH (COK): Other "disclosure"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["disclosure"])                                      :5_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :5_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "copying" UnD <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :5_3:Or:
someIndentation> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
someIndentation> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["disclosure"])                                           :5_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["disclosure"])                             :5_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])                                           :5_3:Or:
term p> IN: GoDeeper Other "disclosure" UnDeeper Or  <…>
term p> MATCH (COK): GoDeeper Other "disclosure" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["disclosure"]),[])

******** \ term p has returned MyLeaf (RPMT ["disclosure"])                                                          :5_3:Or:
******** / binary(Or)                                                                                                :5_3:Or:
binary(Or)> IN: Or GoDeeper Other "copying" UnDeeper Or  <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :5_4:GoDeeper:
******** / term p                                                                                                     :5_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :5_4:GoDeeper:
********** / $*|                                                                                                    :5_4:GoDeeper:
*********** / someSL                                                                                               :5_4:GoDeeper:
************ / pNumAsText                                                                                         :5_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=20:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=20:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=20:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=20:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :5_4:GoDeeper:
********** / someSL                                                                                                 :5_4:GoDeeper:
*********** / pNumAsText                                                                                           :5_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=20:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=20:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=20:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :5_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :5_4:GoDeeper:
*********** / someIndentation                                                                                      :5_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :5_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :5_4:Other "copy:
************ / manyIndentation/leaf?                                                                               :5_4:Other "copy:
************* / expression                                                                                        :5_4:Other "copy:
************** / labelPrefix                                                                                     :5_4:Other "copy:
labelPrefix> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=22:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :5_4:Other "copy:
*************** / term p/1a:label directly above                                                                :5_4:Other "copy:
**************** / $*|                                                                                         :5_4:Other "copy:
***************** / someSL                                                                                    :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

***************** \ someSL has returned (["copying"],0)                                                        :6_4:UnDeeper:
***************** / pNumAsText                                                                                 :6_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "modification <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=22:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (CERR): Other "copying"
$*|> ERROR:
$*|> offset=22:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/1a:label directly above> MATCH (CERR): Other "copying"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=22:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :5_4:Other "copy:
**************** / someSL                                                                                      :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

**************** \ someSL has returned (["copying"],0)                                                          :6_4:UnDeeper:
**************** / undeepers                                                                                    :6_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :6_4:UnDeeper:
***************** > sameLine: success!                                                                         :6_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "modification <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :6_4:UnDeeper:
**************** / matching EOL                                                                                 :6_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "modification <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=22:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "copying"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=22:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :5_4:Other "copy:
**************** / term p/2:someIndentation expr p                                                             :5_4:Other "copy:
***************** / someIndentation                                                                           :5_4:Other "copy:
****************** / myindented: consuming GoDeeper                                                          :5_4:Other "copy:
myindented: consuming GoDeeper> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=21:
myindented: consuming GoDeeper> unexpected Other "copying"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=21:
someIndentation> unexpected Other "copying"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=21:
term p/2:someIndentation expr p> unexpected Other "copying"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :5_4:Other "copy:
***************** / pRelPred                                                                                  :5_4:Other "copy:
****************** / slRelPred                                                                               :5_4:Other "copy:
******************* / nested simpleHorn                                                                     :5_4:Other "copy:
******************** > |^|                                                                                 :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slMultiTerm                                                                       :5_4:Other "copy:
********************** / someSL                                                                          :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

********************** \ someSL has returned (["copying"],0)                                              :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

********************* \ slMultiTerm has returned (["copying"],0)                                           :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
******************** / |^| deeps                                                                            :6_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "modification <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :6_3:Or:
nested simpleHorn> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
nested simpleHorn> MATCH (CERR): Other "copying" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=23:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slMultiTerm                                                                       :5_4:Other "copy:
********************** / someSL                                                                          :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

********************** \ someSL has returned (["copying"],0)                                              :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

********************* \ slMultiTerm has returned (["copying"],0)                                           :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
******************** / |>| calling $>>                                                                      :6_4:UnDeeper:
********************* / |>>/recurse                                                                        :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "modification <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=22:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPConstraint> MATCH (CERR): Other "copying"
RPConstraint> ERROR:
RPConstraint> offset=22:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slMultiTerm                                                                       :5_4:Other "copy:
********************** / someSL                                                                          :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

********************** \ someSL has returned (["copying"],0)                                              :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

********************* \ slMultiTerm has returned (["copying"],0)                                           :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
******************** / |>| calling $>>                                                                      :6_4:UnDeeper:
********************* / |>>/recurse                                                                        :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "modification <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=22:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPBoolStructR> MATCH (CERR): Other "copying"
RPBoolStructR> ERROR:
RPBoolStructR> offset=22:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :5_4:Other "copy:
******************** / $*|                                                                                 :5_4:Other "copy:
********************* / slAKA                                                                             :5_4:Other "copy:
********************** / $*|                                                                             :5_4:Other "copy:
*********************** / slAKA base                                                                    :5_4:Other "copy:
************************ / slMultiTerm                                                                 :5_4:Other "copy:
************************* / someSL                                                                    :5_4:Other "copy:
someSL> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
someSL> MATCH (COK): Other "copying"
someSL> VALUE: ((["copying"],0),[])

************************* \ someSL has returned (["copying"],0)                                        :6_4:UnDeeper:
slMultiTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slMultiTerm> MATCH (COK): Other "copying"
slMultiTerm> VALUE: ((["copying"],0),[])

************************ \ slMultiTerm has returned (["copying"],0)                                     :6_4:UnDeeper:
slAKA base> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slAKA base> MATCH (COK): Other "copying"
slAKA base> VALUE: ((["copying"],0),[])

*********************** \ slAKA base has returned (["copying"],0)                                        :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

********************** \ $*| has returned (["copying"],0)                                                 :6_4:UnDeeper:
********************** / |>>/recurse                                                                      :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :6_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :6_4:UnDeeper:
************************ / |?| optional something                                                       :6_4:UnDeeper:
************************* / |>>/recurse                                                                :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :6_4:UnDeeper:
************************** / PAKA/akapart                                                             :6_4:UnDeeper:
*************************** / $>|                                                                    :6_4:UnDeeper:
**************************** / Aka Token                                                            :6_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "modification <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=22:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "modification <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=22:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "modification <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=22:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "modification <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :6_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "modification <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :6_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :6_4:UnDeeper:
********************** / |>>/recurse                                                                      :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :6_4:UnDeeper:
*********************** / slAKA optional typically                                                       :6_4:UnDeeper:
************************ / |?| optional something                                                       :6_4:UnDeeper:
************************* / |>>/recurse                                                                :6_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=22:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :6_4:UnDeeper:
************************** / typically                                                                :6_4:UnDeeper:
*************************** / $>|                                                                    :6_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "modification <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=22:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "modification <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=22:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=22:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "modification <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :6_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "modification <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :6_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :6_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "modification <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :6_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :6_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :6_4:UnDeeper:
slAKA> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slAKA> MATCH (COK): Other "copying"
slAKA> VALUE: ((["copying"],0),[])

********************* \ slAKA has returned (["copying"],0)                                                 :6_4:UnDeeper:
$*|> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
$*|> MATCH (COK): Other "copying"
$*|> VALUE: ((["copying"],0),[])

******************** \ $*| has returned (["copying"],0)                                                     :6_4:UnDeeper:
RPMT> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
RPMT> MATCH (COK): Other "copying"
RPMT> VALUE: ((RPMT ["copying"],0),[])

******************* \ RPMT has returned (RPMT ["copying"],0)                                                 :6_4:UnDeeper:
slRelPred> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
slRelPred> MATCH (COK): Other "copying"
slRelPred> VALUE: ((RPMT ["copying"],0),[])

****************** \ slRelPred has returned (RPMT ["copying"],0)                                              :6_4:UnDeeper:
****************** / undeepers                                                                                :6_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :6_4:UnDeeper:
******************* > sameLine: success!                                                                     :6_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "modification <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :6_4:UnDeeper:
pRelPred> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
pRelPred> MATCH (COK): Other "copying"
pRelPred> VALUE: (RPMT ["copying"],[])

***************** \ pRelPred has returned RPMT ["copying"]                                                     :6_4:UnDeeper:
term p/3:plain p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/3:plain p> MATCH (COK): Other "copying"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["copying"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["copying"])                                      :6_4:UnDeeper:
term p/notLabelTerm> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p/notLabelTerm> MATCH (COK): Other "copying"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["copying"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])                                     :6_4:UnDeeper:
term p> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
term p> MATCH (COK): Other "copying"
term p> VALUE: (MyLeaf (RPMT ["copying"]),[])

************** \ term p has returned MyLeaf (RPMT ["copying"])                                                    :6_4:UnDeeper:
************** / binary(Or)                                                                                       :6_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=22:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :6_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=22:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :6_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=22:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :6_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "modification <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=22:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
expression> MATCH (COK): Other "copying"
expression> VALUE: (MyLeaf (RPMT ["copying"]),[])

************* \ expression has returned MyLeaf (RPMT ["copying"])                                                  :6_4:UnDeeper:
manyIndentation/leaf?> IN: Other "copying" UnDeeper Or GoDeeper Oth <…>
manyIndentation/leaf?> MATCH (COK): Other "copying"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["copying"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["copying"])                                         :6_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :6_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "modification <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :6_3:Or:
someIndentation> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
someIndentation> MATCH (COK): GoDeeper Other "copying" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["copying"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["copying"])                                              :6_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["copying"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["copying"])                                :6_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["copying"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])                                              :6_3:Or:
term p> IN: GoDeeper Other "copying" UnDeeper Or GoD <…>
term p> MATCH (COK): GoDeeper Other "copying" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["copying"]),[])

******** \ term p has returned MyLeaf (RPMT ["copying"])                                                             :6_3:Or:
******** / binary(Or)                                                                                                :6_3:Or:
binary(Or)> IN: Or GoDeeper Other "modification" UnDeepe <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :6_4:GoDeeper:
******** / term p                                                                                                     :6_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :6_4:GoDeeper:
********** / $*|                                                                                                    :6_4:GoDeeper:
*********** / someSL                                                                                               :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "modification" UnDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=24:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "modification" UnDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=24:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "modification" UnDeeper O <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=24:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=24:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :6_4:GoDeeper:
********** / someSL                                                                                                 :6_4:GoDeeper:
*********** / pNumAsText                                                                                           :6_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "modification" UnDeeper O <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=24:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "modification" UnDeeper O <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=24:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=24:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :6_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :6_4:GoDeeper:
*********** / someIndentation                                                                                      :6_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :6_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "modification" UnDeeper O <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :6_4:Other "modi:
************ / manyIndentation/leaf?                                                                               :6_4:Other "modi:
************* / expression                                                                                        :6_4:Other "modi:
************** / labelPrefix                                                                                     :6_4:Other "modi:
labelPrefix> IN: Other "modification" UnDeeper Or GoDeepe <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=26:
labelPrefix> unexpected UnDeeper

************** / term p                                                                                          :6_4:Other "modi:
*************** / term p/1a:label directly above                                                                :6_4:Other "modi:
**************** / $*|                                                                                         :6_4:Other "modi:
***************** / someSL                                                                                    :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

***************** \ someSL has returned (["modification"],0)                                                   :7_4:UnDeeper:
***************** / pNumAsText                                                                                 :7_4:UnDeeper:
pNumAsText> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=26:
pNumAsText> unexpected UnDeeper
pNumAsText> expecting TNumber 1234

$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (CERR): Other "modification"
$*|> ERROR:
$*|> offset=26:
$*|> unexpected UnDeeper
$*|> expecting GoDeeper, Other text, or TNumber 1234

term p/1a:label directly above> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/1a:label directly above> MATCH (CERR): Other "modification"
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=26:
term p/1a:label directly above> unexpected UnDeeper
term p/1a:label directly above> expecting GoDeeper, Other text, or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                            :6_4:Other "modi:
**************** / someSL                                                                                      :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

**************** \ someSL has returned (["modification"],0)                                                     :7_4:UnDeeper:
**************** / undeepers                                                                                    :7_4:UnDeeper:
***************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :7_4:UnDeeper:
***************** > sameLine: success!                                                                         :7_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

**************** \ undeepers has returned ()                                                                    :7_4:UnDeeper:
**************** / matching EOL                                                                                 :7_4:UnDeeper:
matching EOL> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=26:
matching EOL> unexpected UnDeeper
matching EOL> expecting EOL

term p/b:label to the left of line below, with EOL> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/b:label to the left of line below, with EOL> MATCH (CERR): Other "modification"
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=26:
term p/b:label to the left of line below, with EOL> unexpected UnDeeper
term p/b:label to the left of line below, with EOL> expecting EOL or GoDeeper

*************** / term p/notLabelTerm                                                                           :6_4:Other "modi:
**************** / term p/2:someIndentation expr p                                                             :6_4:Other "modi:
***************** / someIndentation                                                                           :6_4:Other "modi:
****************** / myindented: consuming GoDeeper                                                          :6_4:Other "modi:
myindented: consuming GoDeeper> IN: Other "modification" UnDeeper Or GoDeepe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=25:
myindented: consuming GoDeeper> unexpected Other "modification"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "modification" UnDeeper Or GoDeepe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=25:
someIndentation> unexpected Other "modification"
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=25:
term p/2:someIndentation expr p> unexpected Other "modification"
term p/2:someIndentation expr p> expecting GoDeeper

**************** / term p/3:plain p                                                                            :6_4:Other "modi:
***************** / pRelPred                                                                                  :6_4:Other "modi:
****************** / slRelPred                                                                               :6_4:Other "modi:
******************* / nested simpleHorn                                                                     :6_4:Other "modi:
******************** > |^|                                                                                 :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slMultiTerm                                                                       :6_4:Other "modi:
********************** / someSL                                                                          :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

********************** \ someSL has returned (["modification"],0)                                         :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

********************* \ slMultiTerm has returned (["modification"],0)                                      :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
******************** / |^| deeps                                                                            :7_4:UnDeeper:
|^| deeps> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|^| deeps> MATCH (COK): UnDeeper
|^| deeps> VALUE: (([()],-1),[])

******************** \ |^| deeps has returned ([()],-1)                                                  :7_3:Or:
nested simpleHorn> IN: Other "modification" UnDeeper Or GoDeepe <…>
nested simpleHorn> MATCH (CERR): Other "modification" UnDeeper
nested simpleHorn> ERROR:
nested simpleHorn> offset=27:
nested simpleHorn> unexpected Or
nested simpleHorn> expecting Means or UnDeeper

******************* / RPConstraint                                                                          :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slMultiTerm                                                                       :6_4:Other "modi:
********************** / someSL                                                                          :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

********************** \ someSL has returned (["modification"],0)                                         :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

********************* \ slMultiTerm has returned (["modification"],0)                                      :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
******************** / |>| calling $>>                                                                      :7_4:UnDeeper:
********************* / |>>/recurse                                                                        :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=26:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPConstraint> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPConstraint> MATCH (CERR): Other "modification"
RPConstraint> ERROR:
RPConstraint> offset=26:
RPConstraint> unexpected UnDeeper
RPConstraint> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPBoolStructR                                                                         :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slMultiTerm                                                                       :6_4:Other "modi:
********************** / someSL                                                                          :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

********************** \ someSL has returned (["modification"],0)                                         :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

********************* \ slMultiTerm has returned (["modification"],0)                                      :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
******************** / |>| calling $>>                                                                      :7_4:UnDeeper:
********************* / |>>/recurse                                                                        :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************* / |>>/base                                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

|>| calling $>>> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=26:
|>| calling $>>> unexpected UnDeeper
|>| calling $>>> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

RPBoolStructR> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPBoolStructR> MATCH (CERR): Other "modification"
RPBoolStructR> ERROR:
RPBoolStructR> offset=26:
RPBoolStructR> unexpected UnDeeper
RPBoolStructR> expecting GoDeeper, Is, TokEQ, TokGT, TokGTE, TokIn, TokLT, TokLTE, or TokNotIn

******************* / RPMT                                                                                  :6_4:Other "modi:
******************** / $*|                                                                                 :6_4:Other "modi:
********************* / slAKA                                                                             :6_4:Other "modi:
********************** / $*|                                                                             :6_4:Other "modi:
*********************** / slAKA base                                                                    :6_4:Other "modi:
************************ / slMultiTerm                                                                 :6_4:Other "modi:
************************* / someSL                                                                    :6_4:Other "modi:
someSL> IN: Other "modification" UnDeeper Or GoDeepe <…>
someSL> MATCH (COK): Other "modification"
someSL> VALUE: ((["modification"],0),[])

************************* \ someSL has returned (["modification"],0)                                   :7_4:UnDeeper:
slMultiTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
slMultiTerm> MATCH (COK): Other "modification"
slMultiTerm> VALUE: ((["modification"],0),[])

************************ \ slMultiTerm has returned (["modification"],0)                                :7_4:UnDeeper:
slAKA base> IN: Other "modification" UnDeeper Or GoDeepe <…>
slAKA base> MATCH (COK): Other "modification"
slAKA base> VALUE: ((["modification"],0),[])

*********************** \ slAKA base has returned (["modification"],0)                                   :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

********************** \ $*| has returned (["modification"],0)                                            :7_4:UnDeeper:
********************** / |>>/recurse                                                                      :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :7_4:UnDeeper:
*********************** / slAKA optional akapart                                                         :7_4:UnDeeper:
************************ / |?| optional something                                                       :7_4:UnDeeper:
************************* / |>>/recurse                                                                :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :7_4:UnDeeper:
************************** / PAKA/akapart                                                             :7_4:UnDeeper:
*************************** / $>|                                                                    :7_4:UnDeeper:
**************************** / Aka Token                                                            :7_4:UnDeeper:
Aka Token> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=26:
Aka Token> unexpected UnDeeper
Aka Token> expecting Aka

$>|> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=26:
$>|> unexpected UnDeeper
$>|> expecting Aka

PAKA/akapart> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=26:
PAKA/akapart> unexpected UnDeeper
PAKA/akapart> expecting Aka

|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Aka

|?| optional something> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :7_4:UnDeeper:
slAKA optional akapart> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional akapart has returned (Nothing,0)                                :7_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :7_4:UnDeeper:
********************** / |>>/recurse                                                                      :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

********************** / |>>/base                                                                         :7_4:UnDeeper:
*********************** / slAKA optional typically                                                       :7_4:UnDeeper:
************************ / |?| optional something                                                       :7_4:UnDeeper:
************************* / |>>/recurse                                                                :7_4:UnDeeper:
|>>/recurse> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=26:
|>>/recurse> unexpected UnDeeper
|>>/recurse> expecting GoDeeper

************************* / |>>/base                                                                   :7_4:UnDeeper:
************************** / typically                                                                :7_4:UnDeeper:
*************************** / $>|                                                                    :7_4:UnDeeper:
$>|> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=26:
$>|> unexpected UnDeeper
$>|> expecting Typically

typically> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=26:
typically> unexpected UnDeeper
typically> expecting Typically

|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=26:
|>>/base> unexpected UnDeeper
|>>/base> expecting Typically

|?| optional something> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************ \ |?| optional something has returned (Nothing,0)                              :7_4:UnDeeper:
slAKA optional typically> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*********************** \ slAKA optional typically has returned (Nothing,0)                              :7_4:UnDeeper:
*********************** > |>>/base got Nothing                                                           :7_4:UnDeeper:
|>>/base> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************** \ |>>/base has returned (Nothing,0)                                                :7_4:UnDeeper:
********************** > slAKA: proceeding after base and entityalias are retrieved ...                   :7_4:UnDeeper:
********************** > pAKA: entityalias = Nothing                                                      :7_4:UnDeeper:
slAKA> IN: Other "modification" UnDeeper Or GoDeepe <…>
slAKA> MATCH (COK): Other "modification"
slAKA> VALUE: ((["modification"],0),[])

********************* \ slAKA has returned (["modification"],0)                                            :7_4:UnDeeper:
$*|> IN: Other "modification" UnDeeper Or GoDeepe <…>
$*|> MATCH (COK): Other "modification"
$*|> VALUE: ((["modification"],0),[])

******************** \ $*| has returned (["modification"],0)                                                :7_4:UnDeeper:
RPMT> IN: Other "modification" UnDeeper Or GoDeepe <…>
RPMT> MATCH (COK): Other "modification"
RPMT> VALUE: ((RPMT ["modification"],0),[])

******************* \ RPMT has returned (RPMT ["modification"],0)                                            :7_4:UnDeeper:
slRelPred> IN: Other "modification" UnDeeper Or GoDeepe <…>
slRelPred> MATCH (COK): Other "modification"
slRelPred> VALUE: ((RPMT ["modification"],0),[])

****************** \ slRelPred has returned (RPMT ["modification"],0)                                         :7_4:UnDeeper:
****************** / undeepers                                                                                :7_4:UnDeeper:
******************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :7_4:UnDeeper:
******************* > sameLine: success!                                                                     :7_4:UnDeeper:
undeepers> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

****************** \ undeepers has returned ()                                                                :7_4:UnDeeper:
pRelPred> IN: Other "modification" UnDeeper Or GoDeepe <…>
pRelPred> MATCH (COK): Other "modification"
pRelPred> VALUE: (RPMT ["modification"],[])

***************** \ pRelPred has returned RPMT ["modification"]                                                :7_4:UnDeeper:
term p/3:plain p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/3:plain p> MATCH (COK): Other "modification"
term p/3:plain p> VALUE: (MyLeaf (RPMT ["modification"]),[])

**************** \ term p/3:plain p has returned MyLeaf (RPMT ["modification"])                                 :7_4:UnDeeper:
term p/notLabelTerm> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p/notLabelTerm> MATCH (COK): Other "modification"
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["modification"]),[])

*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])                                :7_4:UnDeeper:
term p> IN: Other "modification" UnDeeper Or GoDeepe <…>
term p> MATCH (COK): Other "modification"
term p> VALUE: (MyLeaf (RPMT ["modification"]),[])

************** \ term p has returned MyLeaf (RPMT ["modification"])                                               :7_4:UnDeeper:
************** / binary(Or)                                                                                       :7_4:UnDeeper:
binary(Or)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=26:
binary(Or)> unexpected UnDeeper
binary(Or)> expecting Or

************** / binary(And)                                                                                      :7_4:UnDeeper:
binary(And)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=26:
binary(And)> unexpected UnDeeper
binary(And)> expecting And

************** / binary(SetLess)                                                                                  :7_4:UnDeeper:
binary(SetLess)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=26:
binary(SetLess)> unexpected UnDeeper
binary(SetLess)> expecting SetLess

************** / binary(SetPlus)                                                                                  :7_4:UnDeeper:
binary(SetPlus)> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=26:
binary(SetPlus)> unexpected UnDeeper
binary(SetPlus)> expecting SetPlus

expression> IN: Other "modification" UnDeeper Or GoDeepe <…>
expression> MATCH (COK): Other "modification"
expression> VALUE: (MyLeaf (RPMT ["modification"]),[])

************* \ expression has returned MyLeaf (RPMT ["modification"])                                             :7_4:UnDeeper:
manyIndentation/leaf?> IN: Other "modification" UnDeeper Or GoDeepe <…>
manyIndentation/leaf?> MATCH (COK): Other "modification"
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["modification"]),[])

************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["modification"])                                    :7_4:UnDeeper:
************ / myindented: consuming UnDeeper                                                                       :7_4:UnDeeper:
myindented: consuming UnDeeper> IN: UnDeeper Or GoDeeper Other "disposal" Go <…>
myindented: consuming UnDeeper> MATCH (COK): UnDeeper
myindented: consuming UnDeeper> VALUE: (UnDeeper,[])

************ \ myindented: consuming UnDeeper has returned UnDeeper                                              :7_3:Or:
someIndentation> IN: GoDeeper Other "modification" UnDeeper O <…>
someIndentation> MATCH (COK): GoDeeper Other "modification" UnDeeper
someIndentation> VALUE: (MyLeaf (RPMT ["modification"]),[])

*********** \ someIndentation has returned MyLeaf (RPMT ["modification"])                                         :7_3:Or:
term p/2:someIndentation expr p> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/2:someIndentation expr p> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["modification"]),[])

********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["modification"])                           :7_3:Or:
term p/notLabelTerm> IN: GoDeeper Other "modification" UnDeeper O <…>
term p/notLabelTerm> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["modification"]),[])

********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])                                         :7_3:Or:
term p> IN: GoDeeper Other "modification" UnDeeper O <…>
term p> MATCH (COK): GoDeeper Other "modification" UnDeeper
term p> VALUE: (MyLeaf (RPMT ["modification"]),[])

******** \ term p has returned MyLeaf (RPMT ["modification"])                                                        :7_3:Or:
******** / binary(Or)                                                                                                :7_3:Or:
binary(Or)> IN: Or GoDeeper Other "disposal" GoDeeper Ty <…>
binary(Or)> MATCH (COK): Or
binary(Or)> VALUE: (Or,[])

******** \ binary(Or) has returned Or                                                                                 :7_4:GoDeeper:
******** / term p                                                                                                     :7_4:GoDeeper:
********* / term p/1a:label directly above                                                                           :7_4:GoDeeper:
********** / $*|                                                                                                    :7_4:GoDeeper:
*********** / someSL                                                                                               :7_4:GoDeeper:
************ / pNumAsText                                                                                         :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=28:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

********* / term p/b:label to the left of line below, with EOL                                                       :7_4:GoDeeper:
********** / someSL                                                                                                 :7_4:GoDeeper:
*********** / pNumAsText                                                                                           :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=28:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********* / term p/notLabelTerm                                                                                      :7_4:GoDeeper:
********** / term p/2:someIndentation expr p                                                                        :7_4:GoDeeper:
*********** / someIndentation                                                                                      :7_4:GoDeeper:
************ / myindented: consuming GoDeeper                                                                     :7_4:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

************ \ myindented: consuming GoDeeper has returned GoDeeper                                                :7_4:Other "disp:
************ / manyIndentation/leaf?                                                                               :7_4:Other "disp:
************* / expression                                                                                        :7_4:Other "disp:
************** / labelPrefix                                                                                     :7_4:Other "disp:
labelPrefix> IN: Other "disposal" GoDeeper Typically GoDe <…>
labelPrefix> MATCH (COK): Other "disposal"
labelPrefix> VALUE: ("disposal",[])

************** \ labelPrefix has returned "disposal"                                                              :7_5:GoDeeper:
************** / term p                                                                                           :7_5:GoDeeper:
*************** / term p/1a:label directly above                                                                 :7_5:GoDeeper:
**************** / $*|                                                                                          :7_5:GoDeeper:
***************** / someSL                                                                                     :7_5:GoDeeper:
****************** / pNumAsText                                                                               :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=30:
term p/1a:label directly above> unexpected GoDeeper
term p/1a:label directly above> expecting Other text or TNumber 1234

*************** / term p/b:label to the left of line below, with EOL                                             :7_5:GoDeeper:
**************** / someSL                                                                                       :7_5:GoDeeper:
***************** / pNumAsText                                                                                 :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=30:
term p/b:label to the left of line below, with EOL> unexpected GoDeeper
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

*************** / term p/notLabelTerm                                                                            :7_5:GoDeeper:
**************** / term p/2:someIndentation expr p                                                              :7_5:GoDeeper:
***************** / someIndentation                                                                            :7_5:GoDeeper:
****************** / myindented: consuming GoDeeper                                                           :7_5:GoDeeper:
myindented: consuming GoDeeper> IN: GoDeeper Typically GoDeeper Other "True" <…>
myindented: consuming GoDeeper> MATCH (COK): GoDeeper
myindented: consuming GoDeeper> VALUE: (GoDeeper,[])

****************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :7_5:Typically:
****************** / manyIndentation/leaf?                                                                     :7_5:Typically:
******************* / expression                                                                              :7_5:Typically:
******************** / labelPrefix                                                                           :7_5:Typically:
labelPrefix> IN: Typically GoDeeper Other "True" UnDeeper <…>
labelPrefix> MATCH (EERR): <EMPTY>
labelPrefix> ERROR:
labelPrefix> offset=31:
labelPrefix> unexpected Typically
labelPrefix> expecting Other text

******************** / term p                                                                                :7_5:Typically:
********************* / term p/1a:label directly above                                                      :7_5:Typically:
********************** / $*|                                                                               :7_5:Typically:
*********************** / someSL                                                                          :7_5:Typically:
************************ / pNumAsText                                                                    :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

term p/1a:label directly above> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/1a:label directly above> MATCH (EERR): <EMPTY>
term p/1a:label directly above> ERROR:
term p/1a:label directly above> offset=31:
term p/1a:label directly above> unexpected Typically
term p/1a:label directly above> expecting Other text or TNumber 1234

********************* / term p/b:label to the left of line below, with EOL                                  :7_5:Typically:
********************** / someSL                                                                            :7_5:Typically:
*********************** / pNumAsText                                                                      :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

term p/b:label to the left of line below, with EOL> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/b:label to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/b:label to the left of line below, with EOL> ERROR:
term p/b:label to the left of line below, with EOL> offset=31:
term p/b:label to the left of line below, with EOL> unexpected Typically
term p/b:label to the left of line below, with EOL> expecting Other text or TNumber 1234

********************* / term p/notLabelTerm                                                                 :7_5:Typically:
********************** / term p/2:someIndentation expr p                                                   :7_5:Typically:
*********************** / someIndentation                                                                 :7_5:Typically:
************************ / myindented: consuming GoDeeper                                                :7_5:Typically:
myindented: consuming GoDeeper> IN: Typically GoDeeper Other "True" UnDeeper <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=31:
myindented: consuming GoDeeper> unexpected Typically
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper

term p/2:someIndentation expr p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper

********************** / term p/3:plain p                                                                  :7_5:Typically:
*********************** / pRelPred                                                                        :7_5:Typically:
************************ / slRelPred                                                                     :7_5:Typically:
************************* / nested simpleHorn                                                           :7_5:Typically:
************************** > |^|                                                                       :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slMultiTerm                                                             :7_5:Typically:
**************************** / someSL                                                                :7_5:Typically:
***************************** / pNumAsText                                                          :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: Typically GoDeeper Other "True" UnDeeper <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=31:
nested simpleHorn> unexpected Typically
nested simpleHorn> expecting Other text or TNumber 1234

************************* / RPConstraint                                                                :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slMultiTerm                                                             :7_5:Typically:
**************************** / someSL                                                                :7_5:Typically:
***************************** / pNumAsText                                                          :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=31:
RPConstraint> unexpected Typically
RPConstraint> expecting Other text or TNumber 1234

************************* / RPBoolStructR                                                               :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slMultiTerm                                                             :7_5:Typically:
**************************** / someSL                                                                :7_5:Typically:
***************************** / pNumAsText                                                          :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=31:
RPBoolStructR> unexpected Typically
RPBoolStructR> expecting Other text or TNumber 1234

************************* / RPMT                                                                        :7_5:Typically:
************************** / $*|                                                                       :7_5:Typically:
*************************** / slAKA                                                                   :7_5:Typically:
**************************** / $*|                                                                   :7_5:Typically:
***************************** / slAKA base                                                          :7_5:Typically:
****************************** / slMultiTerm                                                       :7_5:Typically:
******************************* / someSL                                                          :7_5:Typically:
******************************** / pNumAsText                                                    :7_5:Typically:
pNumAsText> IN: Typically GoDeeper Other "True" UnDeeper <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=31:
pNumAsText> unexpected Typically
pNumAsText> expecting TNumber 1234

someSL> IN: Typically GoDeeper Other "True" UnDeeper <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=31:
someSL> unexpected Typically
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=31:
slMultiTerm> unexpected Typically
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: Typically GoDeeper Other "True" UnDeeper <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=31:
slAKA base> unexpected Typically
slAKA base> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

slAKA> IN: Typically GoDeeper Other "True" UnDeeper <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=31:
slAKA> unexpected Typically
slAKA> expecting Other text or TNumber 1234

$*|> IN: Typically GoDeeper Other "True" UnDeeper <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=31:
$*|> unexpected Typically
$*|> expecting Other text or TNumber 1234

RPMT> IN: Typically GoDeeper Other "True" UnDeeper <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=31:
RPMT> unexpected Typically
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: Typically GoDeeper Other "True" UnDeeper <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=31:
slRelPred> unexpected Typically
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: Typically GoDeeper Other "True" UnDeeper <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=31:
pRelPred> unexpected Typically
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=31:
term p/3:plain p> unexpected Typically
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper or term

term p> IN: Typically GoDeeper Other "True" UnDeeper <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, Other text, TNumber 1234, or term

expression> IN: Typically GoDeeper Other "True" UnDeeper <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting expression

manyIndentation/leaf?> IN: Typically GoDeeper Other "True" UnDeeper <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting expression

****************** / manyIndentation/deeper; calling someIndentation                                           :7_5:Typically:
******************* / someIndentation                                                                         :7_5:Typically:
******************** / myindented: consuming GoDeeper                                                        :7_5:Typically:
myindented: consuming GoDeeper> IN: Typically GoDeeper Other "True" UnDeeper <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=31:
myindented: consuming GoDeeper> unexpected Typically
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Typically GoDeeper Other "True" UnDeeper <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=31:
manyIndentation/deeper; calling someIndentation> unexpected Typically
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Typically GoDeeper Other "True" <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper or expression

term p/2:someIndentation expr p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper or expression

**************** / term p/3:plain p                                                                             :7_5:GoDeeper:
***************** / pRelPred                                                                                   :7_5:GoDeeper:
****************** / slRelPred                                                                                :7_5:GoDeeper:
******************* / nested simpleHorn                                                                      :7_5:GoDeeper:
******************** > |^|                                                                                  :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slMultiTerm                                                                        :7_5:GoDeeper:
********************** / someSL                                                                           :7_5:GoDeeper:
*********************** / pNumAsText                                                                     :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Typically GoDeeper Other "True" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=30:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

******************* / RPConstraint                                                                           :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slMultiTerm                                                                        :7_5:GoDeeper:
********************** / someSL                                                                           :7_5:GoDeeper:
*********************** / pNumAsText                                                                     :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=30:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

******************* / RPBoolStructR                                                                          :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slMultiTerm                                                                        :7_5:GoDeeper:
********************** / someSL                                                                           :7_5:GoDeeper:
*********************** / pNumAsText                                                                     :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=30:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

******************* / RPMT                                                                                   :7_5:GoDeeper:
******************** / $*|                                                                                  :7_5:GoDeeper:
********************* / slAKA                                                                              :7_5:GoDeeper:
********************** / $*|                                                                              :7_5:GoDeeper:
*********************** / slAKA base                                                                     :7_5:GoDeeper:
************************ / slMultiTerm                                                                  :7_5:GoDeeper:
************************* / someSL                                                                     :7_5:GoDeeper:
************************** / pNumAsText                                                               :7_5:GoDeeper:
pNumAsText> IN: GoDeeper Typically GoDeeper Other "True" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=30:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Typically GoDeeper Other "True" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=30:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=30:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Typically GoDeeper Other "True" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=30:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Typically GoDeeper Other "True" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=30:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Typically GoDeeper Other "True" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=30:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Typically GoDeeper Other "True" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=30:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Typically GoDeeper Other "True" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=30:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Typically GoDeeper Other "True" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=30:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=30:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper or expression

term p> IN: GoDeeper Typically GoDeeper Other "True" <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper or expression

expression> IN: Other "disposal" GoDeeper Typically GoDe <…>
expression> MATCH (CERR): Other "disposal"
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting GoDeeper, MPNot, or expression

manyIndentation/leaf?> IN: Other "disposal" GoDeeper Typically GoDe <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=31:
manyIndentation/leaf?> unexpected Typically
manyIndentation/leaf?> expecting GoDeeper, MPNot, or expression

************ / manyIndentation/deeper; calling someIndentation                                                     :7_4:Other "disp:
************* / someIndentation                                                                                   :7_4:Other "disp:
************** / myindented: consuming GoDeeper                                                                  :7_4:Other "disp:
myindented: consuming GoDeeper> IN: Other "disposal" GoDeeper Typically GoDe <…>
myindented: consuming GoDeeper> MATCH (EERR): <EMPTY>
myindented: consuming GoDeeper> ERROR:
myindented: consuming GoDeeper> offset=29:
myindented: consuming GoDeeper> unexpected Other "disposal"
myindented: consuming GoDeeper> expecting GoDeeper

someIndentation> IN: Other "disposal" GoDeeper Typically GoDe <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=29:
someIndentation> unexpected Other "disposal"
someIndentation> expecting GoDeeper

manyIndentation/deeper; calling someIndentation> IN: Other "disposal" GoDeeper Typically GoDe <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=29:
manyIndentation/deeper; calling someIndentation> unexpected Other "disposal"
manyIndentation/deeper; calling someIndentation> expecting GoDeeper

someIndentation> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someIndentation> MATCH (CERR): GoDeeper
someIndentation> ERROR:
someIndentation> offset=31:
someIndentation> unexpected Typically
someIndentation> expecting GoDeeper, MPNot, or expression

term p/2:someIndentation expr p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/2:someIndentation expr p> MATCH (CERR): GoDeeper
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=31:
term p/2:someIndentation expr p> unexpected Typically
term p/2:someIndentation expr p> expecting GoDeeper, MPNot, or expression

********** / term p/3:plain p                                                                                       :7_4:GoDeeper:
*********** / pRelPred                                                                                             :7_4:GoDeeper:
************ / slRelPred                                                                                          :7_4:GoDeeper:
************* / nested simpleHorn                                                                                :7_4:GoDeeper:
************** > |^|                                                                                            :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slMultiTerm                                                                                  :7_4:GoDeeper:
**************** / someSL                                                                                     :7_4:GoDeeper:
***************** / pNumAsText                                                                               :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

nested simpleHorn> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=28:
nested simpleHorn> unexpected GoDeeper
nested simpleHorn> expecting Other text or TNumber 1234

************* / RPConstraint                                                                                     :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slMultiTerm                                                                                  :7_4:GoDeeper:
**************** / someSL                                                                                     :7_4:GoDeeper:
***************** / pNumAsText                                                                               :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPConstraint> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=28:
RPConstraint> unexpected GoDeeper
RPConstraint> expecting Other text or TNumber 1234

************* / RPBoolStructR                                                                                    :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slMultiTerm                                                                                  :7_4:GoDeeper:
**************** / someSL                                                                                     :7_4:GoDeeper:
***************** / pNumAsText                                                                               :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPBoolStructR> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=28:
RPBoolStructR> unexpected GoDeeper
RPBoolStructR> expecting Other text or TNumber 1234

************* / RPMT                                                                                             :7_4:GoDeeper:
************** / $*|                                                                                            :7_4:GoDeeper:
*************** / slAKA                                                                                        :7_4:GoDeeper:
**************** / $*|                                                                                        :7_4:GoDeeper:
***************** / slAKA base                                                                               :7_4:GoDeeper:
****************** / slMultiTerm                                                                            :7_4:GoDeeper:
******************* / someSL                                                                               :7_4:GoDeeper:
******************** / pNumAsText                                                                         :7_4:GoDeeper:
pNumAsText> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected GoDeeper
pNumAsText> expecting TNumber 1234

someSL> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected GoDeeper
someSL> expecting Other text or TNumber 1234

slMultiTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected GoDeeper
slMultiTerm> expecting Other text or TNumber 1234

slAKA base> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=28:
slAKA base> unexpected GoDeeper
slAKA base> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

slAKA> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=28:
slAKA> unexpected GoDeeper
slAKA> expecting Other text or TNumber 1234

$*|> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected GoDeeper
$*|> expecting Other text or TNumber 1234

RPMT> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=28:
RPMT> unexpected GoDeeper
RPMT> expecting Other text or TNumber 1234

slRelPred> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=28:
slRelPred> unexpected GoDeeper
slRelPred> expecting Other text or TNumber 1234

pRelPred> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=28:
pRelPred> unexpected GoDeeper
pRelPred> expecting Other text or TNumber 1234

term p/3:plain p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=28:
term p/3:plain p> unexpected GoDeeper
term p/3:plain p> expecting Other text or TNumber 1234

term p/notLabelTerm> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=31:
term p/notLabelTerm> unexpected Typically
term p/notLabelTerm> expecting GoDeeper, MPNot, or expression

term p> IN: GoDeeper Other "disposal" GoDeeper Typic <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=31:
term p> unexpected Typically
term p> expecting GoDeeper, MPNot, or expression

expression> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
expression> MATCH (CERR): GoDeeper Other "access" UnDeeper Or GoDe <…>
expression> ERROR:
expression> offset=31:
expression> unexpected Typically
expression> expecting GoDeeper, MPNot, or expression

ppp inner> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
ppp inner> MATCH (CERR): GoDeeper Other "access" UnDeeper Or GoDe <…>
ppp inner> ERROR:
ppp inner> offset=31:
ppp inner> unexpected Typically
ppp inner> expecting GoDeeper, MPNot, or expression

made it to inner parser> IN: GoDeeper Other "access" UnDeeper Or GoDe <…>
made it to inner parser> MATCH (CERR): GoDeeper Other "access" UnDeeper Or GoDe <…>
made it to inner parser> ERROR:
made it to inner parser> offset=31:
made it to inner parser> unexpected Typically
made it to inner parser> expecting GoDeeper, MPNot, or expression

withPreOnly> IN: GoDeeper Other "any" GoDeeper Other "una <…>
withPreOnly> MATCH (CERR): GoDeeper Other "any" GoDeeper Other "una <…>
withPreOnly> ERROR:
withPreOnly> offset=31:
withPreOnly> unexpected Typically
withPreOnly> expecting GoDeeper, MPNot, or expression

pBSR> IN: GoDeeper Other "any" GoDeeper Other "una <…>
pBSR> MATCH (CERR): GoDeeper Other "any" GoDeeper Other "una <…>
pBSR> ERROR:
pBSR> offset=31:
pBSR> unexpected Typically
pBSR> expecting GoDeeper, MPNot, or expression

made it to pBSR> IN: GoDeeper Other "any" GoDeeper Other "una <…>
made it to pBSR> MATCH (CERR): GoDeeper Other "any" GoDeeper Other "una <…>
made it to pBSR> ERROR:
made it to pBSR> offset=31:
made it to pBSR> unexpected Typically
made it to pBSR> expecting GoDeeper, MPNot, or expression


PDPA
  inline-1-l FAILED [1]

Failures:

  test/Spec.hs:124:3: 
  1) PDPA inline-1-l
       expected: [((["Bad"],Means,Any (Just (PrePost "any unauthorised" "of personal data")) [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])]),[DefTypically {name = ["disposal"], defaults = [RPConstraint ["disposal"] RPis ["True"]], srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 3, srccol = 8, version = Nothing})}])]
       but parsing failed with error:
       7:5:
       unexpected Typically
       expecting GoDeeper, MPNot, or expression
                        Bad                                                                                 
       MEANS            any              unauthorised     access                                            
                                         OR               use                                               
                                         OR               disclosure                                        
                                         OR               copying                                           
                                         OR               modification                                      
                                         OR               disposal         ✳ TYPICALLY      True            
                        of personal data                                                                    
       

  To rerun use: --match "/PDPA/inline-1-l/"

Randomized with seed 396661398

Finished in 0.0937 seconds
1 example, 1 failure

natural4> Test suite natural4-test failed
Test suite failure for package natural4-0.1.0.0
    natural4-test:  exited with: ExitFailure 1
Logs printed to console

