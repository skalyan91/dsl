* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

natural4> test (suite: natural4-test, args: --match /PDPA/inline-1-m/)

Passed:
""

Passed:
""

Passed:
"\1038716"

Passed:
"c"

Passed:
"\EM1"

Passed:
"`\145761\1110013\&9\SI"

Passed:
"V\ESC\EOT"

Passed:
"uq"

Passed:
"7\ACK"

Passed:
"VtaD\""

Passed:
"Y\\^KR\a>M\DLEa"

Passed:
"\t'\FSSI/eN\NAK\1072442"

Passed:
"p\1073350J\161356lfn\21966|"

Passed:
"k\ENQ\1057458y"

Passed:
"\NAK\EOT\1067121\141260;u9\1025385\NAKz$"

Passed:
"\1014363h\FS}!\DLE S5\1113055"

Passed:
"2\24222_W%0\ENQ\ENQ\STX\1084299\&5\ESC"

Passed:
"M\140254\GSV\20412\ETX"

Passed:
"\131188\NAK'z\1052043+Xd"

Passed:
"\v)"

Passed:
".klV%[<"

Passed:
"c$"

Passed:
"4\65537F\1096017Gu\170459\&2"

Passed:
"fm\95615[\r\r5\1044596S\1064442\b^cA/\31084.|\1059479\148132"

Passed:
"'&\ENQ\NAK[\STX\183991\DC2w\DC4O\1071049\NUL"

Passed:
"3e\SUB?l{e'G3V\ETB\1112813{\1099974NtFN^W\62204\200474"

Passed:
"\1079394e\b1\45983Q"

Passed:
"Fbr4\197634"

Passed:
"\20949\\3\20248/y\EOT\139882KE\SUBXG7^\57439<\a[\CAN-`B\1054903\64351\SYNv"

Passed:
"fV\59616@r\NAK\1075945\\\USpR_h["

Passed:
"\129544\&1\994214Z"

Passed:
"\DELpDX9\nIj\1082278kS\ACK'\152318,0<2\1043687IT/^\149478\169305"

Passed:
"\994756F\RS.\38212o\EOT\1008472\983524s\DC3"

Passed:
"(\n"

Passed:
"Xl\1051159g\1107273/\1076209\83489@"

Passed:
"\tx||~\182000^X\ACK3\1003546b}s\1056823@?h\1097857=d\1095754?G\165761Q\1012994\NUL\140024\92176Yu"

Passed:
">tQ\1068691^Uc\NULOXz:"

Passed:
"#"

Passed:
"\CANL\1065756\&6h\1032220rt(\1090039\179020S\990670kR\998176\EM\201071\177421\RSB_WQNU5i"

Passed:
"\14834\ENQy\44201$J\1014169i\DC1\42606\57824$a\1095939"

Passed:
"\EM7\SYNjV\1110499\&0lh)\992733\RS\ACK4q\28336\ESCDQ"

Passed:
"4gBO\994663S\983557\b\1002841\997070HR\1001884WY\EM1%NQ\991110\166255I\RS}{{\154596aD\469<a\b\SO"

Passed:
"\b\72822*U$wE"

Passed:
"\ACK\DLE\CAN;d\1029734^p\"5/\\[/w-u\150658\1020798\&2$\t"

Passed:
"\b\183313\1090784\77840Q~\US9M\NUL\NAKH.\"7\1046044\1030989\SYN]\153140#b1\1018756fFIi/"

Passed:
"\DC2\43280\1008730nI.#\1085007\136174\199047\40024k\1010059uel\DC2?\20600o"

Passed:
"ae\5380'\1089165Y\175448#\168317F\16426b\1043671]R\1029088h\EMjMo\187015\ETB\FS\SYN\US\US;u\RS\1052893q\191121)\28169\RS"

Passed:
"^"

Passed:
"Eh6rz\v]\8542\14845c2"

Passed:
"\GS\STXN\984828\178740X\1085759\143637\STXY\1003311\"TA\50571@r\ETX\1078912>d#\1087419\1058324=:<"

Passed:
"3T23M,o\198940 \135001g=\983078Y\FSRj\1042427}\CAN\DC1zH\185739m\1033012\EM\DEL`\ETX\1094193}mM\153177\189583\101195FQ\14712\CAN=\36476Qd\DLE\a\1039474=\GS"

Passed:
"W\NAK\996055\&8a\GSj\164985\\p8x\US`\ETX\SIoy\167841\STX\133589"

Passed:
"^\168063n^2\37681F\DC1\DC3\160117c\53472\ETBT/l\1069330\f\181400h\1008257\156603\62002+\DC3Q\fR\GS"

Passed:
"\EM\ESC\132015"

Passed:
"\179657\ETB\SOH\SOHQ\ESC.'rkt\1024167\&3\195060\SI1"

Passed:
"j\164097K\DLE!jz\147410\SUB\ENQ9\1003800\78625\1097167\NULU\984643z\161636\1099266oq[\10421\1088921\120306\1111842|\1051182B4uoev*7"

Passed:
"\1008386&zK|\134280\ETB.\SO\ETBfL^m,<^DPO\US7\77901R\49040xheJLo\986883|\141678\&7\ETX\57589\NULI1\1066955\&6!\1103970\1054337v\NAKn\1013149\DC1^"

Passed:
"\190455\63643zW\SUB^\FS}\r\EOT[V8\EOT\1001983\&0H1\24373\EOT\1074769\198759M\1072717"

Passed:
"|Oj\191413\160232\1110410\196855g7\134982{@Qs\987915\DC3 \67846]@\DLE`wq\163297\&5D\CAN\144196\1037183|"

Passed:
"d}|i\DC4n$C\DLErQ\SO\1087894\200709\62952'\FST\1416_B.1sWPw\146976h\181022\&8j\8681#|-<\DC1}\SUB*\53951"

Passed:
"\STX\1040972\63049\&1\1063739\SO)T\184003\1003814\187137\188725\1100062\&0u\160446\1103631\t"

Passed:
"\SUBD\1077708\999546\&2"

Passed:
"\40927o\165289\188115\DEL|\183106l2/\131268Un\DC1\1022404Q&\NUL;\ACK\1068819IE\1079735\1040393\SUB9\997399\1025111\CAN"

Passed:
"\141224c&X\ETX&\120240\150643.j:/\SI\1089444\1089827\NAK\DLEadCD\RS3&8\CAN\128280\&6Q!/Y,_t\1101594BU\162165\32395\a"

Passed:
"\SOHo\995804N?|e\\&\999348\96938}t^\\\1021695\SI\27324@\1057542tn\1090483_\SOHd%\SOt\1096867+nujPyD\RS\1109138\994107bJn]vf}$\999713#qYWb\15418"

Passed:
"\1040273\SI j3lu"

Passed:
"\SUBFe8Hi\62980\btP\1056715O\DEL\134886O.[!r\t\US\1023690V\1105896\186358\n\rBD{"

Passed:
",\13495\ENQ\1044276\DEL\aq\17990b1LyDi\998248a\ACKP.V\989732\61736>_\SYN,\1059094`Q\153704\&0\DEL\174880`1?A[Av@Z?S\127898\SUBI\1037677\DC3j\SYN"

Passed:
"\1064747\1056855\f\ENQ\ENQ\1112079\DC2\f7L\14567\DC1\78048A\45896*U\179458\&3W\149804l\18684\1102427\DC3W"

Passed:
"`\NAK=8\SOH\ACK\1066381\&20mltOY\186\176319f=\STX\148521\DC4&F\160970Bmd\EMw\CANI"

Passed:
"\1103591]GPQe\\\1081902\&9GU\US\118822\38582+T\126616Y\DC3\DC3\nuD@4.U\94937s\\|`.\1012322V~(\98507\SO\1113560:"

Passed:
"S>)k\23853V71e\1025442o("

Passed:
"faX\994319!\989379Dj/\44767G\166704)\DC2F$\1011070\60828\ra\t\50249\&5<m\13611"

Passed:
"gY\ENQP\1080586-\DEL% \1110304\1022899!$\SYN\SUB\FS\1040875f\1096421L\141075GE\139237+?\FS\1011672\DC2\50625\SOH_86@6\ETX\1097387E\SI\986141\1038288T)K[\46916\f\US\1113829\1017770{L5\ENQ\92619YSB}y\49851-\SI"

Passed:
"\1063250]\54938\SO_$U\200383a\DC3\fB={wL\1027473s/&%\GSN\1017242\\\29493\1112303'!h\SIL?$Z\1094357\1019269\v\1079820\164537_4[\n'"

Passed:
"J\1019664\1012604^3z\NUL`D\DC3(qZCVY\182362r\137234\1093571jh\1092423_\"c\997095t"

Passed:
"9I\ENQ e]N\28239\&79\SUBDCq\163587\&1O.\DLEp}|\61192\USW\ESC\\/P\172828T\NUL\140442\1050296>\1009659#\SUB:-\1079948"

Passed:
"Q\aX~<\NAK\f|Yu{D\NULFs\36478_\1013539i|\STX\US\917911\1106961\&0O\178504\SIxE\v5 \EMg\NAK=\149282ut\v\97129\119822;Y\160913<kg\985775sw\10982\ESCB\NULU\ETB\1062316'Q\1002286.sC\1074355\71864 _\DEL"

Passed:
"0\31863\f76\1038227\DC4\f\SOH.h<q*\v;="

Passed:
"\STX\48811FJ9\143587\ETX\138088\1040226\1040571X\1061337MOP\989295J D)\v\1082158Xj08g\SI\ETX\ryC\38519RZ\16622\1012399\SYNZ)\157160\\\1049866\&5\a\47714\DC2lxuK1*#"

Passed:
"47\STXA9 \174481\1013575\n\42816L+\DELh\1001985\8811\33023ob\SUB\1089975\ACK\181084-\15585q\SYN\94192\&6!X\1097772\&7\1100502\&73M^x0\SO\ACK\FS+\1110189Kmq\NAK\1023450\185477d\57736\1064273J&sU-\NUL\"oYg\RS&\1103803R"

Passed:
"~x1\DC2\1098958\&7\r`\1003446\ENQXt\EOT\RSZ.\a%\992876\34749\44293W\1064083`g_Zs@r\1021315\1058168&,"

Passed:
"<^BU6Z\1033198\1008724\SOH\ETB\63032omT?}\1055272\EOTw\DLE\CAN\DLE}\155907\SOHt\DC1\v Y\SYN,s\99927(\1093838wL \1016163\t-pG\ENQ0[MBjxU\19397\&5\r+G"

Passed:
"V\n%\EOT\v\DC3+1nd\96472\33495H8x\15442\996871f@a\1087265\1044132\"[6!\ENQF/\SOH\100093Q0\SUB,\29746s&\ESC&Mfa\US$$D/!\62530\ACK\ESC5[/y\140004\38971\1042049\DEL#\EOT~\v\ETX\1112457')\145025=\1002837>\1054816)e$>^k\\\62578IM"

Passed:
"p]`#G_*G\1050230"

Passed:
"\1006272U\a\v\NUL\SYN6\133592\988285<`p'\19079{C8Y;R\\:LkJH\138622cM\SO\1106302c`S^\170515FGc?I_\67842\1083954u\155228'G\ETB"

Passed:
"\FS(<\SYN\134018\GS\DEL|G<WPB>\1063073\DC4\992547x\n\1020349/:8\1083561\1061476t;\US\DC4s\nAa\1112581\&1"

Passed:
"\EOT\"+jQZwc-\1107762\f\b%+(\1009041~}"

Passed:
"\155551;O@\48755\ETX\n\1054547Duf4* \41533P%`b\175898"

Passed:
"\1066130\SI\994789gZG\98976F:~\134467>\994243\&4e.\150308\1087602\&3#\RS\ESC\tG\RS\t\1034975u<\1040497\&2n.~}\94606|c\NUL4u5\"C\167822\&6\r\100164x?"

Passed:
"\985763Czl\1109524;:\RS\73838$cwa1\1109642\27548\138313y%\1001811=`\NAK\1080670\26060\DLE5W\183271\993112\50685my-[\188611\SUBL\"\1046205"

Passed:
"\ENQ\NAK\160972\1105485Y\1061979\1050791\RS\1072056r|i\ESC%\ACK\1026220\"\n:T\STX/)]*\1046881aB\NUL \988268\nt\3170\1084152\&6\191290GQ\72132\40955\1077631MVK\f\EMv_h6?gUK/\DLEk.[\127009\1108193J\bzD\STX\49380\73996;g\1002781\49518\198125\&8rj`\169462\DLE\ACK"

Passed:
"e\DLEc\31705\111165\67972c\vM\121291hO\6549>Zo<w\v\182063b4G\35283\SOM\1029488\DLE\DC4\1039473Ts~W\1018630\SIe6D<\1024855\rh\997528ha"

Passed:
"Ahk\DC4\200893\46533E"

Passed:
"M$j\DLE\t;\SI\1012653d\DC1{(\ETB'\1045113%\71124\ETBT\ACK\1024209u\bmM_Q\128174\96597\ak\19027>bA\1020193DM\132480=\1017658\4699`p\ACK>\174500JD@a-\DLE%JF(f^\b78\t\US\141769\n6\\\SUBM^4\NAK\t\FSd+S\"w\1063113/\1019439"

Passed:
"IMLEr\DC3=\DEL\141290\155172p\NULC\985108C\174732.\SOf\14720` {Y_D'U\999634!/\DLE\997238\1073618\29424\DC4h\78784}\1021658\vJ\DC4\174445$$\1034998t\DC1\ETBEJ\DLE\NUL'V:\1025676X\1096058yq~\STXU\vk\168447\&8t\1068539\178113\1105343}\19189C&\DC2\35429x\1086386\170460"

Passed:
"?Rz0\1045855\186922\1077803R\997738R\vX\RSU\189429M\1076676\141127>+K\1078305_$r.8%[8\DELS:s4\DC3hC\1068152\FS?\SOT*;\19508\&1U?\GS\60567l\1085723g\1018967\ACKg4@\197582Q\1065930m\101531e\t\US\1010326\988576\1050299\61936D\SOH\\v|\1053998\1080983\32803\&9\1054672\DLEyQ\92324@z!e[uM4"

Passed:
""

Passed:
"\ESC\1040030~\22858p\r\EOT\NUL\DC4J\ETB\1082251\US\174504\rM_b\SYNc\a\984698yK\vf\1093851\58947jQ\30258\DLE,v\DC3\SOk\v\ESCs2J\1025460n\CAN!\33063\1097114Lc\66510k4Y!\DC1Ky%:OC\FS\n:-\78521\160475v?\3332\DC2\1047506"

Passed:
"E\74931P\NUL\NULM\166826L\66888\USm\DC2+\12684eT\STXt\nak\1056180\&6\RS\21524\128630\47130yS\984999@\ETB\"X<\143123\134428\DC4\ESCMJ!\23649X\162998(\990535\168266v\1005449\SI\SIg;aGc\19230:\v\12394\GS=\96162\1016064\&1P&\1057542\SOH\ACKcV\1079700Xj\CAN\SO.qv\146619\a\FS\54768}\DC1\132252\1012006A\1072965;\172876\162946\157247\1019642/B\1072339"

+++ OK, passed 100 tests.
* Tokens
[GoDeeper,Other "Bad",UnDeeper,Means,GoDeeper,Other "any",GoDeeper,Other "unauthorised",GoDeeper,GoDeeper,GoDeeper,Other "access",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "use",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "disclosure",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "copying",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "modification",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "disposal",UnDeeper,UnDeeper,UnDeeper,UnDeeper,Other "of personal data",UnDeeper]
* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / |<|                                                                                                                :1_2:GoDeeper:
** / |<* starting                                                                                                       :1_2:GoDeeper:
** / $*|                                                                                                                :1_2:GoDeeper:
*** / |>>                                                                                                              :1_2:GoDeeper:
**** / |>>/recurse                                                                                                    :1_2:GoDeeper:
***** / |>>                                                                                                           :1_2:Other "Bad":
****** / |>>/recurse                                                                                                 :1_2:Other "Bad":
****** / |>>/base                                                                                                    :1_2:Other "Bad":
******* / subject slMultiTerm                                                                                       :1_2:Other "Bad":
******** / slMultiTerm                                                                                             :1_2:Other "Bad":
********* / |:| some                                                                                              :1_2:Other "Bad":
********** / |:| base parser                                                                                     :1_2:Other "Bad":
********** \ |:| base parser has returned ("Bad",0)                                                               :2_2:UnDeeper:
********** / |:| deeper                                                                                           :2_2:UnDeeper:
*********** / |:| some GoDeeper                                                                                  :2_2:UnDeeper:
********** / |:| noMore                                                                                           :2_2:UnDeeper:
********** \ |:| noMore has returned ([],0)                                                                       :2_2:UnDeeper:
********* \ |:| some has returned (["Bad"],0)                                                                      :2_2:UnDeeper:
******** \ slMultiTerm has returned (["Bad"],0)                                                                     :2_2:UnDeeper:
******* \ subject slMultiTerm has returned (["Bad"],0)                                                               :2_2:UnDeeper:
******* / |>>/base got ["Bad"]                                                                                       :2_2:UnDeeper:
****** \ |>>/base has returned (["Bad"],0)                                                                            :2_2:UnDeeper:
***** \ |>> has returned (["Bad"],0)                                                                                   :2_2:UnDeeper:
**** \ |>>/recurse has returned (["Bad"],1)                                                                             :2_2:UnDeeper:
*** \ |>> has returned (["Bad"],1)                                                                                       :2_2:UnDeeper:
** \ $*| has returned (["Bad"],1)                                                                                         :2_2:UnDeeper:
** / |<*/recurse                                                                                                          :2_2:UnDeeper:
** / |<*/recurse matched 1 UnDeepers, then got Means with -1 UnDeepers pending                                          :2_2:GoDeeper:
** / |<*/parent returning Means with 0 UnDeepers pending                                                                :2_2:GoDeeper:
** / made it to pBSR                                                                                                    :2_2:GoDeeper:
*** / pBSR                                                                                                             :2_2:GoDeeper:
**** / pBSR inner                                                                                                     :2_2:GoDeeper:
***** / term p                                                                                                       :2_2:GoDeeper:
****** / term p/1a:label directly above                                                                             :2_2:GoDeeper:
******* / $*|                                                                                                      :2_2:GoDeeper:
******** / |:| some                                                                                               :2_2:GoDeeper:
********* / |:| base parser                                                                                      :2_2:GoDeeper:
********** / pNumAsText                                                                                         :2_2:GoDeeper:
****** / term p/b:label to the left of line below, with EOL                                                         :2_2:GoDeeper:
******* / |:| some                                                                                                 :2_2:GoDeeper:
******** / |:| base parser                                                                                        :2_2:GoDeeper:
********* / pNumAsText                                                                                           :2_2:GoDeeper:
****** / term p/notLabelTerm                                                                                        :2_2:GoDeeper:
******* / term p/2:someIndentation expr p                                                                          :2_2:GoDeeper:
******** / someIndentation                                                                                        :2_2:GoDeeper:
********* / myindented: consuming GoDeeper                                                                       :2_2:GoDeeper:
********* \ myindented: consuming GoDeeper has returned GoDeeper                                                  :2_2:Other "any":
********* / manyIndentation/leaf?                                                                                 :2_2:Other "any":
********** / term p                                                                                              :2_2:Other "any":
*********** / term p/1a:label directly above                                                                    :2_2:Other "any":
************ / $*|                                                                                             :2_2:Other "any":
************* / |:| some                                                                                      :2_2:Other "any":
************** / |:| base parser                                                                             :2_2:Other "any":
************** \ |:| base parser has returned ("any",0)                                                       :2_3:GoDeeper:
************** / |:| deeper                                                                                   :2_3:GoDeeper:
*************** / |:| some GoDeeper                                                                          :2_3:GoDeeper:
*************** \ |:| some GoDeeper has returned [GoDeeper]                                                   :2_3:Other "unau:
*************** / |:| some                                                                                    :2_3:Other "unau:
**************** / |:| base parser                                                                           :2_3:Other "unau:
**************** \ |:| base parser has returned ("unauthorised",0)                                            :2_4:GoDeeper:
**************** / |:| deeper                                                                                 :2_4:GoDeeper:
***************** / |:| some GoDeeper                                                                        :2_4:GoDeeper:
***************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                   :2_6:Other "acce:
***************** / |:| some                                                                                      :2_6:Other "acce:
****************** / |:| base parser                                                                             :2_6:Other "acce:
****************** \ |:| base parser has returned ("access",0)                                                  :3_5:UnDeeper:
****************** / |:| deeper                                                                                 :3_5:UnDeeper:
******************* / |:| some GoDeeper                                                                        :3_5:UnDeeper:
****************** / |:| noMore                                                                                 :3_5:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                             :3_5:UnDeeper:
***************** \ |:| some has returned (["access"],0)                                                         :3_5:UnDeeper:
**************** \ |:| deeper has returned (["access"],3)                                                         :3_5:UnDeeper:
*************** \ |:| some has returned (["unauthorised","access"],3)                                              :3_5:UnDeeper:
************** \ |:| deeper has returned (["unauthorised","access"],4)                                              :3_5:UnDeeper:
************* \ |:| some has returned (["any","unauthorised","access"],4)                                            :3_5:UnDeeper:
************* / pNumAsText                                                                                           :3_5:UnDeeper:
*********** / term p/b:label to the left of line below, with EOL                                                :2_2:Other "any":
************ / |:| some                                                                                        :2_2:Other "any":
************* / |:| base parser                                                                               :2_2:Other "any":
************* \ |:| base parser has returned ("any",0)                                                         :2_3:GoDeeper:
************* / |:| deeper                                                                                     :2_3:GoDeeper:
************** / |:| some GoDeeper                                                                            :2_3:GoDeeper:
************** \ |:| some GoDeeper has returned [GoDeeper]                                                     :2_3:Other "unau:
************** / |:| some                                                                                      :2_3:Other "unau:
*************** / |:| base parser                                                                             :2_3:Other "unau:
*************** \ |:| base parser has returned ("unauthorised",0)                                              :2_4:GoDeeper:
*************** / |:| deeper                                                                                   :2_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :2_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :2_6:Other "acce:
**************** / |:| some                                                                                        :2_6:Other "acce:
***************** / |:| base parser                                                                               :2_6:Other "acce:
***************** \ |:| base parser has returned ("access",0)                                                    :3_5:UnDeeper:
***************** / |:| deeper                                                                                   :3_5:UnDeeper:
****************** / |:| some GoDeeper                                                                          :3_5:UnDeeper:
***************** / |:| noMore                                                                                   :3_5:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                               :3_5:UnDeeper:
**************** \ |:| some has returned (["access"],0)                                                           :3_5:UnDeeper:
*************** \ |:| deeper has returned (["access"],3)                                                           :3_5:UnDeeper:
************** \ |:| some has returned (["unauthorised","access"],3)                                                :3_5:UnDeeper:
************* \ |:| deeper has returned (["unauthorised","access"],4)                                                :3_5:UnDeeper:
************ \ |:| some has returned (["any","unauthorised","access"],4)                                              :3_5:UnDeeper:
************ / undeepers                                                                                              :3_5:UnDeeper:
************* / sameLine/undeepers: reached end of line; now need to clear 4 UnDeepers                               :3_5:UnDeeper:
*********** / term p/notLabelTerm                                                                               :2_2:Other "any":
************ / term p/2:someIndentation expr p                                                                 :2_2:Other "any":
************* / someIndentation                                                                               :2_2:Other "any":
************** / myindented: consuming GoDeeper                                                              :2_2:Other "any":
************ / term p/3:plain p                                                                                :2_2:Other "any":
************* / pRelPred                                                                                      :2_2:Other "any":
************** / slRelPred                                                                                   :2_2:Other "any":
*************** / RPConstraint                                                                              :2_2:Other "any":
**************** / $*|                                                                                     :2_2:Other "any":
***************** / slMultiTerm                                                                           :2_2:Other "any":
****************** / |:| some                                                                            :2_2:Other "any":
******************* / |:| base parser                                                                   :2_2:Other "any":
******************* \ |:| base parser has returned ("any",0)                                             :2_3:GoDeeper:
******************* / |:| deeper                                                                         :2_3:GoDeeper:
******************** / |:| some GoDeeper                                                                :2_3:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper]                                         :2_3:Other "unau:
******************** / |:| some                                                                          :2_3:Other "unau:
********************* / |:| base parser                                                                 :2_3:Other "unau:
********************* \ |:| base parser has returned ("unauthorised",0)                                  :2_4:GoDeeper:
********************* / |:| deeper                                                                       :2_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :2_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :2_6:Other "acce:
********************** / |:| some                                                                            :2_6:Other "acce:
*********************** / |:| base parser                                                                   :2_6:Other "acce:
*********************** \ |:| base parser has returned ("access",0)                                        :3_5:UnDeeper:
*********************** / |:| deeper                                                                       :3_5:UnDeeper:
************************ / |:| some GoDeeper                                                              :3_5:UnDeeper:
*********************** / |:| noMore                                                                       :3_5:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                   :3_5:UnDeeper:
********************** \ |:| some has returned (["access"],0)                                               :3_5:UnDeeper:
********************* \ |:| deeper has returned (["access"],3)                                               :3_5:UnDeeper:
******************** \ |:| some has returned (["unauthorised","access"],3)                                    :3_5:UnDeeper:
******************* \ |:| deeper has returned (["unauthorised","access"],4)                                    :3_5:UnDeeper:
****************** \ |:| some has returned (["any","unauthorised","access"],4)                                  :3_5:UnDeeper:
***************** \ slMultiTerm has returned (["any","unauthorised","access"],4)                                 :3_5:UnDeeper:
**************** \ $*| has returned (["any","unauthorised","access"],4)                                           :3_5:UnDeeper:
**************** / |>| calling $>>                                                                                :3_5:UnDeeper:
***************** / $>>                                                                                          :3_5:UnDeeper:
****************** / $>>/recurse                                                                                :3_5:UnDeeper:
****************** / $>>/base                                                                                   :3_5:UnDeeper:
*************** / RPBoolStructR                                                                             :2_2:Other "any":
**************** / $*|                                                                                     :2_2:Other "any":
***************** / slMultiTerm                                                                           :2_2:Other "any":
****************** / |:| some                                                                            :2_2:Other "any":
******************* / |:| base parser                                                                   :2_2:Other "any":
******************* \ |:| base parser has returned ("any",0)                                             :2_3:GoDeeper:
******************* / |:| deeper                                                                         :2_3:GoDeeper:
******************** / |:| some GoDeeper                                                                :2_3:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper]                                         :2_3:Other "unau:
******************** / |:| some                                                                          :2_3:Other "unau:
********************* / |:| base parser                                                                 :2_3:Other "unau:
********************* \ |:| base parser has returned ("unauthorised",0)                                  :2_4:GoDeeper:
********************* / |:| deeper                                                                       :2_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :2_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :2_6:Other "acce:
********************** / |:| some                                                                            :2_6:Other "acce:
*********************** / |:| base parser                                                                   :2_6:Other "acce:
*********************** \ |:| base parser has returned ("access",0)                                        :3_5:UnDeeper:
*********************** / |:| deeper                                                                       :3_5:UnDeeper:
************************ / |:| some GoDeeper                                                              :3_5:UnDeeper:
*********************** / |:| noMore                                                                       :3_5:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                   :3_5:UnDeeper:
********************** \ |:| some has returned (["access"],0)                                               :3_5:UnDeeper:
********************* \ |:| deeper has returned (["access"],3)                                               :3_5:UnDeeper:
******************** \ |:| some has returned (["unauthorised","access"],3)                                    :3_5:UnDeeper:
******************* \ |:| deeper has returned (["unauthorised","access"],4)                                    :3_5:UnDeeper:
****************** \ |:| some has returned (["any","unauthorised","access"],4)                                  :3_5:UnDeeper:
***************** \ slMultiTerm has returned (["any","unauthorised","access"],4)                                 :3_5:UnDeeper:
**************** \ $*| has returned (["any","unauthorised","access"],4)                                           :3_5:UnDeeper:
**************** / |>| calling $>>                                                                                :3_5:UnDeeper:
***************** / $>>                                                                                          :3_5:UnDeeper:
****************** / $>>/recurse                                                                                :3_5:UnDeeper:
****************** / $>>/base                                                                                   :3_5:UnDeeper:
*************** / RPMT                                                                                      :2_2:Other "any":
**************** / $*|                                                                                     :2_2:Other "any":
***************** / slAKA                                                                                 :2_2:Other "any":
****************** / $*|                                                                                 :2_2:Other "any":
******************* / slAKA base                                                                        :2_2:Other "any":
******************** / slMultiTerm                                                                     :2_2:Other "any":
********************* / |:| some                                                                      :2_2:Other "any":
********************** / |:| base parser                                                             :2_2:Other "any":
********************** \ |:| base parser has returned ("any",0)                                       :2_3:GoDeeper:
********************** / |:| deeper                                                                   :2_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :2_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper]                                   :2_3:Other "unau:
*********************** / |:| some                                                                    :2_3:Other "unau:
************************ / |:| base parser                                                           :2_3:Other "unau:
************************ \ |:| base parser has returned ("unauthorised",0)                            :2_4:GoDeeper:
************************ / |:| deeper                                                                 :2_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :2_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :2_6:Other "acce:
************************* / |:| some                                                                      :2_6:Other "acce:
************************** / |:| base parser                                                             :2_6:Other "acce:
************************** \ |:| base parser has returned ("access",0)                                  :3_5:UnDeeper:
************************** / |:| deeper                                                                 :3_5:UnDeeper:
*************************** / |:| some GoDeeper                                                        :3_5:UnDeeper:
************************** / |:| noMore                                                                 :3_5:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                             :3_5:UnDeeper:
************************* \ |:| some has returned (["access"],0)                                         :3_5:UnDeeper:
************************ \ |:| deeper has returned (["access"],3)                                         :3_5:UnDeeper:
*********************** \ |:| some has returned (["unauthorised","access"],3)                              :3_5:UnDeeper:
********************** \ |:| deeper has returned (["unauthorised","access"],4)                              :3_5:UnDeeper:
********************* \ |:| some has returned (["any","unauthorised","access"],4)                            :3_5:UnDeeper:
******************** \ slMultiTerm has returned (["any","unauthorised","access"],4)                           :3_5:UnDeeper:
******************* \ slAKA base has returned (["any","unauthorised","access"],4)                              :3_5:UnDeeper:
****************** \ $*| has returned (["any","unauthorised","access"],4)                                       :3_5:UnDeeper:
****************** / |>>                                                                                        :3_5:UnDeeper:
******************* / |>>/recurse                                                                              :3_5:UnDeeper:
******************* / |>>/base                                                                                 :3_5:UnDeeper:
******************** / slAKA optional akapart                                                                 :3_5:UnDeeper:
********************* / |?| optional something                                                               :3_5:UnDeeper:
********************** / |>>                                                                                :3_5:UnDeeper:
*********************** / |>>/recurse                                                                      :3_5:UnDeeper:
*********************** / |>>/base                                                                         :3_5:UnDeeper:
************************ / PAKA/akapart                                                                   :3_5:UnDeeper:
************************* / $>|                                                                          :3_5:UnDeeper:
************************** / Aka Token                                                                  :3_5:UnDeeper:
********************* \ |?| optional something has returned (Nothing,0)                                      :3_5:UnDeeper:
******************** \ slAKA optional akapart has returned (Nothing,0)                                        :3_5:UnDeeper:
******************** / |>>/base got Nothing                                                                   :3_5:UnDeeper:
******************* \ |>>/base has returned (Nothing,0)                                                        :3_5:UnDeeper:
****************** \ |>> has returned (Nothing,0)                                                               :3_5:UnDeeper:
****************** / |>>                                                                                        :3_5:UnDeeper:
******************* / |>>/recurse                                                                              :3_5:UnDeeper:
******************* / |>>/base                                                                                 :3_5:UnDeeper:
******************** / slAKA optional typically                                                               :3_5:UnDeeper:
********************* / |?| optional something                                                               :3_5:UnDeeper:
********************** / |>>                                                                                :3_5:UnDeeper:
*********************** / |>>/recurse                                                                      :3_5:UnDeeper:
*********************** / |>>/base                                                                         :3_5:UnDeeper:
************************ / typically                                                                      :3_5:UnDeeper:
************************* / $>|                                                                          :3_5:UnDeeper:
********************* \ |?| optional something has returned (Nothing,0)                                      :3_5:UnDeeper:
******************** \ slAKA optional typically has returned (Nothing,0)                                      :3_5:UnDeeper:
******************** / |>>/base got Nothing                                                                   :3_5:UnDeeper:
******************* \ |>>/base has returned (Nothing,0)                                                        :3_5:UnDeeper:
****************** \ |>> has returned (Nothing,0)                                                               :3_5:UnDeeper:
****************** / slAKA: proceeding after base and entityalias are retrieved ...                             :3_5:UnDeeper:
****************** / pAKA: entityalias = Nothing                                                                :3_5:UnDeeper:
***************** \ slAKA has returned (["any","unauthorised","access"],4)                                       :3_5:UnDeeper:
**************** \ $*| has returned (["any","unauthorised","access"],4)                                           :3_5:UnDeeper:
*************** \ RPMT has returned (RPMT ["any","unauthorised","access"],4)                                       :3_5:UnDeeper:
************** \ slRelPred has returned (RPMT ["any","unauthorised","access"],4)                                    :3_5:UnDeeper:
************** / undeepers                                                                                          :3_5:UnDeeper:
*************** / sameLine/undeepers: reached end of line; now need to clear 4 UnDeepers                           :3_5:UnDeeper:
********* / manyIndentation/deeper; calling someIndentation                                                       :2_2:Other "any":
********** / someIndentation                                                                                     :2_2:Other "any":
*********** / myindented: consuming GoDeeper                                                                    :2_2:Other "any":
******* / term p/3:plain p                                                                                         :2_2:GoDeeper:
******** / pRelPred                                                                                               :2_2:GoDeeper:
********* / slRelPred                                                                                            :2_2:GoDeeper:
********** / RPConstraint                                                                                       :2_2:GoDeeper:
*********** / $*|                                                                                              :2_2:GoDeeper:
************ / slMultiTerm                                                                                    :2_2:GoDeeper:
************* / |:| some                                                                                     :2_2:GoDeeper:
************** / |:| base parser                                                                            :2_2:GoDeeper:
*************** / pNumAsText                                                                               :2_2:GoDeeper:
********** / RPBoolStructR                                                                                      :2_2:GoDeeper:
*********** / $*|                                                                                              :2_2:GoDeeper:
************ / slMultiTerm                                                                                    :2_2:GoDeeper:
************* / |:| some                                                                                     :2_2:GoDeeper:
************** / |:| base parser                                                                            :2_2:GoDeeper:
*************** / pNumAsText                                                                               :2_2:GoDeeper:
********** / RPMT                                                                                               :2_2:GoDeeper:
*********** / $*|                                                                                              :2_2:GoDeeper:
************ / slAKA                                                                                          :2_2:GoDeeper:
************* / $*|                                                                                          :2_2:GoDeeper:
************** / slAKA base                                                                                 :2_2:GoDeeper:
*************** / slMultiTerm                                                                              :2_2:GoDeeper:
**************** / |:| some                                                                               :2_2:GoDeeper:
***************** / |:| base parser                                                                      :2_2:GoDeeper:
****************** / pNumAsText                                                                         :2_2:GoDeeper:
**** / withPrePost                                                                                                    :2_2:GoDeeper:
***** / |<* starting                                                                                                 :2_2:GoDeeper:
***** / $*|                                                                                                          :2_2:GoDeeper:
****** / pre part                                                                                                   :2_2:GoDeeper:
******* / aboveNextLineKeyword                                                                                      :2_2:Other "any":
******** / expectUnDeepers                                                                                         :2_2:Other "any":
********* / pNumAsText                                                                                             :2_3:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["any","GD","unauthorised","GD","GD","GD","access"]                                                 :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                          :2_2:Other "any":
******** / aNLK: determined undp_count = 2                                                                         :2_2:Other "any":
******** / |<|                                                                                                     :2_2:Other "any":
******** / |<* starting                                                                                            :2_2:Other "any":
******** / ->| trying to consume 1 GoDeepers                                                                       :2_2:Other "any":
******** / $*|                                                                                                     :2_2:Other "any":
******** \ $*| has returned ((),0)                                                                                 :2_2:Other "any":
******* / /*= lookAhead failed, delegating to plain /+=                                                             :2_2:Other "any":
******* / aboveNextLineKeyword                                                                                       :2_3:GoDeeper:
******** / expectUnDeepers                                                                                          :2_3:GoDeeper:
********* / pNumAsText                                                                                             :2_3:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","unauthorised","GD","GD","GD","access"]                                                       :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                           :2_3:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                          :2_3:GoDeeper:
******** / |<|                                                                                                      :2_3:GoDeeper:
******** / |<* starting                                                                                             :2_3:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                        :2_3:GoDeeper:
******** / $*|                                                                                                      :2_3:GoDeeper:
******** \ $*| has returned ((),0)                                                                                  :2_3:GoDeeper:
******** / ->| success                                                                                               :2_3:Other "unau:
******** / |>>                                                                                                       :2_3:Other "unau:
********* / |>>/recurse                                                                                             :2_3:Other "unau:
********* / |>>/base                                                                                                :2_3:Other "unau:
********** / slMultiTerm                                                                                           :2_3:Other "unau:
*********** / |:| some                                                                                            :2_3:Other "unau:
************ / |:| base parser                                                                                   :2_3:Other "unau:
************ \ |:| base parser has returned ("unauthorised",0)                                                    :2_4:GoDeeper:
************ / |:| deeper                                                                                         :2_4:GoDeeper:
************* / |:| some GoDeeper                                                                                :2_4:GoDeeper:
************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                           :2_6:Other "acce:
************* / |:| some                                                                                              :2_6:Other "acce:
************** / |:| base parser                                                                                     :2_6:Other "acce:
************** \ |:| base parser has returned ("access",0)                                                          :3_5:UnDeeper:
************** / |:| deeper                                                                                         :3_5:UnDeeper:
*************** / |:| some GoDeeper                                                                                :3_5:UnDeeper:
************** / |:| noMore                                                                                         :3_5:UnDeeper:
************** \ |:| noMore has returned ([],0)                                                                     :3_5:UnDeeper:
************* \ |:| some has returned (["access"],0)                                                                 :3_5:UnDeeper:
************ \ |:| deeper has returned (["access"],3)                                                                 :3_5:UnDeeper:
*********** \ |:| some has returned (["unauthorised","access"],3)                                                      :3_5:UnDeeper:
********** \ slMultiTerm has returned (["unauthorised","access"],3)                                                     :3_5:UnDeeper:
********** / |>>/base got ["unauthorised","access"]                                                                     :3_5:UnDeeper:
********* \ |>>/base has returned (["unauthorised","access"],3)                                                          :3_5:UnDeeper:
******** \ |>> has returned (["unauthorised","access"],3)                                                                 :3_5:UnDeeper:
******** / aNLK: current depth is 4                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with 2 UnDeepers pending                                                             :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["unauthorised","access"]                                                               :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["unauthorised","access"],Or),2)                                           :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                :2_3:GoDeeper:
******* / aboveNextLineKeyword                                                                                        :2_3:Other "unau:
******** / expectUnDeepers                                                                                           :2_3:Other "unau:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["unauthorised","GD","GD","GD","access"]                                                            :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                            :2_3:Other "unau:
******** / aNLK: determined undp_count = 2                                                                           :2_3:Other "unau:
******** / |<|                                                                                                       :2_3:Other "unau:
******** / |<* starting                                                                                              :2_3:Other "unau:
******** / ->| trying to consume 1 GoDeepers                                                                         :2_3:Other "unau:
******** / $*|                                                                                                       :2_3:Other "unau:
******** \ $*| has returned ((),0)                                                                                   :2_3:Other "unau:
******* / /*= lookAhead failed, delegating to plain /+=                                                               :2_3:Other "unau:
******* / aboveNextLineKeyword                                                                                         :2_4:GoDeeper:
******** / expectUnDeepers                                                                                            :2_4:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","GD","GD","access"]                                                                           :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                             :2_4:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                            :2_4:GoDeeper:
******** / |<|                                                                                                        :2_4:GoDeeper:
******** / |<* starting                                                                                               :2_4:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                          :2_4:GoDeeper:
******** / $*|                                                                                                        :2_4:GoDeeper:
******** \ $*| has returned ((),0)                                                                                    :2_4:GoDeeper:
******** / ->| success                                                                                                  :2_5:GoDeeper:
******** / |>>                                                                                                          :2_5:GoDeeper:
********* / |>>/recurse                                                                                                :2_5:GoDeeper:
********** / |>>                                                                                                        :2_6:GoDeeper:
*********** / |>>/recurse                                                                                              :2_6:GoDeeper:
************ / |>>                                                                                                     :2_6:Other "acce:
************* / |>>/recurse                                                                                           :2_6:Other "acce:
************* / |>>/base                                                                                              :2_6:Other "acce:
************** / slMultiTerm                                                                                         :2_6:Other "acce:
*************** / |:| some                                                                                          :2_6:Other "acce:
**************** / |:| base parser                                                                                 :2_6:Other "acce:
**************** \ |:| base parser has returned ("access",0)                                                      :3_5:UnDeeper:
**************** / |:| deeper                                                                                     :3_5:UnDeeper:
***************** / |:| some GoDeeper                                                                            :3_5:UnDeeper:
**************** / |:| noMore                                                                                     :3_5:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                                 :3_5:UnDeeper:
*************** \ |:| some has returned (["access"],0)                                                             :3_5:UnDeeper:
************** \ slMultiTerm has returned (["access"],0)                                                            :3_5:UnDeeper:
************** / |>>/base got ["access"]                                                                            :3_5:UnDeeper:
************* \ |>>/base has returned (["access"],0)                                                                 :3_5:UnDeeper:
************ \ |>> has returned (["access"],0)                                                                        :3_5:UnDeeper:
*********** \ |>>/recurse has returned (["access"],1)                                                                  :3_5:UnDeeper:
********** \ |>> has returned (["access"],1)                                                                            :3_5:UnDeeper:
********* \ |>>/recurse has returned (["access"],2)                                                                      :3_5:UnDeeper:
******** \ |>> has returned (["access"],2)                                                                                :3_5:UnDeeper:
******** / aNLK: current depth is 3                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with 1 UnDeepers pending                                                             :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["access"]                                                                              :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["access"],Or),1)                                                          :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                  :2_4:GoDeeper:
******* / aboveNextLineKeyword                                                                                           :2_5:GoDeeper:
******** / expectUnDeepers                                                                                              :2_5:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","GD","access"]                                                                                :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                               :2_5:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                              :2_5:GoDeeper:
******** / |<|                                                                                                          :2_5:GoDeeper:
******** / |<* starting                                                                                                 :2_5:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                            :2_5:GoDeeper:
******** / $*|                                                                                                          :2_5:GoDeeper:
******** \ $*| has returned ((),0)                                                                                      :2_5:GoDeeper:
******** / ->| success                                                                                                    :2_6:GoDeeper:
******** / |>>                                                                                                            :2_6:GoDeeper:
********* / |>>/recurse                                                                                                  :2_6:GoDeeper:
********** / |>>                                                                                                         :2_6:Other "acce:
*********** / |>>/recurse                                                                                               :2_6:Other "acce:
*********** / |>>/base                                                                                                  :2_6:Other "acce:
************ / slMultiTerm                                                                                             :2_6:Other "acce:
************* / |:| some                                                                                              :2_6:Other "acce:
************** / |:| base parser                                                                                     :2_6:Other "acce:
************** \ |:| base parser has returned ("access",0)                                                          :3_5:UnDeeper:
************** / |:| deeper                                                                                         :3_5:UnDeeper:
*************** / |:| some GoDeeper                                                                                :3_5:UnDeeper:
************** / |:| noMore                                                                                         :3_5:UnDeeper:
************** \ |:| noMore has returned ([],0)                                                                     :3_5:UnDeeper:
************* \ |:| some has returned (["access"],0)                                                                 :3_5:UnDeeper:
************ \ slMultiTerm has returned (["access"],0)                                                                :3_5:UnDeeper:
************ / |>>/base got ["access"]                                                                                :3_5:UnDeeper:
*********** \ |>>/base has returned (["access"],0)                                                                     :3_5:UnDeeper:
********** \ |>> has returned (["access"],0)                                                                            :3_5:UnDeeper:
********* \ |>>/recurse has returned (["access"],1)                                                                      :3_5:UnDeeper:
******** \ |>> has returned (["access"],1)                                                                                :3_5:UnDeeper:
******** / aNLK: current depth is 2                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with 0 UnDeepers pending                                                             :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["access"]                                                                              :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["access"],Or),0)                                                          :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                    :2_5:GoDeeper:
******* / aboveNextLineKeyword                                                                                             :2_6:GoDeeper:
******** / expectUnDeepers                                                                                                :2_6:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","access"]                                                                                     :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                                 :2_6:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                                :2_6:GoDeeper:
******** / |<|                                                                                                            :2_6:GoDeeper:
******** / |<* starting                                                                                                   :2_6:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                              :2_6:GoDeeper:
******** / $*|                                                                                                            :2_6:GoDeeper:
******** \ $*| has returned ((),0)                                                                                        :2_6:GoDeeper:
******** / ->| success                                                                                                     :2_6:Other "acce:
******** / |>>                                                                                                             :2_6:Other "acce:
********* / |>>/recurse                                                                                                   :2_6:Other "acce:
********* / |>>/base                                                                                                      :2_6:Other "acce:
********** / slMultiTerm                                                                                                 :2_6:Other "acce:
*********** / |:| some                                                                                                  :2_6:Other "acce:
************ / |:| base parser                                                                                         :2_6:Other "acce:
************ \ |:| base parser has returned ("access",0)                                                              :3_5:UnDeeper:
************ / |:| deeper                                                                                             :3_5:UnDeeper:
************* / |:| some GoDeeper                                                                                    :3_5:UnDeeper:
************ / |:| noMore                                                                                             :3_5:UnDeeper:
************ \ |:| noMore has returned ([],0)                                                                         :3_5:UnDeeper:
*********** \ |:| some has returned (["access"],0)                                                                     :3_5:UnDeeper:
********** \ slMultiTerm has returned (["access"],0)                                                                    :3_5:UnDeeper:
********** / |>>/base got ["access"]                                                                                    :3_5:UnDeeper:
********* \ |>>/base has returned (["access"],0)                                                                         :3_5:UnDeeper:
******** \ |>> has returned (["access"],0)                                                                                :3_5:UnDeeper:
******** / aNLK: current depth is 1                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with -1 UnDeepers pending                                                            :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["access"]                                                                              :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["access"],Or),-1)                                                         :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                      :2_6:GoDeeper:
******* / aboveNextLineKeyword                                                                                              :2_6:Other "acce:
******** / expectUnDeepers                                                                                                 :2_6:Other "acce:
********* / ignoring ["access"]                                                                                          :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                                  :2_6:Other "acce:
******** / aNLK: determined undp_count = 2                                                                                 :2_6:Other "acce:
******** / |<|                                                                                                             :2_6:Other "acce:
******** / |<* starting                                                                                                    :2_6:Other "acce:
******** / ->| trying to consume 1 GoDeepers                                                                               :2_6:Other "acce:
******** / $*|                                                                                                             :2_6:Other "acce:
******** \ $*| has returned ((),0)                                                                                         :2_6:Other "acce:
******* / /*= lookAhead failed, delegating to plain /+=                                                                     :2_6:Other "acce:
******* / aboveNextLineKeyword                                                                                             :3_5:UnDeeper:
******** / expectUnDeepers                                                                                                :3_5:UnDeeper:
********* / ignoring []                                                                                                  :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                                 :3_5:UnDeeper:
******** / aNLK: determined undp_count = 2                                                                                :3_5:UnDeeper:
******** / |<|                                                                                                            :3_5:UnDeeper:
******** / |<* starting                                                                                                   :3_5:UnDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                              :3_5:UnDeeper:
******** / $*|                                                                                                            :3_5:UnDeeper:
******** \ $*| has returned ((),0)                                                                                        :3_5:UnDeeper:
******* / /*= lookAhead failed, delegating to plain /+=                                                                    :3_5:UnDeeper:
******* / /*= lookAhead succeeded, greedy recursion failed (no p1); returning p2.                                          :2_6:GoDeeper:
****** \ pre part has returned (["any","unauthorised"],4)                                                                   :2_6:GoDeeper:
***** \ $*| has returned (["any","unauthorised"],4)                                                                          :2_6:GoDeeper:
***** / made it to inner base parser                                                                                         :2_6:GoDeeper:
****** / pBSR inner                                                                                                         :2_6:GoDeeper:
******* / term p                                                                                                           :2_6:GoDeeper:
******** / term p/1a:label directly above                                                                                 :2_6:GoDeeper:
********* / $*|                                                                                                          :2_6:GoDeeper:
********** / |:| some                                                                                                   :2_6:GoDeeper:
*********** / |:| base parser                                                                                          :2_6:GoDeeper:
************ / pNumAsText                                                                                             :2_6:GoDeeper:
******** / term p/b:label to the left of line below, with EOL                                                             :2_6:GoDeeper:
********* / |:| some                                                                                                     :2_6:GoDeeper:
********** / |:| base parser                                                                                            :2_6:GoDeeper:
*********** / pNumAsText                                                                                               :2_6:GoDeeper:
******** / term p/notLabelTerm                                                                                            :2_6:GoDeeper:
********* / term p/2:someIndentation expr p                                                                              :2_6:GoDeeper:
********** / someIndentation                                                                                            :2_6:GoDeeper:
*********** / myindented: consuming GoDeeper                                                                           :2_6:GoDeeper:
*********** \ myindented: consuming GoDeeper has returned GoDeeper                                                      :2_6:Other "acce:
*********** / manyIndentation/leaf?                                                                                     :2_6:Other "acce:
************ / term p                                                                                                  :2_6:Other "acce:
************* / term p/1a:label directly above                                                                        :2_6:Other "acce:
************** / $*|                                                                                                 :2_6:Other "acce:
*************** / |:| some                                                                                          :2_6:Other "acce:
**************** / |:| base parser                                                                                 :2_6:Other "acce:
**************** \ |:| base parser has returned ("access",0)                                                      :3_5:UnDeeper:
**************** / |:| deeper                                                                                     :3_5:UnDeeper:
***************** / |:| some GoDeeper                                                                            :3_5:UnDeeper:
**************** / |:| noMore                                                                                     :3_5:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                                 :3_5:UnDeeper:
*************** \ |:| some has returned (["access"],0)                                                             :3_5:UnDeeper:
*************** / pNumAsText                                                                                       :3_5:UnDeeper:
************* / term p/b:label to the left of line below, with EOL                                                    :2_6:Other "acce:
************** / |:| some                                                                                            :2_6:Other "acce:
*************** / |:| base parser                                                                                   :2_6:Other "acce:
*************** \ |:| base parser has returned ("access",0)                                                        :3_5:UnDeeper:
*************** / |:| deeper                                                                                       :3_5:UnDeeper:
**************** / |:| some GoDeeper                                                                              :3_5:UnDeeper:
*************** / |:| noMore                                                                                       :3_5:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                   :3_5:UnDeeper:
************** \ |:| some has returned (["access"],0)                                                               :3_5:UnDeeper:
************** / undeepers                                                                                          :3_5:UnDeeper:
*************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                           :3_5:UnDeeper:
*************** / sameLine: success!                                                                               :3_5:UnDeeper:
************** \ undeepers has returned ()                                                                          :3_5:UnDeeper:
************** / matching EOL                                                                                       :3_5:UnDeeper:
************* / term p/notLabelTerm                                                                                   :2_6:Other "acce:
************** / term p/2:someIndentation expr p                                                                     :2_6:Other "acce:
*************** / someIndentation                                                                                   :2_6:Other "acce:
**************** / myindented: consuming GoDeeper                                                                  :2_6:Other "acce:
************** / term p/3:plain p                                                                                    :2_6:Other "acce:
*************** / pRelPred                                                                                          :2_6:Other "acce:
**************** / slRelPred                                                                                       :2_6:Other "acce:
***************** / RPConstraint                                                                                  :2_6:Other "acce:
****************** / $*|                                                                                         :2_6:Other "acce:
******************* / slMultiTerm                                                                               :2_6:Other "acce:
******************** / |:| some                                                                                :2_6:Other "acce:
********************* / |:| base parser                                                                       :2_6:Other "acce:
********************* \ |:| base parser has returned ("access",0)                                            :3_5:UnDeeper:
********************* / |:| deeper                                                                           :3_5:UnDeeper:
********************** / |:| some GoDeeper                                                                  :3_5:UnDeeper:
********************* / |:| noMore                                                                           :3_5:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                       :3_5:UnDeeper:
******************** \ |:| some has returned (["access"],0)                                                   :3_5:UnDeeper:
******************* \ slMultiTerm has returned (["access"],0)                                                  :3_5:UnDeeper:
****************** \ $*| has returned (["access"],0)                                                            :3_5:UnDeeper:
****************** / |>| calling $>>                                                                            :3_5:UnDeeper:
******************* / $>>                                                                                      :3_5:UnDeeper:
******************** / $>>/recurse                                                                            :3_5:UnDeeper:
******************** / $>>/base                                                                               :3_5:UnDeeper:
***************** / RPBoolStructR                                                                                 :2_6:Other "acce:
****************** / $*|                                                                                         :2_6:Other "acce:
******************* / slMultiTerm                                                                               :2_6:Other "acce:
******************** / |:| some                                                                                :2_6:Other "acce:
********************* / |:| base parser                                                                       :2_6:Other "acce:
********************* \ |:| base parser has returned ("access",0)                                            :3_5:UnDeeper:
********************* / |:| deeper                                                                           :3_5:UnDeeper:
********************** / |:| some GoDeeper                                                                  :3_5:UnDeeper:
********************* / |:| noMore                                                                           :3_5:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                       :3_5:UnDeeper:
******************** \ |:| some has returned (["access"],0)                                                   :3_5:UnDeeper:
******************* \ slMultiTerm has returned (["access"],0)                                                  :3_5:UnDeeper:
****************** \ $*| has returned (["access"],0)                                                            :3_5:UnDeeper:
****************** / |>| calling $>>                                                                            :3_5:UnDeeper:
******************* / $>>                                                                                      :3_5:UnDeeper:
******************** / $>>/recurse                                                                            :3_5:UnDeeper:
******************** / $>>/base                                                                               :3_5:UnDeeper:
***************** / RPMT                                                                                          :2_6:Other "acce:
****************** / $*|                                                                                         :2_6:Other "acce:
******************* / slAKA                                                                                     :2_6:Other "acce:
******************** / $*|                                                                                     :2_6:Other "acce:
********************* / slAKA base                                                                            :2_6:Other "acce:
********************** / slMultiTerm                                                                         :2_6:Other "acce:
*********************** / |:| some                                                                          :2_6:Other "acce:
************************ / |:| base parser                                                                 :2_6:Other "acce:
************************ \ |:| base parser has returned ("access",0)                                      :3_5:UnDeeper:
************************ / |:| deeper                                                                     :3_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :3_5:UnDeeper:
************************ / |:| noMore                                                                     :3_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :3_5:UnDeeper:
*********************** \ |:| some has returned (["access"],0)                                             :3_5:UnDeeper:
********************** \ slMultiTerm has returned (["access"],0)                                            :3_5:UnDeeper:
********************* \ slAKA base has returned (["access"],0)                                               :3_5:UnDeeper:
******************** \ $*| has returned (["access"],0)                                                        :3_5:UnDeeper:
******************** / |>>                                                                                    :3_5:UnDeeper:
********************* / |>>/recurse                                                                          :3_5:UnDeeper:
********************* / |>>/base                                                                             :3_5:UnDeeper:
********************** / slAKA optional akapart                                                             :3_5:UnDeeper:
*********************** / |?| optional something                                                           :3_5:UnDeeper:
************************ / |>>                                                                            :3_5:UnDeeper:
************************* / |>>/recurse                                                                  :3_5:UnDeeper:
************************* / |>>/base                                                                     :3_5:UnDeeper:
************************** / PAKA/akapart                                                               :3_5:UnDeeper:
*************************** / $>|                                                                      :3_5:UnDeeper:
**************************** / Aka Token                                                              :3_5:UnDeeper:
*********************** \ |?| optional something has returned (Nothing,0)                                  :3_5:UnDeeper:
********************** \ slAKA optional akapart has returned (Nothing,0)                                    :3_5:UnDeeper:
********************** / |>>/base got Nothing                                                               :3_5:UnDeeper:
********************* \ |>>/base has returned (Nothing,0)                                                    :3_5:UnDeeper:
******************** \ |>> has returned (Nothing,0)                                                           :3_5:UnDeeper:
******************** / |>>                                                                                    :3_5:UnDeeper:
********************* / |>>/recurse                                                                          :3_5:UnDeeper:
********************* / |>>/base                                                                             :3_5:UnDeeper:
********************** / slAKA optional typically                                                           :3_5:UnDeeper:
*********************** / |?| optional something                                                           :3_5:UnDeeper:
************************ / |>>                                                                            :3_5:UnDeeper:
************************* / |>>/recurse                                                                  :3_5:UnDeeper:
************************* / |>>/base                                                                     :3_5:UnDeeper:
************************** / typically                                                                  :3_5:UnDeeper:
*************************** / $>|                                                                      :3_5:UnDeeper:
*********************** \ |?| optional something has returned (Nothing,0)                                  :3_5:UnDeeper:
********************** \ slAKA optional typically has returned (Nothing,0)                                  :3_5:UnDeeper:
********************** / |>>/base got Nothing                                                               :3_5:UnDeeper:
********************* \ |>>/base has returned (Nothing,0)                                                    :3_5:UnDeeper:
******************** \ |>> has returned (Nothing,0)                                                           :3_5:UnDeeper:
******************** / slAKA: proceeding after base and entityalias are retrieved ...                         :3_5:UnDeeper:
******************** / pAKA: entityalias = Nothing                                                            :3_5:UnDeeper:
******************* \ slAKA has returned (["access"],0)                                                        :3_5:UnDeeper:
****************** \ $*| has returned (["access"],0)                                                            :3_5:UnDeeper:
***************** \ RPMT has returned (RPMT ["access"],0)                                                        :3_5:UnDeeper:
**************** \ slRelPred has returned (RPMT ["access"],0)                                                     :3_5:UnDeeper:
**************** / undeepers                                                                                      :3_5:UnDeeper:
***************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                       :3_5:UnDeeper:
***************** / sameLine: success!                                                                           :3_5:UnDeeper:
**************** \ undeepers has returned ()                                                                      :3_5:UnDeeper:
*************** \ pRelPred has returned RPMT ["access"]                                                            :3_5:UnDeeper:
************** \ term p/3:plain p has returned MyLeaf (RPMT ["access"])                                             :3_5:UnDeeper:
************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                            :3_5:UnDeeper:
************ \ term p has returned MyLeaf (RPMT ["access"])                                                           :3_5:UnDeeper:
************ / binary(Or)                                                                                             :3_5:UnDeeper:
************ / binary(And)                                                                                            :3_5:UnDeeper:
************ / binary(SetLess)                                                                                        :3_5:UnDeeper:
************ / binary(SetPlus)                                                                                        :3_5:UnDeeper:
*********** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["access"])                                              :3_5:UnDeeper:
*********** / myindented: consuming UnDeeper                                                                           :3_5:UnDeeper:
*********** \ myindented: consuming UnDeeper has returned UnDeeper                                                       :3_6:UnDeeper:
********** \ someIndentation has returned MyLeaf (RPMT ["access"])                                                        :3_6:UnDeeper:
********* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["access"])                                          :3_6:UnDeeper:
******** \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                                        :3_6:UnDeeper:
******* \ term p has returned MyLeaf (RPMT ["access"])                                                                       :3_6:UnDeeper:
******* / binary(Or)                                                                                                         :3_6:UnDeeper:
******* / binary(And)                                                                                                        :3_6:UnDeeper:
******* / binary(SetLess)                                                                                                    :3_6:UnDeeper:
******* / binary(SetPlus)                                                                                                    :3_6:UnDeeper:
****** \ pBSR inner has returned Leaf (RPMT ["access"])                                                                       :3_6:UnDeeper:
***** \ made it to inner base parser has returned Leaf (RPMT ["access"])                                                       :3_6:UnDeeper:
***** / |<*/recurse                                                                                                            :3_6:UnDeeper:
***** / post part                                                                                                         :3_4:Or:
****** / slMultiTerm                                                                                                     :3_4:Or:
******* / |:| some                                                                                                      :3_4:Or:
******** / |:| base parser                                                                                             :3_4:Or:
********* / pNumAsText                                                                                                :3_4:Or:
***** / |<*/base                                                                                                               :3_6:UnDeeper:
****** / post part                                                                                                            :3_6:UnDeeper:
******* / slMultiTerm                                                                                                        :3_6:UnDeeper:
******** / |:| some                                                                                                         :3_6:UnDeeper:
********* / |:| base parser                                                                                                :3_6:UnDeeper:
********** / pNumAsText                                                                                                   :3_6:UnDeeper:
**** / withPreOnly                                                                                                    :2_2:GoDeeper:
***** / $*|                                                                                                          :2_2:GoDeeper:
****** / pre part                                                                                                   :2_2:GoDeeper:
******* / aboveNextLineKeyword                                                                                      :2_2:Other "any":
******** / expectUnDeepers                                                                                         :2_2:Other "any":
********* / pNumAsText                                                                                             :2_3:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["any","GD","unauthorised","GD","GD","GD","access"]                                                 :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                          :2_2:Other "any":
******** / aNLK: determined undp_count = 2                                                                         :2_2:Other "any":
******** / |<|                                                                                                     :2_2:Other "any":
******** / |<* starting                                                                                            :2_2:Other "any":
******** / ->| trying to consume 1 GoDeepers                                                                       :2_2:Other "any":
******** / $*|                                                                                                     :2_2:Other "any":
******** \ $*| has returned ((),0)                                                                                 :2_2:Other "any":
******* / /*= lookAhead failed, delegating to plain /+=                                                             :2_2:Other "any":
******* / aboveNextLineKeyword                                                                                       :2_3:GoDeeper:
******** / expectUnDeepers                                                                                          :2_3:GoDeeper:
********* / pNumAsText                                                                                             :2_3:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","unauthorised","GD","GD","GD","access"]                                                       :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                           :2_3:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                          :2_3:GoDeeper:
******** / |<|                                                                                                      :2_3:GoDeeper:
******** / |<* starting                                                                                             :2_3:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                        :2_3:GoDeeper:
******** / $*|                                                                                                      :2_3:GoDeeper:
******** \ $*| has returned ((),0)                                                                                  :2_3:GoDeeper:
******** / ->| success                                                                                               :2_3:Other "unau:
******** / |>>                                                                                                       :2_3:Other "unau:
********* / |>>/recurse                                                                                             :2_3:Other "unau:
********* / |>>/base                                                                                                :2_3:Other "unau:
********** / slMultiTerm                                                                                           :2_3:Other "unau:
*********** / |:| some                                                                                            :2_3:Other "unau:
************ / |:| base parser                                                                                   :2_3:Other "unau:
************ \ |:| base parser has returned ("unauthorised",0)                                                    :2_4:GoDeeper:
************ / |:| deeper                                                                                         :2_4:GoDeeper:
************* / |:| some GoDeeper                                                                                :2_4:GoDeeper:
************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                           :2_6:Other "acce:
************* / |:| some                                                                                              :2_6:Other "acce:
************** / |:| base parser                                                                                     :2_6:Other "acce:
************** \ |:| base parser has returned ("access",0)                                                          :3_5:UnDeeper:
************** / |:| deeper                                                                                         :3_5:UnDeeper:
*************** / |:| some GoDeeper                                                                                :3_5:UnDeeper:
************** / |:| noMore                                                                                         :3_5:UnDeeper:
************** \ |:| noMore has returned ([],0)                                                                     :3_5:UnDeeper:
************* \ |:| some has returned (["access"],0)                                                                 :3_5:UnDeeper:
************ \ |:| deeper has returned (["access"],3)                                                                 :3_5:UnDeeper:
*********** \ |:| some has returned (["unauthorised","access"],3)                                                      :3_5:UnDeeper:
********** \ slMultiTerm has returned (["unauthorised","access"],3)                                                     :3_5:UnDeeper:
********** / |>>/base got ["unauthorised","access"]                                                                     :3_5:UnDeeper:
********* \ |>>/base has returned (["unauthorised","access"],3)                                                          :3_5:UnDeeper:
******** \ |>> has returned (["unauthorised","access"],3)                                                                 :3_5:UnDeeper:
******** / aNLK: current depth is 4                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with 2 UnDeepers pending                                                             :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["unauthorised","access"]                                                               :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["unauthorised","access"],Or),2)                                           :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                :2_3:GoDeeper:
******* / aboveNextLineKeyword                                                                                        :2_3:Other "unau:
******** / expectUnDeepers                                                                                           :2_3:Other "unau:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["unauthorised","GD","GD","GD","access"]                                                            :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                            :2_3:Other "unau:
******** / aNLK: determined undp_count = 2                                                                           :2_3:Other "unau:
******** / |<|                                                                                                       :2_3:Other "unau:
******** / |<* starting                                                                                              :2_3:Other "unau:
******** / ->| trying to consume 1 GoDeepers                                                                         :2_3:Other "unau:
******** / $*|                                                                                                       :2_3:Other "unau:
******** \ $*| has returned ((),0)                                                                                   :2_3:Other "unau:
******* / /*= lookAhead failed, delegating to plain /+=                                                               :2_3:Other "unau:
******* / aboveNextLineKeyword                                                                                         :2_4:GoDeeper:
******** / expectUnDeepers                                                                                            :2_4:GoDeeper:
********* / pNumAsText                                                                                               :2_4:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","GD","GD","access"]                                                                           :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                             :2_4:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                            :2_4:GoDeeper:
******** / |<|                                                                                                        :2_4:GoDeeper:
******** / |<* starting                                                                                               :2_4:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                          :2_4:GoDeeper:
******** / $*|                                                                                                        :2_4:GoDeeper:
******** \ $*| has returned ((),0)                                                                                    :2_4:GoDeeper:
******** / ->| success                                                                                                  :2_5:GoDeeper:
******** / |>>                                                                                                          :2_5:GoDeeper:
********* / |>>/recurse                                                                                                :2_5:GoDeeper:
********** / |>>                                                                                                        :2_6:GoDeeper:
*********** / |>>/recurse                                                                                              :2_6:GoDeeper:
************ / |>>                                                                                                     :2_6:Other "acce:
************* / |>>/recurse                                                                                           :2_6:Other "acce:
************* / |>>/base                                                                                              :2_6:Other "acce:
************** / slMultiTerm                                                                                         :2_6:Other "acce:
*************** / |:| some                                                                                          :2_6:Other "acce:
**************** / |:| base parser                                                                                 :2_6:Other "acce:
**************** \ |:| base parser has returned ("access",0)                                                      :3_5:UnDeeper:
**************** / |:| deeper                                                                                     :3_5:UnDeeper:
***************** / |:| some GoDeeper                                                                            :3_5:UnDeeper:
**************** / |:| noMore                                                                                     :3_5:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                                 :3_5:UnDeeper:
*************** \ |:| some has returned (["access"],0)                                                             :3_5:UnDeeper:
************** \ slMultiTerm has returned (["access"],0)                                                            :3_5:UnDeeper:
************** / |>>/base got ["access"]                                                                            :3_5:UnDeeper:
************* \ |>>/base has returned (["access"],0)                                                                 :3_5:UnDeeper:
************ \ |>> has returned (["access"],0)                                                                        :3_5:UnDeeper:
*********** \ |>>/recurse has returned (["access"],1)                                                                  :3_5:UnDeeper:
********** \ |>> has returned (["access"],1)                                                                            :3_5:UnDeeper:
********* \ |>>/recurse has returned (["access"],2)                                                                      :3_5:UnDeeper:
******** \ |>> has returned (["access"],2)                                                                                :3_5:UnDeeper:
******** / aNLK: current depth is 3                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with 1 UnDeepers pending                                                             :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["access"]                                                                              :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["access"],Or),1)                                                          :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                  :2_4:GoDeeper:
******* / aboveNextLineKeyword                                                                                           :2_5:GoDeeper:
******** / expectUnDeepers                                                                                              :2_5:GoDeeper:
********* / pNumAsText                                                                                                 :2_5:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","GD","access"]                                                                                :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                               :2_5:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                              :2_5:GoDeeper:
******** / |<|                                                                                                          :2_5:GoDeeper:
******** / |<* starting                                                                                                 :2_5:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                            :2_5:GoDeeper:
******** / $*|                                                                                                          :2_5:GoDeeper:
******** \ $*| has returned ((),0)                                                                                      :2_5:GoDeeper:
******** / ->| success                                                                                                    :2_6:GoDeeper:
******** / |>>                                                                                                            :2_6:GoDeeper:
********* / |>>/recurse                                                                                                  :2_6:GoDeeper:
********** / |>>                                                                                                         :2_6:Other "acce:
*********** / |>>/recurse                                                                                               :2_6:Other "acce:
*********** / |>>/base                                                                                                  :2_6:Other "acce:
************ / slMultiTerm                                                                                             :2_6:Other "acce:
************* / |:| some                                                                                              :2_6:Other "acce:
************** / |:| base parser                                                                                     :2_6:Other "acce:
************** \ |:| base parser has returned ("access",0)                                                          :3_5:UnDeeper:
************** / |:| deeper                                                                                         :3_5:UnDeeper:
*************** / |:| some GoDeeper                                                                                :3_5:UnDeeper:
************** / |:| noMore                                                                                         :3_5:UnDeeper:
************** \ |:| noMore has returned ([],0)                                                                     :3_5:UnDeeper:
************* \ |:| some has returned (["access"],0)                                                                 :3_5:UnDeeper:
************ \ slMultiTerm has returned (["access"],0)                                                                :3_5:UnDeeper:
************ / |>>/base got ["access"]                                                                                :3_5:UnDeeper:
*********** \ |>>/base has returned (["access"],0)                                                                     :3_5:UnDeeper:
********** \ |>> has returned (["access"],0)                                                                            :3_5:UnDeeper:
********* \ |>>/recurse has returned (["access"],1)                                                                      :3_5:UnDeeper:
******** \ |>> has returned (["access"],1)                                                                                :3_5:UnDeeper:
******** / aNLK: current depth is 2                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with 0 UnDeepers pending                                                             :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["access"]                                                                              :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["access"],Or),0)                                                          :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                    :2_5:GoDeeper:
******* / aboveNextLineKeyword                                                                                             :2_6:GoDeeper:
******** / expectUnDeepers                                                                                                :2_6:GoDeeper:
********* / pNumAsText                                                                                                   :2_6:GoDeeper:
********* / ignoring ["GD","access"]                                                                                     :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                                 :2_6:GoDeeper:
******** / aNLK: determined undp_count = 2                                                                                :2_6:GoDeeper:
******** / |<|                                                                                                            :2_6:GoDeeper:
******** / |<* starting                                                                                                   :2_6:GoDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                              :2_6:GoDeeper:
******** / $*|                                                                                                            :2_6:GoDeeper:
******** \ $*| has returned ((),0)                                                                                        :2_6:GoDeeper:
******** / ->| success                                                                                                     :2_6:Other "acce:
******** / |>>                                                                                                             :2_6:Other "acce:
********* / |>>/recurse                                                                                                   :2_6:Other "acce:
********* / |>>/base                                                                                                      :2_6:Other "acce:
********** / slMultiTerm                                                                                                 :2_6:Other "acce:
*********** / |:| some                                                                                                  :2_6:Other "acce:
************ / |:| base parser                                                                                         :2_6:Other "acce:
************ \ |:| base parser has returned ("access",0)                                                              :3_5:UnDeeper:
************ / |:| deeper                                                                                             :3_5:UnDeeper:
************* / |:| some GoDeeper                                                                                    :3_5:UnDeeper:
************ / |:| noMore                                                                                             :3_5:UnDeeper:
************ \ |:| noMore has returned ([],0)                                                                         :3_5:UnDeeper:
*********** \ |:| some has returned (["access"],0)                                                                     :3_5:UnDeeper:
********** \ slMultiTerm has returned (["access"],0)                                                                    :3_5:UnDeeper:
********** / |>>/base got ["access"]                                                                                    :3_5:UnDeeper:
********* \ |>>/base has returned (["access"],0)                                                                         :3_5:UnDeeper:
******** \ |>> has returned (["access"],0)                                                                                :3_5:UnDeeper:
******** / aNLK: current depth is 1                                                                                       :3_5:UnDeeper:
******** / |<*/recurse                                                                                                    :3_5:UnDeeper:
******** / |<*/recurse matched 2 UnDeepers, then got Or with -2 UnDeepers pending                                       :3_5:GoDeeper:
******** / |<*/parent returning Or with -1 UnDeepers pending                                                            :3_5:GoDeeper:
******** / aNLK: slMultiTerm is ["access"]                                                                              :3_5:GoDeeper:
******* \ aboveNextLineKeyword has returned ((["access"],Or),-1)                                                         :3_5:GoDeeper:
******* / /*= lookAhead succeeded, recursing greedily                                                                      :2_6:GoDeeper:
******* / aboveNextLineKeyword                                                                                              :2_6:Other "acce:
******** / expectUnDeepers                                                                                                 :2_6:Other "acce:
********* / ignoring ["access"]                                                                                          :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                                  :2_6:Other "acce:
******** / aNLK: determined undp_count = 2                                                                                 :2_6:Other "acce:
******** / |<|                                                                                                             :2_6:Other "acce:
******** / |<* starting                                                                                                    :2_6:Other "acce:
******** / ->| trying to consume 1 GoDeepers                                                                               :2_6:Other "acce:
******** / $*|                                                                                                             :2_6:Other "acce:
******** \ $*| has returned ((),0)                                                                                         :2_6:Other "acce:
******* / /*= lookAhead failed, delegating to plain /+=                                                                     :2_6:Other "acce:
******* / aboveNextLineKeyword                                                                                             :3_5:UnDeeper:
******** / expectUnDeepers                                                                                                :3_5:UnDeeper:
********* / ignoring []                                                                                                  :3_5:UnDeeper:
********* / matched undeepers [UnDeeper,UnDeeper]                                                                     :3_4:Or:
******** \ expectUnDeepers has returned 2                                                                                 :3_5:UnDeeper:
******** / aNLK: determined undp_count = 2                                                                                :3_5:UnDeeper:
******** / |<|                                                                                                            :3_5:UnDeeper:
******** / |<* starting                                                                                                   :3_5:UnDeeper:
******** / ->| trying to consume 1 GoDeepers                                                                              :3_5:UnDeeper:
******** / $*|                                                                                                            :3_5:UnDeeper:
******** \ $*| has returned ((),0)                                                                                        :3_5:UnDeeper:
******* / /*= lookAhead failed, delegating to plain /+=                                                                    :3_5:UnDeeper:
******* / /*= lookAhead succeeded, greedy recursion failed (no p1); returning p2.                                          :2_6:GoDeeper:
****** \ pre part has returned (["any","unauthorised"],4)                                                                   :2_6:GoDeeper:
***** \ $*| has returned (["any","unauthorised"],4)                                                                          :2_6:GoDeeper:
***** / made it to inner parser                                                                                              :2_6:GoDeeper:
****** / pBSR inner                                                                                                         :2_6:GoDeeper:
******* / term p                                                                                                           :2_6:GoDeeper:
******** / term p/1a:label directly above                                                                                 :2_6:GoDeeper:
********* / $*|                                                                                                          :2_6:GoDeeper:
********** / |:| some                                                                                                   :2_6:GoDeeper:
*********** / |:| base parser                                                                                          :2_6:GoDeeper:
************ / pNumAsText                                                                                             :2_6:GoDeeper:
******** / term p/b:label to the left of line below, with EOL                                                             :2_6:GoDeeper:
********* / |:| some                                                                                                     :2_6:GoDeeper:
********** / |:| base parser                                                                                            :2_6:GoDeeper:
*********** / pNumAsText                                                                                               :2_6:GoDeeper:
******** / term p/notLabelTerm                                                                                            :2_6:GoDeeper:
********* / term p/2:someIndentation expr p                                                                              :2_6:GoDeeper:
********** / someIndentation                                                                                            :2_6:GoDeeper:
*********** / myindented: consuming GoDeeper                                                                           :2_6:GoDeeper:
*********** \ myindented: consuming GoDeeper has returned GoDeeper                                                      :2_6:Other "acce:
*********** / manyIndentation/leaf?                                                                                     :2_6:Other "acce:
************ / term p                                                                                                  :2_6:Other "acce:
************* / term p/1a:label directly above                                                                        :2_6:Other "acce:
************** / $*|                                                                                                 :2_6:Other "acce:
*************** / |:| some                                                                                          :2_6:Other "acce:
**************** / |:| base parser                                                                                 :2_6:Other "acce:
**************** \ |:| base parser has returned ("access",0)                                                      :3_5:UnDeeper:
**************** / |:| deeper                                                                                     :3_5:UnDeeper:
***************** / |:| some GoDeeper                                                                            :3_5:UnDeeper:
**************** / |:| noMore                                                                                     :3_5:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                                 :3_5:UnDeeper:
*************** \ |:| some has returned (["access"],0)                                                             :3_5:UnDeeper:
*************** / pNumAsText                                                                                       :3_5:UnDeeper:
************* / term p/b:label to the left of line below, with EOL                                                    :2_6:Other "acce:
************** / |:| some                                                                                            :2_6:Other "acce:
*************** / |:| base parser                                                                                   :2_6:Other "acce:
*************** \ |:| base parser has returned ("access",0)                                                        :3_5:UnDeeper:
*************** / |:| deeper                                                                                       :3_5:UnDeeper:
**************** / |:| some GoDeeper                                                                              :3_5:UnDeeper:
*************** / |:| noMore                                                                                       :3_5:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                   :3_5:UnDeeper:
************** \ |:| some has returned (["access"],0)                                                               :3_5:UnDeeper:
************** / undeepers                                                                                          :3_5:UnDeeper:
*************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                           :3_5:UnDeeper:
*************** / sameLine: success!                                                                               :3_5:UnDeeper:
************** \ undeepers has returned ()                                                                          :3_5:UnDeeper:
************** / matching EOL                                                                                       :3_5:UnDeeper:
************* / term p/notLabelTerm                                                                                   :2_6:Other "acce:
************** / term p/2:someIndentation expr p                                                                     :2_6:Other "acce:
*************** / someIndentation                                                                                   :2_6:Other "acce:
**************** / myindented: consuming GoDeeper                                                                  :2_6:Other "acce:
************** / term p/3:plain p                                                                                    :2_6:Other "acce:
*************** / pRelPred                                                                                          :2_6:Other "acce:
**************** / slRelPred                                                                                       :2_6:Other "acce:
***************** / RPConstraint                                                                                  :2_6:Other "acce:
****************** / $*|                                                                                         :2_6:Other "acce:
******************* / slMultiTerm                                                                               :2_6:Other "acce:
******************** / |:| some                                                                                :2_6:Other "acce:
********************* / |:| base parser                                                                       :2_6:Other "acce:
********************* \ |:| base parser has returned ("access",0)                                            :3_5:UnDeeper:
********************* / |:| deeper                                                                           :3_5:UnDeeper:
********************** / |:| some GoDeeper                                                                  :3_5:UnDeeper:
********************* / |:| noMore                                                                           :3_5:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                       :3_5:UnDeeper:
******************** \ |:| some has returned (["access"],0)                                                   :3_5:UnDeeper:
******************* \ slMultiTerm has returned (["access"],0)                                                  :3_5:UnDeeper:
****************** \ $*| has returned (["access"],0)                                                            :3_5:UnDeeper:
****************** / |>| calling $>>                                                                            :3_5:UnDeeper:
******************* / $>>                                                                                      :3_5:UnDeeper:
******************** / $>>/recurse                                                                            :3_5:UnDeeper:
******************** / $>>/base                                                                               :3_5:UnDeeper:
***************** / RPBoolStructR                                                                                 :2_6:Other "acce:
****************** / $*|                                                                                         :2_6:Other "acce:
******************* / slMultiTerm                                                                               :2_6:Other "acce:
******************** / |:| some                                                                                :2_6:Other "acce:
********************* / |:| base parser                                                                       :2_6:Other "acce:
********************* \ |:| base parser has returned ("access",0)                                            :3_5:UnDeeper:
********************* / |:| deeper                                                                           :3_5:UnDeeper:
********************** / |:| some GoDeeper                                                                  :3_5:UnDeeper:
********************* / |:| noMore                                                                           :3_5:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                       :3_5:UnDeeper:
******************** \ |:| some has returned (["access"],0)                                                   :3_5:UnDeeper:
******************* \ slMultiTerm has returned (["access"],0)                                                  :3_5:UnDeeper:
****************** \ $*| has returned (["access"],0)                                                            :3_5:UnDeeper:
****************** / |>| calling $>>                                                                            :3_5:UnDeeper:
******************* / $>>                                                                                      :3_5:UnDeeper:
******************** / $>>/recurse                                                                            :3_5:UnDeeper:
******************** / $>>/base                                                                               :3_5:UnDeeper:
***************** / RPMT                                                                                          :2_6:Other "acce:
****************** / $*|                                                                                         :2_6:Other "acce:
******************* / slAKA                                                                                     :2_6:Other "acce:
******************** / $*|                                                                                     :2_6:Other "acce:
********************* / slAKA base                                                                            :2_6:Other "acce:
********************** / slMultiTerm                                                                         :2_6:Other "acce:
*********************** / |:| some                                                                          :2_6:Other "acce:
************************ / |:| base parser                                                                 :2_6:Other "acce:
************************ \ |:| base parser has returned ("access",0)                                      :3_5:UnDeeper:
************************ / |:| deeper                                                                     :3_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :3_5:UnDeeper:
************************ / |:| noMore                                                                     :3_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :3_5:UnDeeper:
*********************** \ |:| some has returned (["access"],0)                                             :3_5:UnDeeper:
********************** \ slMultiTerm has returned (["access"],0)                                            :3_5:UnDeeper:
********************* \ slAKA base has returned (["access"],0)                                               :3_5:UnDeeper:
******************** \ $*| has returned (["access"],0)                                                        :3_5:UnDeeper:
******************** / |>>                                                                                    :3_5:UnDeeper:
********************* / |>>/recurse                                                                          :3_5:UnDeeper:
********************* / |>>/base                                                                             :3_5:UnDeeper:
********************** / slAKA optional akapart                                                             :3_5:UnDeeper:
*********************** / |?| optional something                                                           :3_5:UnDeeper:
************************ / |>>                                                                            :3_5:UnDeeper:
************************* / |>>/recurse                                                                  :3_5:UnDeeper:
************************* / |>>/base                                                                     :3_5:UnDeeper:
************************** / PAKA/akapart                                                               :3_5:UnDeeper:
*************************** / $>|                                                                      :3_5:UnDeeper:
**************************** / Aka Token                                                              :3_5:UnDeeper:
*********************** \ |?| optional something has returned (Nothing,0)                                  :3_5:UnDeeper:
********************** \ slAKA optional akapart has returned (Nothing,0)                                    :3_5:UnDeeper:
********************** / |>>/base got Nothing                                                               :3_5:UnDeeper:
********************* \ |>>/base has returned (Nothing,0)                                                    :3_5:UnDeeper:
******************** \ |>> has returned (Nothing,0)                                                           :3_5:UnDeeper:
******************** / |>>                                                                                    :3_5:UnDeeper:
********************* / |>>/recurse                                                                          :3_5:UnDeeper:
********************* / |>>/base                                                                             :3_5:UnDeeper:
********************** / slAKA optional typically                                                           :3_5:UnDeeper:
*********************** / |?| optional something                                                           :3_5:UnDeeper:
************************ / |>>                                                                            :3_5:UnDeeper:
************************* / |>>/recurse                                                                  :3_5:UnDeeper:
************************* / |>>/base                                                                     :3_5:UnDeeper:
************************** / typically                                                                  :3_5:UnDeeper:
*************************** / $>|                                                                      :3_5:UnDeeper:
*********************** \ |?| optional something has returned (Nothing,0)                                  :3_5:UnDeeper:
********************** \ slAKA optional typically has returned (Nothing,0)                                  :3_5:UnDeeper:
********************** / |>>/base got Nothing                                                               :3_5:UnDeeper:
********************* \ |>>/base has returned (Nothing,0)                                                    :3_5:UnDeeper:
******************** \ |>> has returned (Nothing,0)                                                           :3_5:UnDeeper:
******************** / slAKA: proceeding after base and entityalias are retrieved ...                         :3_5:UnDeeper:
******************** / pAKA: entityalias = Nothing                                                            :3_5:UnDeeper:
******************* \ slAKA has returned (["access"],0)                                                        :3_5:UnDeeper:
****************** \ $*| has returned (["access"],0)                                                            :3_5:UnDeeper:
***************** \ RPMT has returned (RPMT ["access"],0)                                                        :3_5:UnDeeper:
**************** \ slRelPred has returned (RPMT ["access"],0)                                                     :3_5:UnDeeper:
**************** / undeepers                                                                                      :3_5:UnDeeper:
***************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                       :3_5:UnDeeper:
***************** / sameLine: success!                                                                           :3_5:UnDeeper:
**************** \ undeepers has returned ()                                                                      :3_5:UnDeeper:
*************** \ pRelPred has returned RPMT ["access"]                                                            :3_5:UnDeeper:
************** \ term p/3:plain p has returned MyLeaf (RPMT ["access"])                                             :3_5:UnDeeper:
************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                            :3_5:UnDeeper:
************ \ term p has returned MyLeaf (RPMT ["access"])                                                           :3_5:UnDeeper:
************ / binary(Or)                                                                                             :3_5:UnDeeper:
************ / binary(And)                                                                                            :3_5:UnDeeper:
************ / binary(SetLess)                                                                                        :3_5:UnDeeper:
************ / binary(SetPlus)                                                                                        :3_5:UnDeeper:
*********** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["access"])                                              :3_5:UnDeeper:
*********** / myindented: consuming UnDeeper                                                                           :3_5:UnDeeper:
*********** \ myindented: consuming UnDeeper has returned UnDeeper                                                       :3_6:UnDeeper:
********** \ someIndentation has returned MyLeaf (RPMT ["access"])                                                        :3_6:UnDeeper:
********* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["access"])                                          :3_6:UnDeeper:
******** \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                                                        :3_6:UnDeeper:
******* \ term p has returned MyLeaf (RPMT ["access"])                                                                       :3_6:UnDeeper:
******* / binary(Or)                                                                                                         :3_6:UnDeeper:
******* / binary(And)                                                                                                        :3_6:UnDeeper:
******* / binary(SetLess)                                                                                                    :3_6:UnDeeper:
******* / binary(SetPlus)                                                                                                    :3_6:UnDeeper:
****** \ pBSR inner has returned Leaf (RPMT ["access"])                                                                       :3_6:UnDeeper:
***** \ made it to inner parser has returned Leaf (RPMT ["access"])                                                            :3_6:UnDeeper:
***** / undeepers                                                                                                              :3_6:UnDeeper:
****** / sameLine/undeepers: reached end of line; now need to clear 4 UnDeepers                                               :3_6:UnDeeper:
* final
:PROPERTIES:
:VISIBILITY: all
:END:


PDPA
  inline-1-m FAILED [1]

Failures:

  test/Spec.hs:120:3: 
  1) PDPA inline-1-m
       expected: [((["Bad"],Means,Any (Just (PrePost "any unauthorised" "of personal data")) [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])]),[])]
       but parsing failed with error:
       3:4:
       unexpected Or
       expecting And, Or, Other text, SetLess, SetPlus, TNumber 1234, UnDeeper, or expression
                        Bad                                                                                 
       MEANS            any              unauthorised                                       access          
                                                          ✳ OR                              use             
                                                          OR                                disclosure      
                                                          OR                                copying         
                                                          OR                                modification    
                                                                                                            
                                                          OR                                disposal        
                        of personal data                                                                    
       

  To rerun use: --match "/PDPA/inline-1-m/"

Randomized with seed 1156401683

Finished in 0.0084 seconds
1 example, 1 failure

natural4> Test suite natural4-test failed
Test suite failure for package natural4-0.1.0.0
    natural4-test:  exited with: ExitFailure 1
Logs printed to console

