* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / pRule                                                                                                              :1_2:GoDeeper:
*** / pRegRule                                                                                                         :1_2:GoDeeper:
**** / pRuleLabel                                                                                                     :1_2:GoDeeper:
***** / $>|                                                                                                          :1_2:GoDeeper:
**** / pRegRuleSugary                                                                                                 :1_2:GoDeeper:
***** / someDeep                                                                                                     :1_2:GoDeeper:
****** / someDeep first part calls base directly                                                                    :1_2:GoDeeper:
**** / pRegRuleNormal                                                                                                 :1_2:GoDeeper:
***** / permutationsReg                                                                                              :1_2:GoDeeper:
****** / regulative permutation with deontic-temporal                                                               :1_2:GoDeeper:
******* / WHERE                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Having]                                                                               :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Given]                                                                                :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Upon]                                                                                 :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleBoolStructR [Unless]                                                                             :1_2:GoDeeper:
******* / preambleBoolStructR [When,If]                                                                            :1_2:GoDeeper:
******* / pDT                                                                                                      :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / pActor [Every,Party,TokAll]                                                                              :1_2:GoDeeper:
******* / pDoAction/Do                                                                                             :1_2:GoDeeper:
****** / regulative permutation with deontic-action                                                                 :1_2:GoDeeper:
******* / WHERE                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Having]                                                                               :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Given]                                                                                :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Upon]                                                                                 :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleBoolStructR [Unless]                                                                             :1_2:GoDeeper:
******* / preambleBoolStructR [When,If]                                                                            :1_2:GoDeeper:
******* / pTemporal/eventually                                                                                     :1_2:GoDeeper:
******* / pTemporal/specifically                                                                                   :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / pTemporal/vaguely                                                                                        :1_2:GoDeeper:
******* / pActor [Every,Party,TokAll]                                                                              :1_2:GoDeeper:
******* / pDA                                                                                                      :1_2:GoDeeper:
*** / pTypeDefinition                                                                                                  :1_2:GoDeeper:
**** / pRuleLabel                                                                                                     :1_2:GoDeeper:
***** / $>|                                                                                                          :1_2:GoDeeper:
**** / pHornlike/uponLimb                                                                                             :1_2:GoDeeper:
***** / preambleParamText:[Upon]                                                                                     :1_2:GoDeeper:
****** / $>|                                                                                                        :1_2:GoDeeper:
**** / pHornlike/givenLimb                                                                                            :1_2:GoDeeper:
***** / preambleParamText:[Given]                                                                                    :1_2:GoDeeper:
****** / $>|                                                                                                        :1_2:GoDeeper:
*** / pConstitutiveRule                                                                                                :1_2:GoDeeper:
**** / pRuleLabel                                                                                                     :1_2:GoDeeper:
***** / $>|                                                                                                          :1_2:GoDeeper:
**** / calling myindented pNameParens                                                                                 :1_2:GoDeeper:
***** / manyIndentation/leaf?                                                                                        :1_2:GoDeeper:
****** / pMultiTermAka                                                                                              :1_2:GoDeeper:
******* / pAKA                                                                                                     :1_2:GoDeeper:
******** / slAKA                                                                                                  :1_2:GoDeeper:
********* / $*|                                                                                                  :1_2:GoDeeper:
********** / slAKA base                                                                                         :1_2:GoDeeper:
*********** / slMultiTerm                                                                                      :1_2:GoDeeper:
************ / |:| some                                                                                       :1_2:GoDeeper:
************* / |:| base parser                                                                              :1_2:GoDeeper:
************** / pNumAsText                                                                                 :1_2:GoDeeper:
***** / manyIndentation/deeper; calling someIndentation                                                              :1_2:GoDeeper:
****** / someIndentation                                                                                            :1_2:GoDeeper:
******* / myindented: consuming GoDeeper                                                                           :1_2:GoDeeper:
******* \ myindented: consuming GoDeeper has returned GoDeeper                                                      :1_2:Other "Bad":
******* / manyIndentation/leaf?                                                                                     :1_2:Other "Bad":
******** / pMultiTermAka                                                                                           :1_2:Other "Bad":
********* / pAKA                                                                                                  :1_2:Other "Bad":
********** / slAKA                                                                                               :1_2:Other "Bad":
*********** / $*|                                                                                               :1_2:Other "Bad":
************ / slAKA base                                                                                      :1_2:Other "Bad":
************* / slMultiTerm                                                                                   :1_2:Other "Bad":
************** / |:| some                                                                                    :1_2:Other "Bad":
*************** / |:| base parser                                                                           :1_2:Other "Bad":
*************** \ |:| base parser has returned ("Bad",0)                                                     :2_2:UnDeeper:
*************** / |:| deeper                                                                                 :2_2:UnDeeper:
**************** / |:| some GoDeeper                                                                        :2_2:UnDeeper:
*************** / |:| noMore                                                                                 :2_2:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                             :2_2:UnDeeper:
************** \ |:| some has returned (["Bad"],0)                                                            :2_2:UnDeeper:
************* \ slMultiTerm has returned (["Bad"],0)                                                           :2_2:UnDeeper:
************ \ slAKA base has returned (["Bad"],0)                                                              :2_2:UnDeeper:
*********** \ $*| has returned (["Bad"],0)                                                                       :2_2:UnDeeper:
*********** / |>>                                                                                                :2_2:UnDeeper:
************ / |>>/recurse                                                                                      :2_2:UnDeeper:
************ / |>>/base                                                                                         :2_2:UnDeeper:
************* / slAKA optional akapart                                                                         :2_2:UnDeeper:
************** / |?| optional something                                                                       :2_2:UnDeeper:
*************** / |>>                                                                                        :2_2:UnDeeper:
**************** / |>>/recurse                                                                              :2_2:UnDeeper:
**************** / |>>/base                                                                                 :2_2:UnDeeper:
***************** / PAKA/akapart                                                                           :2_2:UnDeeper:
****************** / $>|                                                                                  :2_2:UnDeeper:
******************* / Aka Token                                                                          :2_2:UnDeeper:
************** \ |?| optional something has returned (Nothing,0)                                              :2_2:UnDeeper:
************* \ slAKA optional akapart has returned (Nothing,0)                                                :2_2:UnDeeper:
************* / |>>/base got Nothing                                                                           :2_2:UnDeeper:
************ \ |>>/base has returned (Nothing,0)                                                                :2_2:UnDeeper:
*********** \ |>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
*********** / |>>                                                                                                :2_2:UnDeeper:
************ / |>>/recurse                                                                                      :2_2:UnDeeper:
************ / |>>/base                                                                                         :2_2:UnDeeper:
************* / slAKA optional typically                                                                       :2_2:UnDeeper:
************** / |?| optional something                                                                       :2_2:UnDeeper:
*************** / |>>                                                                                        :2_2:UnDeeper:
**************** / |>>/recurse                                                                              :2_2:UnDeeper:
**************** / |>>/base                                                                                 :2_2:UnDeeper:
***************** / typically                                                                              :2_2:UnDeeper:
****************** / $>|                                                                                  :2_2:UnDeeper:
************** \ |?| optional something has returned (Nothing,0)                                              :2_2:UnDeeper:
************* \ slAKA optional typically has returned (Nothing,0)                                              :2_2:UnDeeper:
************* / |>>/base got Nothing                                                                           :2_2:UnDeeper:
************ \ |>>/base has returned (Nothing,0)                                                                :2_2:UnDeeper:
*********** \ |>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
*********** / slAKA: proceeding after base and entityalias are retrieved ...                                     :2_2:UnDeeper:
*********** / pAKA: entityalias = Nothing                                                                        :2_2:UnDeeper:
********** \ slAKA has returned (["Bad"],0)                                                                       :2_2:UnDeeper:
********** / undeepers                                                                                            :2_2:UnDeeper:
*********** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                             :2_2:UnDeeper:
*********** / sameLine: success!                                                                                 :2_2:UnDeeper:
********** \ undeepers has returned ()                                                                            :2_2:UnDeeper:
********* \ pAKA has returned ["Bad"]                                                                              :2_2:UnDeeper:
******** \ pMultiTermAka has returned ["Bad"]                                                                       :2_2:UnDeeper:
******* \ manyIndentation/leaf? has returned ["Bad"]                                                                 :2_2:UnDeeper:
******* / myindented: consuming UnDeeper                                                                             :2_2:UnDeeper:
******* \ myindented: consuming UnDeeper has returned UnDeeper                                                    :2_1:Means:
****** \ someIndentation has returned ["Bad"]                                                                      :2_1:Means:
***** \ manyIndentation/deeper; calling someIndentation has returned ["Bad"]                                        :2_1:Means:
**** \ calling myindented pNameParens has returned ["Bad"]                                                           :2_1:Means:
**** / manyIndentation/leaf?                                                                                         :2_1:Means:
***** / permutationsCon: copula=[Means,Includes,Is], positive=[When,If], negative=[Unless], given=[Given]           :2_1:Means:
****** / preambleParamText:[Given]                                                                                 :2_1:Means:
******* / $>|                                                                                                     :2_1:Means:
****** / preambleBoolStructR [Unless]                                                                              :2_1:Means:
****** / preambleBoolStructR [When,If]                                                                             :2_1:Means:
****** / preambleBoolStructR [Means,Includes,Is]                                                                   :2_1:Means:
******* / pBSR                                                                                                     :2_2:GoDeeper:
******** / ppp inner                                                                                              :2_2:GoDeeper:
********* / term p                                                                                               :2_2:GoDeeper:
********** / term p/1a:label directly above                                                                     :2_2:GoDeeper:
*********** / $*|                                                                                              :2_2:GoDeeper:
************ / |:| some                                                                                       :2_2:GoDeeper:
************* / |:| base parser                                                                              :2_2:GoDeeper:
************** / pNumAsText                                                                                 :2_2:GoDeeper:
********** / term p/b:label to the left of line below, with EOL                                                 :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********** / term p/notLabelTerm                                                                                :2_2:GoDeeper:
*********** / term p/2:someIndentation expr p                                                                  :2_2:GoDeeper:
************ / someIndentation                                                                                :2_2:GoDeeper:
************* / myindented: consuming GoDeeper                                                               :2_2:GoDeeper:
************* \ myindented: consuming GoDeeper has returned GoDeeper                                           :2_3:GoDeeper:
************* / manyIndentation/leaf?                                                                          :2_3:GoDeeper:
************** / term p                                                                                       :2_3:GoDeeper:
*************** / term p/1a:label directly above                                                             :2_3:GoDeeper:
**************** / $*|                                                                                      :2_3:GoDeeper:
***************** / |:| some                                                                               :2_3:GoDeeper:
****************** / |:| base parser                                                                      :2_3:GoDeeper:
******************* / pNumAsText                                                                         :2_3:GoDeeper:
*************** / term p/b:label to the left of line below, with EOL                                         :2_3:GoDeeper:
**************** / |:| some                                                                                 :2_3:GoDeeper:
***************** / |:| base parser                                                                        :2_3:GoDeeper:
****************** / pNumAsText                                                                           :2_3:GoDeeper:
*************** / term p/notLabelTerm                                                                        :2_3:GoDeeper:
**************** / term p/2:someIndentation expr p                                                          :2_3:GoDeeper:
***************** / someIndentation                                                                        :2_3:GoDeeper:
****************** / myindented: consuming GoDeeper                                                       :2_3:GoDeeper:
****************** \ myindented: consuming GoDeeper has returned GoDeeper                                   :2_4:GoDeeper:
****************** / manyIndentation/leaf?                                                                  :2_4:GoDeeper:
******************* / term p                                                                               :2_4:GoDeeper:
******************** / term p/1a:label directly above                                                     :2_4:GoDeeper:
********************* / $*|                                                                              :2_4:GoDeeper:
********************** / |:| some                                                                       :2_4:GoDeeper:
*********************** / |:| base parser                                                              :2_4:GoDeeper:
************************ / pNumAsText                                                                 :2_4:GoDeeper:
******************** / term p/b:label to the left of line below, with EOL                                 :2_4:GoDeeper:
********************* / |:| some                                                                         :2_4:GoDeeper:
********************** / |:| base parser                                                                :2_4:GoDeeper:
*********************** / pNumAsText                                                                   :2_4:GoDeeper:
******************** / term p/notLabelTerm                                                                :2_4:GoDeeper:
********************* / term p/2:someIndentation expr p                                                  :2_4:GoDeeper:
********************** / someIndentation                                                                :2_4:GoDeeper:
*********************** / myindented: consuming GoDeeper                                               :2_4:GoDeeper:
*********************** \ myindented: consuming GoDeeper has returned GoDeeper                           :2_5:GoDeeper:
*********************** / manyIndentation/leaf?                                                          :2_5:GoDeeper:
************************ / term p                                                                       :2_5:GoDeeper:
************************* / term p/1a:label directly above                                             :2_5:GoDeeper:
************************** / $*|                                                                      :2_5:GoDeeper:
*************************** / |:| some                                                               :2_5:GoDeeper:
**************************** / |:| base parser                                                      :2_5:GoDeeper:
***************************** / pNumAsText                                                         :2_5:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                         :2_5:GoDeeper:
************************** / |:| some                                                                 :2_5:GoDeeper:
*************************** / |:| base parser                                                        :2_5:GoDeeper:
**************************** / pNumAsText                                                           :2_5:GoDeeper:
************************* / term p/notLabelTerm                                                        :2_5:GoDeeper:
************************** / term p/2:someIndentation expr p                                          :2_5:GoDeeper:
*************************** / someIndentation                                                        :2_5:GoDeeper:
**************************** / myindented: consuming GoDeeper                                       :2_5:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper                  :2_5:Other "acce:
**************************** / manyIndentation/leaf?                                                 :2_5:Other "acce:
***************************** / term p                                                              :2_5:Other "acce:
****************************** / term p/1a:label directly above                                    :2_5:Other "acce:
******************************* / $*|                                                             :2_5:Other "acce:
******************************** / |:| some                                                      :2_5:Other "acce:
********************************* / |:| base parser                                             :2_5:Other "acce:
********************************* \ |:| base parser has returned ("access",0)                    :3_5:UnDeeper:
********************************* / |:| deeper                                                   :3_5:UnDeeper:
********************************** / |:| some GoDeeper                                          :3_5:UnDeeper:
********************************* / |:| noMore                                                   :3_5:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                               :3_5:UnDeeper:
******************************** \ |:| some has returned (["access"],0)                           :3_5:UnDeeper:
******************************** / pNumAsText                                                     :3_5:UnDeeper:
****************************** / term p/b:label to the left of line below, with EOL                :2_5:Other "acce:
******************************* / |:| some                                                        :2_5:Other "acce:
******************************** / |:| base parser                                               :2_5:Other "acce:
******************************** \ |:| base parser has returned ("access",0)                      :3_5:UnDeeper:
******************************** / |:| deeper                                                     :3_5:UnDeeper:
********************************* / |:| some GoDeeper                                            :3_5:UnDeeper:
******************************** / |:| noMore                                                     :3_5:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                                 :3_5:UnDeeper:
******************************* \ |:| some has returned (["access"],0)                             :3_5:UnDeeper:
******************************* / undeepers                                                        :3_5:UnDeeper:
******************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :3_5:UnDeeper:
******************************** / sameLine: success!                                             :3_5:UnDeeper:
******************************* \ undeepers has returned ()                                        :3_5:UnDeeper:
******************************* / matching EOL                                                     :3_5:UnDeeper:
****************************** / term p/notLabelTerm                                               :2_5:Other "acce:
******************************* / term p/2:someIndentation expr p                                 :2_5:Other "acce:
******************************** / someIndentation                                               :2_5:Other "acce:
********************************* / myindented: consuming GoDeeper                              :2_5:Other "acce:
******************************* / term p/3:plain p                                                :2_5:Other "acce:
******************************** / pRelPred                                                      :2_5:Other "acce:
********************************* / slRelPred                                                   :2_5:Other "acce:
********************************** / nested simpleHorn                                         :2_5:Other "acce:
*********************************** / |^|                                                     :2_5:Other "acce:
*********************************** / $*|                                                     :2_5:Other "acce:
************************************ / slMultiTerm                                           :2_5:Other "acce:
************************************* / |:| some                                            :2_5:Other "acce:
************************************** / |:| base parser                                   :2_5:Other "acce:
************************************** \ |:| base parser has returned ("access",0)          :3_5:UnDeeper:
************************************** / |:| deeper                                         :3_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :3_5:UnDeeper:
************************************** / |:| noMore                                         :3_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :3_5:UnDeeper:
************************************* \ |:| some has returned (["access"],0)                 :3_5:UnDeeper:
************************************ \ slMultiTerm has returned (["access"],0)                :3_5:UnDeeper:
*********************************** \ $*| has returned (["access"],0)                          :3_5:UnDeeper:
*********************************** / |^| deeps                                                :3_5:UnDeeper:
*********************************** \ |^| deeps has returned [UnDeeper]                     :3_4:Or:
********************************** / RPConstraint                                              :2_5:Other "acce:
*********************************** / $*|                                                     :2_5:Other "acce:
************************************ / slMultiTerm                                           :2_5:Other "acce:
************************************* / |:| some                                            :2_5:Other "acce:
************************************** / |:| base parser                                   :2_5:Other "acce:
************************************** \ |:| base parser has returned ("access",0)          :3_5:UnDeeper:
************************************** / |:| deeper                                         :3_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :3_5:UnDeeper:
************************************** / |:| noMore                                         :3_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :3_5:UnDeeper:
************************************* \ |:| some has returned (["access"],0)                 :3_5:UnDeeper:
************************************ \ slMultiTerm has returned (["access"],0)                :3_5:UnDeeper:
*********************************** \ $*| has returned (["access"],0)                          :3_5:UnDeeper:
*********************************** / |>| calling $>>                                          :3_5:UnDeeper:
************************************ / $>>                                                    :3_5:UnDeeper:
************************************* / $>>/recurse                                          :3_5:UnDeeper:
************************************* / $>>/base                                             :3_5:UnDeeper:
********************************** / RPBoolStructR                                             :2_5:Other "acce:
*********************************** / $*|                                                     :2_5:Other "acce:
************************************ / slMultiTerm                                           :2_5:Other "acce:
************************************* / |:| some                                            :2_5:Other "acce:
************************************** / |:| base parser                                   :2_5:Other "acce:
************************************** \ |:| base parser has returned ("access",0)          :3_5:UnDeeper:
************************************** / |:| deeper                                         :3_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :3_5:UnDeeper:
************************************** / |:| noMore                                         :3_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :3_5:UnDeeper:
************************************* \ |:| some has returned (["access"],0)                 :3_5:UnDeeper:
************************************ \ slMultiTerm has returned (["access"],0)                :3_5:UnDeeper:
*********************************** \ $*| has returned (["access"],0)                          :3_5:UnDeeper:
*********************************** / |>| calling $>>                                          :3_5:UnDeeper:
************************************ / $>>                                                    :3_5:UnDeeper:
************************************* / $>>/recurse                                          :3_5:UnDeeper:
************************************* / $>>/base                                             :3_5:UnDeeper:
********************************** / RPMT                                                      :2_5:Other "acce:
*********************************** / $*|                                                     :2_5:Other "acce:
************************************ / slAKA                                                 :2_5:Other "acce:
************************************* / $*|                                                 :2_5:Other "acce:
************************************** / slAKA base                                        :2_5:Other "acce:
*************************************** / slMultiTerm                                     :2_5:Other "acce:
**************************************** / |:| some                                      :2_5:Other "acce:
***************************************** / |:| base parser                             :2_5:Other "acce:
***************************************** \ |:| base parser has returned ("access",0)    :3_5:UnDeeper:
***************************************** / |:| deeper                                   :3_5:UnDeeper:
****************************************** / |:| some GoDeeper                          :3_5:UnDeeper:
***************************************** / |:| noMore                                   :3_5:UnDeeper:
***************************************** \ |:| noMore has returned ([],0)               :3_5:UnDeeper:
**************************************** \ |:| some has returned (["access"],0)           :3_5:UnDeeper:
*************************************** \ slMultiTerm has returned (["access"],0)          :3_5:UnDeeper:
************************************** \ slAKA base has returned (["access"],0)             :3_5:UnDeeper:
************************************* \ $*| has returned (["access"],0)                      :3_5:UnDeeper:
************************************* / |>>                                                  :3_5:UnDeeper:
************************************** / |>>/recurse                                        :3_5:UnDeeper:
************************************** / |>>/base                                           :3_5:UnDeeper:
*************************************** / slAKA optional akapart                           :3_5:UnDeeper:
**************************************** / |?| optional something                         :3_5:UnDeeper:
***************************************** / |>>                                          :3_5:UnDeeper:
****************************************** / |>>/recurse                                :3_5:UnDeeper:
****************************************** / |>>/base                                   :3_5:UnDeeper:
******************************************* / PAKA/akapart                             :3_5:UnDeeper:
******************************************** / $>|                                    :3_5:UnDeeper:
********************************************* / Aka Token                            :3_5:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :3_5:UnDeeper:
*************************************** \ slAKA optional akapart has returned (Nothing,0)  :3_5:UnDeeper:
*************************************** / |>>/base got Nothing                             :3_5:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)                  :3_5:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                         :3_5:UnDeeper:
************************************* / |>>                                                  :3_5:UnDeeper:
************************************** / |>>/recurse                                        :3_5:UnDeeper:
************************************** / |>>/base                                           :3_5:UnDeeper:
*************************************** / slAKA optional typically                         :3_5:UnDeeper:
**************************************** / |?| optional something                         :3_5:UnDeeper:
***************************************** / |>>                                          :3_5:UnDeeper:
****************************************** / |>>/recurse                                :3_5:UnDeeper:
****************************************** / |>>/base                                   :3_5:UnDeeper:
******************************************* / typically                                :3_5:UnDeeper:
******************************************** / $>|                                    :3_5:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :3_5:UnDeeper:
*************************************** \ slAKA optional typically has returned (Nothing,0) :3_5:UnDeeper:
*************************************** / |>>/base got Nothing                             :3_5:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)                  :3_5:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                         :3_5:UnDeeper:
************************************* / slAKA: proceeding after base and entityalias are retrieved ... :3_5:UnDeeper:
************************************* / pAKA: entityalias = Nothing                          :3_5:UnDeeper:
************************************ \ slAKA has returned (["access"],0)                      :3_5:UnDeeper:
*********************************** \ $*| has returned (["access"],0)                          :3_5:UnDeeper:
********************************** \ RPMT has returned (RPMT ["access"],0)                      :3_5:UnDeeper:
********************************* \ slRelPred has returned (RPMT ["access"],0)                   :3_5:UnDeeper:
********************************* / undeepers                                                    :3_5:UnDeeper:
********************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :3_5:UnDeeper:
********************************** / sameLine: success!                                         :3_5:UnDeeper:
********************************* \ undeepers has returned ()                                    :3_5:UnDeeper:
******************************** \ pRelPred has returned RPMT ["access"]                          :3_5:UnDeeper:
******************************* \ term p/3:plain p has returned MyLeaf (RPMT ["access"])           :3_5:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])          :3_5:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["access"])                         :3_5:UnDeeper:
***************************** / binary(Or)                                                           :3_5:UnDeeper:
***************************** / binary(And)                                                          :3_5:UnDeeper:
***************************** / binary(SetLess)                                                      :3_5:UnDeeper:
***************************** / binary(SetPlus)                                                      :3_5:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["access"])            :3_5:UnDeeper:
**************************** / myindented: consuming UnDeeper                                         :3_5:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                :3_4:Or:
*************************** \ someIndentation has returned MyLeaf (RPMT ["access"])                 :3_4:Or:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["access"])   :3_4:Or:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["access"])                 :3_4:Or:
************************ \ term p has returned MyLeaf (RPMT ["access"])                                :3_4:Or:
************************ / binary(Or)                                                                  :3_4:Or:
************************ \ binary(Or) has returned Or                                                   :3_5:GoDeeper:
************************ / term p                                                                       :3_5:GoDeeper:
************************* / term p/1a:label directly above                                             :3_5:GoDeeper:
************************** / $*|                                                                      :3_5:GoDeeper:
*************************** / |:| some                                                               :3_5:GoDeeper:
**************************** / |:| base parser                                                      :3_5:GoDeeper:
***************************** / pNumAsText                                                         :3_5:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                         :3_5:GoDeeper:
************************** / |:| some                                                                 :3_5:GoDeeper:
*************************** / |:| base parser                                                        :3_5:GoDeeper:
**************************** / pNumAsText                                                           :3_5:GoDeeper:
************************* / term p/notLabelTerm                                                        :3_5:GoDeeper:
************************** / term p/2:someIndentation expr p                                          :3_5:GoDeeper:
*************************** / someIndentation                                                        :3_5:GoDeeper:
**************************** / myindented: consuming GoDeeper                                       :3_5:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper                   :3_6:GoDeeper:
**************************** / manyIndentation/leaf?                                                  :3_6:GoDeeper:
***************************** / term p                                                               :3_6:GoDeeper:
****************************** / term p/1a:label directly above                                     :3_6:GoDeeper:
******************************* / $*|                                                              :3_6:GoDeeper:
******************************** / |:| some                                                       :3_6:GoDeeper:
********************************* / |:| base parser                                              :3_6:GoDeeper:
********************************** / pNumAsText                                                 :3_6:GoDeeper:
****************************** / term p/b:label to the left of line below, with EOL                 :3_6:GoDeeper:
******************************* / |:| some                                                         :3_6:GoDeeper:
******************************** / |:| base parser                                                :3_6:GoDeeper:
********************************* / pNumAsText                                                   :3_6:GoDeeper:
****************************** / term p/notLabelTerm                                                :3_6:GoDeeper:
******************************* / term p/2:someIndentation expr p                                  :3_6:GoDeeper:
******************************** / someIndentation                                                :3_6:GoDeeper:
********************************* / myindented: consuming GoDeeper                               :3_6:GoDeeper:
********************************* \ myindented: consuming GoDeeper has returned GoDeeper          :3_6:Other "use":
********************************* / manyIndentation/leaf?                                         :3_6:Other "use":
********************************** / term p                                                      :3_6:Other "use":
*********************************** / term p/1a:label directly above                            :3_6:Other "use":
************************************ / $*|                                                     :3_6:Other "use":
************************************* / |:| some                                              :3_6:Other "use":
************************************** / |:| base parser                                     :3_6:Other "use":
************************************** \ |:| base parser has returned ("use",0)             :4_5:UnDeeper:
************************************** / |:| deeper                                         :4_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :4_5:UnDeeper:
************************************** / |:| noMore                                         :4_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :4_5:UnDeeper:
************************************* \ |:| some has returned (["use"],0)                    :4_5:UnDeeper:
************************************* / pNumAsText                                           :4_5:UnDeeper:
*********************************** / term p/b:label to the left of line below, with EOL        :3_6:Other "use":
************************************ / |:| some                                                :3_6:Other "use":
************************************* / |:| base parser                                       :3_6:Other "use":
************************************* \ |:| base parser has returned ("use",0)               :4_5:UnDeeper:
************************************* / |:| deeper                                           :4_5:UnDeeper:
************************************** / |:| some GoDeeper                                  :4_5:UnDeeper:
************************************* / |:| noMore                                           :4_5:UnDeeper:
************************************* \ |:| noMore has returned ([],0)                       :4_5:UnDeeper:
************************************ \ |:| some has returned (["use"],0)                      :4_5:UnDeeper:
************************************ / undeepers                                              :4_5:UnDeeper:
************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :4_5:UnDeeper:
************************************* / sameLine: success!                                   :4_5:UnDeeper:
************************************ \ undeepers has returned ()                              :4_5:UnDeeper:
************************************ / matching EOL                                           :4_5:UnDeeper:
*********************************** / term p/notLabelTerm                                       :3_6:Other "use":
************************************ / term p/2:someIndentation expr p                         :3_6:Other "use":
************************************* / someIndentation                                       :3_6:Other "use":
************************************** / myindented: consuming GoDeeper                      :3_6:Other "use":
************************************ / term p/3:plain p                                        :3_6:Other "use":
************************************* / pRelPred                                              :3_6:Other "use":
************************************** / slRelPred                                           :3_6:Other "use":
*************************************** / nested simpleHorn                                 :3_6:Other "use":
**************************************** / |^|                                             :3_6:Other "use":
**************************************** / $*|                                             :3_6:Other "use":
***************************************** / slMultiTerm                                   :3_6:Other "use":
****************************************** / |:| some                                    :3_6:Other "use":
******************************************* / |:| base parser                           :3_6:Other "use":
******************************************* \ |:| base parser has returned ("use",0)   :4_5:UnDeeper:
******************************************* / |:| deeper                               :4_5:UnDeeper:
******************************************** / |:| some GoDeeper                      :4_5:UnDeeper:
******************************************* / |:| noMore                               :4_5:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)           :4_5:UnDeeper:
****************************************** \ |:| some has returned (["use"],0)          :4_5:UnDeeper:
***************************************** \ slMultiTerm has returned (["use"],0)         :4_5:UnDeeper:
**************************************** \ $*| has returned (["use"],0)                   :4_5:UnDeeper:
**************************************** / |^| deeps                                      :4_5:UnDeeper:
**************************************** \ |^| deeps has returned [UnDeeper,UnDeeper]  :4_4:Or:
*************************************** / RPConstraint                                      :3_6:Other "use":
**************************************** / $*|                                             :3_6:Other "use":
***************************************** / slMultiTerm                                   :3_6:Other "use":
****************************************** / |:| some                                    :3_6:Other "use":
******************************************* / |:| base parser                           :3_6:Other "use":
******************************************* \ |:| base parser has returned ("use",0)   :4_5:UnDeeper:
******************************************* / |:| deeper                               :4_5:UnDeeper:
******************************************** / |:| some GoDeeper                      :4_5:UnDeeper:
******************************************* / |:| noMore                               :4_5:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)           :4_5:UnDeeper:
****************************************** \ |:| some has returned (["use"],0)          :4_5:UnDeeper:
***************************************** \ slMultiTerm has returned (["use"],0)         :4_5:UnDeeper:
**************************************** \ $*| has returned (["use"],0)                   :4_5:UnDeeper:
**************************************** / |>| calling $>>                                :4_5:UnDeeper:
***************************************** / $>>                                          :4_5:UnDeeper:
****************************************** / $>>/recurse                                :4_5:UnDeeper:
****************************************** / $>>/base                                   :4_5:UnDeeper:
*************************************** / RPBoolStructR                                     :3_6:Other "use":
**************************************** / $*|                                             :3_6:Other "use":
***************************************** / slMultiTerm                                   :3_6:Other "use":
****************************************** / |:| some                                    :3_6:Other "use":
******************************************* / |:| base parser                           :3_6:Other "use":
******************************************* \ |:| base parser has returned ("use",0)   :4_5:UnDeeper:
******************************************* / |:| deeper                               :4_5:UnDeeper:
******************************************** / |:| some GoDeeper                      :4_5:UnDeeper:
******************************************* / |:| noMore                               :4_5:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)           :4_5:UnDeeper:
****************************************** \ |:| some has returned (["use"],0)          :4_5:UnDeeper:
***************************************** \ slMultiTerm has returned (["use"],0)         :4_5:UnDeeper:
**************************************** \ $*| has returned (["use"],0)                   :4_5:UnDeeper:
**************************************** / |>| calling $>>                                :4_5:UnDeeper:
***************************************** / $>>                                          :4_5:UnDeeper:
****************************************** / $>>/recurse                                :4_5:UnDeeper:
****************************************** / $>>/base                                   :4_5:UnDeeper:
*************************************** / RPMT                                              :3_6:Other "use":
**************************************** / $*|                                             :3_6:Other "use":
***************************************** / slAKA                                         :3_6:Other "use":
****************************************** / $*|                                         :3_6:Other "use":
******************************************* / slAKA base                                :3_6:Other "use":
******************************************** / slMultiTerm                             :3_6:Other "use":
********************************************* / |:| some                              :3_6:Other "use":
********************************************** / |:| base parser                     :3_6:Other "use":
********************************************** \ |:| base parser has returned ("use",0) :4_5:UnDeeper:
********************************************** / |:| deeper                         :4_5:UnDeeper:
*********************************************** / |:| some GoDeeper                :4_5:UnDeeper:
********************************************** / |:| noMore                         :4_5:UnDeeper:
********************************************** \ |:| noMore has returned ([],0)     :4_5:UnDeeper:
********************************************* \ |:| some has returned (["use"],0)    :4_5:UnDeeper:
******************************************** \ slMultiTerm has returned (["use"],0)   :4_5:UnDeeper:
******************************************* \ slAKA base has returned (["use"],0)      :4_5:UnDeeper:
****************************************** \ $*| has returned (["use"],0)               :4_5:UnDeeper:
****************************************** / |>>                                        :4_5:UnDeeper:
******************************************* / |>>/recurse                              :4_5:UnDeeper:
******************************************* / |>>/base                                 :4_5:UnDeeper:
******************************************** / slAKA optional akapart                 :4_5:UnDeeper:
********************************************* / |?| optional something               :4_5:UnDeeper:
********************************************** / |>>                                :4_5:UnDeeper:
*********************************************** / |>>/recurse                      :4_5:UnDeeper:
*********************************************** / |>>/base                         :4_5:UnDeeper:
************************************************ / PAKA/akapart                   :4_5:UnDeeper:
************************************************* / $>|                          :4_5:UnDeeper:
************************************************** / Aka Token                  :4_5:UnDeeper:
********************************************* \ |?| optional something has returned (Nothing,0) :4_5:UnDeeper:
******************************************** \ slAKA optional akapart has returned (Nothing,0) :4_5:UnDeeper:
******************************************** / |>>/base got Nothing                   :4_5:UnDeeper:
******************************************* \ |>>/base has returned (Nothing,0)        :4_5:UnDeeper:
****************************************** \ |>> has returned (Nothing,0)               :4_5:UnDeeper:
****************************************** / |>>                                        :4_5:UnDeeper:
******************************************* / |>>/recurse                              :4_5:UnDeeper:
******************************************* / |>>/base                                 :4_5:UnDeeper:
******************************************** / slAKA optional typically               :4_5:UnDeeper:
********************************************* / |?| optional something               :4_5:UnDeeper:
********************************************** / |>>                                :4_5:UnDeeper:
*********************************************** / |>>/recurse                      :4_5:UnDeeper:
*********************************************** / |>>/base                         :4_5:UnDeeper:
************************************************ / typically                      :4_5:UnDeeper:
************************************************* / $>|                          :4_5:UnDeeper:
********************************************* \ |?| optional something has returned (Nothing,0) :4_5:UnDeeper:
******************************************** \ slAKA optional typically has returned (Nothing,0) :4_5:UnDeeper:
******************************************** / |>>/base got Nothing                   :4_5:UnDeeper:
******************************************* \ |>>/base has returned (Nothing,0)        :4_5:UnDeeper:
****************************************** \ |>> has returned (Nothing,0)               :4_5:UnDeeper:
****************************************** / slAKA: proceeding after base and entityalias are retrieved ... :4_5:UnDeeper:
****************************************** / pAKA: entityalias = Nothing                :4_5:UnDeeper:
***************************************** \ slAKA has returned (["use"],0)               :4_5:UnDeeper:
**************************************** \ $*| has returned (["use"],0)                   :4_5:UnDeeper:
*************************************** \ RPMT has returned (RPMT ["use"],0)               :4_5:UnDeeper:
************************************** \ slRelPred has returned (RPMT ["use"],0)            :4_5:UnDeeper:
************************************** / undeepers                                          :4_5:UnDeeper:
*************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :4_5:UnDeeper:
*************************************** / sameLine: success!                               :4_5:UnDeeper:
************************************** \ undeepers has returned ()                          :4_5:UnDeeper:
************************************* \ pRelPred has returned RPMT ["use"]                   :4_5:UnDeeper:
************************************ \ term p/3:plain p has returned MyLeaf (RPMT ["use"])    :4_5:UnDeeper:
*********************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])   :4_5:UnDeeper:
********************************** \ term p has returned MyLeaf (RPMT ["use"])                  :4_5:UnDeeper:
********************************** / binary(Or)                                                 :4_5:UnDeeper:
********************************** / binary(And)                                                :4_5:UnDeeper:
********************************** / binary(SetLess)                                            :4_5:UnDeeper:
********************************** / binary(SetPlus)                                            :4_5:UnDeeper:
********************************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["use"])     :4_5:UnDeeper:
********************************* / myindented: consuming UnDeeper                               :4_5:UnDeeper:
********************************* \ myindented: consuming UnDeeper has returned UnDeeper           :4_6:UnDeeper:
******************************** \ someIndentation has returned MyLeaf (RPMT ["use"])               :4_6:UnDeeper:
******************************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["use"]) :4_6:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])               :4_6:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["use"])                              :4_6:UnDeeper:
***************************** / binary(Or)                                                             :4_6:UnDeeper:
***************************** / binary(And)                                                            :4_6:UnDeeper:
***************************** / binary(SetLess)                                                        :4_6:UnDeeper:
***************************** / binary(SetPlus)                                                        :4_6:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["use"])                 :4_6:UnDeeper:
**************************** / myindented: consuming UnDeeper                                           :4_6:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                :4_4:Or:
*************************** \ someIndentation has returned MyLeaf (RPMT ["use"])                    :4_4:Or:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["use"])      :4_4:Or:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["use"])                    :4_4:Or:
************************ \ term p has returned MyLeaf (RPMT ["use"])                                   :4_4:Or:
************************ / binary(Or)                                                                  :4_4:Or:
************************ \ binary(Or) has returned Or                                                   :4_5:GoDeeper:
************************ / term p                                                                       :4_5:GoDeeper:
************************* / term p/1a:label directly above                                             :4_5:GoDeeper:
************************** / $*|                                                                      :4_5:GoDeeper:
*************************** / |:| some                                                               :4_5:GoDeeper:
**************************** / |:| base parser                                                      :4_5:GoDeeper:
***************************** / pNumAsText                                                         :4_5:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                         :4_5:GoDeeper:
************************** / |:| some                                                                 :4_5:GoDeeper:
*************************** / |:| base parser                                                        :4_5:GoDeeper:
**************************** / pNumAsText                                                           :4_5:GoDeeper:
************************* / term p/notLabelTerm                                                        :4_5:GoDeeper:
************************** / term p/2:someIndentation expr p                                          :4_5:GoDeeper:
*************************** / someIndentation                                                        :4_5:GoDeeper:
**************************** / myindented: consuming GoDeeper                                       :4_5:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper                  :4_5:Other "disc:
**************************** / manyIndentation/leaf?                                                 :4_5:Other "disc:
***************************** / term p                                                              :4_5:Other "disc:
****************************** / term p/1a:label directly above                                    :4_5:Other "disc:
******************************* / $*|                                                             :4_5:Other "disc:
******************************** / |:| some                                                      :4_5:Other "disc:
********************************* / |:| base parser                                             :4_5:Other "disc:
********************************* \ |:| base parser has returned ("disclosure",0)                :5_5:UnDeeper:
********************************* / |:| deeper                                                   :5_5:UnDeeper:
********************************** / |:| some GoDeeper                                          :5_5:UnDeeper:
********************************* / |:| noMore                                                   :5_5:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                               :5_5:UnDeeper:
******************************** \ |:| some has returned (["disclosure"],0)                       :5_5:UnDeeper:
******************************** / pNumAsText                                                     :5_5:UnDeeper:
****************************** / term p/b:label to the left of line below, with EOL                :4_5:Other "disc:
******************************* / |:| some                                                        :4_5:Other "disc:
******************************** / |:| base parser                                               :4_5:Other "disc:
******************************** \ |:| base parser has returned ("disclosure",0)                  :5_5:UnDeeper:
******************************** / |:| deeper                                                     :5_5:UnDeeper:
********************************* / |:| some GoDeeper                                            :5_5:UnDeeper:
******************************** / |:| noMore                                                     :5_5:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                                 :5_5:UnDeeper:
******************************* \ |:| some has returned (["disclosure"],0)                         :5_5:UnDeeper:
******************************* / undeepers                                                        :5_5:UnDeeper:
******************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_5:UnDeeper:
******************************** / sameLine: success!                                             :5_5:UnDeeper:
******************************* \ undeepers has returned ()                                        :5_5:UnDeeper:
******************************* / matching EOL                                                     :5_5:UnDeeper:
****************************** / term p/notLabelTerm                                               :4_5:Other "disc:
******************************* / term p/2:someIndentation expr p                                 :4_5:Other "disc:
******************************** / someIndentation                                               :4_5:Other "disc:
********************************* / myindented: consuming GoDeeper                              :4_5:Other "disc:
******************************* / term p/3:plain p                                                :4_5:Other "disc:
******************************** / pRelPred                                                      :4_5:Other "disc:
********************************* / slRelPred                                                   :4_5:Other "disc:
********************************** / nested simpleHorn                                         :4_5:Other "disc:
*********************************** / |^|                                                     :4_5:Other "disc:
*********************************** / $*|                                                     :4_5:Other "disc:
************************************ / slMultiTerm                                           :4_5:Other "disc:
************************************* / |:| some                                            :4_5:Other "disc:
************************************** / |:| base parser                                   :4_5:Other "disc:
************************************** \ |:| base parser has returned ("disclosure",0)      :5_5:UnDeeper:
************************************** / |:| deeper                                         :5_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :5_5:UnDeeper:
************************************** / |:| noMore                                         :5_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :5_5:UnDeeper:
************************************* \ |:| some has returned (["disclosure"],0)             :5_5:UnDeeper:
************************************ \ slMultiTerm has returned (["disclosure"],0)            :5_5:UnDeeper:
*********************************** \ $*| has returned (["disclosure"],0)                      :5_5:UnDeeper:
*********************************** / |^| deeps                                                :5_5:UnDeeper:
*********************************** \ |^| deeps has returned [UnDeeper]                     :5_4:Or:
********************************** / RPConstraint                                              :4_5:Other "disc:
*********************************** / $*|                                                     :4_5:Other "disc:
************************************ / slMultiTerm                                           :4_5:Other "disc:
************************************* / |:| some                                            :4_5:Other "disc:
************************************** / |:| base parser                                   :4_5:Other "disc:
************************************** \ |:| base parser has returned ("disclosure",0)      :5_5:UnDeeper:
************************************** / |:| deeper                                         :5_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :5_5:UnDeeper:
************************************** / |:| noMore                                         :5_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :5_5:UnDeeper:
************************************* \ |:| some has returned (["disclosure"],0)             :5_5:UnDeeper:
************************************ \ slMultiTerm has returned (["disclosure"],0)            :5_5:UnDeeper:
*********************************** \ $*| has returned (["disclosure"],0)                      :5_5:UnDeeper:
*********************************** / |>| calling $>>                                          :5_5:UnDeeper:
************************************ / $>>                                                    :5_5:UnDeeper:
************************************* / $>>/recurse                                          :5_5:UnDeeper:
************************************* / $>>/base                                             :5_5:UnDeeper:
********************************** / RPBoolStructR                                             :4_5:Other "disc:
*********************************** / $*|                                                     :4_5:Other "disc:
************************************ / slMultiTerm                                           :4_5:Other "disc:
************************************* / |:| some                                            :4_5:Other "disc:
************************************** / |:| base parser                                   :4_5:Other "disc:
************************************** \ |:| base parser has returned ("disclosure",0)      :5_5:UnDeeper:
************************************** / |:| deeper                                         :5_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :5_5:UnDeeper:
************************************** / |:| noMore                                         :5_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :5_5:UnDeeper:
************************************* \ |:| some has returned (["disclosure"],0)             :5_5:UnDeeper:
************************************ \ slMultiTerm has returned (["disclosure"],0)            :5_5:UnDeeper:
*********************************** \ $*| has returned (["disclosure"],0)                      :5_5:UnDeeper:
*********************************** / |>| calling $>>                                          :5_5:UnDeeper:
************************************ / $>>                                                    :5_5:UnDeeper:
************************************* / $>>/recurse                                          :5_5:UnDeeper:
************************************* / $>>/base                                             :5_5:UnDeeper:
********************************** / RPMT                                                      :4_5:Other "disc:
*********************************** / $*|                                                     :4_5:Other "disc:
************************************ / slAKA                                                 :4_5:Other "disc:
************************************* / $*|                                                 :4_5:Other "disc:
************************************** / slAKA base                                        :4_5:Other "disc:
*************************************** / slMultiTerm                                     :4_5:Other "disc:
**************************************** / |:| some                                      :4_5:Other "disc:
***************************************** / |:| base parser                             :4_5:Other "disc:
***************************************** \ |:| base parser has returned ("disclosure",0) :5_5:UnDeeper:
***************************************** / |:| deeper                                   :5_5:UnDeeper:
****************************************** / |:| some GoDeeper                          :5_5:UnDeeper:
***************************************** / |:| noMore                                   :5_5:UnDeeper:
***************************************** \ |:| noMore has returned ([],0)               :5_5:UnDeeper:
**************************************** \ |:| some has returned (["disclosure"],0)       :5_5:UnDeeper:
*************************************** \ slMultiTerm has returned (["disclosure"],0)      :5_5:UnDeeper:
************************************** \ slAKA base has returned (["disclosure"],0)         :5_5:UnDeeper:
************************************* \ $*| has returned (["disclosure"],0)                  :5_5:UnDeeper:
************************************* / |>>                                                  :5_5:UnDeeper:
************************************** / |>>/recurse                                        :5_5:UnDeeper:
************************************** / |>>/base                                           :5_5:UnDeeper:
*************************************** / slAKA optional akapart                           :5_5:UnDeeper:
**************************************** / |?| optional something                         :5_5:UnDeeper:
***************************************** / |>>                                          :5_5:UnDeeper:
****************************************** / |>>/recurse                                :5_5:UnDeeper:
****************************************** / |>>/base                                   :5_5:UnDeeper:
******************************************* / PAKA/akapart                             :5_5:UnDeeper:
******************************************** / $>|                                    :5_5:UnDeeper:
********************************************* / Aka Token                            :5_5:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :5_5:UnDeeper:
*************************************** \ slAKA optional akapart has returned (Nothing,0)  :5_5:UnDeeper:
*************************************** / |>>/base got Nothing                             :5_5:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)                  :5_5:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                         :5_5:UnDeeper:
************************************* / |>>                                                  :5_5:UnDeeper:
************************************** / |>>/recurse                                        :5_5:UnDeeper:
************************************** / |>>/base                                           :5_5:UnDeeper:
*************************************** / slAKA optional typically                         :5_5:UnDeeper:
**************************************** / |?| optional something                         :5_5:UnDeeper:
***************************************** / |>>                                          :5_5:UnDeeper:
****************************************** / |>>/recurse                                :5_5:UnDeeper:
****************************************** / |>>/base                                   :5_5:UnDeeper:
******************************************* / typically                                :5_5:UnDeeper:
******************************************** / $>|                                    :5_5:UnDeeper:
**************************************** \ |?| optional something has returned (Nothing,0) :5_5:UnDeeper:
*************************************** \ slAKA optional typically has returned (Nothing,0) :5_5:UnDeeper:
*************************************** / |>>/base got Nothing                             :5_5:UnDeeper:
************************************** \ |>>/base has returned (Nothing,0)                  :5_5:UnDeeper:
************************************* \ |>> has returned (Nothing,0)                         :5_5:UnDeeper:
************************************* / slAKA: proceeding after base and entityalias are retrieved ... :5_5:UnDeeper:
************************************* / pAKA: entityalias = Nothing                          :5_5:UnDeeper:
************************************ \ slAKA has returned (["disclosure"],0)                  :5_5:UnDeeper:
*********************************** \ $*| has returned (["disclosure"],0)                      :5_5:UnDeeper:
********************************** \ RPMT has returned (RPMT ["disclosure"],0)                  :5_5:UnDeeper:
********************************* \ slRelPred has returned (RPMT ["disclosure"],0)               :5_5:UnDeeper:
********************************* / undeepers                                                    :5_5:UnDeeper:
********************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :5_5:UnDeeper:
********************************** / sameLine: success!                                         :5_5:UnDeeper:
********************************* \ undeepers has returned ()                                    :5_5:UnDeeper:
******************************** \ pRelPred has returned RPMT ["disclosure"]                      :5_5:UnDeeper:
******************************* \ term p/3:plain p has returned MyLeaf (RPMT ["disclosure"])       :5_5:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])      :5_5:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["disclosure"])                     :5_5:UnDeeper:
***************************** / binary(Or)                                                           :5_5:UnDeeper:
***************************** / binary(And)                                                          :5_5:UnDeeper:
***************************** / binary(SetLess)                                                      :5_5:UnDeeper:
***************************** / binary(SetPlus)                                                      :5_5:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["disclosure"])        :5_5:UnDeeper:
**************************** / myindented: consuming UnDeeper                                         :5_5:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                :5_4:Or:
*************************** \ someIndentation has returned MyLeaf (RPMT ["disclosure"])             :5_4:Or:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["disclosure"]) :5_4:Or:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["disclosure"])             :5_4:Or:
************************ \ term p has returned MyLeaf (RPMT ["disclosure"])                            :5_4:Or:
************************ / binary(Or)                                                                  :5_4:Or:
************************ \ binary(Or) has returned Or                                                   :5_5:GoDeeper:
************************ / term p                                                                       :5_5:GoDeeper:
************************* / term p/1a:label directly above                                             :5_5:GoDeeper:
************************** / $*|                                                                      :5_5:GoDeeper:
*************************** / |:| some                                                               :5_5:GoDeeper:
**************************** / |:| base parser                                                      :5_5:GoDeeper:
***************************** / pNumAsText                                                         :5_5:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                         :5_5:GoDeeper:
************************** / |:| some                                                                 :5_5:GoDeeper:
*************************** / |:| base parser                                                        :5_5:GoDeeper:
**************************** / pNumAsText                                                           :5_5:GoDeeper:
************************* / term p/notLabelTerm                                                        :5_5:GoDeeper:
************************** / term p/2:someIndentation expr p                                          :5_5:GoDeeper:
*************************** / someIndentation                                                        :5_5:GoDeeper:
**************************** / myindented: consuming GoDeeper                                       :5_5:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper                   :5_6:GoDeeper:
**************************** / manyIndentation/leaf?                                                  :5_6:GoDeeper:
***************************** / term p                                                               :5_6:GoDeeper:
****************************** / term p/1a:label directly above                                     :5_6:GoDeeper:
******************************* / $*|                                                              :5_6:GoDeeper:
******************************** / |:| some                                                       :5_6:GoDeeper:
********************************* / |:| base parser                                              :5_6:GoDeeper:
********************************** / pNumAsText                                                 :5_6:GoDeeper:
****************************** / term p/b:label to the left of line below, with EOL                 :5_6:GoDeeper:
******************************* / |:| some                                                         :5_6:GoDeeper:
******************************** / |:| base parser                                                :5_6:GoDeeper:
********************************* / pNumAsText                                                   :5_6:GoDeeper:
****************************** / term p/notLabelTerm                                                :5_6:GoDeeper:
******************************* / term p/2:someIndentation expr p                                  :5_6:GoDeeper:
******************************** / someIndentation                                                :5_6:GoDeeper:
********************************* / myindented: consuming GoDeeper                               :5_6:GoDeeper:
********************************* \ myindented: consuming GoDeeper has returned GoDeeper          :5_6:Other "copy:
********************************* / manyIndentation/leaf?                                         :5_6:Other "copy:
********************************** / term p                                                      :5_6:Other "copy:
*********************************** / term p/1a:label directly above                            :5_6:Other "copy:
************************************ / $*|                                                     :5_6:Other "copy:
************************************* / |:| some                                              :5_6:Other "copy:
************************************** / |:| base parser                                     :5_6:Other "copy:
************************************** \ |:| base parser has returned ("copying",0)         :6_5:UnDeeper:
************************************** / |:| deeper                                         :6_5:UnDeeper:
*************************************** / |:| some GoDeeper                                :6_5:UnDeeper:
************************************** / |:| noMore                                         :6_5:UnDeeper:
************************************** \ |:| noMore has returned ([],0)                     :6_5:UnDeeper:
************************************* \ |:| some has returned (["copying"],0)                :6_5:UnDeeper:
************************************* / pNumAsText                                           :6_5:UnDeeper:
*********************************** / term p/b:label to the left of line below, with EOL        :5_6:Other "copy:
************************************ / |:| some                                                :5_6:Other "copy:
************************************* / |:| base parser                                       :5_6:Other "copy:
************************************* \ |:| base parser has returned ("copying",0)           :6_5:UnDeeper:
************************************* / |:| deeper                                           :6_5:UnDeeper:
************************************** / |:| some GoDeeper                                  :6_5:UnDeeper:
************************************* / |:| noMore                                           :6_5:UnDeeper:
************************************* \ |:| noMore has returned ([],0)                       :6_5:UnDeeper:
************************************ \ |:| some has returned (["copying"],0)                  :6_5:UnDeeper:
************************************ / undeepers                                              :6_5:UnDeeper:
************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :6_5:UnDeeper:
************************************* / sameLine: success!                                   :6_5:UnDeeper:
************************************ \ undeepers has returned ()                              :6_5:UnDeeper:
************************************ / matching EOL                                           :6_5:UnDeeper:
*********************************** / term p/notLabelTerm                                       :5_6:Other "copy:
************************************ / term p/2:someIndentation expr p                         :5_6:Other "copy:
************************************* / someIndentation                                       :5_6:Other "copy:
************************************** / myindented: consuming GoDeeper                      :5_6:Other "copy:
************************************ / term p/3:plain p                                        :5_6:Other "copy:
************************************* / pRelPred                                              :5_6:Other "copy:
************************************** / slRelPred                                           :5_6:Other "copy:
*************************************** / nested simpleHorn                                 :5_6:Other "copy:
**************************************** / |^|                                             :5_6:Other "copy:
**************************************** / $*|                                             :5_6:Other "copy:
***************************************** / slMultiTerm                                   :5_6:Other "copy:
****************************************** / |:| some                                    :5_6:Other "copy:
******************************************* / |:| base parser                           :5_6:Other "copy:
******************************************* \ |:| base parser has returned ("copying",0) :6_5:UnDeeper:
******************************************* / |:| deeper                               :6_5:UnDeeper:
******************************************** / |:| some GoDeeper                      :6_5:UnDeeper:
******************************************* / |:| noMore                               :6_5:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)           :6_5:UnDeeper:
****************************************** \ |:| some has returned (["copying"],0)      :6_5:UnDeeper:
***************************************** \ slMultiTerm has returned (["copying"],0)     :6_5:UnDeeper:
**************************************** \ $*| has returned (["copying"],0)               :6_5:UnDeeper:
**************************************** / |^| deeps                                      :6_5:UnDeeper:
**************************************** \ |^| deeps has returned [UnDeeper,UnDeeper]  :6_4:Or:
*************************************** / RPConstraint                                      :5_6:Other "copy:
**************************************** / $*|                                             :5_6:Other "copy:
***************************************** / slMultiTerm                                   :5_6:Other "copy:
****************************************** / |:| some                                    :5_6:Other "copy:
******************************************* / |:| base parser                           :5_6:Other "copy:
******************************************* \ |:| base parser has returned ("copying",0) :6_5:UnDeeper:
******************************************* / |:| deeper                               :6_5:UnDeeper:
******************************************** / |:| some GoDeeper                      :6_5:UnDeeper:
******************************************* / |:| noMore                               :6_5:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)           :6_5:UnDeeper:
****************************************** \ |:| some has returned (["copying"],0)      :6_5:UnDeeper:
***************************************** \ slMultiTerm has returned (["copying"],0)     :6_5:UnDeeper:
**************************************** \ $*| has returned (["copying"],0)               :6_5:UnDeeper:
**************************************** / |>| calling $>>                                :6_5:UnDeeper:
***************************************** / $>>                                          :6_5:UnDeeper:
****************************************** / $>>/recurse                                :6_5:UnDeeper:
****************************************** / $>>/base                                   :6_5:UnDeeper:
*************************************** / RPBoolStructR                                     :5_6:Other "copy:
**************************************** / $*|                                             :5_6:Other "copy:
***************************************** / slMultiTerm                                   :5_6:Other "copy:
****************************************** / |:| some                                    :5_6:Other "copy:
******************************************* / |:| base parser                           :5_6:Other "copy:
******************************************* \ |:| base parser has returned ("copying",0) :6_5:UnDeeper:
******************************************* / |:| deeper                               :6_5:UnDeeper:
******************************************** / |:| some GoDeeper                      :6_5:UnDeeper:
******************************************* / |:| noMore                               :6_5:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)           :6_5:UnDeeper:
****************************************** \ |:| some has returned (["copying"],0)      :6_5:UnDeeper:
***************************************** \ slMultiTerm has returned (["copying"],0)     :6_5:UnDeeper:
**************************************** \ $*| has returned (["copying"],0)               :6_5:UnDeeper:
**************************************** / |>| calling $>>                                :6_5:UnDeeper:
***************************************** / $>>                                          :6_5:UnDeeper:
****************************************** / $>>/recurse                                :6_5:UnDeeper:
****************************************** / $>>/base                                   :6_5:UnDeeper:
*************************************** / RPMT                                              :5_6:Other "copy:
**************************************** / $*|                                             :5_6:Other "copy:
***************************************** / slAKA                                         :5_6:Other "copy:
****************************************** / $*|                                         :5_6:Other "copy:
******************************************* / slAKA base                                :5_6:Other "copy:
******************************************** / slMultiTerm                             :5_6:Other "copy:
********************************************* / |:| some                              :5_6:Other "copy:
********************************************** / |:| base parser                     :5_6:Other "copy:
********************************************** \ |:| base parser has returned ("copying",0) :6_5:UnDeeper:
********************************************** / |:| deeper                         :6_5:UnDeeper:
*********************************************** / |:| some GoDeeper                :6_5:UnDeeper:
********************************************** / |:| noMore                         :6_5:UnDeeper:
********************************************** \ |:| noMore has returned ([],0)     :6_5:UnDeeper:
********************************************* \ |:| some has returned (["copying"],0) :6_5:UnDeeper:
******************************************** \ slMultiTerm has returned (["copying"],0) :6_5:UnDeeper:
******************************************* \ slAKA base has returned (["copying"],0)  :6_5:UnDeeper:
****************************************** \ $*| has returned (["copying"],0)           :6_5:UnDeeper:
****************************************** / |>>                                        :6_5:UnDeeper:
******************************************* / |>>/recurse                              :6_5:UnDeeper:
******************************************* / |>>/base                                 :6_5:UnDeeper:
******************************************** / slAKA optional akapart                 :6_5:UnDeeper:
********************************************* / |?| optional something               :6_5:UnDeeper:
********************************************** / |>>                                :6_5:UnDeeper:
*********************************************** / |>>/recurse                      :6_5:UnDeeper:
*********************************************** / |>>/base                         :6_5:UnDeeper:
************************************************ / PAKA/akapart                   :6_5:UnDeeper:
************************************************* / $>|                          :6_5:UnDeeper:
************************************************** / Aka Token                  :6_5:UnDeeper:
********************************************* \ |?| optional something has returned (Nothing,0) :6_5:UnDeeper:
******************************************** \ slAKA optional akapart has returned (Nothing,0) :6_5:UnDeeper:
******************************************** / |>>/base got Nothing                   :6_5:UnDeeper:
******************************************* \ |>>/base has returned (Nothing,0)        :6_5:UnDeeper:
****************************************** \ |>> has returned (Nothing,0)               :6_5:UnDeeper:
****************************************** / |>>                                        :6_5:UnDeeper:
******************************************* / |>>/recurse                              :6_5:UnDeeper:
******************************************* / |>>/base                                 :6_5:UnDeeper:
******************************************** / slAKA optional typically               :6_5:UnDeeper:
********************************************* / |?| optional something               :6_5:UnDeeper:
********************************************** / |>>                                :6_5:UnDeeper:
*********************************************** / |>>/recurse                      :6_5:UnDeeper:
*********************************************** / |>>/base                         :6_5:UnDeeper:
************************************************ / typically                      :6_5:UnDeeper:
************************************************* / $>|                          :6_5:UnDeeper:
********************************************* \ |?| optional something has returned (Nothing,0) :6_5:UnDeeper:
******************************************** \ slAKA optional typically has returned (Nothing,0) :6_5:UnDeeper:
******************************************** / |>>/base got Nothing                   :6_5:UnDeeper:
******************************************* \ |>>/base has returned (Nothing,0)        :6_5:UnDeeper:
****************************************** \ |>> has returned (Nothing,0)               :6_5:UnDeeper:
****************************************** / slAKA: proceeding after base and entityalias are retrieved ... :6_5:UnDeeper:
****************************************** / pAKA: entityalias = Nothing                :6_5:UnDeeper:
***************************************** \ slAKA has returned (["copying"],0)           :6_5:UnDeeper:
**************************************** \ $*| has returned (["copying"],0)               :6_5:UnDeeper:
*************************************** \ RPMT has returned (RPMT ["copying"],0)           :6_5:UnDeeper:
************************************** \ slRelPred has returned (RPMT ["copying"],0)        :6_5:UnDeeper:
************************************** / undeepers                                          :6_5:UnDeeper:
*************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :6_5:UnDeeper:
*************************************** / sameLine: success!                               :6_5:UnDeeper:
************************************** \ undeepers has returned ()                          :6_5:UnDeeper:
************************************* \ pRelPred has returned RPMT ["copying"]               :6_5:UnDeeper:
************************************ \ term p/3:plain p has returned MyLeaf (RPMT ["copying"]) :6_5:UnDeeper:
*********************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"]) :6_5:UnDeeper:
********************************** \ term p has returned MyLeaf (RPMT ["copying"])              :6_5:UnDeeper:
********************************** / binary(Or)                                                 :6_5:UnDeeper:
********************************** / binary(And)                                                :6_5:UnDeeper:
********************************** / binary(SetLess)                                            :6_5:UnDeeper:
********************************** / binary(SetPlus)                                            :6_5:UnDeeper:
********************************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["copying"]) :6_5:UnDeeper:
********************************* / myindented: consuming UnDeeper                               :6_5:UnDeeper:
********************************* \ myindented: consuming UnDeeper has returned UnDeeper           :6_6:UnDeeper:
******************************** \ someIndentation has returned MyLeaf (RPMT ["copying"])           :6_6:UnDeeper:
******************************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["copying"]) :6_6:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])           :6_6:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["copying"])                          :6_6:UnDeeper:
***************************** / binary(Or)                                                             :6_6:UnDeeper:
***************************** / binary(And)                                                            :6_6:UnDeeper:
***************************** / binary(SetLess)                                                        :6_6:UnDeeper:
***************************** / binary(SetPlus)                                                        :6_6:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["copying"])             :6_6:UnDeeper:
**************************** / myindented: consuming UnDeeper                                           :6_6:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                :6_4:Or:
*************************** \ someIndentation has returned MyLeaf (RPMT ["copying"])                :6_4:Or:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["copying"])  :6_4:Or:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["copying"])                :6_4:Or:
************************ \ term p has returned MyLeaf (RPMT ["copying"])                               :6_4:Or:
************************ / binary(Or)                                                                  :6_4:Or:
************************ \ binary(Or) has returned Or                                                   :6_5:GoDeeper:
************************ / term p                                                                       :6_5:GoDeeper:
************************* / term p/1a:label directly above                                             :6_5:GoDeeper:
************************** / $*|                                                                      :6_5:GoDeeper:
*************************** / |:| some                                                               :6_5:GoDeeper:
**************************** / |:| base parser                                                      :6_5:GoDeeper:
***************************** / pNumAsText                                                         :6_5:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                         :6_5:GoDeeper:
************************** / |:| some                                                                 :6_5:GoDeeper:
*************************** / |:| base parser                                                        :6_5:GoDeeper:
**************************** / pNumAsText                                                           :6_5:GoDeeper:
************************* / term p/notLabelTerm                                                        :6_5:GoDeeper:
************************** / term p/2:someIndentation expr p                                          :6_5:GoDeeper:
*************************** / someIndentation                                                        :6_5:GoDeeper:
**************************** / myindented: consuming GoDeeper                                       :6_5:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper                   :6_6:GoDeeper:
**************************** / manyIndentation/leaf?                                                  :6_6:GoDeeper:
***************************** / term p                                                               :6_6:GoDeeper:
****************************** / term p/1a:label directly above                                     :6_6:GoDeeper:
******************************* / $*|                                                              :6_6:GoDeeper:
******************************** / |:| some                                                       :6_6:GoDeeper:
********************************* / |:| base parser                                              :6_6:GoDeeper:
********************************** / pNumAsText                                                 :6_6:GoDeeper:
****************************** / term p/b:label to the left of line below, with EOL                 :6_6:GoDeeper:
******************************* / |:| some                                                         :6_6:GoDeeper:
******************************** / |:| base parser                                                :6_6:GoDeeper:
********************************* / pNumAsText                                                   :6_6:GoDeeper:
****************************** / term p/notLabelTerm                                                :6_6:GoDeeper:
******************************* / term p/2:someIndentation expr p                                  :6_6:GoDeeper:
******************************** / someIndentation                                                :6_6:GoDeeper:
********************************* / myindented: consuming GoDeeper                               :6_6:GoDeeper:
********************************* \ myindented: consuming GoDeeper has returned GoDeeper           :6_7:GoDeeper:
********************************* / manyIndentation/leaf?                                          :6_7:GoDeeper:
********************************** / term p                                                       :6_7:GoDeeper:
*********************************** / term p/1a:label directly above                             :6_7:GoDeeper:
************************************ / $*|                                                      :6_7:GoDeeper:
************************************* / |:| some                                               :6_7:GoDeeper:
************************************** / |:| base parser                                      :6_7:GoDeeper:
*************************************** / pNumAsText                                         :6_7:GoDeeper:
*********************************** / term p/b:label to the left of line below, with EOL         :6_7:GoDeeper:
************************************ / |:| some                                                 :6_7:GoDeeper:
************************************* / |:| base parser                                        :6_7:GoDeeper:
************************************** / pNumAsText                                           :6_7:GoDeeper:
*********************************** / term p/notLabelTerm                                        :6_7:GoDeeper:
************************************ / term p/2:someIndentation expr p                          :6_7:GoDeeper:
************************************* / someIndentation                                        :6_7:GoDeeper:
************************************** / myindented: consuming GoDeeper                       :6_7:GoDeeper:
************************************** \ myindented: consuming GoDeeper has returned GoDeeper  :6_7:Other "modi:
************************************** / manyIndentation/leaf?                                 :6_7:Other "modi:
*************************************** / term p                                              :6_7:Other "modi:
**************************************** / term p/1a:label directly above                    :6_7:Other "modi:
***************************************** / $*|                                             :6_7:Other "modi:
****************************************** / |:| some                                      :6_7:Other "modi:
******************************************* / |:| base parser                             :6_7:Other "modi:
******************************************* \ |:| base parser has returned ("modification",0) :7_5:UnDeeper:
******************************************* / |:| deeper                               :7_5:UnDeeper:
******************************************** / |:| some GoDeeper                      :7_5:UnDeeper:
******************************************* / |:| noMore                               :7_5:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)           :7_5:UnDeeper:
****************************************** \ |:| some has returned (["modification"],0) :7_5:UnDeeper:
****************************************** / pNumAsText                                 :7_5:UnDeeper:
**************************************** / term p/b:label to the left of line below, with EOL :6_7:Other "modi:
***************************************** / |:| some                                        :6_7:Other "modi:
****************************************** / |:| base parser                               :6_7:Other "modi:
****************************************** \ |:| base parser has returned ("modification",0) :7_5:UnDeeper:
****************************************** / |:| deeper                                 :7_5:UnDeeper:
******************************************* / |:| some GoDeeper                        :7_5:UnDeeper:
****************************************** / |:| noMore                                 :7_5:UnDeeper:
****************************************** \ |:| noMore has returned ([],0)             :7_5:UnDeeper:
***************************************** \ |:| some has returned (["modification"],0)   :7_5:UnDeeper:
***************************************** / undeepers                                    :7_5:UnDeeper:
****************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_5:UnDeeper:
****************************************** / sameLine: success!                         :7_5:UnDeeper:
***************************************** \ undeepers has returned ()                    :7_5:UnDeeper:
***************************************** / matching EOL                                 :7_5:UnDeeper:
**************************************** / term p/notLabelTerm                               :6_7:Other "modi:
***************************************** / term p/2:someIndentation expr p                 :6_7:Other "modi:
****************************************** / someIndentation                               :6_7:Other "modi:
******************************************* / myindented: consuming GoDeeper              :6_7:Other "modi:
***************************************** / term p/3:plain p                                :6_7:Other "modi:
****************************************** / pRelPred                                      :6_7:Other "modi:
******************************************* / slRelPred                                   :6_7:Other "modi:
******************************************** / nested simpleHorn                         :6_7:Other "modi:
********************************************* / |^|                                     :6_7:Other "modi:
********************************************* / $*|                                     :6_7:Other "modi:
********************************************** / slMultiTerm                           :6_7:Other "modi:
*********************************************** / |:| some                            :6_7:Other "modi:
************************************************ / |:| base parser                   :6_7:Other "modi:
************************************************ \ |:| base parser has returned ("modification",0) :7_5:UnDeeper:
************************************************ / |:| deeper                     :7_5:UnDeeper:
************************************************* / |:| some GoDeeper            :7_5:UnDeeper:
************************************************ / |:| noMore                     :7_5:UnDeeper:
************************************************ \ |:| noMore has returned ([],0) :7_5:UnDeeper:
*********************************************** \ |:| some has returned (["modification"],0) :7_5:UnDeeper:
********************************************** \ slMultiTerm has returned (["modification"],0) :7_5:UnDeeper:
********************************************* \ $*| has returned (["modification"],0) :7_5:UnDeeper:
********************************************* / |^| deeps                            :7_5:UnDeeper:
********************************************* \ |^| deeps has returned [UnDeeper,UnDeeper,UnDeeper] :7_4:Or:
******************************************** / RPConstraint                              :6_7:Other "modi:
********************************************* / $*|                                     :6_7:Other "modi:
********************************************** / slMultiTerm                           :6_7:Other "modi:
*********************************************** / |:| some                            :6_7:Other "modi:
************************************************ / |:| base parser                   :6_7:Other "modi:
************************************************ \ |:| base parser has returned ("modification",0) :7_5:UnDeeper:
************************************************ / |:| deeper                     :7_5:UnDeeper:
************************************************* / |:| some GoDeeper            :7_5:UnDeeper:
************************************************ / |:| noMore                     :7_5:UnDeeper:
************************************************ \ |:| noMore has returned ([],0) :7_5:UnDeeper:
*********************************************** \ |:| some has returned (["modification"],0) :7_5:UnDeeper:
********************************************** \ slMultiTerm has returned (["modification"],0) :7_5:UnDeeper:
********************************************* \ $*| has returned (["modification"],0) :7_5:UnDeeper:
********************************************* / |>| calling $>>                      :7_5:UnDeeper:
********************************************** / $>>                                :7_5:UnDeeper:
*********************************************** / $>>/recurse                      :7_5:UnDeeper:
*********************************************** / $>>/base                         :7_5:UnDeeper:
******************************************** / RPBoolStructR                             :6_7:Other "modi:
********************************************* / $*|                                     :6_7:Other "modi:
********************************************** / slMultiTerm                           :6_7:Other "modi:
*********************************************** / |:| some                            :6_7:Other "modi:
************************************************ / |:| base parser                   :6_7:Other "modi:
************************************************ \ |:| base parser has returned ("modification",0) :7_5:UnDeeper:
************************************************ / |:| deeper                     :7_5:UnDeeper:
************************************************* / |:| some GoDeeper            :7_5:UnDeeper:
************************************************ / |:| noMore                     :7_5:UnDeeper:
************************************************ \ |:| noMore has returned ([],0) :7_5:UnDeeper:
*********************************************** \ |:| some has returned (["modification"],0) :7_5:UnDeeper:
********************************************** \ slMultiTerm has returned (["modification"],0) :7_5:UnDeeper:
********************************************* \ $*| has returned (["modification"],0) :7_5:UnDeeper:
********************************************* / |>| calling $>>                      :7_5:UnDeeper:
********************************************** / $>>                                :7_5:UnDeeper:
*********************************************** / $>>/recurse                      :7_5:UnDeeper:
*********************************************** / $>>/base                         :7_5:UnDeeper:
******************************************** / RPMT                                      :6_7:Other "modi:
********************************************* / $*|                                     :6_7:Other "modi:
********************************************** / slAKA                                 :6_7:Other "modi:
*********************************************** / $*|                                 :6_7:Other "modi:
************************************************ / slAKA base                        :6_7:Other "modi:
************************************************* / slMultiTerm                     :6_7:Other "modi:
************************************************** / |:| some                      :6_7:Other "modi:
*************************************************** / |:| base parser             :6_7:Other "modi:
*************************************************** \ |:| base parser has returned ("modification",0) :7_5:UnDeeper:
*************************************************** / |:| deeper               :7_5:UnDeeper:
**************************************************** / |:| some GoDeeper      :7_5:UnDeeper:
*************************************************** / |:| noMore               :7_5:UnDeeper:
*************************************************** \ |:| noMore has returned ([],0) :7_5:UnDeeper:
************************************************** \ |:| some has returned (["modification"],0) :7_5:UnDeeper:
************************************************* \ slMultiTerm has returned (["modification"],0) :7_5:UnDeeper:
************************************************ \ slAKA base has returned (["modification"],0) :7_5:UnDeeper:
*********************************************** \ $*| has returned (["modification"],0) :7_5:UnDeeper:
*********************************************** / |>>                              :7_5:UnDeeper:
************************************************ / |>>/recurse                    :7_5:UnDeeper:
************************************************ / |>>/base                       :7_5:UnDeeper:
************************************************* / slAKA optional akapart       :7_5:UnDeeper:
************************************************** / |?| optional something     :7_5:UnDeeper:
*************************************************** / |>>                      :7_5:UnDeeper:
**************************************************** / |>>/recurse            :7_5:UnDeeper:
**************************************************** / |>>/base               :7_5:UnDeeper:
***************************************************** / PAKA/akapart         :7_5:UnDeeper:
****************************************************** / $>|                :7_5:UnDeeper:
******************************************************* / Aka Token        :7_5:UnDeeper:
************************************************** \ |?| optional something has returned (Nothing,0) :7_5:UnDeeper:
************************************************* \ slAKA optional akapart has returned (Nothing,0) :7_5:UnDeeper:
************************************************* / |>>/base got Nothing         :7_5:UnDeeper:
************************************************ \ |>>/base has returned (Nothing,0) :7_5:UnDeeper:
*********************************************** \ |>> has returned (Nothing,0)     :7_5:UnDeeper:
*********************************************** / |>>                              :7_5:UnDeeper:
************************************************ / |>>/recurse                    :7_5:UnDeeper:
************************************************ / |>>/base                       :7_5:UnDeeper:
************************************************* / slAKA optional typically     :7_5:UnDeeper:
************************************************** / |?| optional something     :7_5:UnDeeper:
*************************************************** / |>>                      :7_5:UnDeeper:
**************************************************** / |>>/recurse            :7_5:UnDeeper:
**************************************************** / |>>/base               :7_5:UnDeeper:
***************************************************** / typically            :7_5:UnDeeper:
****************************************************** / $>|                :7_5:UnDeeper:
************************************************** \ |?| optional something has returned (Nothing,0) :7_5:UnDeeper:
************************************************* \ slAKA optional typically has returned (Nothing,0) :7_5:UnDeeper:
************************************************* / |>>/base got Nothing         :7_5:UnDeeper:
************************************************ \ |>>/base has returned (Nothing,0) :7_5:UnDeeper:
*********************************************** \ |>> has returned (Nothing,0)     :7_5:UnDeeper:
*********************************************** / slAKA: proceeding after base and entityalias are retrieved ... :7_5:UnDeeper:
*********************************************** / pAKA: entityalias = Nothing      :7_5:UnDeeper:
********************************************** \ slAKA has returned (["modification"],0) :7_5:UnDeeper:
********************************************* \ $*| has returned (["modification"],0) :7_5:UnDeeper:
******************************************** \ RPMT has returned (RPMT ["modification"],0) :7_5:UnDeeper:
******************************************* \ slRelPred has returned (RPMT ["modification"],0) :7_5:UnDeeper:
******************************************* / undeepers                                :7_5:UnDeeper:
******************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :7_5:UnDeeper:
******************************************** / sameLine: success!                     :7_5:UnDeeper:
******************************************* \ undeepers has returned ()                :7_5:UnDeeper:
****************************************** \ pRelPred has returned RPMT ["modification"] :7_5:UnDeeper:
***************************************** \ term p/3:plain p has returned MyLeaf (RPMT ["modification"]) :7_5:UnDeeper:
**************************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"]) :7_5:UnDeeper:
*************************************** \ term p has returned MyLeaf (RPMT ["modification"]) :7_5:UnDeeper:
*************************************** / binary(Or)                                       :7_5:UnDeeper:
*************************************** / binary(And)                                      :7_5:UnDeeper:
*************************************** / binary(SetLess)                                  :7_5:UnDeeper:
*************************************** / binary(SetPlus)                                  :7_5:UnDeeper:
************************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["modification"]) :7_5:UnDeeper:
************************************** / myindented: consuming UnDeeper                     :7_5:UnDeeper:
************************************** \ myindented: consuming UnDeeper has returned UnDeeper :7_6:UnDeeper:
************************************* \ someIndentation has returned MyLeaf (RPMT ["modification"]) :7_6:UnDeeper:
************************************ \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["modification"]) :7_6:UnDeeper:
*********************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"]) :7_6:UnDeeper:
********************************** \ term p has returned MyLeaf (RPMT ["modification"])           :7_6:UnDeeper:
********************************** / binary(Or)                                                   :7_6:UnDeeper:
********************************** / binary(And)                                                  :7_6:UnDeeper:
********************************** / binary(SetLess)                                              :7_6:UnDeeper:
********************************** / binary(SetPlus)                                              :7_6:UnDeeper:
********************************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["modification"]) :7_6:UnDeeper:
********************************* / myindented: consuming UnDeeper                                 :7_6:UnDeeper:
********************************* \ myindented: consuming UnDeeper has returned UnDeeper             :7_7:UnDeeper:
******************************** \ someIndentation has returned MyLeaf (RPMT ["modification"])        :7_7:UnDeeper:
******************************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["modification"]) :7_7:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])        :7_7:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["modification"])                       :7_7:UnDeeper:
***************************** / binary(Or)                                                               :7_7:UnDeeper:
***************************** / binary(And)                                                              :7_7:UnDeeper:
***************************** / binary(SetLess)                                                          :7_7:UnDeeper:
***************************** / binary(SetPlus)                                                          :7_7:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["modification"])          :7_7:UnDeeper:
**************************** / myindented: consuming UnDeeper                                             :7_7:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                :7_4:Or:
*************************** \ someIndentation has returned MyLeaf (RPMT ["modification"])           :7_4:Or:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["modification"]) :7_4:Or:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["modification"])           :7_4:Or:
************************ \ term p has returned MyLeaf (RPMT ["modification"])                          :7_4:Or:
************************ / binary(Or)                                                                  :7_4:Or:
************************ \ binary(Or) has returned Or                                                   :7_5:GoDeeper:
************************ / term p                                                                       :7_5:GoDeeper:
************************* / term p/1a:label directly above                                             :7_5:GoDeeper:
************************** / $*|                                                                      :7_5:GoDeeper:
*************************** / |:| some                                                               :7_5:GoDeeper:
**************************** / |:| base parser                                                      :7_5:GoDeeper:
***************************** / pNumAsText                                                         :7_5:GoDeeper:
************************* / term p/b:label to the left of line below, with EOL                         :7_5:GoDeeper:
************************** / |:| some                                                                 :7_5:GoDeeper:
*************************** / |:| base parser                                                        :7_5:GoDeeper:
**************************** / pNumAsText                                                           :7_5:GoDeeper:
************************* / term p/notLabelTerm                                                        :7_5:GoDeeper:
************************** / term p/2:someIndentation expr p                                          :7_5:GoDeeper:
*************************** / someIndentation                                                        :7_5:GoDeeper:
**************************** / myindented: consuming GoDeeper                                       :7_5:GoDeeper:
**************************** \ myindented: consuming GoDeeper has returned GoDeeper                   :7_6:GoDeeper:
**************************** / manyIndentation/leaf?                                                  :7_6:GoDeeper:
***************************** / term p                                                               :7_6:GoDeeper:
****************************** / term p/1a:label directly above                                     :7_6:GoDeeper:
******************************* / $*|                                                              :7_6:GoDeeper:
******************************** / |:| some                                                       :7_6:GoDeeper:
********************************* / |:| base parser                                              :7_6:GoDeeper:
********************************** / pNumAsText                                                 :7_6:GoDeeper:
****************************** / term p/b:label to the left of line below, with EOL                 :7_6:GoDeeper:
******************************* / |:| some                                                         :7_6:GoDeeper:
******************************** / |:| base parser                                                :7_6:GoDeeper:
********************************* / pNumAsText                                                   :7_6:GoDeeper:
****************************** / term p/notLabelTerm                                                :7_6:GoDeeper:
******************************* / term p/2:someIndentation expr p                                  :7_6:GoDeeper:
******************************** / someIndentation                                                :7_6:GoDeeper:
********************************* / myindented: consuming GoDeeper                               :7_6:GoDeeper:
********************************* \ myindented: consuming GoDeeper has returned GoDeeper          :7_6:Other "disp:
********************************* / manyIndentation/leaf?                                         :7_6:Other "disp:
********************************** / term p                                                      :7_6:Other "disp:
*********************************** / term p/1a:label directly above                            :7_6:Other "disp:
************************************ / $*|                                                     :7_6:Other "disp:
************************************* / |:| some                                              :7_6:Other "disp:
************************************** / |:| base parser                                     :7_6:Other "disp:
************************************** \ |:| base parser has returned ("disposal",0)  :1_2:UnDeeper:
************************************** / |:| deeper                                   :1_2:UnDeeper:
*************************************** / |:| some GoDeeper                          :1_2:UnDeeper:
************************************** / |:| noMore                                   :1_2:UnDeeper:
************************************** \ |:| noMore has returned ([],0)               :1_2:UnDeeper:
************************************* \ |:| some has returned (["disposal"],0)         :1_2:UnDeeper:
************************************* / pNumAsText                                     :1_2:UnDeeper:
*********************************** / term p/b:label to the left of line below, with EOL        :7_6:Other "disp:
************************************ / |:| some                                                :7_6:Other "disp:
************************************* / |:| base parser                                       :7_6:Other "disp:
************************************* \ |:| base parser has returned ("disposal",0)    :1_2:UnDeeper:
************************************* / |:| deeper                                     :1_2:UnDeeper:
************************************** / |:| some GoDeeper                            :1_2:UnDeeper:
************************************* / |:| noMore                                     :1_2:UnDeeper:
************************************* \ |:| noMore has returned ([],0)                 :1_2:UnDeeper:
************************************ \ |:| some has returned (["disposal"],0)           :1_2:UnDeeper:
************************************ / undeepers                                        :1_2:UnDeeper:
************************************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :1_2:UnDeeper:
************************************* / sameLine: success!                             :1_2:UnDeeper:
************************************ \ undeepers has returned ()                        :1_2:UnDeeper:
************************************ / matching EOL                                     :1_2:UnDeeper:
*********************************** / term p/notLabelTerm                                       :7_6:Other "disp:
************************************ / term p/2:someIndentation expr p                         :7_6:Other "disp:
************************************* / someIndentation                                       :7_6:Other "disp:
************************************** / myindented: consuming GoDeeper                      :7_6:Other "disp:
************************************ / term p/3:plain p                                        :7_6:Other "disp:
************************************* / pRelPred                                              :7_6:Other "disp:
************************************** / slRelPred                                           :7_6:Other "disp:
*************************************** / nested simpleHorn                                 :7_6:Other "disp:
**************************************** / |^|                                             :7_6:Other "disp:
**************************************** / $*|                                             :7_6:Other "disp:
***************************************** / slMultiTerm                                   :7_6:Other "disp:
****************************************** / |:| some                                    :7_6:Other "disp:
******************************************* / |:| base parser                           :7_6:Other "disp:
******************************************* \ |:| base parser has returned ("disposal",0) :1_2:UnDeeper:
******************************************* / |:| deeper                         :1_2:UnDeeper:
******************************************** / |:| some GoDeeper                :1_2:UnDeeper:
******************************************* / |:| noMore                         :1_2:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)     :1_2:UnDeeper:
****************************************** \ |:| some has returned (["disposal"],0) :1_2:UnDeeper:
***************************************** \ slMultiTerm has returned (["disposal"],0) :1_2:UnDeeper:
**************************************** \ $*| has returned (["disposal"],0)        :1_2:UnDeeper:
**************************************** / |^| deeps                                :1_2:UnDeeper:
**************************************** \ |^| deeps has returned [UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper] :EOF:
*************************************** / RPConstraint                                      :7_6:Other "disp:
**************************************** / $*|                                             :7_6:Other "disp:
***************************************** / slMultiTerm                                   :7_6:Other "disp:
****************************************** / |:| some                                    :7_6:Other "disp:
******************************************* / |:| base parser                           :7_6:Other "disp:
******************************************* \ |:| base parser has returned ("disposal",0) :1_2:UnDeeper:
******************************************* / |:| deeper                         :1_2:UnDeeper:
******************************************** / |:| some GoDeeper                :1_2:UnDeeper:
******************************************* / |:| noMore                         :1_2:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)     :1_2:UnDeeper:
****************************************** \ |:| some has returned (["disposal"],0) :1_2:UnDeeper:
***************************************** \ slMultiTerm has returned (["disposal"],0) :1_2:UnDeeper:
**************************************** \ $*| has returned (["disposal"],0)        :1_2:UnDeeper:
**************************************** / |>| calling $>>                          :1_2:UnDeeper:
***************************************** / $>>                                    :1_2:UnDeeper:
****************************************** / $>>/recurse                          :1_2:UnDeeper:
****************************************** / $>>/base                             :1_2:UnDeeper:
*************************************** / RPBoolStructR                                     :7_6:Other "disp:
**************************************** / $*|                                             :7_6:Other "disp:
***************************************** / slMultiTerm                                   :7_6:Other "disp:
****************************************** / |:| some                                    :7_6:Other "disp:
******************************************* / |:| base parser                           :7_6:Other "disp:
******************************************* \ |:| base parser has returned ("disposal",0) :1_2:UnDeeper:
******************************************* / |:| deeper                         :1_2:UnDeeper:
******************************************** / |:| some GoDeeper                :1_2:UnDeeper:
******************************************* / |:| noMore                         :1_2:UnDeeper:
******************************************* \ |:| noMore has returned ([],0)     :1_2:UnDeeper:
****************************************** \ |:| some has returned (["disposal"],0) :1_2:UnDeeper:
***************************************** \ slMultiTerm has returned (["disposal"],0) :1_2:UnDeeper:
**************************************** \ $*| has returned (["disposal"],0)        :1_2:UnDeeper:
**************************************** / |>| calling $>>                          :1_2:UnDeeper:
***************************************** / $>>                                    :1_2:UnDeeper:
****************************************** / $>>/recurse                          :1_2:UnDeeper:
****************************************** / $>>/base                             :1_2:UnDeeper:
*************************************** / RPMT                                              :7_6:Other "disp:
**************************************** / $*|                                             :7_6:Other "disp:
***************************************** / slAKA                                         :7_6:Other "disp:
****************************************** / $*|                                         :7_6:Other "disp:
******************************************* / slAKA base                                :7_6:Other "disp:
******************************************** / slMultiTerm                             :7_6:Other "disp:
********************************************* / |:| some                              :7_6:Other "disp:
********************************************** / |:| base parser                     :7_6:Other "disp:
********************************************** \ |:| base parser has returned ("disposal",0) :1_2:UnDeeper:
********************************************** / |:| deeper                   :1_2:UnDeeper:
*********************************************** / |:| some GoDeeper          :1_2:UnDeeper:
********************************************** / |:| noMore                   :1_2:UnDeeper:
********************************************** \ |:| noMore has returned ([],0) :1_2:UnDeeper:
********************************************* \ |:| some has returned (["disposal"],0) :1_2:UnDeeper:
******************************************** \ slMultiTerm has returned (["disposal"],0) :1_2:UnDeeper:
******************************************* \ slAKA base has returned (["disposal"],0) :1_2:UnDeeper:
****************************************** \ $*| has returned (["disposal"],0)    :1_2:UnDeeper:
****************************************** / |>>                                  :1_2:UnDeeper:
******************************************* / |>>/recurse                        :1_2:UnDeeper:
******************************************* / |>>/base                           :1_2:UnDeeper:
******************************************** / slAKA optional akapart           :1_2:UnDeeper:
********************************************* / |?| optional something         :1_2:UnDeeper:
********************************************** / |>>                          :1_2:UnDeeper:
*********************************************** / |>>/recurse                :1_2:UnDeeper:
*********************************************** / |>>/base                   :1_2:UnDeeper:
************************************************ / PAKA/akapart             :1_2:UnDeeper:
************************************************* / $>|                    :1_2:UnDeeper:
************************************************** / Aka Token            :1_2:UnDeeper:
********************************************* \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
******************************************** \ slAKA optional akapart has returned (Nothing,0) :1_2:UnDeeper:
******************************************** / |>>/base got Nothing             :1_2:UnDeeper:
******************************************* \ |>>/base has returned (Nothing,0)  :1_2:UnDeeper:
****************************************** \ |>> has returned (Nothing,0)         :1_2:UnDeeper:
****************************************** / |>>                                  :1_2:UnDeeper:
******************************************* / |>>/recurse                        :1_2:UnDeeper:
******************************************* / |>>/base                           :1_2:UnDeeper:
******************************************** / slAKA optional typically         :1_2:UnDeeper:
********************************************* / |?| optional something         :1_2:UnDeeper:
********************************************** / |>>                          :1_2:UnDeeper:
*********************************************** / |>>/recurse                :1_2:UnDeeper:
*********************************************** / |>>/base                   :1_2:UnDeeper:
************************************************ / typically                :1_2:UnDeeper:
************************************************* / $>|                    :1_2:UnDeeper:
********************************************* \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
******************************************** \ slAKA optional typically has returned (Nothing,0) :1_2:UnDeeper:
******************************************** / |>>/base got Nothing             :1_2:UnDeeper:
******************************************* \ |>>/base has returned (Nothing,0)  :1_2:UnDeeper:
****************************************** \ |>> has returned (Nothing,0)         :1_2:UnDeeper:
****************************************** / slAKA: proceeding after base and entityalias are retrieved ... :1_2:UnDeeper:
****************************************** / pAKA: entityalias = Nothing          :1_2:UnDeeper:
***************************************** \ slAKA has returned (["disposal"],0)    :1_2:UnDeeper:
**************************************** \ $*| has returned (["disposal"],0)        :1_2:UnDeeper:
*************************************** \ RPMT has returned (RPMT ["disposal"],0)    :1_2:UnDeeper:
************************************** \ slRelPred has returned (RPMT ["disposal"],0) :1_2:UnDeeper:
************************************** / undeepers                                    :1_2:UnDeeper:
*************************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :1_2:UnDeeper:
*************************************** / sameLine: success!                         :1_2:UnDeeper:
************************************** \ undeepers has returned ()                    :1_2:UnDeeper:
************************************* \ pRelPred has returned RPMT ["disposal"]        :1_2:UnDeeper:
************************************ \ term p/3:plain p has returned MyLeaf (RPMT ["disposal"]) :1_2:UnDeeper:
*********************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["disposal"]) :1_2:UnDeeper:
********************************** \ term p has returned MyLeaf (RPMT ["disposal"])       :1_2:UnDeeper:
********************************** / binary(Or)                                           :1_2:UnDeeper:
********************************** / binary(And)                                          :1_2:UnDeeper:
********************************** / binary(SetLess)                                      :1_2:UnDeeper:
********************************** / binary(SetPlus)                                      :1_2:UnDeeper:
********************************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["disposal"]) :1_2:UnDeeper:
********************************* / myindented: consuming UnDeeper                         :1_2:UnDeeper:
********************************* \ myindented: consuming UnDeeper has returned UnDeeper     :1_3:UnDeeper:
******************************** \ someIndentation has returned MyLeaf (RPMT ["disposal"])    :1_3:UnDeeper:
******************************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["disposal"]) :1_3:UnDeeper:
****************************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["disposal"])    :1_3:UnDeeper:
***************************** \ term p has returned MyLeaf (RPMT ["disposal"])                   :1_3:UnDeeper:
***************************** / binary(Or)                                                       :1_3:UnDeeper:
***************************** / binary(And)                                                      :1_3:UnDeeper:
***************************** / binary(SetLess)                                                  :1_3:UnDeeper:
***************************** / binary(SetPlus)                                                  :1_3:UnDeeper:
**************************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["disposal"])      :1_3:UnDeeper:
**************************** / myindented: consuming UnDeeper                                     :1_3:UnDeeper:
**************************** \ myindented: consuming UnDeeper has returned UnDeeper                 :1_4:UnDeeper:
*************************** \ someIndentation has returned MyLeaf (RPMT ["disposal"])                :1_4:UnDeeper:
************************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["disposal"])  :1_4:UnDeeper:
************************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["disposal"])                :1_4:UnDeeper:
************************ \ term p has returned MyLeaf (RPMT ["disposal"])                               :1_4:UnDeeper:
************************ / binary(Or)                                                                   :1_4:UnDeeper:
************************ / binary(And)                                                                  :1_4:UnDeeper:
************************ / binary(SetLess)                                                              :1_4:UnDeeper:
************************ / binary(SetPlus)                                                              :1_4:UnDeeper:
*********************** \ manyIndentation/leaf? has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_4:UnDeeper:
*********************** / myindented: consuming UnDeeper                                                 :1_4:UnDeeper:
*********************** \ myindented: consuming UnDeeper has returned UnDeeper                             :1_5:UnDeeper:
********************** \ someIndentation has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_5:UnDeeper:
********************* \ term p/2:someIndentation expr p has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_5:UnDeeper:
******************** \ term p/notLabelTerm has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_5:UnDeeper:
******************* \ term p has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_5:UnDeeper:
******************* / binary(Or)                                                                               :1_5:UnDeeper:
******************* / binary(And)                                                                              :1_5:UnDeeper:
******************* / binary(SetLess)                                                                          :1_5:UnDeeper:
******************* / binary(SetPlus)                                                                          :1_5:UnDeeper:
****************** \ manyIndentation/leaf? has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_5:UnDeeper:
****************** / myindented: consuming UnDeeper                                                             :1_5:UnDeeper:
****************** \ myindented: consuming UnDeeper has returned UnDeeper                                         :1_6:UnDeeper:
***************** \ someIndentation has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_6:UnDeeper:
**************** \ term p/2:someIndentation expr p has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_6:UnDeeper:
*************** \ term p/notLabelTerm has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_6:UnDeeper:
************** \ term p has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_6:UnDeeper:
************** / binary(Or)                                                                                           :1_6:UnDeeper:
************** / binary(And)                                                                                          :1_6:UnDeeper:
************** / binary(SetLess)                                                                                      :1_6:UnDeeper:
************** / binary(SetPlus)                                                                                      :1_6:UnDeeper:
************* \ manyIndentation/leaf? has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :1_6:UnDeeper:
************* / myindented: consuming UnDeeper                                                                         :1_6:UnDeeper:
************* \ myindented: consuming UnDeeper has returned UnDeeper                                      :EOF:
************ \ someIndentation has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :EOF:
*********** \ term p/2:someIndentation expr p has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :EOF:
********** \ term p/notLabelTerm has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :EOF:
********* \ term p has returned MyAny [MyLeaf (RPMT ["access"]),MyLeaf (RPMT ["use"]),MyLeaf (RPMT ["disclosure"]),MyLeaf (RPMT ["copying"]),MyLeaf (RPMT ["modification"]),MyLeaf (RPMT ["disposal"])] :EOF:
********* / binary(Or)                                                                                        :EOF:
********* / binary(And)                                                                                       :EOF:
********* / binary(SetLess)                                                                                   :EOF:
********* / binary(SetPlus)                                                                                   :EOF:
******** \ ppp inner has returned Any Nothing [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])] :EOF:
******* \ pBSR has returned Any Nothing [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])] :EOF:
****** \ preambleBoolStructR [Means,Includes,Is] has returned (Means,Any Nothing [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])]) :EOF:
****** / preambleParamText:[Given]                                                                               :EOF:
******* / $>|                                                                                                   :EOF:
****** / preambleBoolStructR [Unless]                                                                            :EOF:
****** / preambleBoolStructR [When,If]                                                                           :EOF:
***** \ permutationsCon: copula=[Means,Includes,Is], positive=[When,If], negative=[Unless], given=[Given] has returned ((Means,Any Nothing [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])]),[],[],[]) :EOF:
**** \ manyIndentation/leaf? has returned ((Means,Any Nothing [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])]),[],[],[]) :EOF:
*** \ pConstitutiveRule has returned Constitutive {name = ["Bad"], keyword = Means, letbind = Any Nothing [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])], cond = Nothing, given = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/inline-1-o.csv", short = "test/inline-1-o.csv", srcrow = 1, srccol = 1, version = Nothing}), defaults = [], symtab = []} :EOF:
** \ pRule has returned Hornlike {name = ["Bad"], keyword = Means, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPBoolStructR ["Bad"] RPis (Any Nothing [Leaf (RPMT ["access"]),Leaf (RPMT ["use"]),Leaf (RPMT ["disclosure"]),Leaf (RPMT ["copying"]),Leaf (RPMT ["modification"]),Leaf (RPMT ["disposal"])]), hBody = Nothing}], rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/inline-1-o.csv", short = "test/inline-1-o.csv", srcrow = 2, srccol = 1, version = Nothing}), defaults = [], symtab = []} :EOF:
** / pRule                                                                                                           :EOF:
* final
:PROPERTIES:
:VISIBILITY: all
:END:

[ Hornlike
    { name = [ "Bad" ]
    , keyword = Means
    , given = Nothing
    , upon = Nothing
    , clauses =
        [ HC2
            { hHead = RPBoolStructR [ "Bad" ] RPis
                ( Any Nothing
                    [ Leaf
                        ( RPMT [ "access" ] )
                    , Leaf
                        ( RPMT [ "use" ] )
                    , Leaf
                        ( RPMT [ "disclosure" ] )
                    , Leaf
                        ( RPMT [ "copying" ] )
                    , Leaf
                        ( RPMT [ "modification" ] )
                    , Leaf
                        ( RPMT [ "disposal" ] )
                    ]
                )
            , hBody = Nothing
            }
        ]
    , rlabel = Nothing
    , lsource = Nothing
    , srcref = Just
        ( SrcRef
            { url = "test/inline-1-o.csv"
            , short = "test/inline-1-o.csv"
            , srcrow = 2
            , srccol = 1
            , version = Nothing
            }
        )
    , defaults = []
    , symtab = []
    }
]
