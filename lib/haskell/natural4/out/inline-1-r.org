* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / pRule                                                                                                              :1_2:GoDeeper:
*** / pRegRule                                                                                                         :1_2:GoDeeper:
**** / pRuleLabel                                                                                                     :1_2:GoDeeper:
***** / $>|                                                                                                          :1_2:GoDeeper:
**** / pRegRuleSugary                                                                                                 :1_2:GoDeeper:
***** / someDeep                                                                                                     :1_2:GoDeeper:
****** / someDeep first part calls base directly                                                                    :1_2:GoDeeper:
**** / pRegRuleNormal                                                                                                 :1_2:GoDeeper:
***** / permutationsReg                                                                                              :1_2:GoDeeper:
****** / regulative permutation with deontic-temporal                                                               :1_2:GoDeeper:
******* / WHERE                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Having]                                                                               :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Given]                                                                                :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Upon]                                                                                 :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleBoolStructR [Unless]                                                                             :1_2:GoDeeper:
******* / preambleBoolStructR [When,If]                                                                            :1_2:GoDeeper:
******* / pDT                                                                                                      :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / pActor [Every,Party,TokAll]                                                                              :1_2:GoDeeper:
******* / pDoAction/Do                                                                                             :1_2:GoDeeper:
****** / regulative permutation with deontic-action                                                                 :1_2:GoDeeper:
******* / WHERE                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Having]                                                                               :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Given]                                                                                :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleParamText:[Upon]                                                                                 :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / preambleBoolStructR [Unless]                                                                             :1_2:GoDeeper:
******* / preambleBoolStructR [When,If]                                                                            :1_2:GoDeeper:
******* / pTemporal/eventually                                                                                     :1_2:GoDeeper:
******* / pTemporal/specifically                                                                                   :1_2:GoDeeper:
******** / $>|                                                                                                    :1_2:GoDeeper:
******* / pTemporal/vaguely                                                                                        :1_2:GoDeeper:
******* / pActor [Every,Party,TokAll]                                                                              :1_2:GoDeeper:
******* / pDA                                                                                                      :1_2:GoDeeper:
*** / pTypeDefinition                                                                                                  :1_2:GoDeeper:
**** / pRuleLabel                                                                                                     :1_2:GoDeeper:
***** / $>|                                                                                                          :1_2:GoDeeper:
**** / pHornlike/uponLimb                                                                                             :1_2:GoDeeper:
***** / preambleParamText:[Upon]                                                                                     :1_2:GoDeeper:
****** / $>|                                                                                                        :1_2:GoDeeper:
**** / pHornlike/givenLimb                                                                                            :1_2:GoDeeper:
***** / preambleParamText:[Given]                                                                                    :1_2:GoDeeper:
****** / $>|                                                                                                        :1_2:GoDeeper:
*** / pConstitutiveRule                                                                                                :1_2:GoDeeper:
**** / pRuleLabel                                                                                                     :1_2:GoDeeper:
***** / $>|                                                                                                          :1_2:GoDeeper:
**** / calling myindented pNameParens                                                                                 :1_2:GoDeeper:
***** / manyIndentation/leaf?                                                                                        :1_2:GoDeeper:
****** / pMultiTermAka                                                                                              :1_2:GoDeeper:
******* / pAKA                                                                                                     :1_2:GoDeeper:
******** / slAKA                                                                                                  :1_2:GoDeeper:
********* / $*|                                                                                                  :1_2:GoDeeper:
********** / slAKA base                                                                                         :1_2:GoDeeper:
*********** / slMultiTerm                                                                                      :1_2:GoDeeper:
************ / |:| some                                                                                       :1_2:GoDeeper:
************* / |:| base parser                                                                              :1_2:GoDeeper:
************** / pNumAsText                                                                                 :1_2:GoDeeper:
***** / manyIndentation/deeper; calling someIndentation                                                              :1_2:GoDeeper:
****** / someIndentation                                                                                            :1_2:GoDeeper:
******* / myindented: consuming GoDeeper                                                                           :1_2:GoDeeper:
******* \ myindented: consuming GoDeeper has returned GoDeeper                                                      :1_2:Other "mult:
******* / manyIndentation/leaf?                                                                                     :1_2:Other "mult:
******** / pMultiTermAka                                                                                           :1_2:Other "mult:
********* / pAKA                                                                                                  :1_2:Other "mult:
********** / slAKA                                                                                               :1_2:Other "mult:
*********** / $*|                                                                                               :1_2:Other "mult:
************ / slAKA base                                                                                      :1_2:Other "mult:
************* / slMultiTerm                                                                                   :1_2:Other "mult:
************** / |:| some                                                                                    :1_2:Other "mult:
*************** / |:| base parser                                                                           :1_2:Other "mult:
*************** \ |:| base parser has returned ("multiwonk",0)                                               :2_2:UnDeeper:
*************** / |:| deeper                                                                                 :2_2:UnDeeper:
**************** / |:| some GoDeeper                                                                        :2_2:UnDeeper:
*************** / |:| noMore                                                                                 :2_2:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                             :2_2:UnDeeper:
************** \ |:| some has returned (["multiwonk"],0)                                                      :2_2:UnDeeper:
************* \ slMultiTerm has returned (["multiwonk"],0)                                                     :2_2:UnDeeper:
************ \ slAKA base has returned (["multiwonk"],0)                                                        :2_2:UnDeeper:
*********** \ $*| has returned (["multiwonk"],0)                                                                 :2_2:UnDeeper:
*********** / |>>                                                                                                :2_2:UnDeeper:
************ / |>>/recurse                                                                                      :2_2:UnDeeper:
************ / |>>/base                                                                                         :2_2:UnDeeper:
************* / slAKA optional akapart                                                                         :2_2:UnDeeper:
************** / |?| optional something                                                                       :2_2:UnDeeper:
*************** / |>>                                                                                        :2_2:UnDeeper:
**************** / |>>/recurse                                                                              :2_2:UnDeeper:
**************** / |>>/base                                                                                 :2_2:UnDeeper:
***************** / PAKA/akapart                                                                           :2_2:UnDeeper:
****************** / $>|                                                                                  :2_2:UnDeeper:
******************* / Aka Token                                                                          :2_2:UnDeeper:
************** \ |?| optional something has returned (Nothing,0)                                              :2_2:UnDeeper:
************* \ slAKA optional akapart has returned (Nothing,0)                                                :2_2:UnDeeper:
************* / |>>/base got Nothing                                                                           :2_2:UnDeeper:
************ \ |>>/base has returned (Nothing,0)                                                                :2_2:UnDeeper:
*********** \ |>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
*********** / |>>                                                                                                :2_2:UnDeeper:
************ / |>>/recurse                                                                                      :2_2:UnDeeper:
************ / |>>/base                                                                                         :2_2:UnDeeper:
************* / slAKA optional typically                                                                       :2_2:UnDeeper:
************** / |?| optional something                                                                       :2_2:UnDeeper:
*************** / |>>                                                                                        :2_2:UnDeeper:
**************** / |>>/recurse                                                                              :2_2:UnDeeper:
**************** / |>>/base                                                                                 :2_2:UnDeeper:
***************** / typically                                                                              :2_2:UnDeeper:
****************** / $>|                                                                                  :2_2:UnDeeper:
************** \ |?| optional something has returned (Nothing,0)                                              :2_2:UnDeeper:
************* \ slAKA optional typically has returned (Nothing,0)                                              :2_2:UnDeeper:
************* / |>>/base got Nothing                                                                           :2_2:UnDeeper:
************ \ |>>/base has returned (Nothing,0)                                                                :2_2:UnDeeper:
*********** \ |>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
*********** / slAKA: proceeding after base and entityalias are retrieved ...                                     :2_2:UnDeeper:
*********** / pAKA: entityalias = Nothing                                                                        :2_2:UnDeeper:
********** \ slAKA has returned (["multiwonk"],0)                                                                 :2_2:UnDeeper:
********** / undeepers                                                                                            :2_2:UnDeeper:
*********** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                             :2_2:UnDeeper:
*********** / sameLine: success!                                                                                 :2_2:UnDeeper:
********** \ undeepers has returned ()                                                                            :2_2:UnDeeper:
********* \ pAKA has returned ["multiwonk"]                                                                        :2_2:UnDeeper:
******** \ pMultiTermAka has returned ["multiwonk"]                                                                 :2_2:UnDeeper:
******* \ manyIndentation/leaf? has returned ["multiwonk"]                                                           :2_2:UnDeeper:
******* / myindented: consuming UnDeeper                                                                             :2_2:UnDeeper:
******* \ myindented: consuming UnDeeper has returned UnDeeper                                                    :2_1:Means:
****** \ someIndentation has returned ["multiwonk"]                                                                :2_1:Means:
***** \ manyIndentation/deeper; calling someIndentation has returned ["multiwonk"]                                  :2_1:Means:
**** \ calling myindented pNameParens has returned ["multiwonk"]                                                     :2_1:Means:
**** / manyIndentation/leaf?                                                                                         :2_1:Means:
***** / permutationsCon: copula=[Means,Includes,Is], positive=[When,If], negative=[Unless], given=[Given]           :2_1:Means:
****** / preambleParamText:[Given]                                                                                 :2_1:Means:
******* / $>|                                                                                                     :2_1:Means:
****** / preambleBoolStructR [Unless]                                                                              :2_1:Means:
****** / preambleBoolStructR [When,If]                                                                             :2_1:Means:
****** / preambleBoolStructR [Means,Includes,Is]                                                                   :2_1:Means:
******* / pBSR                                                                                                     :2_2:GoDeeper:
******** / ppp inner                                                                                              :2_2:GoDeeper:
********* / term p                                                                                               :2_2:GoDeeper:
********** / term p/1a:label directly above                                                                     :2_2:GoDeeper:
*********** / $*|                                                                                              :2_2:GoDeeper:
************ / |:| some                                                                                       :2_2:GoDeeper:
************* / |:| base parser                                                                              :2_2:GoDeeper:
************** / pNumAsText                                                                                 :2_2:GoDeeper:
********** / term p/b:label to the left of line below, with EOL                                                 :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********** / term p/notLabelTerm                                                                                :2_2:GoDeeper:
*********** / term p/2:someIndentation expr p                                                                  :2_2:GoDeeper:
************ / someIndentation                                                                                :2_2:GoDeeper:
************* / myindented: consuming GoDeeper                                                               :2_2:GoDeeper:
************* \ myindented: consuming GoDeeper has returned GoDeeper                                          :2_2:Other "poop:
************* / manyIndentation/leaf?                                                                         :2_2:Other "poop:
************** / term p                                                                                      :2_2:Other "poop:
*************** / term p/1a:label directly above                                                            :2_2:Other "poop:
**************** / $*|                                                                                     :2_2:Other "poop:
***************** / |:| some                                                                              :2_2:Other "poop:
****************** / |:| base parser                                                                     :2_2:Other "poop:
****************** \ |:| base parser has returned ("poopoo",0)                                            :3_2:UnDeeper:
****************** / |:| deeper                                                                           :3_2:UnDeeper:
******************* / |:| some GoDeeper                                                                  :3_2:UnDeeper:
****************** / |:| noMore                                                                           :3_2:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                       :3_2:UnDeeper:
***************** \ |:| some has returned (["poopoo"],0)                                                   :3_2:UnDeeper:
***************** / pNumAsText                                                                             :3_2:UnDeeper:
*************** / term p/b:label to the left of line below, with EOL                                        :2_2:Other "poop:
**************** / |:| some                                                                                :2_2:Other "poop:
***************** / |:| base parser                                                                       :2_2:Other "poop:
***************** \ |:| base parser has returned ("poopoo",0)                                              :3_2:UnDeeper:
***************** / |:| deeper                                                                             :3_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :3_2:UnDeeper:
***************** / |:| noMore                                                                             :3_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :3_2:UnDeeper:
**************** \ |:| some has returned (["poopoo"],0)                                                     :3_2:UnDeeper:
**************** / undeepers                                                                                :3_2:UnDeeper:
***************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                 :3_2:UnDeeper:
***************** / sameLine: success!                                                                     :3_2:UnDeeper:
**************** \ undeepers has returned ()                                                                :3_2:UnDeeper:
**************** / matching EOL                                                                             :3_2:UnDeeper:
*************** / term p/notLabelTerm                                                                       :2_2:Other "poop:
**************** / term p/2:someIndentation expr p                                                         :2_2:Other "poop:
***************** / someIndentation                                                                       :2_2:Other "poop:
****************** / myindented: consuming GoDeeper                                                      :2_2:Other "poop:
**************** / term p/3:plain p                                                                        :2_2:Other "poop:
***************** / pRelPred                                                                              :2_2:Other "poop:
****************** / slRelPred                                                                           :2_2:Other "poop:
******************* / nested simpleHorn                                                                 :2_2:Other "poop:
******************** / |^|                                                                             :2_2:Other "poop:
******************** / $*|                                                                             :2_2:Other "poop:
********************* / slMultiTerm                                                                   :2_2:Other "poop:
********************** / |:| some                                                                    :2_2:Other "poop:
*********************** / |:| base parser                                                           :2_2:Other "poop:
*********************** \ |:| base parser has returned ("poopoo",0)                                  :3_2:UnDeeper:
*********************** / |:| deeper                                                                 :3_2:UnDeeper:
************************ / |:| some GoDeeper                                                        :3_2:UnDeeper:
*********************** / |:| noMore                                                                 :3_2:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                             :3_2:UnDeeper:
********************** \ |:| some has returned (["poopoo"],0)                                         :3_2:UnDeeper:
********************* \ slMultiTerm has returned (["poopoo"],0)                                        :3_2:UnDeeper:
******************** \ $*| has returned (["poopoo"],0)                                                  :3_2:UnDeeper:
******************** / |^| deeps                                                                        :3_2:UnDeeper:
******************** \ |^| deeps has returned [UnDeeper]                                             :3_1:Or:
******************* / RPConstraint                                                                      :2_2:Other "poop:
******************** / $*|                                                                             :2_2:Other "poop:
********************* / slMultiTerm                                                                   :2_2:Other "poop:
********************** / |:| some                                                                    :2_2:Other "poop:
*********************** / |:| base parser                                                           :2_2:Other "poop:
*********************** \ |:| base parser has returned ("poopoo",0)                                  :3_2:UnDeeper:
*********************** / |:| deeper                                                                 :3_2:UnDeeper:
************************ / |:| some GoDeeper                                                        :3_2:UnDeeper:
*********************** / |:| noMore                                                                 :3_2:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                             :3_2:UnDeeper:
********************** \ |:| some has returned (["poopoo"],0)                                         :3_2:UnDeeper:
********************* \ slMultiTerm has returned (["poopoo"],0)                                        :3_2:UnDeeper:
******************** \ $*| has returned (["poopoo"],0)                                                  :3_2:UnDeeper:
******************** / |>| calling $>>                                                                  :3_2:UnDeeper:
********************* / $>>                                                                            :3_2:UnDeeper:
********************** / $>>/recurse                                                                  :3_2:UnDeeper:
********************** / $>>/base                                                                     :3_2:UnDeeper:
******************* / RPBoolStructR                                                                     :2_2:Other "poop:
******************** / $*|                                                                             :2_2:Other "poop:
********************* / slMultiTerm                                                                   :2_2:Other "poop:
********************** / |:| some                                                                    :2_2:Other "poop:
*********************** / |:| base parser                                                           :2_2:Other "poop:
*********************** \ |:| base parser has returned ("poopoo",0)                                  :3_2:UnDeeper:
*********************** / |:| deeper                                                                 :3_2:UnDeeper:
************************ / |:| some GoDeeper                                                        :3_2:UnDeeper:
*********************** / |:| noMore                                                                 :3_2:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                             :3_2:UnDeeper:
********************** \ |:| some has returned (["poopoo"],0)                                         :3_2:UnDeeper:
********************* \ slMultiTerm has returned (["poopoo"],0)                                        :3_2:UnDeeper:
******************** \ $*| has returned (["poopoo"],0)                                                  :3_2:UnDeeper:
******************** / |>| calling $>>                                                                  :3_2:UnDeeper:
********************* / $>>                                                                            :3_2:UnDeeper:
********************** / $>>/recurse                                                                  :3_2:UnDeeper:
********************** / $>>/base                                                                     :3_2:UnDeeper:
******************* / RPMT                                                                              :2_2:Other "poop:
******************** / $*|                                                                             :2_2:Other "poop:
********************* / slAKA                                                                         :2_2:Other "poop:
********************** / $*|                                                                         :2_2:Other "poop:
*********************** / slAKA base                                                                :2_2:Other "poop:
************************ / slMultiTerm                                                             :2_2:Other "poop:
************************* / |:| some                                                              :2_2:Other "poop:
************************** / |:| base parser                                                     :2_2:Other "poop:
************************** \ |:| base parser has returned ("poopoo",0)                            :3_2:UnDeeper:
************************** / |:| deeper                                                           :3_2:UnDeeper:
*************************** / |:| some GoDeeper                                                  :3_2:UnDeeper:
************************** / |:| noMore                                                           :3_2:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                       :3_2:UnDeeper:
************************* \ |:| some has returned (["poopoo"],0)                                   :3_2:UnDeeper:
************************ \ slMultiTerm has returned (["poopoo"],0)                                  :3_2:UnDeeper:
*********************** \ slAKA base has returned (["poopoo"],0)                                     :3_2:UnDeeper:
********************** \ $*| has returned (["poopoo"],0)                                              :3_2:UnDeeper:
********************** / |>>                                                                          :3_2:UnDeeper:
*********************** / |>>/recurse                                                                :3_2:UnDeeper:
*********************** / |>>/base                                                                   :3_2:UnDeeper:
************************ / slAKA optional akapart                                                   :3_2:UnDeeper:
************************* / |?| optional something                                                 :3_2:UnDeeper:
************************** / |>>                                                                  :3_2:UnDeeper:
*************************** / |>>/recurse                                                        :3_2:UnDeeper:
*************************** / |>>/base                                                           :3_2:UnDeeper:
**************************** / PAKA/akapart                                                     :3_2:UnDeeper:
***************************** / $>|                                                            :3_2:UnDeeper:
****************************** / Aka Token                                                    :3_2:UnDeeper:
************************* \ |?| optional something has returned (Nothing,0)                        :3_2:UnDeeper:
************************ \ slAKA optional akapart has returned (Nothing,0)                          :3_2:UnDeeper:
************************ / |>>/base got Nothing                                                     :3_2:UnDeeper:
*********************** \ |>>/base has returned (Nothing,0)                                          :3_2:UnDeeper:
********************** \ |>> has returned (Nothing,0)                                                 :3_2:UnDeeper:
********************** / |>>                                                                          :3_2:UnDeeper:
*********************** / |>>/recurse                                                                :3_2:UnDeeper:
*********************** / |>>/base                                                                   :3_2:UnDeeper:
************************ / slAKA optional typically                                                 :3_2:UnDeeper:
************************* / |?| optional something                                                 :3_2:UnDeeper:
************************** / |>>                                                                  :3_2:UnDeeper:
*************************** / |>>/recurse                                                        :3_2:UnDeeper:
*************************** / |>>/base                                                           :3_2:UnDeeper:
**************************** / typically                                                        :3_2:UnDeeper:
***************************** / $>|                                                            :3_2:UnDeeper:
************************* \ |?| optional something has returned (Nothing,0)                        :3_2:UnDeeper:
************************ \ slAKA optional typically has returned (Nothing,0)                        :3_2:UnDeeper:
************************ / |>>/base got Nothing                                                     :3_2:UnDeeper:
*********************** \ |>>/base has returned (Nothing,0)                                          :3_2:UnDeeper:
********************** \ |>> has returned (Nothing,0)                                                 :3_2:UnDeeper:
********************** / slAKA: proceeding after base and entityalias are retrieved ...               :3_2:UnDeeper:
********************** / pAKA: entityalias = Nothing                                                  :3_2:UnDeeper:
********************* \ slAKA has returned (["poopoo"],0)                                              :3_2:UnDeeper:
******************** \ $*| has returned (["poopoo"],0)                                                  :3_2:UnDeeper:
******************* \ RPMT has returned (RPMT ["poopoo"],0)                                              :3_2:UnDeeper:
****************** \ slRelPred has returned (RPMT ["poopoo"],0)                                           :3_2:UnDeeper:
****************** / undeepers                                                                            :3_2:UnDeeper:
******************* / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers             :3_2:UnDeeper:
******************* / sameLine: success!                                                                 :3_2:UnDeeper:
****************** \ undeepers has returned ()                                                            :3_2:UnDeeper:
***************** \ pRelPred has returned RPMT ["poopoo"]                                                  :3_2:UnDeeper:
**************** \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                                   :3_2:UnDeeper:
*************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                  :3_2:UnDeeper:
************** \ term p has returned MyLeaf (RPMT ["poopoo"])                                                 :3_2:UnDeeper:
************** / binary(Or)                                                                                   :3_2:UnDeeper:
************** / binary(And)                                                                                  :3_2:UnDeeper:
************** / binary(SetLess)                                                                              :3_2:UnDeeper:
************** / binary(SetPlus)                                                                              :3_2:UnDeeper:
************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                                    :3_2:UnDeeper:
************* / myindented: consuming UnDeeper                                                                 :3_2:UnDeeper:
************* \ myindented: consuming UnDeeper has returned UnDeeper                                        :3_1:Or:
************ \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                                         :3_1:Or:
*********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])                           :3_1:Or:
********** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                         :3_1:Or:
********* \ term p has returned MyLeaf (RPMT ["poopoo"])                                                        :3_1:Or:
********* / binary(Or)                                                                                          :3_1:Or:
********* \ binary(Or) has returned Or                                                                           :3_2:GoDeeper:
********* / term p                                                                                               :3_2:GoDeeper:
********** / term p/1a:label directly above                                                                     :3_2:GoDeeper:
*********** / $*|                                                                                              :3_2:GoDeeper:
************ / |:| some                                                                                       :3_2:GoDeeper:
************* / |:| base parser                                                                              :3_2:GoDeeper:
************** / pNumAsText                                                                                 :3_2:GoDeeper:
********** / term p/b:label to the left of line below, with EOL                                                 :3_2:GoDeeper:
*********** / |:| some                                                                                         :3_2:GoDeeper:
************ / |:| base parser                                                                                :3_2:GoDeeper:
************* / pNumAsText                                                                                   :3_2:GoDeeper:
********** / term p/notLabelTerm                                                                                :3_2:GoDeeper:
*********** / term p/2:someIndentation expr p                                                                  :3_2:GoDeeper:
************ / someIndentation                                                                                :3_2:GoDeeper:
************* / myindented: consuming GoDeeper                                                               :3_2:GoDeeper:
************* \ myindented: consuming GoDeeper has returned GoDeeper                                          :3_2:Other "the":
************* / manyIndentation/leaf?                                                                         :3_2:Other "the":
************** / term p                                                                                      :3_2:Other "the":
*************** / term p/1a:label directly above                                                            :3_2:Other "the":
**************** / $*|                                                                                     :3_2:Other "the":
***************** / |:| some                                                                              :3_2:Other "the":
****************** / |:| base parser                                                                     :3_2:Other "the":
****************** \ |:| base parser has returned ("the",0)                                               :3_3:GoDeeper:
****************** / |:| deeper                                                                           :3_3:GoDeeper:
******************* / |:| some GoDeeper                                                                  :3_3:GoDeeper:
******************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                             :3_5:Other "honk:
******************* / |:| some                                                                                :3_5:Other "honk:
******************** / |:| base parser                                                                       :3_5:Other "honk:
******************** \ |:| base parser has returned ("honk",0)                                                :4_5:UnDeeper:
******************** / |:| deeper                                                                             :4_5:UnDeeper:
********************* / |:| some GoDeeper                                                                    :4_5:UnDeeper:
******************** / |:| noMore                                                                             :4_5:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                         :4_5:UnDeeper:
******************* \ |:| some has returned (["honk"],0)                                                       :4_5:UnDeeper:
****************** \ |:| deeper has returned (["honk"],3)                                                       :4_5:UnDeeper:
***************** \ |:| some has returned (["the","honk"],3)                                                     :4_5:UnDeeper:
***************** / pNumAsText                                                                                   :4_5:UnDeeper:
*************** / term p/b:label to the left of line below, with EOL                                        :3_2:Other "the":
**************** / |:| some                                                                                :3_2:Other "the":
***************** / |:| base parser                                                                       :3_2:Other "the":
***************** \ |:| base parser has returned ("the",0)                                                 :3_3:GoDeeper:
***************** / |:| deeper                                                                             :3_3:GoDeeper:
****************** / |:| some GoDeeper                                                                    :3_3:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :3_5:Other "honk:
****************** / |:| some                                                                                  :3_5:Other "honk:
******************* / |:| base parser                                                                         :3_5:Other "honk:
******************* \ |:| base parser has returned ("honk",0)                                                  :4_5:UnDeeper:
******************* / |:| deeper                                                                               :4_5:UnDeeper:
******************** / |:| some GoDeeper                                                                      :4_5:UnDeeper:
******************* / |:| noMore                                                                               :4_5:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                           :4_5:UnDeeper:
****************** \ |:| some has returned (["honk"],0)                                                         :4_5:UnDeeper:
***************** \ |:| deeper has returned (["honk"],3)                                                         :4_5:UnDeeper:
**************** \ |:| some has returned (["the","honk"],3)                                                       :4_5:UnDeeper:
**************** / undeepers                                                                                      :4_5:UnDeeper:
***************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                       :4_5:UnDeeper:
*************** / term p/notLabelTerm                                                                       :3_2:Other "the":
**************** / term p/2:someIndentation expr p                                                         :3_2:Other "the":
***************** / someIndentation                                                                       :3_2:Other "the":
****************** / myindented: consuming GoDeeper                                                      :3_2:Other "the":
**************** / term p/3:plain p                                                                        :3_2:Other "the":
***************** / pRelPred                                                                              :3_2:Other "the":
****************** / slRelPred                                                                           :3_2:Other "the":
******************* / nested simpleHorn                                                                 :3_2:Other "the":
******************** / |^|                                                                             :3_2:Other "the":
******************** / $*|                                                                             :3_2:Other "the":
********************* / slMultiTerm                                                                   :3_2:Other "the":
********************** / |:| some                                                                    :3_2:Other "the":
*********************** / |:| base parser                                                           :3_2:Other "the":
*********************** \ |:| base parser has returned ("the",0)                                     :3_3:GoDeeper:
*********************** / |:| deeper                                                                 :3_3:GoDeeper:
************************ / |:| some GoDeeper                                                        :3_3:GoDeeper:
************************ \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :3_5:Other "honk:
************************ / |:| some                                                                      :3_5:Other "honk:
************************* / |:| base parser                                                             :3_5:Other "honk:
************************* \ |:| base parser has returned ("honk",0)                                      :4_5:UnDeeper:
************************* / |:| deeper                                                                   :4_5:UnDeeper:
************************** / |:| some GoDeeper                                                          :4_5:UnDeeper:
************************* / |:| noMore                                                                   :4_5:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                               :4_5:UnDeeper:
************************ \ |:| some has returned (["honk"],0)                                             :4_5:UnDeeper:
*********************** \ |:| deeper has returned (["honk"],3)                                             :4_5:UnDeeper:
********************** \ |:| some has returned (["the","honk"],3)                                           :4_5:UnDeeper:
********************* \ slMultiTerm has returned (["the","honk"],3)                                          :4_5:UnDeeper:
******************** \ $*| has returned (["the","honk"],3)                                                    :4_5:UnDeeper:
******************** / |^| deeps                                                                              :4_5:UnDeeper:
******************** \ |^| deeps has returned [UnDeeper]                                                   :4_4:Or:
******************* / RPConstraint                                                                      :3_2:Other "the":
******************** / $*|                                                                             :3_2:Other "the":
********************* / slMultiTerm                                                                   :3_2:Other "the":
********************** / |:| some                                                                    :3_2:Other "the":
*********************** / |:| base parser                                                           :3_2:Other "the":
*********************** \ |:| base parser has returned ("the",0)                                     :3_3:GoDeeper:
*********************** / |:| deeper                                                                 :3_3:GoDeeper:
************************ / |:| some GoDeeper                                                        :3_3:GoDeeper:
************************ \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :3_5:Other "honk:
************************ / |:| some                                                                      :3_5:Other "honk:
************************* / |:| base parser                                                             :3_5:Other "honk:
************************* \ |:| base parser has returned ("honk",0)                                      :4_5:UnDeeper:
************************* / |:| deeper                                                                   :4_5:UnDeeper:
************************** / |:| some GoDeeper                                                          :4_5:UnDeeper:
************************* / |:| noMore                                                                   :4_5:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                               :4_5:UnDeeper:
************************ \ |:| some has returned (["honk"],0)                                             :4_5:UnDeeper:
*********************** \ |:| deeper has returned (["honk"],3)                                             :4_5:UnDeeper:
********************** \ |:| some has returned (["the","honk"],3)                                           :4_5:UnDeeper:
********************* \ slMultiTerm has returned (["the","honk"],3)                                          :4_5:UnDeeper:
******************** \ $*| has returned (["the","honk"],3)                                                    :4_5:UnDeeper:
******************** / |>| calling $>>                                                                        :4_5:UnDeeper:
********************* / $>>                                                                                  :4_5:UnDeeper:
********************** / $>>/recurse                                                                        :4_5:UnDeeper:
********************** / $>>/base                                                                           :4_5:UnDeeper:
******************* / RPBoolStructR                                                                     :3_2:Other "the":
******************** / $*|                                                                             :3_2:Other "the":
********************* / slMultiTerm                                                                   :3_2:Other "the":
********************** / |:| some                                                                    :3_2:Other "the":
*********************** / |:| base parser                                                           :3_2:Other "the":
*********************** \ |:| base parser has returned ("the",0)                                     :3_3:GoDeeper:
*********************** / |:| deeper                                                                 :3_3:GoDeeper:
************************ / |:| some GoDeeper                                                        :3_3:GoDeeper:
************************ \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :3_5:Other "honk:
************************ / |:| some                                                                      :3_5:Other "honk:
************************* / |:| base parser                                                             :3_5:Other "honk:
************************* \ |:| base parser has returned ("honk",0)                                      :4_5:UnDeeper:
************************* / |:| deeper                                                                   :4_5:UnDeeper:
************************** / |:| some GoDeeper                                                          :4_5:UnDeeper:
************************* / |:| noMore                                                                   :4_5:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                               :4_5:UnDeeper:
************************ \ |:| some has returned (["honk"],0)                                             :4_5:UnDeeper:
*********************** \ |:| deeper has returned (["honk"],3)                                             :4_5:UnDeeper:
********************** \ |:| some has returned (["the","honk"],3)                                           :4_5:UnDeeper:
********************* \ slMultiTerm has returned (["the","honk"],3)                                          :4_5:UnDeeper:
******************** \ $*| has returned (["the","honk"],3)                                                    :4_5:UnDeeper:
******************** / |>| calling $>>                                                                        :4_5:UnDeeper:
********************* / $>>                                                                                  :4_5:UnDeeper:
********************** / $>>/recurse                                                                        :4_5:UnDeeper:
********************** / $>>/base                                                                           :4_5:UnDeeper:
******************* / RPMT                                                                              :3_2:Other "the":
******************** / $*|                                                                             :3_2:Other "the":
********************* / slAKA                                                                         :3_2:Other "the":
********************** / $*|                                                                         :3_2:Other "the":
*********************** / slAKA base                                                                :3_2:Other "the":
************************ / slMultiTerm                                                             :3_2:Other "the":
************************* / |:| some                                                              :3_2:Other "the":
************************** / |:| base parser                                                     :3_2:Other "the":
************************** \ |:| base parser has returned ("the",0)                               :3_3:GoDeeper:
************************** / |:| deeper                                                           :3_3:GoDeeper:
*************************** / |:| some GoDeeper                                                  :3_3:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :3_5:Other "honk:
*************************** / |:| some                                                                :3_5:Other "honk:
**************************** / |:| base parser                                                       :3_5:Other "honk:
**************************** \ |:| base parser has returned ("honk",0)                                :4_5:UnDeeper:
**************************** / |:| deeper                                                             :4_5:UnDeeper:
***************************** / |:| some GoDeeper                                                    :4_5:UnDeeper:
**************************** / |:| noMore                                                             :4_5:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                         :4_5:UnDeeper:
*************************** \ |:| some has returned (["honk"],0)                                       :4_5:UnDeeper:
************************** \ |:| deeper has returned (["honk"],3)                                       :4_5:UnDeeper:
************************* \ |:| some has returned (["the","honk"],3)                                     :4_5:UnDeeper:
************************ \ slMultiTerm has returned (["the","honk"],3)                                    :4_5:UnDeeper:
*********************** \ slAKA base has returned (["the","honk"],3)                                       :4_5:UnDeeper:
********************** \ $*| has returned (["the","honk"],3)                                                :4_5:UnDeeper:
********************** / |>>                                                                                :4_5:UnDeeper:
*********************** / |>>/recurse                                                                      :4_5:UnDeeper:
*********************** / |>>/base                                                                         :4_5:UnDeeper:
************************ / slAKA optional akapart                                                         :4_5:UnDeeper:
************************* / |?| optional something                                                       :4_5:UnDeeper:
************************** / |>>                                                                        :4_5:UnDeeper:
*************************** / |>>/recurse                                                              :4_5:UnDeeper:
*************************** / |>>/base                                                                 :4_5:UnDeeper:
**************************** / PAKA/akapart                                                           :4_5:UnDeeper:
***************************** / $>|                                                                  :4_5:UnDeeper:
****************************** / Aka Token                                                          :4_5:UnDeeper:
************************* \ |?| optional something has returned (Nothing,0)                              :4_5:UnDeeper:
************************ \ slAKA optional akapart has returned (Nothing,0)                                :4_5:UnDeeper:
************************ / |>>/base got Nothing                                                           :4_5:UnDeeper:
*********************** \ |>>/base has returned (Nothing,0)                                                :4_5:UnDeeper:
********************** \ |>> has returned (Nothing,0)                                                       :4_5:UnDeeper:
********************** / |>>                                                                                :4_5:UnDeeper:
*********************** / |>>/recurse                                                                      :4_5:UnDeeper:
*********************** / |>>/base                                                                         :4_5:UnDeeper:
************************ / slAKA optional typically                                                       :4_5:UnDeeper:
************************* / |?| optional something                                                       :4_5:UnDeeper:
************************** / |>>                                                                        :4_5:UnDeeper:
*************************** / |>>/recurse                                                              :4_5:UnDeeper:
*************************** / |>>/base                                                                 :4_5:UnDeeper:
**************************** / typically                                                              :4_5:UnDeeper:
***************************** / $>|                                                                  :4_5:UnDeeper:
************************* \ |?| optional something has returned (Nothing,0)                              :4_5:UnDeeper:
************************ \ slAKA optional typically has returned (Nothing,0)                              :4_5:UnDeeper:
************************ / |>>/base got Nothing                                                           :4_5:UnDeeper:
*********************** \ |>>/base has returned (Nothing,0)                                                :4_5:UnDeeper:
********************** \ |>> has returned (Nothing,0)                                                       :4_5:UnDeeper:
********************** / slAKA: proceeding after base and entityalias are retrieved ...                     :4_5:UnDeeper:
********************** / pAKA: entityalias = Nothing                                                        :4_5:UnDeeper:
********************* \ slAKA has returned (["the","honk"],3)                                                :4_5:UnDeeper:
******************** \ $*| has returned (["the","honk"],3)                                                    :4_5:UnDeeper:
******************* \ RPMT has returned (RPMT ["the","honk"],3)                                                :4_5:UnDeeper:
****************** \ slRelPred has returned (RPMT ["the","honk"],3)                                             :4_5:UnDeeper:
****************** / undeepers                                                                                  :4_5:UnDeeper:
******************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                   :4_5:UnDeeper:
************* / manyIndentation/deeper; calling someIndentation                                               :3_2:Other "the":
************** / someIndentation                                                                             :3_2:Other "the":
*************** / myindented: consuming GoDeeper                                                            :3_2:Other "the":
*********** / term p/3:plain p                                                                                 :3_2:GoDeeper:
************ / pRelPred                                                                                       :3_2:GoDeeper:
************* / slRelPred                                                                                    :3_2:GoDeeper:
************** / nested simpleHorn                                                                          :3_2:GoDeeper:
*************** / |^|                                                                                      :3_2:GoDeeper:
*************** / $*|                                                                                      :3_2:GoDeeper:
**************** / slMultiTerm                                                                            :3_2:GoDeeper:
***************** / |:| some                                                                             :3_2:GoDeeper:
****************** / |:| base parser                                                                    :3_2:GoDeeper:
******************* / pNumAsText                                                                       :3_2:GoDeeper:
************** / RPConstraint                                                                               :3_2:GoDeeper:
*************** / $*|                                                                                      :3_2:GoDeeper:
**************** / slMultiTerm                                                                            :3_2:GoDeeper:
***************** / |:| some                                                                             :3_2:GoDeeper:
****************** / |:| base parser                                                                    :3_2:GoDeeper:
******************* / pNumAsText                                                                       :3_2:GoDeeper:
************** / RPBoolStructR                                                                              :3_2:GoDeeper:
*************** / $*|                                                                                      :3_2:GoDeeper:
**************** / slMultiTerm                                                                            :3_2:GoDeeper:
***************** / |:| some                                                                             :3_2:GoDeeper:
****************** / |:| base parser                                                                    :3_2:GoDeeper:
******************* / pNumAsText                                                                       :3_2:GoDeeper:
************** / RPMT                                                                                       :3_2:GoDeeper:
*************** / $*|                                                                                      :3_2:GoDeeper:
**************** / slAKA                                                                                  :3_2:GoDeeper:
***************** / $*|                                                                                  :3_2:GoDeeper:
****************** / slAKA base                                                                         :3_2:GoDeeper:
******************* / slMultiTerm                                                                      :3_2:GoDeeper:
******************** / |:| some                                                                       :3_2:GoDeeper:
********************* / |:| base parser                                                              :3_2:GoDeeper:
********************** / pNumAsText                                                                 :3_2:GoDeeper:
******** / withPrePost                                                                                            :2_2:GoDeeper:
********* / |<* starting                                                                                         :2_2:GoDeeper:
********* / $*|                                                                                                  :2_2:GoDeeper:
********** / pre part                                                                                           :2_2:GoDeeper:
*********** / aboveNextLineKeyword                                                                              :2_2:Other "poop:
************ / expectUnDeepers                                                                                 :2_2:Other "poop:
************* / ignoring ["poopoo"]                                                                            :3_2:UnDeeper:
************* / matched undeepers [UnDeeper]                                                                :3_1:Or:
************ \ expectUnDeepers has returned 1                                                                  :2_2:Other "poop:
************ / aNLK: determined undp_count = 1                                                                 :2_2:Other "poop:
************ / ->| trying to consume 1 GoDeepers                                                               :2_2:Other "poop:
************ / $*|                                                                                             :2_2:Other "poop:
************ \ $*| has returned ((),0)                                                                         :2_2:Other "poop:
*********** / /*= lookAhead failed, delegating to plain /+=                                                     :2_2:Other "poop:
*********** / aboveNextLineKeyword                                                                               :3_2:UnDeeper:
************ / expectUnDeepers                                                                                  :3_2:UnDeeper:
************* / ignoring []                                                                                    :3_2:UnDeeper:
************* / matched undeepers [UnDeeper]                                                                :3_1:Or:
************ \ expectUnDeepers has returned 1                                                                   :3_2:UnDeeper:
************ / aNLK: determined undp_count = 1                                                                  :3_2:UnDeeper:
************ / ->| trying to consume 1 GoDeepers                                                                :3_2:UnDeeper:
************ / $*|                                                                                              :3_2:UnDeeper:
************ \ $*| has returned ((),0)                                                                          :3_2:UnDeeper:
*********** / /*= lookAhead failed, delegating to plain /+=                                                      :3_2:UnDeeper:
******** / withPreOnly                                                                                            :2_2:GoDeeper:
********* / $*|                                                                                                  :2_2:GoDeeper:
********** / pre part                                                                                           :2_2:GoDeeper:
*********** / aboveNextLineKeyword                                                                              :2_2:Other "poop:
************ / expectUnDeepers                                                                                 :2_2:Other "poop:
************* / ignoring ["poopoo"]                                                                            :3_2:UnDeeper:
************* / matched undeepers [UnDeeper]                                                                :3_1:Or:
************ \ expectUnDeepers has returned 1                                                                  :2_2:Other "poop:
************ / aNLK: determined undp_count = 1                                                                 :2_2:Other "poop:
************ / ->| trying to consume 1 GoDeepers                                                               :2_2:Other "poop:
************ / $*|                                                                                             :2_2:Other "poop:
************ \ $*| has returned ((),0)                                                                         :2_2:Other "poop:
*********** / /*= lookAhead failed, delegating to plain /+=                                                     :2_2:Other "poop:
*********** / aboveNextLineKeyword                                                                               :3_2:UnDeeper:
************ / expectUnDeepers                                                                                  :3_2:UnDeeper:
************* / ignoring []                                                                                    :3_2:UnDeeper:
************* / matched undeepers [UnDeeper]                                                                :3_1:Or:
************ \ expectUnDeepers has returned 1                                                                   :3_2:UnDeeper:
************ / aNLK: determined undp_count = 1                                                                  :3_2:UnDeeper:
************ / ->| trying to consume 1 GoDeepers                                                                :3_2:UnDeeper:
************ / $*|                                                                                              :3_2:UnDeeper:
************ \ $*| has returned ((),0)                                                                          :3_2:UnDeeper:
*********** / /*= lookAhead failed, delegating to plain /+=                                                      :3_2:UnDeeper:
**** / manyIndentation/deeper; calling someIndentation                                                               :2_1:Means:
***** / someIndentation                                                                                             :2_1:Means:
****** / myindented: consuming GoDeeper                                                                            :2_1:Means:
*** / pScenarioRule                                                                                                    :1_2:GoDeeper:
**** / pRuleLabel                                                                                                     :1_2:GoDeeper:
***** / $>|                                                                                                          :1_2:GoDeeper:
**** / pExpect                                                                                                        :1_2:GoDeeper:
*** / pHornlike                                                                                                        :1_2:GoDeeper:
**** / pSrcRef                                                                                                        :1_2:GoDeeper:
***** / pRuleLabel                                                                                                   :1_2:GoDeeper:
****** / $>|                                                                                                        :1_2:GoDeeper:
**** \ pSrcRef has returned (Nothing,Just (SrcRef {url = "test/inline-1-r.csv", short = "test/inline-1-r.csv", srcrow = 2, srccol = 1, version = Nothing})) :1_2:GoDeeper:
**** / pHornlike / permute                                                                                            :1_2:GoDeeper:
***** / whenCase                                                                                                     :1_2:GoDeeper:
****** / whenMeansIf                                                                                                :1_2:GoDeeper:
****** / Otherwise                                                                                                  :1_2:GoDeeper:
***** / pHornlike/uponLimb                                                                                           :1_2:GoDeeper:
****** / preambleParamText:[Upon]                                                                                   :1_2:GoDeeper:
******* / $>|                                                                                                      :1_2:GoDeeper:
***** / whenCase                                                                                                     :1_2:GoDeeper:
****** / whenMeansIf                                                                                                :1_2:GoDeeper:
****** / Otherwise                                                                                                  :1_2:GoDeeper:
***** / pHornlike/givenLimb                                                                                          :1_2:GoDeeper:
****** / preambleParamText:[Given]                                                                                  :1_2:GoDeeper:
******* / $>|                                                                                                      :1_2:GoDeeper:
***** / whenCase                                                                                                     :1_2:GoDeeper:
****** / whenMeansIf                                                                                                :1_2:GoDeeper:
****** / Otherwise                                                                                                  :1_2:GoDeeper:
***** / pHornlike/ambitious                                                                                          :1_2:GoDeeper:
****** / $>|                                                                                                        :1_2:GoDeeper:
***** / pHornlike/someStructure                                                                                      :1_2:GoDeeper:
****** / manyIndentation/leaf?                                                                                      :1_2:GoDeeper:
******* / relPredNextlineWhen                                                                                      :1_2:GoDeeper:
******** / pRelPred optIndentedTuple whenCase                                                                     :1_2:GoDeeper:
********* / optIndentedTuple                                                                                     :1_2:GoDeeper:
********** / optIndented                                                                                        :1_2:GoDeeper:
*********** / pRelPred                                                                                         :1_2:GoDeeper:
************ / slRelPred                                                                                      :1_2:GoDeeper:
************* / nested simpleHorn                                                                            :1_2:GoDeeper:
************** / |^|                                                                                        :1_2:GoDeeper:
************** / $*|                                                                                        :1_2:GoDeeper:
*************** / slMultiTerm                                                                              :1_2:GoDeeper:
**************** / |:| some                                                                               :1_2:GoDeeper:
***************** / |:| base parser                                                                      :1_2:GoDeeper:
****************** / pNumAsText                                                                         :1_2:GoDeeper:
************* / RPConstraint                                                                                 :1_2:GoDeeper:
************** / $*|                                                                                        :1_2:GoDeeper:
*************** / slMultiTerm                                                                              :1_2:GoDeeper:
**************** / |:| some                                                                               :1_2:GoDeeper:
***************** / |:| base parser                                                                      :1_2:GoDeeper:
****************** / pNumAsText                                                                         :1_2:GoDeeper:
************* / RPBoolStructR                                                                                :1_2:GoDeeper:
************** / $*|                                                                                        :1_2:GoDeeper:
*************** / slMultiTerm                                                                              :1_2:GoDeeper:
**************** / |:| some                                                                               :1_2:GoDeeper:
***************** / |:| base parser                                                                      :1_2:GoDeeper:
****************** / pNumAsText                                                                         :1_2:GoDeeper:
************* / RPMT                                                                                         :1_2:GoDeeper:
************** / $*|                                                                                        :1_2:GoDeeper:
*************** / slAKA                                                                                    :1_2:GoDeeper:
**************** / $*|                                                                                    :1_2:GoDeeper:
***************** / slAKA base                                                                           :1_2:GoDeeper:
****************** / slMultiTerm                                                                        :1_2:GoDeeper:
******************* / |:| some                                                                         :1_2:GoDeeper:
******************** / |:| base parser                                                                :1_2:GoDeeper:
********************* / pNumAsText                                                                   :1_2:GoDeeper:
******* / relPredSamelineWhen                                                                                      :1_2:GoDeeper:
******** / $*|                                                                                                    :1_2:GoDeeper:
********* / slRelPred                                                                                            :1_2:GoDeeper:
********** / nested simpleHorn                                                                                  :1_2:GoDeeper:
*********** / |^|                                                                                              :1_2:GoDeeper:
*********** / $*|                                                                                              :1_2:GoDeeper:
************ / slMultiTerm                                                                                    :1_2:GoDeeper:
************* / |:| some                                                                                     :1_2:GoDeeper:
************** / |:| base parser                                                                            :1_2:GoDeeper:
*************** / pNumAsText                                                                               :1_2:GoDeeper:
********** / RPConstraint                                                                                       :1_2:GoDeeper:
*********** / $*|                                                                                              :1_2:GoDeeper:
************ / slMultiTerm                                                                                    :1_2:GoDeeper:
************* / |:| some                                                                                     :1_2:GoDeeper:
************** / |:| base parser                                                                            :1_2:GoDeeper:
*************** / pNumAsText                                                                               :1_2:GoDeeper:
********** / RPBoolStructR                                                                                      :1_2:GoDeeper:
*********** / $*|                                                                                              :1_2:GoDeeper:
************ / slMultiTerm                                                                                    :1_2:GoDeeper:
************* / |:| some                                                                                     :1_2:GoDeeper:
************** / |:| base parser                                                                            :1_2:GoDeeper:
*************** / pNumAsText                                                                               :1_2:GoDeeper:
********** / RPMT                                                                                               :1_2:GoDeeper:
*********** / $*|                                                                                              :1_2:GoDeeper:
************ / slAKA                                                                                          :1_2:GoDeeper:
************* / $*|                                                                                          :1_2:GoDeeper:
************** / slAKA base                                                                                 :1_2:GoDeeper:
*************** / slMultiTerm                                                                              :1_2:GoDeeper:
**************** / |:| some                                                                               :1_2:GoDeeper:
***************** / |:| base parser                                                                      :1_2:GoDeeper:
****************** / pNumAsText                                                                         :1_2:GoDeeper:
****** / manyIndentation/deeper; calling someIndentation                                                            :1_2:GoDeeper:
******* / someIndentation                                                                                          :1_2:GoDeeper:
******** / myindented: consuming GoDeeper                                                                         :1_2:GoDeeper:
******** \ myindented: consuming GoDeeper has returned GoDeeper                                                    :1_2:Other "mult:
******** / manyIndentation/leaf?                                                                                   :1_2:Other "mult:
********* / relPredNextlineWhen                                                                                   :1_2:Other "mult:
********** / pRelPred optIndentedTuple whenCase                                                                  :1_2:Other "mult:
*********** / optIndentedTuple                                                                                  :1_2:Other "mult:
************ / optIndented                                                                                     :1_2:Other "mult:
************* / pRelPred                                                                                      :1_2:Other "mult:
************** / slRelPred                                                                                   :1_2:Other "mult:
*************** / nested simpleHorn                                                                         :1_2:Other "mult:
**************** / |^|                                                                                     :1_2:Other "mult:
**************** / $*|                                                                                     :1_2:Other "mult:
***************** / slMultiTerm                                                                           :1_2:Other "mult:
****************** / |:| some                                                                            :1_2:Other "mult:
******************* / |:| base parser                                                                   :1_2:Other "mult:
******************* \ |:| base parser has returned ("multiwonk",0)                                       :2_2:UnDeeper:
******************* / |:| deeper                                                                         :2_2:UnDeeper:
******************** / |:| some GoDeeper                                                                :2_2:UnDeeper:
******************* / |:| noMore                                                                         :2_2:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                     :2_2:UnDeeper:
****************** \ |:| some has returned (["multiwonk"],0)                                              :2_2:UnDeeper:
***************** \ slMultiTerm has returned (["multiwonk"],0)                                             :2_2:UnDeeper:
**************** \ $*| has returned (["multiwonk"],0)                                                       :2_2:UnDeeper:
**************** / |^| deeps                                                                                :2_2:UnDeeper:
**************** \ |^| deeps has returned [UnDeeper]                                                     :2_1:Means:
**************** / pBSR                                                                                   :2_2:GoDeeper:
***************** / ppp inner                                                                            :2_2:GoDeeper:
****************** / term p                                                                             :2_2:GoDeeper:
******************* / term p/1a:label directly above                                                   :2_2:GoDeeper:
******************** / $*|                                                                            :2_2:GoDeeper:
********************* / |:| some                                                                     :2_2:GoDeeper:
********************** / |:| base parser                                                            :2_2:GoDeeper:
*********************** / pNumAsText                                                               :2_2:GoDeeper:
******************* / term p/b:label to the left of line below, with EOL                               :2_2:GoDeeper:
******************** / |:| some                                                                       :2_2:GoDeeper:
********************* / |:| base parser                                                              :2_2:GoDeeper:
********************** / pNumAsText                                                                 :2_2:GoDeeper:
******************* / term p/notLabelTerm                                                              :2_2:GoDeeper:
******************** / term p/2:someIndentation expr p                                                :2_2:GoDeeper:
********************* / someIndentation                                                              :2_2:GoDeeper:
********************** / myindented: consuming GoDeeper                                             :2_2:GoDeeper:
********************** \ myindented: consuming GoDeeper has returned GoDeeper                        :2_2:Other "poop:
********************** / manyIndentation/leaf?                                                       :2_2:Other "poop:
*********************** / term p                                                                    :2_2:Other "poop:
************************ / term p/1a:label directly above                                          :2_2:Other "poop:
************************* / $*|                                                                   :2_2:Other "poop:
************************** / |:| some                                                            :2_2:Other "poop:
*************************** / |:| base parser                                                   :2_2:Other "poop:
*************************** \ |:| base parser has returned ("poopoo",0)                          :3_2:UnDeeper:
*************************** / |:| deeper                                                         :3_2:UnDeeper:
**************************** / |:| some GoDeeper                                                :3_2:UnDeeper:
*************************** / |:| noMore                                                         :3_2:UnDeeper:
*************************** \ |:| noMore has returned ([],0)                                     :3_2:UnDeeper:
************************** \ |:| some has returned (["poopoo"],0)                                 :3_2:UnDeeper:
************************** / pNumAsText                                                           :3_2:UnDeeper:
************************ / term p/b:label to the left of line below, with EOL                      :2_2:Other "poop:
************************* / |:| some                                                              :2_2:Other "poop:
************************** / |:| base parser                                                     :2_2:Other "poop:
************************** \ |:| base parser has returned ("poopoo",0)                            :3_2:UnDeeper:
************************** / |:| deeper                                                           :3_2:UnDeeper:
*************************** / |:| some GoDeeper                                                  :3_2:UnDeeper:
************************** / |:| noMore                                                           :3_2:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                       :3_2:UnDeeper:
************************* \ |:| some has returned (["poopoo"],0)                                   :3_2:UnDeeper:
************************* / undeepers                                                              :3_2:UnDeeper:
************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :3_2:UnDeeper:
************************** / sameLine: success!                                                   :3_2:UnDeeper:
************************* \ undeepers has returned ()                                              :3_2:UnDeeper:
************************* / matching EOL                                                           :3_2:UnDeeper:
************************ / term p/notLabelTerm                                                     :2_2:Other "poop:
************************* / term p/2:someIndentation expr p                                       :2_2:Other "poop:
************************** / someIndentation                                                     :2_2:Other "poop:
*************************** / myindented: consuming GoDeeper                                    :2_2:Other "poop:
************************* / term p/3:plain p                                                      :2_2:Other "poop:
************************** / pRelPred                                                            :2_2:Other "poop:
*************************** / slRelPred                                                         :2_2:Other "poop:
**************************** / nested simpleHorn                                               :2_2:Other "poop:
***************************** / |^|                                                           :2_2:Other "poop:
***************************** / $*|                                                           :2_2:Other "poop:
****************************** / slMultiTerm                                                 :2_2:Other "poop:
******************************* / |:| some                                                  :2_2:Other "poop:
******************************** / |:| base parser                                         :2_2:Other "poop:
******************************** \ |:| base parser has returned ("poopoo",0)                :3_2:UnDeeper:
******************************** / |:| deeper                                               :3_2:UnDeeper:
********************************* / |:| some GoDeeper                                      :3_2:UnDeeper:
******************************** / |:| noMore                                               :3_2:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                           :3_2:UnDeeper:
******************************* \ |:| some has returned (["poopoo"],0)                       :3_2:UnDeeper:
****************************** \ slMultiTerm has returned (["poopoo"],0)                      :3_2:UnDeeper:
***************************** \ $*| has returned (["poopoo"],0)                                :3_2:UnDeeper:
***************************** / |^| deeps                                                      :3_2:UnDeeper:
***************************** \ |^| deeps has returned [UnDeeper]                           :3_1:Or:
**************************** / RPConstraint                                                    :2_2:Other "poop:
***************************** / $*|                                                           :2_2:Other "poop:
****************************** / slMultiTerm                                                 :2_2:Other "poop:
******************************* / |:| some                                                  :2_2:Other "poop:
******************************** / |:| base parser                                         :2_2:Other "poop:
******************************** \ |:| base parser has returned ("poopoo",0)                :3_2:UnDeeper:
******************************** / |:| deeper                                               :3_2:UnDeeper:
********************************* / |:| some GoDeeper                                      :3_2:UnDeeper:
******************************** / |:| noMore                                               :3_2:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                           :3_2:UnDeeper:
******************************* \ |:| some has returned (["poopoo"],0)                       :3_2:UnDeeper:
****************************** \ slMultiTerm has returned (["poopoo"],0)                      :3_2:UnDeeper:
***************************** \ $*| has returned (["poopoo"],0)                                :3_2:UnDeeper:
***************************** / |>| calling $>>                                                :3_2:UnDeeper:
****************************** / $>>                                                          :3_2:UnDeeper:
******************************* / $>>/recurse                                                :3_2:UnDeeper:
******************************* / $>>/base                                                   :3_2:UnDeeper:
**************************** / RPBoolStructR                                                   :2_2:Other "poop:
***************************** / $*|                                                           :2_2:Other "poop:
****************************** / slMultiTerm                                                 :2_2:Other "poop:
******************************* / |:| some                                                  :2_2:Other "poop:
******************************** / |:| base parser                                         :2_2:Other "poop:
******************************** \ |:| base parser has returned ("poopoo",0)                :3_2:UnDeeper:
******************************** / |:| deeper                                               :3_2:UnDeeper:
********************************* / |:| some GoDeeper                                      :3_2:UnDeeper:
******************************** / |:| noMore                                               :3_2:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                           :3_2:UnDeeper:
******************************* \ |:| some has returned (["poopoo"],0)                       :3_2:UnDeeper:
****************************** \ slMultiTerm has returned (["poopoo"],0)                      :3_2:UnDeeper:
***************************** \ $*| has returned (["poopoo"],0)                                :3_2:UnDeeper:
***************************** / |>| calling $>>                                                :3_2:UnDeeper:
****************************** / $>>                                                          :3_2:UnDeeper:
******************************* / $>>/recurse                                                :3_2:UnDeeper:
******************************* / $>>/base                                                   :3_2:UnDeeper:
**************************** / RPMT                                                            :2_2:Other "poop:
***************************** / $*|                                                           :2_2:Other "poop:
****************************** / slAKA                                                       :2_2:Other "poop:
******************************* / $*|                                                       :2_2:Other "poop:
******************************** / slAKA base                                              :2_2:Other "poop:
********************************* / slMultiTerm                                           :2_2:Other "poop:
********************************** / |:| some                                            :2_2:Other "poop:
*********************************** / |:| base parser                                   :2_2:Other "poop:
*********************************** \ |:| base parser has returned ("poopoo",0)          :3_2:UnDeeper:
*********************************** / |:| deeper                                         :3_2:UnDeeper:
************************************ / |:| some GoDeeper                                :3_2:UnDeeper:
*********************************** / |:| noMore                                         :3_2:UnDeeper:
*********************************** \ |:| noMore has returned ([],0)                     :3_2:UnDeeper:
********************************** \ |:| some has returned (["poopoo"],0)                 :3_2:UnDeeper:
********************************* \ slMultiTerm has returned (["poopoo"],0)                :3_2:UnDeeper:
******************************** \ slAKA base has returned (["poopoo"],0)                   :3_2:UnDeeper:
******************************* \ $*| has returned (["poopoo"],0)                            :3_2:UnDeeper:
******************************* / |>>                                                        :3_2:UnDeeper:
******************************** / |>>/recurse                                              :3_2:UnDeeper:
******************************** / |>>/base                                                 :3_2:UnDeeper:
********************************* / slAKA optional akapart                                 :3_2:UnDeeper:
********************************** / |?| optional something                               :3_2:UnDeeper:
*********************************** / |>>                                                :3_2:UnDeeper:
************************************ / |>>/recurse                                      :3_2:UnDeeper:
************************************ / |>>/base                                         :3_2:UnDeeper:
************************************* / PAKA/akapart                                   :3_2:UnDeeper:
************************************** / $>|                                          :3_2:UnDeeper:
*************************************** / Aka Token                                  :3_2:UnDeeper:
********************************** \ |?| optional something has returned (Nothing,0)      :3_2:UnDeeper:
********************************* \ slAKA optional akapart has returned (Nothing,0)        :3_2:UnDeeper:
********************************* / |>>/base got Nothing                                   :3_2:UnDeeper:
******************************** \ |>>/base has returned (Nothing,0)                        :3_2:UnDeeper:
******************************* \ |>> has returned (Nothing,0)                               :3_2:UnDeeper:
******************************* / |>>                                                        :3_2:UnDeeper:
******************************** / |>>/recurse                                              :3_2:UnDeeper:
******************************** / |>>/base                                                 :3_2:UnDeeper:
********************************* / slAKA optional typically                               :3_2:UnDeeper:
********************************** / |?| optional something                               :3_2:UnDeeper:
*********************************** / |>>                                                :3_2:UnDeeper:
************************************ / |>>/recurse                                      :3_2:UnDeeper:
************************************ / |>>/base                                         :3_2:UnDeeper:
************************************* / typically                                      :3_2:UnDeeper:
************************************** / $>|                                          :3_2:UnDeeper:
********************************** \ |?| optional something has returned (Nothing,0)      :3_2:UnDeeper:
********************************* \ slAKA optional typically has returned (Nothing,0)      :3_2:UnDeeper:
********************************* / |>>/base got Nothing                                   :3_2:UnDeeper:
******************************** \ |>>/base has returned (Nothing,0)                        :3_2:UnDeeper:
******************************* \ |>> has returned (Nothing,0)                               :3_2:UnDeeper:
******************************* / slAKA: proceeding after base and entityalias are retrieved ... :3_2:UnDeeper:
******************************* / pAKA: entityalias = Nothing                                :3_2:UnDeeper:
****************************** \ slAKA has returned (["poopoo"],0)                            :3_2:UnDeeper:
***************************** \ $*| has returned (["poopoo"],0)                                :3_2:UnDeeper:
**************************** \ RPMT has returned (RPMT ["poopoo"],0)                            :3_2:UnDeeper:
*************************** \ slRelPred has returned (RPMT ["poopoo"],0)                         :3_2:UnDeeper:
*************************** / undeepers                                                          :3_2:UnDeeper:
**************************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :3_2:UnDeeper:
**************************** / sameLine: success!                                               :3_2:UnDeeper:
*************************** \ undeepers has returned ()                                          :3_2:UnDeeper:
************************** \ pRelPred has returned RPMT ["poopoo"]                                :3_2:UnDeeper:
************************* \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                 :3_2:UnDeeper:
************************ \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                :3_2:UnDeeper:
*********************** \ term p has returned MyLeaf (RPMT ["poopoo"])                               :3_2:UnDeeper:
*********************** / binary(Or)                                                                 :3_2:UnDeeper:
*********************** / binary(And)                                                                :3_2:UnDeeper:
*********************** / binary(SetLess)                                                            :3_2:UnDeeper:
*********************** / binary(SetPlus)                                                            :3_2:UnDeeper:
********************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                  :3_2:UnDeeper:
********************** / myindented: consuming UnDeeper                                               :3_2:UnDeeper:
********************** \ myindented: consuming UnDeeper has returned UnDeeper                      :3_1:Or:
********************* \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                       :3_1:Or:
******************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])         :3_1:Or:
******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                       :3_1:Or:
****************** \ term p has returned MyLeaf (RPMT ["poopoo"])                                      :3_1:Or:
****************** / binary(Or)                                                                        :3_1:Or:
****************** \ binary(Or) has returned Or                                                         :3_2:GoDeeper:
****************** / term p                                                                             :3_2:GoDeeper:
******************* / term p/1a:label directly above                                                   :3_2:GoDeeper:
******************** / $*|                                                                            :3_2:GoDeeper:
********************* / |:| some                                                                     :3_2:GoDeeper:
********************** / |:| base parser                                                            :3_2:GoDeeper:
*********************** / pNumAsText                                                               :3_2:GoDeeper:
******************* / term p/b:label to the left of line below, with EOL                               :3_2:GoDeeper:
******************** / |:| some                                                                       :3_2:GoDeeper:
********************* / |:| base parser                                                              :3_2:GoDeeper:
********************** / pNumAsText                                                                 :3_2:GoDeeper:
******************* / term p/notLabelTerm                                                              :3_2:GoDeeper:
******************** / term p/2:someIndentation expr p                                                :3_2:GoDeeper:
********************* / someIndentation                                                              :3_2:GoDeeper:
********************** / myindented: consuming GoDeeper                                             :3_2:GoDeeper:
********************** \ myindented: consuming GoDeeper has returned GoDeeper                        :3_2:Other "the":
********************** / manyIndentation/leaf?                                                       :3_2:Other "the":
*********************** / term p                                                                    :3_2:Other "the":
************************ / term p/1a:label directly above                                          :3_2:Other "the":
************************* / $*|                                                                   :3_2:Other "the":
************************** / |:| some                                                            :3_2:Other "the":
*************************** / |:| base parser                                                   :3_2:Other "the":
*************************** \ |:| base parser has returned ("the",0)                             :3_3:GoDeeper:
*************************** / |:| deeper                                                         :3_3:GoDeeper:
**************************** / |:| some GoDeeper                                                :3_3:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]           :3_5:Other "honk:
**************************** / |:| some                                                              :3_5:Other "honk:
***************************** / |:| base parser                                                     :3_5:Other "honk:
***************************** \ |:| base parser has returned ("honk",0)                              :4_5:UnDeeper:
***************************** / |:| deeper                                                           :4_5:UnDeeper:
****************************** / |:| some GoDeeper                                                  :4_5:UnDeeper:
***************************** / |:| noMore                                                           :4_5:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                       :4_5:UnDeeper:
**************************** \ |:| some has returned (["honk"],0)                                     :4_5:UnDeeper:
*************************** \ |:| deeper has returned (["honk"],3)                                     :4_5:UnDeeper:
************************** \ |:| some has returned (["the","honk"],3)                                   :4_5:UnDeeper:
************************** / pNumAsText                                                                 :4_5:UnDeeper:
************************ / term p/b:label to the left of line below, with EOL                      :3_2:Other "the":
************************* / |:| some                                                              :3_2:Other "the":
************************** / |:| base parser                                                     :3_2:Other "the":
************************** \ |:| base parser has returned ("the",0)                               :3_3:GoDeeper:
************************** / |:| deeper                                                           :3_3:GoDeeper:
*************************** / |:| some GoDeeper                                                  :3_3:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :3_5:Other "honk:
*************************** / |:| some                                                                :3_5:Other "honk:
**************************** / |:| base parser                                                       :3_5:Other "honk:
**************************** \ |:| base parser has returned ("honk",0)                                :4_5:UnDeeper:
**************************** / |:| deeper                                                             :4_5:UnDeeper:
***************************** / |:| some GoDeeper                                                    :4_5:UnDeeper:
**************************** / |:| noMore                                                             :4_5:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                         :4_5:UnDeeper:
*************************** \ |:| some has returned (["honk"],0)                                       :4_5:UnDeeper:
************************** \ |:| deeper has returned (["honk"],3)                                       :4_5:UnDeeper:
************************* \ |:| some has returned (["the","honk"],3)                                     :4_5:UnDeeper:
************************* / undeepers                                                                    :4_5:UnDeeper:
************************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers     :4_5:UnDeeper:
************************ / term p/notLabelTerm                                                     :3_2:Other "the":
************************* / term p/2:someIndentation expr p                                       :3_2:Other "the":
************************** / someIndentation                                                     :3_2:Other "the":
*************************** / myindented: consuming GoDeeper                                    :3_2:Other "the":
************************* / term p/3:plain p                                                      :3_2:Other "the":
************************** / pRelPred                                                            :3_2:Other "the":
*************************** / slRelPred                                                         :3_2:Other "the":
**************************** / nested simpleHorn                                               :3_2:Other "the":
***************************** / |^|                                                           :3_2:Other "the":
***************************** / $*|                                                           :3_2:Other "the":
****************************** / slMultiTerm                                                 :3_2:Other "the":
******************************* / |:| some                                                  :3_2:Other "the":
******************************** / |:| base parser                                         :3_2:Other "the":
******************************** \ |:| base parser has returned ("the",0)                   :3_3:GoDeeper:
******************************** / |:| deeper                                               :3_3:GoDeeper:
********************************* / |:| some GoDeeper                                      :3_3:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :3_5:Other "honk:
********************************* / |:| some                                                    :3_5:Other "honk:
********************************** / |:| base parser                                           :3_5:Other "honk:
********************************** \ |:| base parser has returned ("honk",0)                    :4_5:UnDeeper:
********************************** / |:| deeper                                                 :4_5:UnDeeper:
*********************************** / |:| some GoDeeper                                        :4_5:UnDeeper:
********************************** / |:| noMore                                                 :4_5:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                             :4_5:UnDeeper:
********************************* \ |:| some has returned (["honk"],0)                           :4_5:UnDeeper:
******************************** \ |:| deeper has returned (["honk"],3)                           :4_5:UnDeeper:
******************************* \ |:| some has returned (["the","honk"],3)                         :4_5:UnDeeper:
****************************** \ slMultiTerm has returned (["the","honk"],3)                        :4_5:UnDeeper:
***************************** \ $*| has returned (["the","honk"],3)                                  :4_5:UnDeeper:
***************************** / |^| deeps                                                            :4_5:UnDeeper:
***************************** \ |^| deeps has returned [UnDeeper]                                 :4_4:Or:
**************************** / RPConstraint                                                    :3_2:Other "the":
***************************** / $*|                                                           :3_2:Other "the":
****************************** / slMultiTerm                                                 :3_2:Other "the":
******************************* / |:| some                                                  :3_2:Other "the":
******************************** / |:| base parser                                         :3_2:Other "the":
******************************** \ |:| base parser has returned ("the",0)                   :3_3:GoDeeper:
******************************** / |:| deeper                                               :3_3:GoDeeper:
********************************* / |:| some GoDeeper                                      :3_3:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :3_5:Other "honk:
********************************* / |:| some                                                    :3_5:Other "honk:
********************************** / |:| base parser                                           :3_5:Other "honk:
********************************** \ |:| base parser has returned ("honk",0)                    :4_5:UnDeeper:
********************************** / |:| deeper                                                 :4_5:UnDeeper:
*********************************** / |:| some GoDeeper                                        :4_5:UnDeeper:
********************************** / |:| noMore                                                 :4_5:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                             :4_5:UnDeeper:
********************************* \ |:| some has returned (["honk"],0)                           :4_5:UnDeeper:
******************************** \ |:| deeper has returned (["honk"],3)                           :4_5:UnDeeper:
******************************* \ |:| some has returned (["the","honk"],3)                         :4_5:UnDeeper:
****************************** \ slMultiTerm has returned (["the","honk"],3)                        :4_5:UnDeeper:
***************************** \ $*| has returned (["the","honk"],3)                                  :4_5:UnDeeper:
***************************** / |>| calling $>>                                                      :4_5:UnDeeper:
****************************** / $>>                                                                :4_5:UnDeeper:
******************************* / $>>/recurse                                                      :4_5:UnDeeper:
******************************* / $>>/base                                                         :4_5:UnDeeper:
**************************** / RPBoolStructR                                                   :3_2:Other "the":
***************************** / $*|                                                           :3_2:Other "the":
****************************** / slMultiTerm                                                 :3_2:Other "the":
******************************* / |:| some                                                  :3_2:Other "the":
******************************** / |:| base parser                                         :3_2:Other "the":
******************************** \ |:| base parser has returned ("the",0)                   :3_3:GoDeeper:
******************************** / |:| deeper                                               :3_3:GoDeeper:
********************************* / |:| some GoDeeper                                      :3_3:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :3_5:Other "honk:
********************************* / |:| some                                                    :3_5:Other "honk:
********************************** / |:| base parser                                           :3_5:Other "honk:
********************************** \ |:| base parser has returned ("honk",0)                    :4_5:UnDeeper:
********************************** / |:| deeper                                                 :4_5:UnDeeper:
*********************************** / |:| some GoDeeper                                        :4_5:UnDeeper:
********************************** / |:| noMore                                                 :4_5:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                             :4_5:UnDeeper:
********************************* \ |:| some has returned (["honk"],0)                           :4_5:UnDeeper:
******************************** \ |:| deeper has returned (["honk"],3)                           :4_5:UnDeeper:
******************************* \ |:| some has returned (["the","honk"],3)                         :4_5:UnDeeper:
****************************** \ slMultiTerm has returned (["the","honk"],3)                        :4_5:UnDeeper:
***************************** \ $*| has returned (["the","honk"],3)                                  :4_5:UnDeeper:
***************************** / |>| calling $>>                                                      :4_5:UnDeeper:
****************************** / $>>                                                                :4_5:UnDeeper:
******************************* / $>>/recurse                                                      :4_5:UnDeeper:
******************************* / $>>/base                                                         :4_5:UnDeeper:
**************************** / RPMT                                                            :3_2:Other "the":
***************************** / $*|                                                           :3_2:Other "the":
****************************** / slAKA                                                       :3_2:Other "the":
******************************* / $*|                                                       :3_2:Other "the":
******************************** / slAKA base                                              :3_2:Other "the":
********************************* / slMultiTerm                                           :3_2:Other "the":
********************************** / |:| some                                            :3_2:Other "the":
*********************************** / |:| base parser                                   :3_2:Other "the":
*********************************** \ |:| base parser has returned ("the",0)             :3_3:GoDeeper:
*********************************** / |:| deeper                                         :3_3:GoDeeper:
************************************ / |:| some GoDeeper                                :3_3:GoDeeper:
************************************ \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :3_5:Other "honk:
************************************ / |:| some                                              :3_5:Other "honk:
************************************* / |:| base parser                                     :3_5:Other "honk:
************************************* \ |:| base parser has returned ("honk",0)              :4_5:UnDeeper:
************************************* / |:| deeper                                           :4_5:UnDeeper:
************************************** / |:| some GoDeeper                                  :4_5:UnDeeper:
************************************* / |:| noMore                                           :4_5:UnDeeper:
************************************* \ |:| noMore has returned ([],0)                       :4_5:UnDeeper:
************************************ \ |:| some has returned (["honk"],0)                     :4_5:UnDeeper:
*********************************** \ |:| deeper has returned (["honk"],3)                     :4_5:UnDeeper:
********************************** \ |:| some has returned (["the","honk"],3)                   :4_5:UnDeeper:
********************************* \ slMultiTerm has returned (["the","honk"],3)                  :4_5:UnDeeper:
******************************** \ slAKA base has returned (["the","honk"],3)                     :4_5:UnDeeper:
******************************* \ $*| has returned (["the","honk"],3)                              :4_5:UnDeeper:
******************************* / |>>                                                              :4_5:UnDeeper:
******************************** / |>>/recurse                                                    :4_5:UnDeeper:
******************************** / |>>/base                                                       :4_5:UnDeeper:
********************************* / slAKA optional akapart                                       :4_5:UnDeeper:
********************************** / |?| optional something                                     :4_5:UnDeeper:
*********************************** / |>>                                                      :4_5:UnDeeper:
************************************ / |>>/recurse                                            :4_5:UnDeeper:
************************************ / |>>/base                                               :4_5:UnDeeper:
************************************* / PAKA/akapart                                         :4_5:UnDeeper:
************************************** / $>|                                                :4_5:UnDeeper:
*************************************** / Aka Token                                        :4_5:UnDeeper:
********************************** \ |?| optional something has returned (Nothing,0)            :4_5:UnDeeper:
********************************* \ slAKA optional akapart has returned (Nothing,0)              :4_5:UnDeeper:
********************************* / |>>/base got Nothing                                         :4_5:UnDeeper:
******************************** \ |>>/base has returned (Nothing,0)                              :4_5:UnDeeper:
******************************* \ |>> has returned (Nothing,0)                                     :4_5:UnDeeper:
******************************* / |>>                                                              :4_5:UnDeeper:
******************************** / |>>/recurse                                                    :4_5:UnDeeper:
******************************** / |>>/base                                                       :4_5:UnDeeper:
********************************* / slAKA optional typically                                     :4_5:UnDeeper:
********************************** / |?| optional something                                     :4_5:UnDeeper:
*********************************** / |>>                                                      :4_5:UnDeeper:
************************************ / |>>/recurse                                            :4_5:UnDeeper:
************************************ / |>>/base                                               :4_5:UnDeeper:
************************************* / typically                                            :4_5:UnDeeper:
************************************** / $>|                                                :4_5:UnDeeper:
********************************** \ |?| optional something has returned (Nothing,0)            :4_5:UnDeeper:
********************************* \ slAKA optional typically has returned (Nothing,0)            :4_5:UnDeeper:
********************************* / |>>/base got Nothing                                         :4_5:UnDeeper:
******************************** \ |>>/base has returned (Nothing,0)                              :4_5:UnDeeper:
******************************* \ |>> has returned (Nothing,0)                                     :4_5:UnDeeper:
******************************* / slAKA: proceeding after base and entityalias are retrieved ...   :4_5:UnDeeper:
******************************* / pAKA: entityalias = Nothing                                      :4_5:UnDeeper:
****************************** \ slAKA has returned (["the","honk"],3)                              :4_5:UnDeeper:
***************************** \ $*| has returned (["the","honk"],3)                                  :4_5:UnDeeper:
**************************** \ RPMT has returned (RPMT ["the","honk"],3)                              :4_5:UnDeeper:
*************************** \ slRelPred has returned (RPMT ["the","honk"],3)                           :4_5:UnDeeper:
*************************** / undeepers                                                                :4_5:UnDeeper:
**************************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers :4_5:UnDeeper:
********************** / manyIndentation/deeper; calling someIndentation                             :3_2:Other "the":
*********************** / someIndentation                                                           :3_2:Other "the":
************************ / myindented: consuming GoDeeper                                          :3_2:Other "the":
******************** / term p/3:plain p                                                               :3_2:GoDeeper:
********************* / pRelPred                                                                     :3_2:GoDeeper:
********************** / slRelPred                                                                  :3_2:GoDeeper:
*********************** / nested simpleHorn                                                        :3_2:GoDeeper:
************************ / |^|                                                                    :3_2:GoDeeper:
************************ / $*|                                                                    :3_2:GoDeeper:
************************* / slMultiTerm                                                          :3_2:GoDeeper:
************************** / |:| some                                                           :3_2:GoDeeper:
*************************** / |:| base parser                                                  :3_2:GoDeeper:
**************************** / pNumAsText                                                     :3_2:GoDeeper:
*********************** / RPConstraint                                                             :3_2:GoDeeper:
************************ / $*|                                                                    :3_2:GoDeeper:
************************* / slMultiTerm                                                          :3_2:GoDeeper:
************************** / |:| some                                                           :3_2:GoDeeper:
*************************** / |:| base parser                                                  :3_2:GoDeeper:
**************************** / pNumAsText                                                     :3_2:GoDeeper:
*********************** / RPBoolStructR                                                            :3_2:GoDeeper:
************************ / $*|                                                                    :3_2:GoDeeper:
************************* / slMultiTerm                                                          :3_2:GoDeeper:
************************** / |:| some                                                           :3_2:GoDeeper:
*************************** / |:| base parser                                                  :3_2:GoDeeper:
**************************** / pNumAsText                                                     :3_2:GoDeeper:
*********************** / RPMT                                                                     :3_2:GoDeeper:
************************ / $*|                                                                    :3_2:GoDeeper:
************************* / slAKA                                                                :3_2:GoDeeper:
************************** / $*|                                                                :3_2:GoDeeper:
*************************** / slAKA base                                                       :3_2:GoDeeper:
**************************** / slMultiTerm                                                    :3_2:GoDeeper:
***************************** / |:| some                                                     :3_2:GoDeeper:
****************************** / |:| base parser                                            :3_2:GoDeeper:
******************************* / pNumAsText                                               :3_2:GoDeeper:
***************** / withPrePost                                                                          :2_2:GoDeeper:
****************** / |<* starting                                                                       :2_2:GoDeeper:
****************** / $*|                                                                                :2_2:GoDeeper:
******************* / pre part                                                                         :2_2:GoDeeper:
******************** / aboveNextLineKeyword                                                            :2_2:Other "poop:
********************* / expectUnDeepers                                                               :2_2:Other "poop:
********************** / ignoring ["poopoo"]                                                          :3_2:UnDeeper:
********************** / matched undeepers [UnDeeper]                                              :3_1:Or:
********************* \ expectUnDeepers has returned 1                                                :2_2:Other "poop:
********************* / aNLK: determined undp_count = 1                                               :2_2:Other "poop:
********************* / ->| trying to consume 1 GoDeepers                                             :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************* \ $*| has returned ((),0)                                                       :2_2:Other "poop:
******************** / /*= lookAhead failed, delegating to plain /+=                                   :2_2:Other "poop:
******************** / aboveNextLineKeyword                                                             :3_2:UnDeeper:
********************* / expectUnDeepers                                                                :3_2:UnDeeper:
********************** / ignoring []                                                                  :3_2:UnDeeper:
********************** / matched undeepers [UnDeeper]                                              :3_1:Or:
********************* \ expectUnDeepers has returned 1                                                 :3_2:UnDeeper:
********************* / aNLK: determined undp_count = 1                                                :3_2:UnDeeper:
********************* / ->| trying to consume 1 GoDeepers                                              :3_2:UnDeeper:
********************* / $*|                                                                            :3_2:UnDeeper:
********************* \ $*| has returned ((),0)                                                        :3_2:UnDeeper:
******************** / /*= lookAhead failed, delegating to plain /+=                                    :3_2:UnDeeper:
***************** / withPreOnly                                                                          :2_2:GoDeeper:
****************** / $*|                                                                                :2_2:GoDeeper:
******************* / pre part                                                                         :2_2:GoDeeper:
******************** / aboveNextLineKeyword                                                            :2_2:Other "poop:
********************* / expectUnDeepers                                                               :2_2:Other "poop:
********************** / ignoring ["poopoo"]                                                          :3_2:UnDeeper:
********************** / matched undeepers [UnDeeper]                                              :3_1:Or:
********************* \ expectUnDeepers has returned 1                                                :2_2:Other "poop:
********************* / aNLK: determined undp_count = 1                                               :2_2:Other "poop:
********************* / ->| trying to consume 1 GoDeepers                                             :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************* \ $*| has returned ((),0)                                                       :2_2:Other "poop:
******************** / /*= lookAhead failed, delegating to plain /+=                                   :2_2:Other "poop:
******************** / aboveNextLineKeyword                                                             :3_2:UnDeeper:
********************* / expectUnDeepers                                                                :3_2:UnDeeper:
********************** / ignoring []                                                                  :3_2:UnDeeper:
********************** / matched undeepers [UnDeeper]                                              :3_1:Or:
********************* \ expectUnDeepers has returned 1                                                 :3_2:UnDeeper:
********************* / aNLK: determined undp_count = 1                                                :3_2:UnDeeper:
********************* / ->| trying to consume 1 GoDeepers                                              :3_2:UnDeeper:
********************* / $*|                                                                            :3_2:UnDeeper:
********************* \ $*| has returned ((),0)                                                        :3_2:UnDeeper:
******************** / /*= lookAhead failed, delegating to plain /+=                                    :3_2:UnDeeper:
*************** / RPConstraint                                                                              :1_2:Other "mult:
**************** / $*|                                                                                     :1_2:Other "mult:
***************** / slMultiTerm                                                                           :1_2:Other "mult:
****************** / |:| some                                                                            :1_2:Other "mult:
******************* / |:| base parser                                                                   :1_2:Other "mult:
******************* \ |:| base parser has returned ("multiwonk",0)                                       :2_2:UnDeeper:
******************* / |:| deeper                                                                         :2_2:UnDeeper:
******************** / |:| some GoDeeper                                                                :2_2:UnDeeper:
******************* / |:| noMore                                                                         :2_2:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                     :2_2:UnDeeper:
****************** \ |:| some has returned (["multiwonk"],0)                                              :2_2:UnDeeper:
***************** \ slMultiTerm has returned (["multiwonk"],0)                                             :2_2:UnDeeper:
**************** \ $*| has returned (["multiwonk"],0)                                                       :2_2:UnDeeper:
**************** / |>| calling $>>                                                                          :2_2:UnDeeper:
***************** / $>>                                                                                    :2_2:UnDeeper:
****************** / $>>/recurse                                                                          :2_2:UnDeeper:
****************** / $>>/base                                                                             :2_2:UnDeeper:
*************** / RPBoolStructR                                                                             :1_2:Other "mult:
**************** / $*|                                                                                     :1_2:Other "mult:
***************** / slMultiTerm                                                                           :1_2:Other "mult:
****************** / |:| some                                                                            :1_2:Other "mult:
******************* / |:| base parser                                                                   :1_2:Other "mult:
******************* \ |:| base parser has returned ("multiwonk",0)                                       :2_2:UnDeeper:
******************* / |:| deeper                                                                         :2_2:UnDeeper:
******************** / |:| some GoDeeper                                                                :2_2:UnDeeper:
******************* / |:| noMore                                                                         :2_2:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                     :2_2:UnDeeper:
****************** \ |:| some has returned (["multiwonk"],0)                                              :2_2:UnDeeper:
***************** \ slMultiTerm has returned (["multiwonk"],0)                                             :2_2:UnDeeper:
**************** \ $*| has returned (["multiwonk"],0)                                                       :2_2:UnDeeper:
**************** / |>| calling $>>                                                                          :2_2:UnDeeper:
***************** / $>>                                                                                    :2_2:UnDeeper:
****************** / $>>/recurse                                                                          :2_2:UnDeeper:
****************** / $>>/base                                                                             :2_2:UnDeeper:
*************** / RPMT                                                                                      :1_2:Other "mult:
**************** / $*|                                                                                     :1_2:Other "mult:
***************** / slAKA                                                                                 :1_2:Other "mult:
****************** / $*|                                                                                 :1_2:Other "mult:
******************* / slAKA base                                                                        :1_2:Other "mult:
******************** / slMultiTerm                                                                     :1_2:Other "mult:
********************* / |:| some                                                                      :1_2:Other "mult:
********************** / |:| base parser                                                             :1_2:Other "mult:
********************** \ |:| base parser has returned ("multiwonk",0)                                 :2_2:UnDeeper:
********************** / |:| deeper                                                                   :2_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :2_2:UnDeeper:
********************** / |:| noMore                                                                   :2_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :2_2:UnDeeper:
********************* \ |:| some has returned (["multiwonk"],0)                                        :2_2:UnDeeper:
******************** \ slMultiTerm has returned (["multiwonk"],0)                                       :2_2:UnDeeper:
******************* \ slAKA base has returned (["multiwonk"],0)                                          :2_2:UnDeeper:
****************** \ $*| has returned (["multiwonk"],0)                                                   :2_2:UnDeeper:
****************** / |>>                                                                                  :2_2:UnDeeper:
******************* / |>>/recurse                                                                        :2_2:UnDeeper:
******************* / |>>/base                                                                           :2_2:UnDeeper:
******************** / slAKA optional akapart                                                           :2_2:UnDeeper:
********************* / |?| optional something                                                         :2_2:UnDeeper:
********************** / |>>                                                                          :2_2:UnDeeper:
*********************** / |>>/recurse                                                                :2_2:UnDeeper:
*********************** / |>>/base                                                                   :2_2:UnDeeper:
************************ / PAKA/akapart                                                             :2_2:UnDeeper:
************************* / $>|                                                                    :2_2:UnDeeper:
************************** / Aka Token                                                            :2_2:UnDeeper:
********************* \ |?| optional something has returned (Nothing,0)                                :2_2:UnDeeper:
******************** \ slAKA optional akapart has returned (Nothing,0)                                  :2_2:UnDeeper:
******************** / |>>/base got Nothing                                                             :2_2:UnDeeper:
******************* \ |>>/base has returned (Nothing,0)                                                  :2_2:UnDeeper:
****************** \ |>> has returned (Nothing,0)                                                         :2_2:UnDeeper:
****************** / |>>                                                                                  :2_2:UnDeeper:
******************* / |>>/recurse                                                                        :2_2:UnDeeper:
******************* / |>>/base                                                                           :2_2:UnDeeper:
******************** / slAKA optional typically                                                         :2_2:UnDeeper:
********************* / |?| optional something                                                         :2_2:UnDeeper:
********************** / |>>                                                                          :2_2:UnDeeper:
*********************** / |>>/recurse                                                                :2_2:UnDeeper:
*********************** / |>>/base                                                                   :2_2:UnDeeper:
************************ / typically                                                                :2_2:UnDeeper:
************************* / $>|                                                                    :2_2:UnDeeper:
********************* \ |?| optional something has returned (Nothing,0)                                :2_2:UnDeeper:
******************** \ slAKA optional typically has returned (Nothing,0)                                :2_2:UnDeeper:
******************** / |>>/base got Nothing                                                             :2_2:UnDeeper:
******************* \ |>>/base has returned (Nothing,0)                                                  :2_2:UnDeeper:
****************** \ |>> has returned (Nothing,0)                                                         :2_2:UnDeeper:
****************** / slAKA: proceeding after base and entityalias are retrieved ...                       :2_2:UnDeeper:
****************** / pAKA: entityalias = Nothing                                                          :2_2:UnDeeper:
***************** \ slAKA has returned (["multiwonk"],0)                                                   :2_2:UnDeeper:
**************** \ $*| has returned (["multiwonk"],0)                                                       :2_2:UnDeeper:
*************** \ RPMT has returned (RPMT ["multiwonk"],0)                                                   :2_2:UnDeeper:
************** \ slRelPred has returned (RPMT ["multiwonk"],0)                                                :2_2:UnDeeper:
************** / undeepers                                                                                    :2_2:UnDeeper:
*************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :2_2:UnDeeper:
*************** / sameLine: success!                                                                         :2_2:UnDeeper:
************** \ undeepers has returned ()                                                                    :2_2:UnDeeper:
************* \ pRelPred has returned RPMT ["multiwonk"]                                                       :2_2:UnDeeper:
************* / someIndentation                                                                                :2_2:UnDeeper:
************** / myindented: consuming GoDeeper                                                               :2_2:UnDeeper:
************ \ optIndented has returned (RPMT ["multiwonk"],Nothing)                                            :2_2:UnDeeper:
*********** \ optIndentedTuple has returned (RPMT ["multiwonk"],Nothing)                                         :2_2:UnDeeper:
********** \ pRelPred optIndentedTuple whenCase has returned (RPMT ["multiwonk"],Nothing)                         :2_2:UnDeeper:
********* \ relPredNextlineWhen has returned (RPMT ["multiwonk"],Nothing)                                          :2_2:UnDeeper:
******** \ manyIndentation/leaf? has returned (RPMT ["multiwonk"],Nothing)                                          :2_2:UnDeeper:
******** / myindented: consuming UnDeeper                                                                           :2_2:UnDeeper:
******** \ myindented: consuming UnDeeper has returned UnDeeper                                                  :2_1:Means:
******* \ someIndentation has returned (RPMT ["multiwonk"],Nothing)                                               :2_1:Means:
****** \ manyIndentation/deeper; calling someIndentation has returned (RPMT ["multiwonk"],Nothing)                 :2_1:Means:
***** \ pHornlike/someStructure has returned (Nothing,["multiwonk"],[HC2 {hHead = RPMT ["multiwonk"], hBody = Nothing}]) :2_1:Means:
***** / whenCase                                                                                                    :2_1:Means:
****** / whenMeansIf                                                                                               :2_1:Means:
****** \ whenMeansIf has returned Means                                                                             :2_2:GoDeeper:
****** / pBSR                                                                                                       :2_2:GoDeeper:
******* / ppp inner                                                                                                :2_2:GoDeeper:
******** / term p                                                                                                 :2_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :2_2:GoDeeper:
********** / $*|                                                                                                :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :2_2:GoDeeper:
********** / |:| some                                                                                           :2_2:GoDeeper:
*********** / |:| base parser                                                                                  :2_2:GoDeeper:
************ / pNumAsText                                                                                     :2_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :2_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :2_2:GoDeeper:
*********** / someIndentation                                                                                  :2_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :2_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :2_2:Other "poop:
************ / manyIndentation/leaf?                                                                           :2_2:Other "poop:
************* / term p                                                                                        :2_2:Other "poop:
************** / term p/1a:label directly above                                                              :2_2:Other "poop:
*************** / $*|                                                                                       :2_2:Other "poop:
**************** / |:| some                                                                                :2_2:Other "poop:
***************** / |:| base parser                                                                       :2_2:Other "poop:
***************** \ |:| base parser has returned ("poopoo",0)                                              :3_2:UnDeeper:
***************** / |:| deeper                                                                             :3_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :3_2:UnDeeper:
***************** / |:| noMore                                                                             :3_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :3_2:UnDeeper:
**************** \ |:| some has returned (["poopoo"],0)                                                     :3_2:UnDeeper:
**************** / pNumAsText                                                                               :3_2:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :2_2:Other "poop:
*************** / |:| some                                                                                  :2_2:Other "poop:
**************** / |:| base parser                                                                         :2_2:Other "poop:
**************** \ |:| base parser has returned ("poopoo",0)                                                :3_2:UnDeeper:
**************** / |:| deeper                                                                               :3_2:UnDeeper:
***************** / |:| some GoDeeper                                                                      :3_2:UnDeeper:
**************** / |:| noMore                                                                               :3_2:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                           :3_2:UnDeeper:
*************** \ |:| some has returned (["poopoo"],0)                                                       :3_2:UnDeeper:
*************** / undeepers                                                                                  :3_2:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                   :3_2:UnDeeper:
**************** / sameLine: success!                                                                       :3_2:UnDeeper:
*************** \ undeepers has returned ()                                                                  :3_2:UnDeeper:
*************** / matching EOL                                                                               :3_2:UnDeeper:
************** / term p/notLabelTerm                                                                         :2_2:Other "poop:
*************** / term p/2:someIndentation expr p                                                           :2_2:Other "poop:
**************** / someIndentation                                                                         :2_2:Other "poop:
***************** / myindented: consuming GoDeeper                                                        :2_2:Other "poop:
*************** / term p/3:plain p                                                                          :2_2:Other "poop:
**************** / pRelPred                                                                                :2_2:Other "poop:
***************** / slRelPred                                                                             :2_2:Other "poop:
****************** / nested simpleHorn                                                                   :2_2:Other "poop:
******************* / |^|                                                                               :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |^| deeps                                                                          :3_2:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                               :3_1:Or:
****************** / RPConstraint                                                                        :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPBoolStructR                                                                       :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPMT                                                                                :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slAKA                                                                           :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************** / slAKA base                                                                  :2_2:Other "poop:
*********************** / slMultiTerm                                                               :2_2:Other "poop:
************************ / |:| some                                                                :2_2:Other "poop:
************************* / |:| base parser                                                       :2_2:Other "poop:
************************* \ |:| base parser has returned ("poopoo",0)                              :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["poopoo"],0)                                     :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["poopoo"],0)                                    :3_2:UnDeeper:
********************** \ slAKA base has returned (["poopoo"],0)                                       :3_2:UnDeeper:
********************* \ $*| has returned (["poopoo"],0)                                                :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional akapart                                                     :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / PAKA/akapart                                                       :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
***************************** / Aka Token                                                      :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                            :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional typically                                                   :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / typically                                                          :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                 :3_2:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                    :3_2:UnDeeper:
******************** \ slAKA has returned (["poopoo"],0)                                                :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
****************** \ RPMT has returned (RPMT ["poopoo"],0)                                                :3_2:UnDeeper:
***************** \ slRelPred has returned (RPMT ["poopoo"],0)                                             :3_2:UnDeeper:
***************** / undeepers                                                                              :3_2:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers               :3_2:UnDeeper:
****************** / sameLine: success!                                                                   :3_2:UnDeeper:
***************** \ undeepers has returned ()                                                              :3_2:UnDeeper:
**************** \ pRelPred has returned RPMT ["poopoo"]                                                    :3_2:UnDeeper:
*************** \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                                     :3_2:UnDeeper:
************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                    :3_2:UnDeeper:
************* \ term p has returned MyLeaf (RPMT ["poopoo"])                                                   :3_2:UnDeeper:
************* / binary(Or)                                                                                     :3_2:UnDeeper:
************* / binary(And)                                                                                    :3_2:UnDeeper:
************* / binary(SetLess)                                                                                :3_2:UnDeeper:
************* / binary(SetPlus)                                                                                :3_2:UnDeeper:
************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                                      :3_2:UnDeeper:
************ / myindented: consuming UnDeeper                                                                   :3_2:UnDeeper:
************ \ myindented: consuming UnDeeper has returned UnDeeper                                          :3_1:Or:
*********** \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])                             :3_1:Or:
********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
******** \ term p has returned MyLeaf (RPMT ["poopoo"])                                                          :3_1:Or:
******** / binary(Or)                                                                                            :3_1:Or:
******** \ binary(Or) has returned Or                                                                             :3_2:GoDeeper:
******** / term p                                                                                                 :3_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :3_2:GoDeeper:
********** / $*|                                                                                                :3_2:GoDeeper:
*********** / |:| some                                                                                         :3_2:GoDeeper:
************ / |:| base parser                                                                                :3_2:GoDeeper:
************* / pNumAsText                                                                                   :3_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :3_2:GoDeeper:
********** / |:| some                                                                                           :3_2:GoDeeper:
*********** / |:| base parser                                                                                  :3_2:GoDeeper:
************ / pNumAsText                                                                                     :3_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :3_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :3_2:GoDeeper:
*********** / someIndentation                                                                                  :3_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :3_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :3_2:Other "the":
************ / manyIndentation/leaf?                                                                           :3_2:Other "the":
************* / term p                                                                                        :3_2:Other "the":
************** / term p/1a:label directly above                                                              :3_2:Other "the":
*************** / $*|                                                                                       :3_2:Other "the":
**************** / |:| some                                                                                :3_2:Other "the":
***************** / |:| base parser                                                                       :3_2:Other "the":
***************** \ |:| base parser has returned ("the",0)                                                 :3_3:GoDeeper:
***************** / |:| deeper                                                                             :3_3:GoDeeper:
****************** / |:| some GoDeeper                                                                    :3_3:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :3_5:Other "honk:
****************** / |:| some                                                                                  :3_5:Other "honk:
******************* / |:| base parser                                                                         :3_5:Other "honk:
******************* \ |:| base parser has returned ("honk",0)                                                  :4_5:UnDeeper:
******************* / |:| deeper                                                                               :4_5:UnDeeper:
******************** / |:| some GoDeeper                                                                      :4_5:UnDeeper:
******************* / |:| noMore                                                                               :4_5:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                           :4_5:UnDeeper:
****************** \ |:| some has returned (["honk"],0)                                                         :4_5:UnDeeper:
***************** \ |:| deeper has returned (["honk"],3)                                                         :4_5:UnDeeper:
**************** \ |:| some has returned (["the","honk"],3)                                                       :4_5:UnDeeper:
**************** / pNumAsText                                                                                     :4_5:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :3_2:Other "the":
*************** / |:| some                                                                                  :3_2:Other "the":
**************** / |:| base parser                                                                         :3_2:Other "the":
**************** \ |:| base parser has returned ("the",0)                                                   :3_3:GoDeeper:
**************** / |:| deeper                                                                               :3_3:GoDeeper:
***************** / |:| some GoDeeper                                                                      :3_3:GoDeeper:
***************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :3_5:Other "honk:
***************** / |:| some                                                                                    :3_5:Other "honk:
****************** / |:| base parser                                                                           :3_5:Other "honk:
****************** \ |:| base parser has returned ("honk",0)                                                    :4_5:UnDeeper:
****************** / |:| deeper                                                                                 :4_5:UnDeeper:
******************* / |:| some GoDeeper                                                                        :4_5:UnDeeper:
****************** / |:| noMore                                                                                 :4_5:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                             :4_5:UnDeeper:
***************** \ |:| some has returned (["honk"],0)                                                           :4_5:UnDeeper:
**************** \ |:| deeper has returned (["honk"],3)                                                           :4_5:UnDeeper:
*************** \ |:| some has returned (["the","honk"],3)                                                         :4_5:UnDeeper:
*************** / undeepers                                                                                        :4_5:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                         :4_5:UnDeeper:
************** / term p/notLabelTerm                                                                         :3_2:Other "the":
*************** / term p/2:someIndentation expr p                                                           :3_2:Other "the":
**************** / someIndentation                                                                         :3_2:Other "the":
***************** / myindented: consuming GoDeeper                                                        :3_2:Other "the":
*************** / term p/3:plain p                                                                          :3_2:Other "the":
**************** / pRelPred                                                                                :3_2:Other "the":
***************** / slRelPred                                                                             :3_2:Other "the":
****************** / nested simpleHorn                                                                   :3_2:Other "the":
******************* / |^|                                                                               :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |^| deeps                                                                                :4_5:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                                     :4_4:Or:
****************** / RPConstraint                                                                        :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPBoolStructR                                                                       :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPMT                                                                                :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slAKA                                                                           :3_2:Other "the":
********************* / $*|                                                                           :3_2:Other "the":
********************** / slAKA base                                                                  :3_2:Other "the":
*********************** / slMultiTerm                                                               :3_2:Other "the":
************************ / |:| some                                                                :3_2:Other "the":
************************* / |:| base parser                                                       :3_2:Other "the":
************************* \ |:| base parser has returned ("the",0)                                 :3_3:GoDeeper:
************************* / |:| deeper                                                             :3_3:GoDeeper:
************************** / |:| some GoDeeper                                                    :3_3:GoDeeper:
************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :3_5:Other "honk:
************************** / |:| some                                                                  :3_5:Other "honk:
*************************** / |:| base parser                                                         :3_5:Other "honk:
*************************** \ |:| base parser has returned ("honk",0)                                  :4_5:UnDeeper:
*************************** / |:| deeper                                                               :4_5:UnDeeper:
**************************** / |:| some GoDeeper                                                      :4_5:UnDeeper:
*************************** / |:| noMore                                                               :4_5:UnDeeper:
*************************** \ |:| noMore has returned ([],0)                                           :4_5:UnDeeper:
************************** \ |:| some has returned (["honk"],0)                                         :4_5:UnDeeper:
************************* \ |:| deeper has returned (["honk"],3)                                         :4_5:UnDeeper:
************************ \ |:| some has returned (["the","honk"],3)                                       :4_5:UnDeeper:
*********************** \ slMultiTerm has returned (["the","honk"],3)                                      :4_5:UnDeeper:
********************** \ slAKA base has returned (["the","honk"],3)                                         :4_5:UnDeeper:
********************* \ $*| has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional akapart                                                           :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / PAKA/akapart                                                             :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
***************************** / Aka Token                                                            :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                                  :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional typically                                                         :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / typically                                                                :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                       :4_5:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                          :4_5:UnDeeper:
******************** \ slAKA has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
****************** \ RPMT has returned (RPMT ["the","honk"],3)                                                  :4_5:UnDeeper:
***************** \ slRelPred has returned (RPMT ["the","honk"],3)                                               :4_5:UnDeeper:
***************** / undeepers                                                                                    :4_5:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                     :4_5:UnDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                 :3_2:Other "the":
************* / someIndentation                                                                               :3_2:Other "the":
************** / myindented: consuming GoDeeper                                                              :3_2:Other "the":
********** / term p/3:plain p                                                                                   :3_2:GoDeeper:
*********** / pRelPred                                                                                         :3_2:GoDeeper:
************ / slRelPred                                                                                      :3_2:GoDeeper:
************* / nested simpleHorn                                                                            :3_2:GoDeeper:
************** / |^|                                                                                        :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPConstraint                                                                                 :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPBoolStructR                                                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPMT                                                                                         :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slAKA                                                                                    :3_2:GoDeeper:
**************** / $*|                                                                                    :3_2:GoDeeper:
***************** / slAKA base                                                                           :3_2:GoDeeper:
****************** / slMultiTerm                                                                        :3_2:GoDeeper:
******************* / |:| some                                                                         :3_2:GoDeeper:
******************** / |:| base parser                                                                :3_2:GoDeeper:
********************* / pNumAsText                                                                   :3_2:GoDeeper:
******* / withPrePost                                                                                              :2_2:GoDeeper:
******** / |<* starting                                                                                           :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
******* / withPreOnly                                                                                              :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
****** / Otherwise                                                                                                 :2_1:Means:
**** \ pHornlike / permute has returned ((Nothing,["multiwonk"],[HC2 {hHead = RPMT ["multiwonk"], hBody = Nothing}]),Nothing,Nothing,Nothing) :2_1:Means:
*** \ pHornlike has returned Hornlike {name = ["multiwonk"], keyword = Means, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPMT ["multiwonk"], hBody = Nothing}], rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/inline-1-r.csv", short = "test/inline-1-r.csv", srcrow = 2, srccol = 1, version = Nothing}), defaults = [], symtab = []} :2_1:Means:
** \ pRule has returned Hornlike {name = ["multiwonk"], keyword = Means, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPMT ["multiwonk"], hBody = Nothing}], rlabel = Nothing, lsource = Nothing, srcref = Just (SrcRef {url = "test/inline-1-r.csv", short = "test/inline-1-r.csv", srcrow = 2, srccol = 1, version = Nothing}), defaults = [], symtab = []} :2_1:Means:
** / pRule                                                                                                             :2_1:Means:
*** / pRegRule                                                                                                        :2_1:Means:
**** / pRuleLabel                                                                                                    :2_1:Means:
***** / $>|                                                                                                         :2_1:Means:
**** / pRegRuleSugary                                                                                                :2_1:Means:
***** / someDeep                                                                                                    :2_1:Means:
****** / someDeep first part calls base directly                                                                   :2_1:Means:
**** / pRegRuleNormal                                                                                                :2_1:Means:
***** / permutationsReg                                                                                             :2_1:Means:
****** / regulative permutation with deontic-temporal                                                              :2_1:Means:
******* / WHERE                                                                                                   :2_1:Means:
******* / preambleParamText:[Having]                                                                              :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / preambleParamText:[Given]                                                                               :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / preambleParamText:[Upon]                                                                                :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / preambleBoolStructR [Unless]                                                                            :2_1:Means:
******* / preambleBoolStructR [When,If]                                                                           :2_1:Means:
******* / pDT                                                                                                     :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / pActor [Every,Party,TokAll]                                                                             :2_1:Means:
******* / pDoAction/Do                                                                                            :2_1:Means:
****** / regulative permutation with deontic-action                                                                :2_1:Means:
******* / WHERE                                                                                                   :2_1:Means:
******* / preambleParamText:[Having]                                                                              :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / preambleParamText:[Given]                                                                               :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / preambleParamText:[Upon]                                                                                :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / preambleBoolStructR [Unless]                                                                            :2_1:Means:
******* / preambleBoolStructR [When,If]                                                                           :2_1:Means:
******* / pTemporal/eventually                                                                                    :2_1:Means:
******* / pTemporal/specifically                                                                                  :2_1:Means:
******** / $>|                                                                                                   :2_1:Means:
******* / pTemporal/vaguely                                                                                       :2_1:Means:
******* / pActor [Every,Party,TokAll]                                                                             :2_1:Means:
******* / pDA                                                                                                     :2_1:Means:
*** / pTypeDefinition                                                                                                 :2_1:Means:
**** / pRuleLabel                                                                                                    :2_1:Means:
***** / $>|                                                                                                         :2_1:Means:
**** / pHornlike/uponLimb                                                                                            :2_1:Means:
***** / preambleParamText:[Upon]                                                                                    :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
**** / pHornlike/givenLimb                                                                                           :2_1:Means:
***** / preambleParamText:[Given]                                                                                   :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
*** / pConstitutiveRule                                                                                               :2_1:Means:
**** / pRuleLabel                                                                                                    :2_1:Means:
***** / $>|                                                                                                         :2_1:Means:
**** / calling myindented pNameParens                                                                                :2_1:Means:
***** / manyIndentation/leaf?                                                                                       :2_1:Means:
****** / pMultiTermAka                                                                                             :2_1:Means:
******* / pAKA                                                                                                    :2_1:Means:
******** / slAKA                                                                                                 :2_1:Means:
********* / $*|                                                                                                 :2_1:Means:
********** / slAKA base                                                                                        :2_1:Means:
*********** / slMultiTerm                                                                                     :2_1:Means:
************ / |:| some                                                                                      :2_1:Means:
************* / |:| base parser                                                                             :2_1:Means:
************** / pNumAsText                                                                                :2_1:Means:
***** / manyIndentation/deeper; calling someIndentation                                                             :2_1:Means:
****** / someIndentation                                                                                           :2_1:Means:
******* / myindented: consuming GoDeeper                                                                          :2_1:Means:
*** / pScenarioRule                                                                                                   :2_1:Means:
**** / pRuleLabel                                                                                                    :2_1:Means:
***** / $>|                                                                                                         :2_1:Means:
**** / pExpect                                                                                                       :2_1:Means:
*** / pHornlike                                                                                                       :2_1:Means:
**** / pSrcRef                                                                                                       :2_1:Means:
***** / pRuleLabel                                                                                                  :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
**** \ pSrcRef has returned (Nothing,Just (SrcRef {url = "test/inline-1-r.csv", short = "test/inline-1-r.csv", srcrow = 1, srccol = 2, version = Nothing})) :2_1:Means:
**** / pHornlike / permute                                                                                           :2_1:Means:
***** / whenCase                                                                                                    :2_1:Means:
****** / whenMeansIf                                                                                               :2_1:Means:
****** \ whenMeansIf has returned Means                                                                             :2_2:GoDeeper:
****** / pBSR                                                                                                       :2_2:GoDeeper:
******* / ppp inner                                                                                                :2_2:GoDeeper:
******** / term p                                                                                                 :2_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :2_2:GoDeeper:
********** / $*|                                                                                                :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :2_2:GoDeeper:
********** / |:| some                                                                                           :2_2:GoDeeper:
*********** / |:| base parser                                                                                  :2_2:GoDeeper:
************ / pNumAsText                                                                                     :2_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :2_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :2_2:GoDeeper:
*********** / someIndentation                                                                                  :2_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :2_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :2_2:Other "poop:
************ / manyIndentation/leaf?                                                                           :2_2:Other "poop:
************* / term p                                                                                        :2_2:Other "poop:
************** / term p/1a:label directly above                                                              :2_2:Other "poop:
*************** / $*|                                                                                       :2_2:Other "poop:
**************** / |:| some                                                                                :2_2:Other "poop:
***************** / |:| base parser                                                                       :2_2:Other "poop:
***************** \ |:| base parser has returned ("poopoo",0)                                              :3_2:UnDeeper:
***************** / |:| deeper                                                                             :3_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :3_2:UnDeeper:
***************** / |:| noMore                                                                             :3_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :3_2:UnDeeper:
**************** \ |:| some has returned (["poopoo"],0)                                                     :3_2:UnDeeper:
**************** / pNumAsText                                                                               :3_2:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :2_2:Other "poop:
*************** / |:| some                                                                                  :2_2:Other "poop:
**************** / |:| base parser                                                                         :2_2:Other "poop:
**************** \ |:| base parser has returned ("poopoo",0)                                                :3_2:UnDeeper:
**************** / |:| deeper                                                                               :3_2:UnDeeper:
***************** / |:| some GoDeeper                                                                      :3_2:UnDeeper:
**************** / |:| noMore                                                                               :3_2:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                           :3_2:UnDeeper:
*************** \ |:| some has returned (["poopoo"],0)                                                       :3_2:UnDeeper:
*************** / undeepers                                                                                  :3_2:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                   :3_2:UnDeeper:
**************** / sameLine: success!                                                                       :3_2:UnDeeper:
*************** \ undeepers has returned ()                                                                  :3_2:UnDeeper:
*************** / matching EOL                                                                               :3_2:UnDeeper:
************** / term p/notLabelTerm                                                                         :2_2:Other "poop:
*************** / term p/2:someIndentation expr p                                                           :2_2:Other "poop:
**************** / someIndentation                                                                         :2_2:Other "poop:
***************** / myindented: consuming GoDeeper                                                        :2_2:Other "poop:
*************** / term p/3:plain p                                                                          :2_2:Other "poop:
**************** / pRelPred                                                                                :2_2:Other "poop:
***************** / slRelPred                                                                             :2_2:Other "poop:
****************** / nested simpleHorn                                                                   :2_2:Other "poop:
******************* / |^|                                                                               :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |^| deeps                                                                          :3_2:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                               :3_1:Or:
****************** / RPConstraint                                                                        :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPBoolStructR                                                                       :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPMT                                                                                :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slAKA                                                                           :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************** / slAKA base                                                                  :2_2:Other "poop:
*********************** / slMultiTerm                                                               :2_2:Other "poop:
************************ / |:| some                                                                :2_2:Other "poop:
************************* / |:| base parser                                                       :2_2:Other "poop:
************************* \ |:| base parser has returned ("poopoo",0)                              :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["poopoo"],0)                                     :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["poopoo"],0)                                    :3_2:UnDeeper:
********************** \ slAKA base has returned (["poopoo"],0)                                       :3_2:UnDeeper:
********************* \ $*| has returned (["poopoo"],0)                                                :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional akapart                                                     :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / PAKA/akapart                                                       :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
***************************** / Aka Token                                                      :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                            :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional typically                                                   :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / typically                                                          :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                 :3_2:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                    :3_2:UnDeeper:
******************** \ slAKA has returned (["poopoo"],0)                                                :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
****************** \ RPMT has returned (RPMT ["poopoo"],0)                                                :3_2:UnDeeper:
***************** \ slRelPred has returned (RPMT ["poopoo"],0)                                             :3_2:UnDeeper:
***************** / undeepers                                                                              :3_2:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers               :3_2:UnDeeper:
****************** / sameLine: success!                                                                   :3_2:UnDeeper:
***************** \ undeepers has returned ()                                                              :3_2:UnDeeper:
**************** \ pRelPred has returned RPMT ["poopoo"]                                                    :3_2:UnDeeper:
*************** \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                                     :3_2:UnDeeper:
************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                    :3_2:UnDeeper:
************* \ term p has returned MyLeaf (RPMT ["poopoo"])                                                   :3_2:UnDeeper:
************* / binary(Or)                                                                                     :3_2:UnDeeper:
************* / binary(And)                                                                                    :3_2:UnDeeper:
************* / binary(SetLess)                                                                                :3_2:UnDeeper:
************* / binary(SetPlus)                                                                                :3_2:UnDeeper:
************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                                      :3_2:UnDeeper:
************ / myindented: consuming UnDeeper                                                                   :3_2:UnDeeper:
************ \ myindented: consuming UnDeeper has returned UnDeeper                                          :3_1:Or:
*********** \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])                             :3_1:Or:
********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
******** \ term p has returned MyLeaf (RPMT ["poopoo"])                                                          :3_1:Or:
******** / binary(Or)                                                                                            :3_1:Or:
******** \ binary(Or) has returned Or                                                                             :3_2:GoDeeper:
******** / term p                                                                                                 :3_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :3_2:GoDeeper:
********** / $*|                                                                                                :3_2:GoDeeper:
*********** / |:| some                                                                                         :3_2:GoDeeper:
************ / |:| base parser                                                                                :3_2:GoDeeper:
************* / pNumAsText                                                                                   :3_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :3_2:GoDeeper:
********** / |:| some                                                                                           :3_2:GoDeeper:
*********** / |:| base parser                                                                                  :3_2:GoDeeper:
************ / pNumAsText                                                                                     :3_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :3_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :3_2:GoDeeper:
*********** / someIndentation                                                                                  :3_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :3_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :3_2:Other "the":
************ / manyIndentation/leaf?                                                                           :3_2:Other "the":
************* / term p                                                                                        :3_2:Other "the":
************** / term p/1a:label directly above                                                              :3_2:Other "the":
*************** / $*|                                                                                       :3_2:Other "the":
**************** / |:| some                                                                                :3_2:Other "the":
***************** / |:| base parser                                                                       :3_2:Other "the":
***************** \ |:| base parser has returned ("the",0)                                                 :3_3:GoDeeper:
***************** / |:| deeper                                                                             :3_3:GoDeeper:
****************** / |:| some GoDeeper                                                                    :3_3:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :3_5:Other "honk:
****************** / |:| some                                                                                  :3_5:Other "honk:
******************* / |:| base parser                                                                         :3_5:Other "honk:
******************* \ |:| base parser has returned ("honk",0)                                                  :4_5:UnDeeper:
******************* / |:| deeper                                                                               :4_5:UnDeeper:
******************** / |:| some GoDeeper                                                                      :4_5:UnDeeper:
******************* / |:| noMore                                                                               :4_5:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                           :4_5:UnDeeper:
****************** \ |:| some has returned (["honk"],0)                                                         :4_5:UnDeeper:
***************** \ |:| deeper has returned (["honk"],3)                                                         :4_5:UnDeeper:
**************** \ |:| some has returned (["the","honk"],3)                                                       :4_5:UnDeeper:
**************** / pNumAsText                                                                                     :4_5:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :3_2:Other "the":
*************** / |:| some                                                                                  :3_2:Other "the":
**************** / |:| base parser                                                                         :3_2:Other "the":
**************** \ |:| base parser has returned ("the",0)                                                   :3_3:GoDeeper:
**************** / |:| deeper                                                                               :3_3:GoDeeper:
***************** / |:| some GoDeeper                                                                      :3_3:GoDeeper:
***************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :3_5:Other "honk:
***************** / |:| some                                                                                    :3_5:Other "honk:
****************** / |:| base parser                                                                           :3_5:Other "honk:
****************** \ |:| base parser has returned ("honk",0)                                                    :4_5:UnDeeper:
****************** / |:| deeper                                                                                 :4_5:UnDeeper:
******************* / |:| some GoDeeper                                                                        :4_5:UnDeeper:
****************** / |:| noMore                                                                                 :4_5:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                             :4_5:UnDeeper:
***************** \ |:| some has returned (["honk"],0)                                                           :4_5:UnDeeper:
**************** \ |:| deeper has returned (["honk"],3)                                                           :4_5:UnDeeper:
*************** \ |:| some has returned (["the","honk"],3)                                                         :4_5:UnDeeper:
*************** / undeepers                                                                                        :4_5:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                         :4_5:UnDeeper:
************** / term p/notLabelTerm                                                                         :3_2:Other "the":
*************** / term p/2:someIndentation expr p                                                           :3_2:Other "the":
**************** / someIndentation                                                                         :3_2:Other "the":
***************** / myindented: consuming GoDeeper                                                        :3_2:Other "the":
*************** / term p/3:plain p                                                                          :3_2:Other "the":
**************** / pRelPred                                                                                :3_2:Other "the":
***************** / slRelPred                                                                             :3_2:Other "the":
****************** / nested simpleHorn                                                                   :3_2:Other "the":
******************* / |^|                                                                               :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |^| deeps                                                                                :4_5:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                                     :4_4:Or:
****************** / RPConstraint                                                                        :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPBoolStructR                                                                       :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPMT                                                                                :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slAKA                                                                           :3_2:Other "the":
********************* / $*|                                                                           :3_2:Other "the":
********************** / slAKA base                                                                  :3_2:Other "the":
*********************** / slMultiTerm                                                               :3_2:Other "the":
************************ / |:| some                                                                :3_2:Other "the":
************************* / |:| base parser                                                       :3_2:Other "the":
************************* \ |:| base parser has returned ("the",0)                                 :3_3:GoDeeper:
************************* / |:| deeper                                                             :3_3:GoDeeper:
************************** / |:| some GoDeeper                                                    :3_3:GoDeeper:
************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :3_5:Other "honk:
************************** / |:| some                                                                  :3_5:Other "honk:
*************************** / |:| base parser                                                         :3_5:Other "honk:
*************************** \ |:| base parser has returned ("honk",0)                                  :4_5:UnDeeper:
*************************** / |:| deeper                                                               :4_5:UnDeeper:
**************************** / |:| some GoDeeper                                                      :4_5:UnDeeper:
*************************** / |:| noMore                                                               :4_5:UnDeeper:
*************************** \ |:| noMore has returned ([],0)                                           :4_5:UnDeeper:
************************** \ |:| some has returned (["honk"],0)                                         :4_5:UnDeeper:
************************* \ |:| deeper has returned (["honk"],3)                                         :4_5:UnDeeper:
************************ \ |:| some has returned (["the","honk"],3)                                       :4_5:UnDeeper:
*********************** \ slMultiTerm has returned (["the","honk"],3)                                      :4_5:UnDeeper:
********************** \ slAKA base has returned (["the","honk"],3)                                         :4_5:UnDeeper:
********************* \ $*| has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional akapart                                                           :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / PAKA/akapart                                                             :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
***************************** / Aka Token                                                            :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                                  :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional typically                                                         :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / typically                                                                :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                       :4_5:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                          :4_5:UnDeeper:
******************** \ slAKA has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
****************** \ RPMT has returned (RPMT ["the","honk"],3)                                                  :4_5:UnDeeper:
***************** \ slRelPred has returned (RPMT ["the","honk"],3)                                               :4_5:UnDeeper:
***************** / undeepers                                                                                    :4_5:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                     :4_5:UnDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                 :3_2:Other "the":
************* / someIndentation                                                                               :3_2:Other "the":
************** / myindented: consuming GoDeeper                                                              :3_2:Other "the":
********** / term p/3:plain p                                                                                   :3_2:GoDeeper:
*********** / pRelPred                                                                                         :3_2:GoDeeper:
************ / slRelPred                                                                                      :3_2:GoDeeper:
************* / nested simpleHorn                                                                            :3_2:GoDeeper:
************** / |^|                                                                                        :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPConstraint                                                                                 :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPBoolStructR                                                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPMT                                                                                         :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slAKA                                                                                    :3_2:GoDeeper:
**************** / $*|                                                                                    :3_2:GoDeeper:
***************** / slAKA base                                                                           :3_2:GoDeeper:
****************** / slMultiTerm                                                                        :3_2:GoDeeper:
******************* / |:| some                                                                         :3_2:GoDeeper:
******************** / |:| base parser                                                                :3_2:GoDeeper:
********************* / pNumAsText                                                                   :3_2:GoDeeper:
******* / withPrePost                                                                                              :2_2:GoDeeper:
******** / |<* starting                                                                                           :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
******* / withPreOnly                                                                                              :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
****** / Otherwise                                                                                                 :2_1:Means:
***** / pHornlike/uponLimb                                                                                          :2_1:Means:
****** / preambleParamText:[Upon]                                                                                  :2_1:Means:
******* / $>|                                                                                                     :2_1:Means:
***** / whenCase                                                                                                    :2_1:Means:
****** / whenMeansIf                                                                                               :2_1:Means:
****** \ whenMeansIf has returned Means                                                                             :2_2:GoDeeper:
****** / pBSR                                                                                                       :2_2:GoDeeper:
******* / ppp inner                                                                                                :2_2:GoDeeper:
******** / term p                                                                                                 :2_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :2_2:GoDeeper:
********** / $*|                                                                                                :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :2_2:GoDeeper:
********** / |:| some                                                                                           :2_2:GoDeeper:
*********** / |:| base parser                                                                                  :2_2:GoDeeper:
************ / pNumAsText                                                                                     :2_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :2_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :2_2:GoDeeper:
*********** / someIndentation                                                                                  :2_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :2_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :2_2:Other "poop:
************ / manyIndentation/leaf?                                                                           :2_2:Other "poop:
************* / term p                                                                                        :2_2:Other "poop:
************** / term p/1a:label directly above                                                              :2_2:Other "poop:
*************** / $*|                                                                                       :2_2:Other "poop:
**************** / |:| some                                                                                :2_2:Other "poop:
***************** / |:| base parser                                                                       :2_2:Other "poop:
***************** \ |:| base parser has returned ("poopoo",0)                                              :3_2:UnDeeper:
***************** / |:| deeper                                                                             :3_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :3_2:UnDeeper:
***************** / |:| noMore                                                                             :3_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :3_2:UnDeeper:
**************** \ |:| some has returned (["poopoo"],0)                                                     :3_2:UnDeeper:
**************** / pNumAsText                                                                               :3_2:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :2_2:Other "poop:
*************** / |:| some                                                                                  :2_2:Other "poop:
**************** / |:| base parser                                                                         :2_2:Other "poop:
**************** \ |:| base parser has returned ("poopoo",0)                                                :3_2:UnDeeper:
**************** / |:| deeper                                                                               :3_2:UnDeeper:
***************** / |:| some GoDeeper                                                                      :3_2:UnDeeper:
**************** / |:| noMore                                                                               :3_2:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                           :3_2:UnDeeper:
*************** \ |:| some has returned (["poopoo"],0)                                                       :3_2:UnDeeper:
*************** / undeepers                                                                                  :3_2:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                   :3_2:UnDeeper:
**************** / sameLine: success!                                                                       :3_2:UnDeeper:
*************** \ undeepers has returned ()                                                                  :3_2:UnDeeper:
*************** / matching EOL                                                                               :3_2:UnDeeper:
************** / term p/notLabelTerm                                                                         :2_2:Other "poop:
*************** / term p/2:someIndentation expr p                                                           :2_2:Other "poop:
**************** / someIndentation                                                                         :2_2:Other "poop:
***************** / myindented: consuming GoDeeper                                                        :2_2:Other "poop:
*************** / term p/3:plain p                                                                          :2_2:Other "poop:
**************** / pRelPred                                                                                :2_2:Other "poop:
***************** / slRelPred                                                                             :2_2:Other "poop:
****************** / nested simpleHorn                                                                   :2_2:Other "poop:
******************* / |^|                                                                               :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |^| deeps                                                                          :3_2:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                               :3_1:Or:
****************** / RPConstraint                                                                        :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPBoolStructR                                                                       :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPMT                                                                                :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slAKA                                                                           :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************** / slAKA base                                                                  :2_2:Other "poop:
*********************** / slMultiTerm                                                               :2_2:Other "poop:
************************ / |:| some                                                                :2_2:Other "poop:
************************* / |:| base parser                                                       :2_2:Other "poop:
************************* \ |:| base parser has returned ("poopoo",0)                              :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["poopoo"],0)                                     :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["poopoo"],0)                                    :3_2:UnDeeper:
********************** \ slAKA base has returned (["poopoo"],0)                                       :3_2:UnDeeper:
********************* \ $*| has returned (["poopoo"],0)                                                :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional akapart                                                     :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / PAKA/akapart                                                       :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
***************************** / Aka Token                                                      :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                            :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional typically                                                   :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / typically                                                          :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                 :3_2:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                    :3_2:UnDeeper:
******************** \ slAKA has returned (["poopoo"],0)                                                :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
****************** \ RPMT has returned (RPMT ["poopoo"],0)                                                :3_2:UnDeeper:
***************** \ slRelPred has returned (RPMT ["poopoo"],0)                                             :3_2:UnDeeper:
***************** / undeepers                                                                              :3_2:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers               :3_2:UnDeeper:
****************** / sameLine: success!                                                                   :3_2:UnDeeper:
***************** \ undeepers has returned ()                                                              :3_2:UnDeeper:
**************** \ pRelPred has returned RPMT ["poopoo"]                                                    :3_2:UnDeeper:
*************** \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                                     :3_2:UnDeeper:
************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                    :3_2:UnDeeper:
************* \ term p has returned MyLeaf (RPMT ["poopoo"])                                                   :3_2:UnDeeper:
************* / binary(Or)                                                                                     :3_2:UnDeeper:
************* / binary(And)                                                                                    :3_2:UnDeeper:
************* / binary(SetLess)                                                                                :3_2:UnDeeper:
************* / binary(SetPlus)                                                                                :3_2:UnDeeper:
************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                                      :3_2:UnDeeper:
************ / myindented: consuming UnDeeper                                                                   :3_2:UnDeeper:
************ \ myindented: consuming UnDeeper has returned UnDeeper                                          :3_1:Or:
*********** \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])                             :3_1:Or:
********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
******** \ term p has returned MyLeaf (RPMT ["poopoo"])                                                          :3_1:Or:
******** / binary(Or)                                                                                            :3_1:Or:
******** \ binary(Or) has returned Or                                                                             :3_2:GoDeeper:
******** / term p                                                                                                 :3_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :3_2:GoDeeper:
********** / $*|                                                                                                :3_2:GoDeeper:
*********** / |:| some                                                                                         :3_2:GoDeeper:
************ / |:| base parser                                                                                :3_2:GoDeeper:
************* / pNumAsText                                                                                   :3_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :3_2:GoDeeper:
********** / |:| some                                                                                           :3_2:GoDeeper:
*********** / |:| base parser                                                                                  :3_2:GoDeeper:
************ / pNumAsText                                                                                     :3_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :3_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :3_2:GoDeeper:
*********** / someIndentation                                                                                  :3_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :3_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :3_2:Other "the":
************ / manyIndentation/leaf?                                                                           :3_2:Other "the":
************* / term p                                                                                        :3_2:Other "the":
************** / term p/1a:label directly above                                                              :3_2:Other "the":
*************** / $*|                                                                                       :3_2:Other "the":
**************** / |:| some                                                                                :3_2:Other "the":
***************** / |:| base parser                                                                       :3_2:Other "the":
***************** \ |:| base parser has returned ("the",0)                                                 :3_3:GoDeeper:
***************** / |:| deeper                                                                             :3_3:GoDeeper:
****************** / |:| some GoDeeper                                                                    :3_3:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :3_5:Other "honk:
****************** / |:| some                                                                                  :3_5:Other "honk:
******************* / |:| base parser                                                                         :3_5:Other "honk:
******************* \ |:| base parser has returned ("honk",0)                                                  :4_5:UnDeeper:
******************* / |:| deeper                                                                               :4_5:UnDeeper:
******************** / |:| some GoDeeper                                                                      :4_5:UnDeeper:
******************* / |:| noMore                                                                               :4_5:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                           :4_5:UnDeeper:
****************** \ |:| some has returned (["honk"],0)                                                         :4_5:UnDeeper:
***************** \ |:| deeper has returned (["honk"],3)                                                         :4_5:UnDeeper:
**************** \ |:| some has returned (["the","honk"],3)                                                       :4_5:UnDeeper:
**************** / pNumAsText                                                                                     :4_5:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :3_2:Other "the":
*************** / |:| some                                                                                  :3_2:Other "the":
**************** / |:| base parser                                                                         :3_2:Other "the":
**************** \ |:| base parser has returned ("the",0)                                                   :3_3:GoDeeper:
**************** / |:| deeper                                                                               :3_3:GoDeeper:
***************** / |:| some GoDeeper                                                                      :3_3:GoDeeper:
***************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :3_5:Other "honk:
***************** / |:| some                                                                                    :3_5:Other "honk:
****************** / |:| base parser                                                                           :3_5:Other "honk:
****************** \ |:| base parser has returned ("honk",0)                                                    :4_5:UnDeeper:
****************** / |:| deeper                                                                                 :4_5:UnDeeper:
******************* / |:| some GoDeeper                                                                        :4_5:UnDeeper:
****************** / |:| noMore                                                                                 :4_5:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                             :4_5:UnDeeper:
***************** \ |:| some has returned (["honk"],0)                                                           :4_5:UnDeeper:
**************** \ |:| deeper has returned (["honk"],3)                                                           :4_5:UnDeeper:
*************** \ |:| some has returned (["the","honk"],3)                                                         :4_5:UnDeeper:
*************** / undeepers                                                                                        :4_5:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                         :4_5:UnDeeper:
************** / term p/notLabelTerm                                                                         :3_2:Other "the":
*************** / term p/2:someIndentation expr p                                                           :3_2:Other "the":
**************** / someIndentation                                                                         :3_2:Other "the":
***************** / myindented: consuming GoDeeper                                                        :3_2:Other "the":
*************** / term p/3:plain p                                                                          :3_2:Other "the":
**************** / pRelPred                                                                                :3_2:Other "the":
***************** / slRelPred                                                                             :3_2:Other "the":
****************** / nested simpleHorn                                                                   :3_2:Other "the":
******************* / |^|                                                                               :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |^| deeps                                                                                :4_5:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                                     :4_4:Or:
****************** / RPConstraint                                                                        :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPBoolStructR                                                                       :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPMT                                                                                :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slAKA                                                                           :3_2:Other "the":
********************* / $*|                                                                           :3_2:Other "the":
********************** / slAKA base                                                                  :3_2:Other "the":
*********************** / slMultiTerm                                                               :3_2:Other "the":
************************ / |:| some                                                                :3_2:Other "the":
************************* / |:| base parser                                                       :3_2:Other "the":
************************* \ |:| base parser has returned ("the",0)                                 :3_3:GoDeeper:
************************* / |:| deeper                                                             :3_3:GoDeeper:
************************** / |:| some GoDeeper                                                    :3_3:GoDeeper:
************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :3_5:Other "honk:
************************** / |:| some                                                                  :3_5:Other "honk:
*************************** / |:| base parser                                                         :3_5:Other "honk:
*************************** \ |:| base parser has returned ("honk",0)                                  :4_5:UnDeeper:
*************************** / |:| deeper                                                               :4_5:UnDeeper:
**************************** / |:| some GoDeeper                                                      :4_5:UnDeeper:
*************************** / |:| noMore                                                               :4_5:UnDeeper:
*************************** \ |:| noMore has returned ([],0)                                           :4_5:UnDeeper:
************************** \ |:| some has returned (["honk"],0)                                         :4_5:UnDeeper:
************************* \ |:| deeper has returned (["honk"],3)                                         :4_5:UnDeeper:
************************ \ |:| some has returned (["the","honk"],3)                                       :4_5:UnDeeper:
*********************** \ slMultiTerm has returned (["the","honk"],3)                                      :4_5:UnDeeper:
********************** \ slAKA base has returned (["the","honk"],3)                                         :4_5:UnDeeper:
********************* \ $*| has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional akapart                                                           :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / PAKA/akapart                                                             :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
***************************** / Aka Token                                                            :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                                  :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional typically                                                         :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / typically                                                                :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                       :4_5:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                          :4_5:UnDeeper:
******************** \ slAKA has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
****************** \ RPMT has returned (RPMT ["the","honk"],3)                                                  :4_5:UnDeeper:
***************** \ slRelPred has returned (RPMT ["the","honk"],3)                                               :4_5:UnDeeper:
***************** / undeepers                                                                                    :4_5:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                     :4_5:UnDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                 :3_2:Other "the":
************* / someIndentation                                                                               :3_2:Other "the":
************** / myindented: consuming GoDeeper                                                              :3_2:Other "the":
********** / term p/3:plain p                                                                                   :3_2:GoDeeper:
*********** / pRelPred                                                                                         :3_2:GoDeeper:
************ / slRelPred                                                                                      :3_2:GoDeeper:
************* / nested simpleHorn                                                                            :3_2:GoDeeper:
************** / |^|                                                                                        :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPConstraint                                                                                 :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPBoolStructR                                                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPMT                                                                                         :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slAKA                                                                                    :3_2:GoDeeper:
**************** / $*|                                                                                    :3_2:GoDeeper:
***************** / slAKA base                                                                           :3_2:GoDeeper:
****************** / slMultiTerm                                                                        :3_2:GoDeeper:
******************* / |:| some                                                                         :3_2:GoDeeper:
******************** / |:| base parser                                                                :3_2:GoDeeper:
********************* / pNumAsText                                                                   :3_2:GoDeeper:
******* / withPrePost                                                                                              :2_2:GoDeeper:
******** / |<* starting                                                                                           :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
******* / withPreOnly                                                                                              :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
****** / Otherwise                                                                                                 :2_1:Means:
***** / pHornlike/givenLimb                                                                                         :2_1:Means:
****** / preambleParamText:[Given]                                                                                 :2_1:Means:
******* / $>|                                                                                                     :2_1:Means:
***** / whenCase                                                                                                    :2_1:Means:
****** / whenMeansIf                                                                                               :2_1:Means:
****** \ whenMeansIf has returned Means                                                                             :2_2:GoDeeper:
****** / pBSR                                                                                                       :2_2:GoDeeper:
******* / ppp inner                                                                                                :2_2:GoDeeper:
******** / term p                                                                                                 :2_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :2_2:GoDeeper:
********** / $*|                                                                                                :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :2_2:GoDeeper:
********** / |:| some                                                                                           :2_2:GoDeeper:
*********** / |:| base parser                                                                                  :2_2:GoDeeper:
************ / pNumAsText                                                                                     :2_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :2_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :2_2:GoDeeper:
*********** / someIndentation                                                                                  :2_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :2_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :2_2:Other "poop:
************ / manyIndentation/leaf?                                                                           :2_2:Other "poop:
************* / term p                                                                                        :2_2:Other "poop:
************** / term p/1a:label directly above                                                              :2_2:Other "poop:
*************** / $*|                                                                                       :2_2:Other "poop:
**************** / |:| some                                                                                :2_2:Other "poop:
***************** / |:| base parser                                                                       :2_2:Other "poop:
***************** \ |:| base parser has returned ("poopoo",0)                                              :3_2:UnDeeper:
***************** / |:| deeper                                                                             :3_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :3_2:UnDeeper:
***************** / |:| noMore                                                                             :3_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :3_2:UnDeeper:
**************** \ |:| some has returned (["poopoo"],0)                                                     :3_2:UnDeeper:
**************** / pNumAsText                                                                               :3_2:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :2_2:Other "poop:
*************** / |:| some                                                                                  :2_2:Other "poop:
**************** / |:| base parser                                                                         :2_2:Other "poop:
**************** \ |:| base parser has returned ("poopoo",0)                                                :3_2:UnDeeper:
**************** / |:| deeper                                                                               :3_2:UnDeeper:
***************** / |:| some GoDeeper                                                                      :3_2:UnDeeper:
**************** / |:| noMore                                                                               :3_2:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                           :3_2:UnDeeper:
*************** \ |:| some has returned (["poopoo"],0)                                                       :3_2:UnDeeper:
*************** / undeepers                                                                                  :3_2:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                   :3_2:UnDeeper:
**************** / sameLine: success!                                                                       :3_2:UnDeeper:
*************** \ undeepers has returned ()                                                                  :3_2:UnDeeper:
*************** / matching EOL                                                                               :3_2:UnDeeper:
************** / term p/notLabelTerm                                                                         :2_2:Other "poop:
*************** / term p/2:someIndentation expr p                                                           :2_2:Other "poop:
**************** / someIndentation                                                                         :2_2:Other "poop:
***************** / myindented: consuming GoDeeper                                                        :2_2:Other "poop:
*************** / term p/3:plain p                                                                          :2_2:Other "poop:
**************** / pRelPred                                                                                :2_2:Other "poop:
***************** / slRelPred                                                                             :2_2:Other "poop:
****************** / nested simpleHorn                                                                   :2_2:Other "poop:
******************* / |^|                                                                               :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |^| deeps                                                                          :3_2:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                               :3_1:Or:
****************** / RPConstraint                                                                        :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPBoolStructR                                                                       :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPMT                                                                                :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slAKA                                                                           :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************** / slAKA base                                                                  :2_2:Other "poop:
*********************** / slMultiTerm                                                               :2_2:Other "poop:
************************ / |:| some                                                                :2_2:Other "poop:
************************* / |:| base parser                                                       :2_2:Other "poop:
************************* \ |:| base parser has returned ("poopoo",0)                              :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["poopoo"],0)                                     :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["poopoo"],0)                                    :3_2:UnDeeper:
********************** \ slAKA base has returned (["poopoo"],0)                                       :3_2:UnDeeper:
********************* \ $*| has returned (["poopoo"],0)                                                :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional akapart                                                     :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / PAKA/akapart                                                       :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
***************************** / Aka Token                                                      :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                            :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional typically                                                   :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / typically                                                          :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                 :3_2:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                    :3_2:UnDeeper:
******************** \ slAKA has returned (["poopoo"],0)                                                :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
****************** \ RPMT has returned (RPMT ["poopoo"],0)                                                :3_2:UnDeeper:
***************** \ slRelPred has returned (RPMT ["poopoo"],0)                                             :3_2:UnDeeper:
***************** / undeepers                                                                              :3_2:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers               :3_2:UnDeeper:
****************** / sameLine: success!                                                                   :3_2:UnDeeper:
***************** \ undeepers has returned ()                                                              :3_2:UnDeeper:
**************** \ pRelPred has returned RPMT ["poopoo"]                                                    :3_2:UnDeeper:
*************** \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                                     :3_2:UnDeeper:
************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                    :3_2:UnDeeper:
************* \ term p has returned MyLeaf (RPMT ["poopoo"])                                                   :3_2:UnDeeper:
************* / binary(Or)                                                                                     :3_2:UnDeeper:
************* / binary(And)                                                                                    :3_2:UnDeeper:
************* / binary(SetLess)                                                                                :3_2:UnDeeper:
************* / binary(SetPlus)                                                                                :3_2:UnDeeper:
************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                                      :3_2:UnDeeper:
************ / myindented: consuming UnDeeper                                                                   :3_2:UnDeeper:
************ \ myindented: consuming UnDeeper has returned UnDeeper                                          :3_1:Or:
*********** \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])                             :3_1:Or:
********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
******** \ term p has returned MyLeaf (RPMT ["poopoo"])                                                          :3_1:Or:
******** / binary(Or)                                                                                            :3_1:Or:
******** \ binary(Or) has returned Or                                                                             :3_2:GoDeeper:
******** / term p                                                                                                 :3_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :3_2:GoDeeper:
********** / $*|                                                                                                :3_2:GoDeeper:
*********** / |:| some                                                                                         :3_2:GoDeeper:
************ / |:| base parser                                                                                :3_2:GoDeeper:
************* / pNumAsText                                                                                   :3_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :3_2:GoDeeper:
********** / |:| some                                                                                           :3_2:GoDeeper:
*********** / |:| base parser                                                                                  :3_2:GoDeeper:
************ / pNumAsText                                                                                     :3_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :3_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :3_2:GoDeeper:
*********** / someIndentation                                                                                  :3_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :3_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :3_2:Other "the":
************ / manyIndentation/leaf?                                                                           :3_2:Other "the":
************* / term p                                                                                        :3_2:Other "the":
************** / term p/1a:label directly above                                                              :3_2:Other "the":
*************** / $*|                                                                                       :3_2:Other "the":
**************** / |:| some                                                                                :3_2:Other "the":
***************** / |:| base parser                                                                       :3_2:Other "the":
***************** \ |:| base parser has returned ("the",0)                                                 :3_3:GoDeeper:
***************** / |:| deeper                                                                             :3_3:GoDeeper:
****************** / |:| some GoDeeper                                                                    :3_3:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :3_5:Other "honk:
****************** / |:| some                                                                                  :3_5:Other "honk:
******************* / |:| base parser                                                                         :3_5:Other "honk:
******************* \ |:| base parser has returned ("honk",0)                                                  :4_5:UnDeeper:
******************* / |:| deeper                                                                               :4_5:UnDeeper:
******************** / |:| some GoDeeper                                                                      :4_5:UnDeeper:
******************* / |:| noMore                                                                               :4_5:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                           :4_5:UnDeeper:
****************** \ |:| some has returned (["honk"],0)                                                         :4_5:UnDeeper:
***************** \ |:| deeper has returned (["honk"],3)                                                         :4_5:UnDeeper:
**************** \ |:| some has returned (["the","honk"],3)                                                       :4_5:UnDeeper:
**************** / pNumAsText                                                                                     :4_5:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :3_2:Other "the":
*************** / |:| some                                                                                  :3_2:Other "the":
**************** / |:| base parser                                                                         :3_2:Other "the":
**************** \ |:| base parser has returned ("the",0)                                                   :3_3:GoDeeper:
**************** / |:| deeper                                                                               :3_3:GoDeeper:
***************** / |:| some GoDeeper                                                                      :3_3:GoDeeper:
***************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :3_5:Other "honk:
***************** / |:| some                                                                                    :3_5:Other "honk:
****************** / |:| base parser                                                                           :3_5:Other "honk:
****************** \ |:| base parser has returned ("honk",0)                                                    :4_5:UnDeeper:
****************** / |:| deeper                                                                                 :4_5:UnDeeper:
******************* / |:| some GoDeeper                                                                        :4_5:UnDeeper:
****************** / |:| noMore                                                                                 :4_5:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                             :4_5:UnDeeper:
***************** \ |:| some has returned (["honk"],0)                                                           :4_5:UnDeeper:
**************** \ |:| deeper has returned (["honk"],3)                                                           :4_5:UnDeeper:
*************** \ |:| some has returned (["the","honk"],3)                                                         :4_5:UnDeeper:
*************** / undeepers                                                                                        :4_5:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                         :4_5:UnDeeper:
************** / term p/notLabelTerm                                                                         :3_2:Other "the":
*************** / term p/2:someIndentation expr p                                                           :3_2:Other "the":
**************** / someIndentation                                                                         :3_2:Other "the":
***************** / myindented: consuming GoDeeper                                                        :3_2:Other "the":
*************** / term p/3:plain p                                                                          :3_2:Other "the":
**************** / pRelPred                                                                                :3_2:Other "the":
***************** / slRelPred                                                                             :3_2:Other "the":
****************** / nested simpleHorn                                                                   :3_2:Other "the":
******************* / |^|                                                                               :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |^| deeps                                                                                :4_5:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                                     :4_4:Or:
****************** / RPConstraint                                                                        :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPBoolStructR                                                                       :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPMT                                                                                :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slAKA                                                                           :3_2:Other "the":
********************* / $*|                                                                           :3_2:Other "the":
********************** / slAKA base                                                                  :3_2:Other "the":
*********************** / slMultiTerm                                                               :3_2:Other "the":
************************ / |:| some                                                                :3_2:Other "the":
************************* / |:| base parser                                                       :3_2:Other "the":
************************* \ |:| base parser has returned ("the",0)                                 :3_3:GoDeeper:
************************* / |:| deeper                                                             :3_3:GoDeeper:
************************** / |:| some GoDeeper                                                    :3_3:GoDeeper:
************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :3_5:Other "honk:
************************** / |:| some                                                                  :3_5:Other "honk:
*************************** / |:| base parser                                                         :3_5:Other "honk:
*************************** \ |:| base parser has returned ("honk",0)                                  :4_5:UnDeeper:
*************************** / |:| deeper                                                               :4_5:UnDeeper:
**************************** / |:| some GoDeeper                                                      :4_5:UnDeeper:
*************************** / |:| noMore                                                               :4_5:UnDeeper:
*************************** \ |:| noMore has returned ([],0)                                           :4_5:UnDeeper:
************************** \ |:| some has returned (["honk"],0)                                         :4_5:UnDeeper:
************************* \ |:| deeper has returned (["honk"],3)                                         :4_5:UnDeeper:
************************ \ |:| some has returned (["the","honk"],3)                                       :4_5:UnDeeper:
*********************** \ slMultiTerm has returned (["the","honk"],3)                                      :4_5:UnDeeper:
********************** \ slAKA base has returned (["the","honk"],3)                                         :4_5:UnDeeper:
********************* \ $*| has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional akapart                                                           :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / PAKA/akapart                                                             :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
***************************** / Aka Token                                                            :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                                  :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional typically                                                         :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / typically                                                                :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                       :4_5:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                          :4_5:UnDeeper:
******************** \ slAKA has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
****************** \ RPMT has returned (RPMT ["the","honk"],3)                                                  :4_5:UnDeeper:
***************** \ slRelPred has returned (RPMT ["the","honk"],3)                                               :4_5:UnDeeper:
***************** / undeepers                                                                                    :4_5:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                     :4_5:UnDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                 :3_2:Other "the":
************* / someIndentation                                                                               :3_2:Other "the":
************** / myindented: consuming GoDeeper                                                              :3_2:Other "the":
********** / term p/3:plain p                                                                                   :3_2:GoDeeper:
*********** / pRelPred                                                                                         :3_2:GoDeeper:
************ / slRelPred                                                                                      :3_2:GoDeeper:
************* / nested simpleHorn                                                                            :3_2:GoDeeper:
************** / |^|                                                                                        :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPConstraint                                                                                 :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPBoolStructR                                                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPMT                                                                                         :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slAKA                                                                                    :3_2:GoDeeper:
**************** / $*|                                                                                    :3_2:GoDeeper:
***************** / slAKA base                                                                           :3_2:GoDeeper:
****************** / slMultiTerm                                                                        :3_2:GoDeeper:
******************* / |:| some                                                                         :3_2:GoDeeper:
******************** / |:| base parser                                                                :3_2:GoDeeper:
********************* / pNumAsText                                                                   :3_2:GoDeeper:
******* / withPrePost                                                                                              :2_2:GoDeeper:
******** / |<* starting                                                                                           :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
******* / withPreOnly                                                                                              :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
****** / Otherwise                                                                                                 :2_1:Means:
***** / pHornlike/ambitious                                                                                         :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
***** / pHornlike/someStructure                                                                                     :2_1:Means:
****** / manyIndentation/leaf?                                                                                     :2_1:Means:
******* / relPredNextlineWhen                                                                                     :2_1:Means:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Means:
********* / optIndentedTuple                                                                                    :2_1:Means:
********** / optIndented                                                                                       :2_1:Means:
*********** / pRelPred                                                                                        :2_1:Means:
************ / slRelPred                                                                                     :2_1:Means:
************* / nested simpleHorn                                                                           :2_1:Means:
************** / |^|                                                                                       :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPConstraint                                                                                :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPBoolStructR                                                                               :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPMT                                                                                        :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slAKA                                                                                   :2_1:Means:
**************** / $*|                                                                                   :2_1:Means:
***************** / slAKA base                                                                          :2_1:Means:
****************** / slMultiTerm                                                                       :2_1:Means:
******************* / |:| some                                                                        :2_1:Means:
******************** / |:| base parser                                                               :2_1:Means:
********************* / pNumAsText                                                                  :2_1:Means:
******* / relPredSamelineWhen                                                                                     :2_1:Means:
******** / $*|                                                                                                   :2_1:Means:
********* / slRelPred                                                                                           :2_1:Means:
********** / nested simpleHorn                                                                                 :2_1:Means:
*********** / |^|                                                                                             :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPConstraint                                                                                      :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPBoolStructR                                                                                     :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPMT                                                                                              :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slAKA                                                                                         :2_1:Means:
************* / $*|                                                                                         :2_1:Means:
************** / slAKA base                                                                                :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Means:
******* / someIndentation                                                                                         :2_1:Means:
******** / myindented: consuming GoDeeper                                                                        :2_1:Means:
***** / pHornlike/ambitious                                                                                         :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
***** / pHornlike/someStructure                                                                                     :2_1:Means:
****** / manyIndentation/leaf?                                                                                     :2_1:Means:
******* / relPredNextlineWhen                                                                                     :2_1:Means:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Means:
********* / optIndentedTuple                                                                                    :2_1:Means:
********** / optIndented                                                                                       :2_1:Means:
*********** / pRelPred                                                                                        :2_1:Means:
************ / slRelPred                                                                                     :2_1:Means:
************* / nested simpleHorn                                                                           :2_1:Means:
************** / |^|                                                                                       :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPConstraint                                                                                :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPBoolStructR                                                                               :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPMT                                                                                        :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slAKA                                                                                   :2_1:Means:
**************** / $*|                                                                                   :2_1:Means:
***************** / slAKA base                                                                          :2_1:Means:
****************** / slMultiTerm                                                                       :2_1:Means:
******************* / |:| some                                                                        :2_1:Means:
******************** / |:| base parser                                                               :2_1:Means:
********************* / pNumAsText                                                                  :2_1:Means:
******* / relPredSamelineWhen                                                                                     :2_1:Means:
******** / $*|                                                                                                   :2_1:Means:
********* / slRelPred                                                                                           :2_1:Means:
********** / nested simpleHorn                                                                                 :2_1:Means:
*********** / |^|                                                                                             :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPConstraint                                                                                      :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPBoolStructR                                                                                     :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPMT                                                                                              :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slAKA                                                                                         :2_1:Means:
************* / $*|                                                                                         :2_1:Means:
************** / slAKA base                                                                                :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Means:
******* / someIndentation                                                                                         :2_1:Means:
******** / myindented: consuming GoDeeper                                                                        :2_1:Means:
***** / pHornlike/givenLimb                                                                                         :2_1:Means:
****** / preambleParamText:[Given]                                                                                 :2_1:Means:
******* / $>|                                                                                                     :2_1:Means:
***** / whenCase                                                                                                    :2_1:Means:
****** / whenMeansIf                                                                                               :2_1:Means:
****** \ whenMeansIf has returned Means                                                                             :2_2:GoDeeper:
****** / pBSR                                                                                                       :2_2:GoDeeper:
******* / ppp inner                                                                                                :2_2:GoDeeper:
******** / term p                                                                                                 :2_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :2_2:GoDeeper:
********** / $*|                                                                                                :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :2_2:GoDeeper:
********** / |:| some                                                                                           :2_2:GoDeeper:
*********** / |:| base parser                                                                                  :2_2:GoDeeper:
************ / pNumAsText                                                                                     :2_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :2_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :2_2:GoDeeper:
*********** / someIndentation                                                                                  :2_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :2_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :2_2:Other "poop:
************ / manyIndentation/leaf?                                                                           :2_2:Other "poop:
************* / term p                                                                                        :2_2:Other "poop:
************** / term p/1a:label directly above                                                              :2_2:Other "poop:
*************** / $*|                                                                                       :2_2:Other "poop:
**************** / |:| some                                                                                :2_2:Other "poop:
***************** / |:| base parser                                                                       :2_2:Other "poop:
***************** \ |:| base parser has returned ("poopoo",0)                                              :3_2:UnDeeper:
***************** / |:| deeper                                                                             :3_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :3_2:UnDeeper:
***************** / |:| noMore                                                                             :3_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :3_2:UnDeeper:
**************** \ |:| some has returned (["poopoo"],0)                                                     :3_2:UnDeeper:
**************** / pNumAsText                                                                               :3_2:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :2_2:Other "poop:
*************** / |:| some                                                                                  :2_2:Other "poop:
**************** / |:| base parser                                                                         :2_2:Other "poop:
**************** \ |:| base parser has returned ("poopoo",0)                                                :3_2:UnDeeper:
**************** / |:| deeper                                                                               :3_2:UnDeeper:
***************** / |:| some GoDeeper                                                                      :3_2:UnDeeper:
**************** / |:| noMore                                                                               :3_2:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                           :3_2:UnDeeper:
*************** \ |:| some has returned (["poopoo"],0)                                                       :3_2:UnDeeper:
*************** / undeepers                                                                                  :3_2:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                   :3_2:UnDeeper:
**************** / sameLine: success!                                                                       :3_2:UnDeeper:
*************** \ undeepers has returned ()                                                                  :3_2:UnDeeper:
*************** / matching EOL                                                                               :3_2:UnDeeper:
************** / term p/notLabelTerm                                                                         :2_2:Other "poop:
*************** / term p/2:someIndentation expr p                                                           :2_2:Other "poop:
**************** / someIndentation                                                                         :2_2:Other "poop:
***************** / myindented: consuming GoDeeper                                                        :2_2:Other "poop:
*************** / term p/3:plain p                                                                          :2_2:Other "poop:
**************** / pRelPred                                                                                :2_2:Other "poop:
***************** / slRelPred                                                                             :2_2:Other "poop:
****************** / nested simpleHorn                                                                   :2_2:Other "poop:
******************* / |^|                                                                               :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |^| deeps                                                                          :3_2:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                               :3_1:Or:
****************** / RPConstraint                                                                        :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPBoolStructR                                                                       :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPMT                                                                                :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slAKA                                                                           :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************** / slAKA base                                                                  :2_2:Other "poop:
*********************** / slMultiTerm                                                               :2_2:Other "poop:
************************ / |:| some                                                                :2_2:Other "poop:
************************* / |:| base parser                                                       :2_2:Other "poop:
************************* \ |:| base parser has returned ("poopoo",0)                              :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["poopoo"],0)                                     :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["poopoo"],0)                                    :3_2:UnDeeper:
********************** \ slAKA base has returned (["poopoo"],0)                                       :3_2:UnDeeper:
********************* \ $*| has returned (["poopoo"],0)                                                :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional akapart                                                     :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / PAKA/akapart                                                       :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
***************************** / Aka Token                                                      :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                            :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional typically                                                   :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / typically                                                          :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                 :3_2:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                    :3_2:UnDeeper:
******************** \ slAKA has returned (["poopoo"],0)                                                :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
****************** \ RPMT has returned (RPMT ["poopoo"],0)                                                :3_2:UnDeeper:
***************** \ slRelPred has returned (RPMT ["poopoo"],0)                                             :3_2:UnDeeper:
***************** / undeepers                                                                              :3_2:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers               :3_2:UnDeeper:
****************** / sameLine: success!                                                                   :3_2:UnDeeper:
***************** \ undeepers has returned ()                                                              :3_2:UnDeeper:
**************** \ pRelPred has returned RPMT ["poopoo"]                                                    :3_2:UnDeeper:
*************** \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                                     :3_2:UnDeeper:
************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                    :3_2:UnDeeper:
************* \ term p has returned MyLeaf (RPMT ["poopoo"])                                                   :3_2:UnDeeper:
************* / binary(Or)                                                                                     :3_2:UnDeeper:
************* / binary(And)                                                                                    :3_2:UnDeeper:
************* / binary(SetLess)                                                                                :3_2:UnDeeper:
************* / binary(SetPlus)                                                                                :3_2:UnDeeper:
************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                                      :3_2:UnDeeper:
************ / myindented: consuming UnDeeper                                                                   :3_2:UnDeeper:
************ \ myindented: consuming UnDeeper has returned UnDeeper                                          :3_1:Or:
*********** \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])                             :3_1:Or:
********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
******** \ term p has returned MyLeaf (RPMT ["poopoo"])                                                          :3_1:Or:
******** / binary(Or)                                                                                            :3_1:Or:
******** \ binary(Or) has returned Or                                                                             :3_2:GoDeeper:
******** / term p                                                                                                 :3_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :3_2:GoDeeper:
********** / $*|                                                                                                :3_2:GoDeeper:
*********** / |:| some                                                                                         :3_2:GoDeeper:
************ / |:| base parser                                                                                :3_2:GoDeeper:
************* / pNumAsText                                                                                   :3_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :3_2:GoDeeper:
********** / |:| some                                                                                           :3_2:GoDeeper:
*********** / |:| base parser                                                                                  :3_2:GoDeeper:
************ / pNumAsText                                                                                     :3_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :3_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :3_2:GoDeeper:
*********** / someIndentation                                                                                  :3_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :3_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :3_2:Other "the":
************ / manyIndentation/leaf?                                                                           :3_2:Other "the":
************* / term p                                                                                        :3_2:Other "the":
************** / term p/1a:label directly above                                                              :3_2:Other "the":
*************** / $*|                                                                                       :3_2:Other "the":
**************** / |:| some                                                                                :3_2:Other "the":
***************** / |:| base parser                                                                       :3_2:Other "the":
***************** \ |:| base parser has returned ("the",0)                                                 :3_3:GoDeeper:
***************** / |:| deeper                                                                             :3_3:GoDeeper:
****************** / |:| some GoDeeper                                                                    :3_3:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :3_5:Other "honk:
****************** / |:| some                                                                                  :3_5:Other "honk:
******************* / |:| base parser                                                                         :3_5:Other "honk:
******************* \ |:| base parser has returned ("honk",0)                                                  :4_5:UnDeeper:
******************* / |:| deeper                                                                               :4_5:UnDeeper:
******************** / |:| some GoDeeper                                                                      :4_5:UnDeeper:
******************* / |:| noMore                                                                               :4_5:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                           :4_5:UnDeeper:
****************** \ |:| some has returned (["honk"],0)                                                         :4_5:UnDeeper:
***************** \ |:| deeper has returned (["honk"],3)                                                         :4_5:UnDeeper:
**************** \ |:| some has returned (["the","honk"],3)                                                       :4_5:UnDeeper:
**************** / pNumAsText                                                                                     :4_5:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :3_2:Other "the":
*************** / |:| some                                                                                  :3_2:Other "the":
**************** / |:| base parser                                                                         :3_2:Other "the":
**************** \ |:| base parser has returned ("the",0)                                                   :3_3:GoDeeper:
**************** / |:| deeper                                                                               :3_3:GoDeeper:
***************** / |:| some GoDeeper                                                                      :3_3:GoDeeper:
***************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :3_5:Other "honk:
***************** / |:| some                                                                                    :3_5:Other "honk:
****************** / |:| base parser                                                                           :3_5:Other "honk:
****************** \ |:| base parser has returned ("honk",0)                                                    :4_5:UnDeeper:
****************** / |:| deeper                                                                                 :4_5:UnDeeper:
******************* / |:| some GoDeeper                                                                        :4_5:UnDeeper:
****************** / |:| noMore                                                                                 :4_5:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                             :4_5:UnDeeper:
***************** \ |:| some has returned (["honk"],0)                                                           :4_5:UnDeeper:
**************** \ |:| deeper has returned (["honk"],3)                                                           :4_5:UnDeeper:
*************** \ |:| some has returned (["the","honk"],3)                                                         :4_5:UnDeeper:
*************** / undeepers                                                                                        :4_5:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                         :4_5:UnDeeper:
************** / term p/notLabelTerm                                                                         :3_2:Other "the":
*************** / term p/2:someIndentation expr p                                                           :3_2:Other "the":
**************** / someIndentation                                                                         :3_2:Other "the":
***************** / myindented: consuming GoDeeper                                                        :3_2:Other "the":
*************** / term p/3:plain p                                                                          :3_2:Other "the":
**************** / pRelPred                                                                                :3_2:Other "the":
***************** / slRelPred                                                                             :3_2:Other "the":
****************** / nested simpleHorn                                                                   :3_2:Other "the":
******************* / |^|                                                                               :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |^| deeps                                                                                :4_5:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                                     :4_4:Or:
****************** / RPConstraint                                                                        :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPBoolStructR                                                                       :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPMT                                                                                :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slAKA                                                                           :3_2:Other "the":
********************* / $*|                                                                           :3_2:Other "the":
********************** / slAKA base                                                                  :3_2:Other "the":
*********************** / slMultiTerm                                                               :3_2:Other "the":
************************ / |:| some                                                                :3_2:Other "the":
************************* / |:| base parser                                                       :3_2:Other "the":
************************* \ |:| base parser has returned ("the",0)                                 :3_3:GoDeeper:
************************* / |:| deeper                                                             :3_3:GoDeeper:
************************** / |:| some GoDeeper                                                    :3_3:GoDeeper:
************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :3_5:Other "honk:
************************** / |:| some                                                                  :3_5:Other "honk:
*************************** / |:| base parser                                                         :3_5:Other "honk:
*************************** \ |:| base parser has returned ("honk",0)                                  :4_5:UnDeeper:
*************************** / |:| deeper                                                               :4_5:UnDeeper:
**************************** / |:| some GoDeeper                                                      :4_5:UnDeeper:
*************************** / |:| noMore                                                               :4_5:UnDeeper:
*************************** \ |:| noMore has returned ([],0)                                           :4_5:UnDeeper:
************************** \ |:| some has returned (["honk"],0)                                         :4_5:UnDeeper:
************************* \ |:| deeper has returned (["honk"],3)                                         :4_5:UnDeeper:
************************ \ |:| some has returned (["the","honk"],3)                                       :4_5:UnDeeper:
*********************** \ slMultiTerm has returned (["the","honk"],3)                                      :4_5:UnDeeper:
********************** \ slAKA base has returned (["the","honk"],3)                                         :4_5:UnDeeper:
********************* \ $*| has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional akapart                                                           :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / PAKA/akapart                                                             :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
***************************** / Aka Token                                                            :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                                  :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional typically                                                         :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / typically                                                                :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                       :4_5:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                          :4_5:UnDeeper:
******************** \ slAKA has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
****************** \ RPMT has returned (RPMT ["the","honk"],3)                                                  :4_5:UnDeeper:
***************** \ slRelPred has returned (RPMT ["the","honk"],3)                                               :4_5:UnDeeper:
***************** / undeepers                                                                                    :4_5:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                     :4_5:UnDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                 :3_2:Other "the":
************* / someIndentation                                                                               :3_2:Other "the":
************** / myindented: consuming GoDeeper                                                              :3_2:Other "the":
********** / term p/3:plain p                                                                                   :3_2:GoDeeper:
*********** / pRelPred                                                                                         :3_2:GoDeeper:
************ / slRelPred                                                                                      :3_2:GoDeeper:
************* / nested simpleHorn                                                                            :3_2:GoDeeper:
************** / |^|                                                                                        :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPConstraint                                                                                 :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPBoolStructR                                                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPMT                                                                                         :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slAKA                                                                                    :3_2:GoDeeper:
**************** / $*|                                                                                    :3_2:GoDeeper:
***************** / slAKA base                                                                           :3_2:GoDeeper:
****************** / slMultiTerm                                                                        :3_2:GoDeeper:
******************* / |:| some                                                                         :3_2:GoDeeper:
******************** / |:| base parser                                                                :3_2:GoDeeper:
********************* / pNumAsText                                                                   :3_2:GoDeeper:
******* / withPrePost                                                                                              :2_2:GoDeeper:
******** / |<* starting                                                                                           :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
******* / withPreOnly                                                                                              :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
****** / Otherwise                                                                                                 :2_1:Means:
***** / pHornlike/uponLimb                                                                                          :2_1:Means:
****** / preambleParamText:[Upon]                                                                                  :2_1:Means:
******* / $>|                                                                                                     :2_1:Means:
***** / whenCase                                                                                                    :2_1:Means:
****** / whenMeansIf                                                                                               :2_1:Means:
****** \ whenMeansIf has returned Means                                                                             :2_2:GoDeeper:
****** / pBSR                                                                                                       :2_2:GoDeeper:
******* / ppp inner                                                                                                :2_2:GoDeeper:
******** / term p                                                                                                 :2_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :2_2:GoDeeper:
********** / $*|                                                                                                :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :2_2:GoDeeper:
********** / |:| some                                                                                           :2_2:GoDeeper:
*********** / |:| base parser                                                                                  :2_2:GoDeeper:
************ / pNumAsText                                                                                     :2_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :2_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :2_2:GoDeeper:
*********** / someIndentation                                                                                  :2_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :2_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :2_2:Other "poop:
************ / manyIndentation/leaf?                                                                           :2_2:Other "poop:
************* / term p                                                                                        :2_2:Other "poop:
************** / term p/1a:label directly above                                                              :2_2:Other "poop:
*************** / $*|                                                                                       :2_2:Other "poop:
**************** / |:| some                                                                                :2_2:Other "poop:
***************** / |:| base parser                                                                       :2_2:Other "poop:
***************** \ |:| base parser has returned ("poopoo",0)                                              :3_2:UnDeeper:
***************** / |:| deeper                                                                             :3_2:UnDeeper:
****************** / |:| some GoDeeper                                                                    :3_2:UnDeeper:
***************** / |:| noMore                                                                             :3_2:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                         :3_2:UnDeeper:
**************** \ |:| some has returned (["poopoo"],0)                                                     :3_2:UnDeeper:
**************** / pNumAsText                                                                               :3_2:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :2_2:Other "poop:
*************** / |:| some                                                                                  :2_2:Other "poop:
**************** / |:| base parser                                                                         :2_2:Other "poop:
**************** \ |:| base parser has returned ("poopoo",0)                                                :3_2:UnDeeper:
**************** / |:| deeper                                                                               :3_2:UnDeeper:
***************** / |:| some GoDeeper                                                                      :3_2:UnDeeper:
**************** / |:| noMore                                                                               :3_2:UnDeeper:
**************** \ |:| noMore has returned ([],0)                                                           :3_2:UnDeeper:
*************** \ |:| some has returned (["poopoo"],0)                                                       :3_2:UnDeeper:
*************** / undeepers                                                                                  :3_2:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                   :3_2:UnDeeper:
**************** / sameLine: success!                                                                       :3_2:UnDeeper:
*************** \ undeepers has returned ()                                                                  :3_2:UnDeeper:
*************** / matching EOL                                                                               :3_2:UnDeeper:
************** / term p/notLabelTerm                                                                         :2_2:Other "poop:
*************** / term p/2:someIndentation expr p                                                           :2_2:Other "poop:
**************** / someIndentation                                                                         :2_2:Other "poop:
***************** / myindented: consuming GoDeeper                                                        :2_2:Other "poop:
*************** / term p/3:plain p                                                                          :2_2:Other "poop:
**************** / pRelPred                                                                                :2_2:Other "poop:
***************** / slRelPred                                                                             :2_2:Other "poop:
****************** / nested simpleHorn                                                                   :2_2:Other "poop:
******************* / |^|                                                                               :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |^| deeps                                                                          :3_2:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                               :3_1:Or:
****************** / RPConstraint                                                                        :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPBoolStructR                                                                       :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slMultiTerm                                                                     :2_2:Other "poop:
********************* / |:| some                                                                      :2_2:Other "poop:
********************** / |:| base parser                                                             :2_2:Other "poop:
********************** \ |:| base parser has returned ("poopoo",0)                                    :3_2:UnDeeper:
********************** / |:| deeper                                                                   :3_2:UnDeeper:
*********************** / |:| some GoDeeper                                                          :3_2:UnDeeper:
********************** / |:| noMore                                                                   :3_2:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                               :3_2:UnDeeper:
********************* \ |:| some has returned (["poopoo"],0)                                           :3_2:UnDeeper:
******************** \ slMultiTerm has returned (["poopoo"],0)                                          :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
******************* / |>| calling $>>                                                                    :3_2:UnDeeper:
******************** / $>>                                                                              :3_2:UnDeeper:
********************* / $>>/recurse                                                                    :3_2:UnDeeper:
********************* / $>>/base                                                                       :3_2:UnDeeper:
****************** / RPMT                                                                                :2_2:Other "poop:
******************* / $*|                                                                               :2_2:Other "poop:
******************** / slAKA                                                                           :2_2:Other "poop:
********************* / $*|                                                                           :2_2:Other "poop:
********************** / slAKA base                                                                  :2_2:Other "poop:
*********************** / slMultiTerm                                                               :2_2:Other "poop:
************************ / |:| some                                                                :2_2:Other "poop:
************************* / |:| base parser                                                       :2_2:Other "poop:
************************* \ |:| base parser has returned ("poopoo",0)                              :3_2:UnDeeper:
************************* / |:| deeper                                                             :3_2:UnDeeper:
************************** / |:| some GoDeeper                                                    :3_2:UnDeeper:
************************* / |:| noMore                                                             :3_2:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                         :3_2:UnDeeper:
************************ \ |:| some has returned (["poopoo"],0)                                     :3_2:UnDeeper:
*********************** \ slMultiTerm has returned (["poopoo"],0)                                    :3_2:UnDeeper:
********************** \ slAKA base has returned (["poopoo"],0)                                       :3_2:UnDeeper:
********************* \ $*| has returned (["poopoo"],0)                                                :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional akapart                                                     :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / PAKA/akapart                                                       :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
***************************** / Aka Token                                                      :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                            :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / |>>                                                                            :3_2:UnDeeper:
********************** / |>>/recurse                                                                  :3_2:UnDeeper:
********************** / |>>/base                                                                     :3_2:UnDeeper:
*********************** / slAKA optional typically                                                   :3_2:UnDeeper:
************************ / |?| optional something                                                   :3_2:UnDeeper:
************************* / |>>                                                                    :3_2:UnDeeper:
************************** / |>>/recurse                                                          :3_2:UnDeeper:
************************** / |>>/base                                                             :3_2:UnDeeper:
*************************** / typically                                                          :3_2:UnDeeper:
**************************** / $>|                                                              :3_2:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                          :3_2:UnDeeper:
*********************** / |>>/base got Nothing                                                       :3_2:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                            :3_2:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                   :3_2:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                 :3_2:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                    :3_2:UnDeeper:
******************** \ slAKA has returned (["poopoo"],0)                                                :3_2:UnDeeper:
******************* \ $*| has returned (["poopoo"],0)                                                    :3_2:UnDeeper:
****************** \ RPMT has returned (RPMT ["poopoo"],0)                                                :3_2:UnDeeper:
***************** \ slRelPred has returned (RPMT ["poopoo"],0)                                             :3_2:UnDeeper:
***************** / undeepers                                                                              :3_2:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers               :3_2:UnDeeper:
****************** / sameLine: success!                                                                   :3_2:UnDeeper:
***************** \ undeepers has returned ()                                                              :3_2:UnDeeper:
**************** \ pRelPred has returned RPMT ["poopoo"]                                                    :3_2:UnDeeper:
*************** \ term p/3:plain p has returned MyLeaf (RPMT ["poopoo"])                                     :3_2:UnDeeper:
************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                    :3_2:UnDeeper:
************* \ term p has returned MyLeaf (RPMT ["poopoo"])                                                   :3_2:UnDeeper:
************* / binary(Or)                                                                                     :3_2:UnDeeper:
************* / binary(And)                                                                                    :3_2:UnDeeper:
************* / binary(SetLess)                                                                                :3_2:UnDeeper:
************* / binary(SetPlus)                                                                                :3_2:UnDeeper:
************ \ manyIndentation/leaf? has returned MyLeaf (RPMT ["poopoo"])                                      :3_2:UnDeeper:
************ / myindented: consuming UnDeeper                                                                   :3_2:UnDeeper:
************ \ myindented: consuming UnDeeper has returned UnDeeper                                          :3_1:Or:
*********** \ someIndentation has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
********** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["poopoo"])                             :3_1:Or:
********* \ term p/notLabelTerm has returned MyLeaf (RPMT ["poopoo"])                                           :3_1:Or:
******** \ term p has returned MyLeaf (RPMT ["poopoo"])                                                          :3_1:Or:
******** / binary(Or)                                                                                            :3_1:Or:
******** \ binary(Or) has returned Or                                                                             :3_2:GoDeeper:
******** / term p                                                                                                 :3_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :3_2:GoDeeper:
********** / $*|                                                                                                :3_2:GoDeeper:
*********** / |:| some                                                                                         :3_2:GoDeeper:
************ / |:| base parser                                                                                :3_2:GoDeeper:
************* / pNumAsText                                                                                   :3_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :3_2:GoDeeper:
********** / |:| some                                                                                           :3_2:GoDeeper:
*********** / |:| base parser                                                                                  :3_2:GoDeeper:
************ / pNumAsText                                                                                     :3_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :3_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :3_2:GoDeeper:
*********** / someIndentation                                                                                  :3_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :3_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                            :3_2:Other "the":
************ / manyIndentation/leaf?                                                                           :3_2:Other "the":
************* / term p                                                                                        :3_2:Other "the":
************** / term p/1a:label directly above                                                              :3_2:Other "the":
*************** / $*|                                                                                       :3_2:Other "the":
**************** / |:| some                                                                                :3_2:Other "the":
***************** / |:| base parser                                                                       :3_2:Other "the":
***************** \ |:| base parser has returned ("the",0)                                                 :3_3:GoDeeper:
***************** / |:| deeper                                                                             :3_3:GoDeeper:
****************** / |:| some GoDeeper                                                                    :3_3:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :3_5:Other "honk:
****************** / |:| some                                                                                  :3_5:Other "honk:
******************* / |:| base parser                                                                         :3_5:Other "honk:
******************* \ |:| base parser has returned ("honk",0)                                                  :4_5:UnDeeper:
******************* / |:| deeper                                                                               :4_5:UnDeeper:
******************** / |:| some GoDeeper                                                                      :4_5:UnDeeper:
******************* / |:| noMore                                                                               :4_5:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                           :4_5:UnDeeper:
****************** \ |:| some has returned (["honk"],0)                                                         :4_5:UnDeeper:
***************** \ |:| deeper has returned (["honk"],3)                                                         :4_5:UnDeeper:
**************** \ |:| some has returned (["the","honk"],3)                                                       :4_5:UnDeeper:
**************** / pNumAsText                                                                                     :4_5:UnDeeper:
************** / term p/b:label to the left of line below, with EOL                                          :3_2:Other "the":
*************** / |:| some                                                                                  :3_2:Other "the":
**************** / |:| base parser                                                                         :3_2:Other "the":
**************** \ |:| base parser has returned ("the",0)                                                   :3_3:GoDeeper:
**************** / |:| deeper                                                                               :3_3:GoDeeper:
***************** / |:| some GoDeeper                                                                      :3_3:GoDeeper:
***************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :3_5:Other "honk:
***************** / |:| some                                                                                    :3_5:Other "honk:
****************** / |:| base parser                                                                           :3_5:Other "honk:
****************** \ |:| base parser has returned ("honk",0)                                                    :4_5:UnDeeper:
****************** / |:| deeper                                                                                 :4_5:UnDeeper:
******************* / |:| some GoDeeper                                                                        :4_5:UnDeeper:
****************** / |:| noMore                                                                                 :4_5:UnDeeper:
****************** \ |:| noMore has returned ([],0)                                                             :4_5:UnDeeper:
***************** \ |:| some has returned (["honk"],0)                                                           :4_5:UnDeeper:
**************** \ |:| deeper has returned (["honk"],3)                                                           :4_5:UnDeeper:
*************** \ |:| some has returned (["the","honk"],3)                                                         :4_5:UnDeeper:
*************** / undeepers                                                                                        :4_5:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                         :4_5:UnDeeper:
************** / term p/notLabelTerm                                                                         :3_2:Other "the":
*************** / term p/2:someIndentation expr p                                                           :3_2:Other "the":
**************** / someIndentation                                                                         :3_2:Other "the":
***************** / myindented: consuming GoDeeper                                                        :3_2:Other "the":
*************** / term p/3:plain p                                                                          :3_2:Other "the":
**************** / pRelPred                                                                                :3_2:Other "the":
***************** / slRelPred                                                                             :3_2:Other "the":
****************** / nested simpleHorn                                                                   :3_2:Other "the":
******************* / |^|                                                                               :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |^| deeps                                                                                :4_5:UnDeeper:
******************* \ |^| deeps has returned [UnDeeper]                                                     :4_4:Or:
****************** / RPConstraint                                                                        :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPBoolStructR                                                                       :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slMultiTerm                                                                     :3_2:Other "the":
********************* / |:| some                                                                      :3_2:Other "the":
********************** / |:| base parser                                                             :3_2:Other "the":
********************** \ |:| base parser has returned ("the",0)                                       :3_3:GoDeeper:
********************** / |:| deeper                                                                   :3_3:GoDeeper:
*********************** / |:| some GoDeeper                                                          :3_3:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :3_5:Other "honk:
*********************** / |:| some                                                                        :3_5:Other "honk:
************************ / |:| base parser                                                               :3_5:Other "honk:
************************ \ |:| base parser has returned ("honk",0)                                        :4_5:UnDeeper:
************************ / |:| deeper                                                                     :4_5:UnDeeper:
************************* / |:| some GoDeeper                                                            :4_5:UnDeeper:
************************ / |:| noMore                                                                     :4_5:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                                 :4_5:UnDeeper:
*********************** \ |:| some has returned (["honk"],0)                                               :4_5:UnDeeper:
********************** \ |:| deeper has returned (["honk"],3)                                               :4_5:UnDeeper:
********************* \ |:| some has returned (["the","honk"],3)                                             :4_5:UnDeeper:
******************** \ slMultiTerm has returned (["the","honk"],3)                                            :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
******************* / |>| calling $>>                                                                          :4_5:UnDeeper:
******************** / $>>                                                                                    :4_5:UnDeeper:
********************* / $>>/recurse                                                                          :4_5:UnDeeper:
********************* / $>>/base                                                                             :4_5:UnDeeper:
****************** / RPMT                                                                                :3_2:Other "the":
******************* / $*|                                                                               :3_2:Other "the":
******************** / slAKA                                                                           :3_2:Other "the":
********************* / $*|                                                                           :3_2:Other "the":
********************** / slAKA base                                                                  :3_2:Other "the":
*********************** / slMultiTerm                                                               :3_2:Other "the":
************************ / |:| some                                                                :3_2:Other "the":
************************* / |:| base parser                                                       :3_2:Other "the":
************************* \ |:| base parser has returned ("the",0)                                 :3_3:GoDeeper:
************************* / |:| deeper                                                             :3_3:GoDeeper:
************************** / |:| some GoDeeper                                                    :3_3:GoDeeper:
************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :3_5:Other "honk:
************************** / |:| some                                                                  :3_5:Other "honk:
*************************** / |:| base parser                                                         :3_5:Other "honk:
*************************** \ |:| base parser has returned ("honk",0)                                  :4_5:UnDeeper:
*************************** / |:| deeper                                                               :4_5:UnDeeper:
**************************** / |:| some GoDeeper                                                      :4_5:UnDeeper:
*************************** / |:| noMore                                                               :4_5:UnDeeper:
*************************** \ |:| noMore has returned ([],0)                                           :4_5:UnDeeper:
************************** \ |:| some has returned (["honk"],0)                                         :4_5:UnDeeper:
************************* \ |:| deeper has returned (["honk"],3)                                         :4_5:UnDeeper:
************************ \ |:| some has returned (["the","honk"],3)                                       :4_5:UnDeeper:
*********************** \ slMultiTerm has returned (["the","honk"],3)                                      :4_5:UnDeeper:
********************** \ slAKA base has returned (["the","honk"],3)                                         :4_5:UnDeeper:
********************* \ $*| has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional akapart                                                           :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / PAKA/akapart                                                             :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
***************************** / Aka Token                                                            :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional akapart has returned (Nothing,0)                                  :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / |>>                                                                                  :4_5:UnDeeper:
********************** / |>>/recurse                                                                        :4_5:UnDeeper:
********************** / |>>/base                                                                           :4_5:UnDeeper:
*********************** / slAKA optional typically                                                         :4_5:UnDeeper:
************************ / |?| optional something                                                         :4_5:UnDeeper:
************************* / |>>                                                                          :4_5:UnDeeper:
************************** / |>>/recurse                                                                :4_5:UnDeeper:
************************** / |>>/base                                                                   :4_5:UnDeeper:
*************************** / typically                                                                :4_5:UnDeeper:
**************************** / $>|                                                                    :4_5:UnDeeper:
************************ \ |?| optional something has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** \ slAKA optional typically has returned (Nothing,0)                                :4_5:UnDeeper:
*********************** / |>>/base got Nothing                                                             :4_5:UnDeeper:
********************** \ |>>/base has returned (Nothing,0)                                                  :4_5:UnDeeper:
********************* \ |>> has returned (Nothing,0)                                                         :4_5:UnDeeper:
********************* / slAKA: proceeding after base and entityalias are retrieved ...                       :4_5:UnDeeper:
********************* / pAKA: entityalias = Nothing                                                          :4_5:UnDeeper:
******************** \ slAKA has returned (["the","honk"],3)                                                  :4_5:UnDeeper:
******************* \ $*| has returned (["the","honk"],3)                                                      :4_5:UnDeeper:
****************** \ RPMT has returned (RPMT ["the","honk"],3)                                                  :4_5:UnDeeper:
***************** \ slRelPred has returned (RPMT ["the","honk"],3)                                               :4_5:UnDeeper:
***************** / undeepers                                                                                    :4_5:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                     :4_5:UnDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                 :3_2:Other "the":
************* / someIndentation                                                                               :3_2:Other "the":
************** / myindented: consuming GoDeeper                                                              :3_2:Other "the":
********** / term p/3:plain p                                                                                   :3_2:GoDeeper:
*********** / pRelPred                                                                                         :3_2:GoDeeper:
************ / slRelPred                                                                                      :3_2:GoDeeper:
************* / nested simpleHorn                                                                            :3_2:GoDeeper:
************** / |^|                                                                                        :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPConstraint                                                                                 :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPBoolStructR                                                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slMultiTerm                                                                              :3_2:GoDeeper:
**************** / |:| some                                                                               :3_2:GoDeeper:
***************** / |:| base parser                                                                      :3_2:GoDeeper:
****************** / pNumAsText                                                                         :3_2:GoDeeper:
************* / RPMT                                                                                         :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / slAKA                                                                                    :3_2:GoDeeper:
**************** / $*|                                                                                    :3_2:GoDeeper:
***************** / slAKA base                                                                           :3_2:GoDeeper:
****************** / slMultiTerm                                                                        :3_2:GoDeeper:
******************* / |:| some                                                                         :3_2:GoDeeper:
******************** / |:| base parser                                                                :3_2:GoDeeper:
********************* / pNumAsText                                                                   :3_2:GoDeeper:
******* / withPrePost                                                                                              :2_2:GoDeeper:
******** / |<* starting                                                                                           :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
******* / withPreOnly                                                                                              :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / pre part                                                                                             :2_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                :2_2:Other "poop:
*********** / expectUnDeepers                                                                                   :2_2:Other "poop:
************ / ignoring ["poopoo"]                                                                              :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                    :2_2:Other "poop:
*********** / aNLK: determined undp_count = 1                                                                   :2_2:Other "poop:
*********** / ->| trying to consume 1 GoDeepers                                                                 :2_2:Other "poop:
*********** / $*|                                                                                               :2_2:Other "poop:
*********** \ $*| has returned ((),0)                                                                           :2_2:Other "poop:
********** / /*= lookAhead failed, delegating to plain /+=                                                       :2_2:Other "poop:
********** / aboveNextLineKeyword                                                                                 :3_2:UnDeeper:
*********** / expectUnDeepers                                                                                    :3_2:UnDeeper:
************ / ignoring []                                                                                      :3_2:UnDeeper:
************ / matched undeepers [UnDeeper]                                                                  :3_1:Or:
*********** \ expectUnDeepers has returned 1                                                                     :3_2:UnDeeper:
*********** / aNLK: determined undp_count = 1                                                                    :3_2:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :3_2:UnDeeper:
*********** / $*|                                                                                                :3_2:UnDeeper:
*********** \ $*| has returned ((),0)                                                                            :3_2:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :3_2:UnDeeper:
****** / Otherwise                                                                                                 :2_1:Means:
***** / pHornlike/ambitious                                                                                         :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
***** / pHornlike/someStructure                                                                                     :2_1:Means:
****** / manyIndentation/leaf?                                                                                     :2_1:Means:
******* / relPredNextlineWhen                                                                                     :2_1:Means:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Means:
********* / optIndentedTuple                                                                                    :2_1:Means:
********** / optIndented                                                                                       :2_1:Means:
*********** / pRelPred                                                                                        :2_1:Means:
************ / slRelPred                                                                                     :2_1:Means:
************* / nested simpleHorn                                                                           :2_1:Means:
************** / |^|                                                                                       :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPConstraint                                                                                :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPBoolStructR                                                                               :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPMT                                                                                        :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slAKA                                                                                   :2_1:Means:
**************** / $*|                                                                                   :2_1:Means:
***************** / slAKA base                                                                          :2_1:Means:
****************** / slMultiTerm                                                                       :2_1:Means:
******************* / |:| some                                                                        :2_1:Means:
******************** / |:| base parser                                                               :2_1:Means:
********************* / pNumAsText                                                                  :2_1:Means:
******* / relPredSamelineWhen                                                                                     :2_1:Means:
******** / $*|                                                                                                   :2_1:Means:
********* / slRelPred                                                                                           :2_1:Means:
********** / nested simpleHorn                                                                                 :2_1:Means:
*********** / |^|                                                                                             :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPConstraint                                                                                      :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPBoolStructR                                                                                     :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPMT                                                                                              :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slAKA                                                                                         :2_1:Means:
************* / $*|                                                                                         :2_1:Means:
************** / slAKA base                                                                                :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Means:
******* / someIndentation                                                                                         :2_1:Means:
******** / myindented: consuming GoDeeper                                                                        :2_1:Means:
***** / pHornlike/ambitious                                                                                         :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
***** / pHornlike/someStructure                                                                                     :2_1:Means:
****** / manyIndentation/leaf?                                                                                     :2_1:Means:
******* / relPredNextlineWhen                                                                                     :2_1:Means:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Means:
********* / optIndentedTuple                                                                                    :2_1:Means:
********** / optIndented                                                                                       :2_1:Means:
*********** / pRelPred                                                                                        :2_1:Means:
************ / slRelPred                                                                                     :2_1:Means:
************* / nested simpleHorn                                                                           :2_1:Means:
************** / |^|                                                                                       :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPConstraint                                                                                :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPBoolStructR                                                                               :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPMT                                                                                        :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slAKA                                                                                   :2_1:Means:
**************** / $*|                                                                                   :2_1:Means:
***************** / slAKA base                                                                          :2_1:Means:
****************** / slMultiTerm                                                                       :2_1:Means:
******************* / |:| some                                                                        :2_1:Means:
******************** / |:| base parser                                                               :2_1:Means:
********************* / pNumAsText                                                                  :2_1:Means:
******* / relPredSamelineWhen                                                                                     :2_1:Means:
******** / $*|                                                                                                   :2_1:Means:
********* / slRelPred                                                                                           :2_1:Means:
********** / nested simpleHorn                                                                                 :2_1:Means:
*********** / |^|                                                                                             :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPConstraint                                                                                      :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPBoolStructR                                                                                     :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPMT                                                                                              :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slAKA                                                                                         :2_1:Means:
************* / $*|                                                                                         :2_1:Means:
************** / slAKA base                                                                                :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Means:
******* / someIndentation                                                                                         :2_1:Means:
******** / myindented: consuming GoDeeper                                                                        :2_1:Means:
***** / pHornlike/ambitious                                                                                         :2_1:Means:
****** / $>|                                                                                                       :2_1:Means:
***** / pHornlike/someStructure                                                                                     :2_1:Means:
****** / manyIndentation/leaf?                                                                                     :2_1:Means:
******* / relPredNextlineWhen                                                                                     :2_1:Means:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Means:
********* / optIndentedTuple                                                                                    :2_1:Means:
********** / optIndented                                                                                       :2_1:Means:
*********** / pRelPred                                                                                        :2_1:Means:
************ / slRelPred                                                                                     :2_1:Means:
************* / nested simpleHorn                                                                           :2_1:Means:
************** / |^|                                                                                       :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPConstraint                                                                                :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPBoolStructR                                                                               :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
************* / RPMT                                                                                        :2_1:Means:
************** / $*|                                                                                       :2_1:Means:
*************** / slAKA                                                                                   :2_1:Means:
**************** / $*|                                                                                   :2_1:Means:
***************** / slAKA base                                                                          :2_1:Means:
****************** / slMultiTerm                                                                       :2_1:Means:
******************* / |:| some                                                                        :2_1:Means:
******************** / |:| base parser                                                               :2_1:Means:
********************* / pNumAsText                                                                  :2_1:Means:
******* / relPredSamelineWhen                                                                                     :2_1:Means:
******** / $*|                                                                                                   :2_1:Means:
********* / slRelPred                                                                                           :2_1:Means:
********** / nested simpleHorn                                                                                 :2_1:Means:
*********** / |^|                                                                                             :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPConstraint                                                                                      :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPBoolStructR                                                                                     :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slMultiTerm                                                                                   :2_1:Means:
************* / |:| some                                                                                    :2_1:Means:
************** / |:| base parser                                                                           :2_1:Means:
*************** / pNumAsText                                                                              :2_1:Means:
********** / RPMT                                                                                              :2_1:Means:
*********** / $*|                                                                                             :2_1:Means:
************ / slAKA                                                                                         :2_1:Means:
************* / $*|                                                                                         :2_1:Means:
************** / slAKA base                                                                                :2_1:Means:
*************** / slMultiTerm                                                                             :2_1:Means:
**************** / |:| some                                                                              :2_1:Means:
***************** / |:| base parser                                                                     :2_1:Means:
****************** / pNumAsText                                                                        :2_1:Means:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Means:
******* / someIndentation                                                                                         :2_1:Means:
******** / myindented: consuming GoDeeper                                                                        :2_1:Means:
*** / pRuleLabel                                                                                                      :2_1:Means:
**** / $>|                                                                                                           :2_1:Means:
*** / pRule: unwrapping indentation and recursing                                                                     :2_1:Means:
**** / myindented: consuming GoDeeper                                                                                :2_1:Means:
* error while parsing test/inline-1-r.csv
* final
:PROPERTIES:
:VISIBILITY: all
:END:

2:1:
unexpected Means
expecting end of input
          multiwonk                                        
✳ MEANS   poopoo                                           
OR        the                           honk               
                              OR        ponk               

** stream
[ GoDeeper
, Other "multiwonk"
, UnDeeper
, Means
, GoDeeper
, Other "poopoo"
, UnDeeper
, Or
, GoDeeper
, Other "the"
, GoDeeper
, GoDeeper
, GoDeeper
, Other "honk"
, UnDeeper
, Or
, GoDeeper
, Other "ponk"
, UnDeeper
, UnDeeper
, UnDeeper
, UnDeeper
]
[]
