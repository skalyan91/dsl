* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

natural4> test (suite: natural4-test, args: --match "/Parser tests/PDPA/pdpadbno-1/")

* Tokens
§§ ( "Assess" ) EVERY
    ( "Organisation"
        (
            (
                ( AKA ( "You" ) )
            )
        )
    ) WHO
    ( "is"
        ( "not" ( "a Public Agency" ) )
    ) MUST
    ( BEFORE
        ( 30 ( "days" ) )
    ) UPON ( "becoming aware a data breach may have occurred" ) WHEN ( "the data breach occurs on or after the date of commencement of PDP(A)A 2020 §13" ) DO
    ( "assess" ( "if it is a Notifiable Data Breach" ) "by"
        ( "performing" ( ( "NDB Qualification" ) ) )
    ) HENCE ( "Notification" ) LEST
    (
        ( "the PDPC"
            ( MAY DO
                (
                    ( "demand" ( "an explanation for your inaction" ) )
                ) HENCE
                ( "You"
                    ( MUST DO
                        ( "respond" "to" ( "the PDPC" ) "about" ( "your inaction" ) )
                    )
                )
            )
        )
    )
* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / pRule                                                                                                             :1_1:RuleMarker:
*** / pRegRule                                                                                                        :1_1:RuleMarker:
**** / pRuleLabel                                                                                                    :1_1:RuleMarker:
***** / $>|                                                                                                         :1_1:RuleMarker:
$>|> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
$>|> MATCH (COK): §§
$>|> VALUE: (RuleMarker 2 "\167",[])

***** \ $>| has returned RuleMarker 2 "\167"                                                                         :1_2:GoDeeper:
***** / |>>/recurse                                                                                                  :1_2:GoDeeper:
****** / |>>/recurse                                                                                                 :1_2:Other "Asse:
|>>/recurse> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=2:
|>>/recurse> unexpected "Assess"
|>>/recurse> expecting (

****** \ !Unconsumed Error: |>>/recurse: Unexpected "Assess" Expecting: (                                            :1_2:Other "Asse:
****** / |>>/base                                                                                                    :1_2:Other "Asse:
******* / |.| manyLike                                                                                              :1_2:Other "Asse:
******** / someSL                                                                                                  :1_2:Other "Asse:
someSL> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
someSL> MATCH (COK): "Assess"
someSL> VALUE: ((["Assess"],0),[])

******** \ someSL has returned (["Assess"],0)                                                                       :2_2:UnDeeper:
|.| manyLike> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|.| manyLike> MATCH (COK): "Assess"
|.| manyLike> VALUE: ((["Assess"],0),[])

******* \ |.| manyLike has returned (["Assess"],0)                                                                   :2_2:UnDeeper:
******* > |>>/base got "Assess"                                                                                      :2_2:UnDeeper:
|>>/base> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/base> MATCH (COK): "Assess"
|>>/base> VALUE: (("Assess",0),[])

****** \ |>>/base has returned ("Assess",0)                                                                           :2_2:UnDeeper:
|>>/recurse> IN: ( "Assess" ) EVERY ( "Organisation" ( (  <…>
|>>/recurse> MATCH (COK): ( "Assess"
|>>/recurse> VALUE: (("Assess",1),[])

***** \ |>>/recurse has returned ("Assess",1)                                                                          :2_2:UnDeeper:
***** / upToNUndeepers/undeeper                                                                                        :2_2:UnDeeper:
****** / upToNUndeepers/done                                                                                       :2_1:Every:
upToNUndeepers/done> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
upToNUndeepers/done> MATCH (EOK): <EMPTY>
upToNUndeepers/done> VALUE: (((),0),[])

****** \ upToNUndeepers/done has returned ((),0)                                                                   :2_1:Every:
upToNUndeepers/undeeper> IN: ) EVERY ( "Organisation" ( ( ( AKA ( "Yo <…>
upToNUndeepers/undeeper> MATCH (COK): )
upToNUndeepers/undeeper> VALUE: (((),-1),[])

***** \ upToNUndeepers/undeeper has returned ((),-1)                                                                :2_1:Every:
pRuleLabel> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pRuleLabel> MATCH (EOK): §§ ( "Assess" )
pRuleLabel> VALUE: (("\167",2,"Assess"),[])

**** \ pRuleLabel has returned ("\167",2,"Assess")                                                                   :2_1:Every:
**** / pRegRuleSugary                                                                                                :2_1:Every:
***** / someDeep                                                                                                    :2_1:Every:
****** / someDeep first part calls base directly                                                                   :2_1:Every:
someDeep first part calls base directly> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=4:
someDeep first part calls base directly> unexpected EVERY
someDeep first part calls base directly> expecting Other text

****** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected EVERY Expecting: Other text        :2_1:Every:
someDeep> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=4:
someDeep> unexpected EVERY
someDeep> expecting Other text

***** \ !Unconsumed Error: someDeep: Unexpected EVERY Expecting: Other text                                         :2_1:Every:
pRegRuleSugary> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRegRuleSugary> MATCH (EERR): <EMPTY>
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=4:
pRegRuleSugary> unexpected EVERY
pRegRuleSugary> expecting Other text

**** \ !Unconsumed Error: pRegRuleSugary: Unexpected EVERY Expecting: Other text                                     :2_1:Every:
**** / pRegRuleNormal                                                                                                :2_1:Every:
***** / permutationsReg                                                                                             :2_1:Every:
****** / regulative permutation with deontic-temporal                                                              :2_1:Every:
******* / WHERE                                                                                                   :2_1:Every:
WHERE> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=4:
WHERE> unexpected EVERY
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected EVERY Expecting: WHERE                                             :2_1:Every:
******* / preambleParamText:[Having]                                                                              :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: HAVING                                            :2_1:Every:
preambleParamText:[Having]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=4:
preambleParamText:[Having]> unexpected EVERY
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected EVERY Expecting: HAVING                       :2_1:Every:
******* / preambleParamText:[Given]                                                                               :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                             :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                         :2_1:Every:
******* / preambleParamText:[Upon]                                                                                :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                              :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

******* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                           :2_1:Every:
******* / preambleBoolStructR [Unless]                                                                            :2_1:Every:
preambleBoolStructR [Unless]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=4:
preambleBoolStructR [Unless]> unexpected EVERY
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected EVERY Expecting: UNLESS                     :2_1:Every:
******* / preambleBoolStructR [When,If]                                                                           :2_1:Every:
preambleBoolStructR [When,If]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=4:
preambleBoolStructR [When,If]> unexpected EVERY
preambleBoolStructR [When,If]> expecting IF or WHEN

******* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected EVERY Expecting: IF WHEN                   :2_1:Every:
******* / pDT                                                                                                     :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting MAY, MUST, or SHANT

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: MUST MAY SHANT                                    :2_1:Every:
pDT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=4:
pDT> unexpected EVERY
pDT> expecting MAY, MUST, or SHANT

******* \ !Unconsumed Error: pDT: Unexpected EVERY Expecting: MUST MAY SHANT                                      :2_1:Every:
******* / pActor [REvery,RParty,RTokAll]                                                                          :2_1:Every:
******** / someIndentation                                                                                        :2_2:GoDeeper:
********* / myindented-GoDeeper                                                                                  :2_2:GoDeeper:
myindented-GoDeeper> IN: ( "Organisation" ( ( ( AKA ( "You" ) ) ) <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********* \ myindented-GoDeeper has returned GoDeeper                                                             :2_2:Other "Orga:
********* / manyIndentation/leaf?                                                                                 :2_2:Other "Orga:
********** / pMultiTermAka                                                                                       :2_2:Other "Orga:
*********** / pAKA                                                                                              :2_2:Other "Orga:
************ / slAKA                                                                                           :2_2:Other "Orga:
************* / $*|                                                                                           :2_2:Other "Orga:
************** / slAKA base                                                                                  :2_2:Other "Orga:
*************** / slMultiTerm                                                                               :2_2:Other "Orga:
**************** / someSL                                                                                  :2_2:Other "Orga:
***************** / pNumAsText                                                                                  :2_5:Aka:
pNumAsText> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=10:
pNumAsText> unexpected AKA
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected AKA Expecting: number                             :2_5:Aka:
someSL> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
someSL> MATCH (COK): "Organisation"
someSL> VALUE: ((["Organisation"],0),[])

**************** \ someSL has returned (["Organisation"],0)                                                 :2_3:GoDeeper:
slMultiTerm> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
slMultiTerm> MATCH (COK): "Organisation"
slMultiTerm> VALUE: ((["Organisation"],0),[])

*************** \ slMultiTerm has returned (["Organisation"],0)                                              :2_3:GoDeeper:
slAKA base> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
slAKA base> MATCH (COK): "Organisation"
slAKA base> VALUE: ((["Organisation"],0),[])

************** \ slAKA base has returned (["Organisation"],0)                                                 :2_3:GoDeeper:
$*|> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
$*|> MATCH (COK): "Organisation"
$*|> VALUE: ((["Organisation"],0),[])

************* \ $*| has returned (["Organisation"],0)                                                          :2_3:GoDeeper:
************* / |>>/recurse                                                                                    :2_3:GoDeeper:
************** / |>>/recurse                                                                                    :2_4:GoDeeper:
*************** / |>>/recurse                                                                                    :2_5:GoDeeper:
**************** / |>>/recurse                                                                                   :2_5:Aka:
|>>/recurse> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected AKA
|>>/recurse> expecting (

**************** \ !Unconsumed Error: |>>/recurse: Unexpected AKA Expecting: (                                   :2_5:Aka:
**************** / |>>/base                                                                                      :2_5:Aka:
***************** / slAKA optional akapart                                                                      :2_5:Aka:
****************** / |?| optional something                                                                    :2_5:Aka:
******************* / |>>/recurse                                                                             :2_5:Aka:
|>>/recurse> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected AKA
|>>/recurse> expecting (

******************* \ !Unconsumed Error: |>>/recurse: Unexpected AKA Expecting: (                             :2_5:Aka:
******************* / |>>/base                                                                                :2_5:Aka:
******************** / PAKA/akapart                                                                          :2_5:Aka:
********************* / $>|                                                                                 :2_5:Aka:
********************** / Aka Token                                                                         :2_5:Aka:
Aka Token> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
Aka Token> MATCH (COK): AKA
Aka Token> VALUE: (Aka,[])

********************** \ Aka Token has returned Aka                                                         :2_6:GoDeeper:
$>|> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
$>|> MATCH (COK): AKA
$>|> VALUE: (Aka,[])

********************* \ $>| has returned Aka                                                                 :2_6:GoDeeper:
********************* / |>>/recurse                                                                          :2_6:GoDeeper:
********************** / |>>/recurse                                                                         :2_6:Other "You":
|>>/recurse> IN: "You" ) ) ) ) ) WHO ( "is" ( "not" ( "a  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=12:
|>>/recurse> unexpected "You"
|>>/recurse> expecting (

********************** \ !Unconsumed Error: |>>/recurse: Unexpected "You" Expecting: (                       :2_6:Other "You":
********************** / |>>/base                                                                            :2_6:Other "You":
*********************** / someSL                                                                            :2_6:Other "You":
someSL> IN: "You" ) ) ) ) ) WHO ( "is" ( "not" ( "a  <…>
someSL> MATCH (COK): "You"
someSL> VALUE: ((["You"],0),[])

*********************** \ someSL has returned (["You"],0)                                            :3_2:UnDeeper:
*********************** > |>>/base got ["You"]                                                       :3_2:UnDeeper:
|>>/base> IN: "You" ) ) ) ) ) WHO ( "is" ( "not" ( "a  <…>
|>>/base> MATCH (COK): "You"
|>>/base> VALUE: ((["You"],0),[])

********************** \ |>>/base has returned (["You"],0)                                            :3_2:UnDeeper:
|>>/recurse> IN: ( "You" ) ) ) ) ) WHO ( "is" ( "not" ( " <…>
|>>/recurse> MATCH (COK): ( "You"
|>>/recurse> VALUE: ((["You"],1),[])

********************* \ |>>/recurse has returned (["You"],1)                                           :3_2:UnDeeper:
PAKA/akapart> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
PAKA/akapart> MATCH (COK): AKA ( "You"
PAKA/akapart> VALUE: ((["You"],1),[])

******************** \ PAKA/akapart has returned (["You"],1)                                            :3_2:UnDeeper:
******************** > |>>/base got ["You"]                                                             :3_2:UnDeeper:
|>>/base> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/base> MATCH (COK): AKA ( "You"
|>>/base> VALUE: ((["You"],1),[])

******************* \ |>>/base has returned (["You"],1)                                                  :3_2:UnDeeper:
|?| optional something> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|?| optional something> MATCH (COK): AKA ( "You"
|?| optional something> VALUE: ((Just ["You"],1),[])

****************** \ |?| optional something has returned (Just ["You"],1)                                 :3_2:UnDeeper:
slAKA optional akapart> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
slAKA optional akapart> MATCH (COK): AKA ( "You"
slAKA optional akapart> VALUE: ((Just ["You"],1),[])

***************** \ slAKA optional akapart has returned (Just ["You"],1)                                   :3_2:UnDeeper:
***************** > |>>/base got Just ["You"]                                                              :3_2:UnDeeper:
|>>/base> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/base> MATCH (COK): AKA ( "You"
|>>/base> VALUE: ((Just ["You"],1),[])

**************** \ |>>/base has returned (Just ["You"],1)                                                   :3_2:UnDeeper:
|>>/recurse> IN: ( AKA ( "You" ) ) ) ) ) WHO ( "is" ( "no <…>
|>>/recurse> MATCH (COK): ( AKA ( "You"
|>>/recurse> VALUE: ((Just ["You"],2),[])

*************** \ |>>/recurse has returned (Just ["You"],2)                                                  :3_2:UnDeeper:
|>>/recurse> IN: ( ( AKA ( "You" ) ) ) ) ) WHO ( "is" ( " <…>
|>>/recurse> MATCH (COK): ( ( AKA ( "You"
|>>/recurse> VALUE: ((Just ["You"],3),[])

************** \ |>>/recurse has returned (Just ["You"],3)                                                    :3_2:UnDeeper:
|>>/recurse> IN: ( ( ( AKA ( "You" ) ) ) ) ) WHO ( "is" ( <…>
|>>/recurse> MATCH (COK): ( ( ( AKA ( "You"
|>>/recurse> VALUE: ((Just ["You"],4),[])

************* \ |>>/recurse has returned (Just ["You"],4)                                                      :3_2:UnDeeper:
************* / |>>/recurse                                                                                    :3_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=13:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                      :3_2:UnDeeper:
************* / |>>/base                                                                                       :3_2:UnDeeper:
************** / slAKA optional typically                                                                     :3_2:UnDeeper:
*************** / |?| optional something                                                                     :3_2:UnDeeper:
**************** / |>>/recurse                                                                              :3_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=13:
|>>/recurse> unexpected )
|>>/recurse> expecting (

**************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                :3_2:UnDeeper:
**************** / |>>/base                                                                                 :3_2:UnDeeper:
***************** / typically                                                                              :3_2:UnDeeper:
****************** / $>|                                                                                  :3_2:UnDeeper:
$>|> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=13:
$>|> unexpected )
$>|> expecting TYPICALLY

****************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY                            :3_2:UnDeeper:
typically> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=13:
typically> unexpected )
typically> expecting TYPICALLY

***************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY                        :3_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=13:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

**************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY                           :3_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

*************** \ |?| optional something has returned (Nothing,0)                                            :3_2:UnDeeper:
slAKA optional typically> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

************** \ slAKA optional typically has returned (Nothing,0)                                            :3_2:UnDeeper:
************** > |>>/base got Nothing                                                                         :3_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************* \ |>>/base has returned (Nothing,0)                                                              :3_2:UnDeeper:
************* > slAKA: proceeding after base and entityalias are retrieved ...                                 :3_2:UnDeeper:
************* > pAKA: entityalias = Just ["You"]                                                               :3_2:UnDeeper:
slAKA> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
slAKA> MATCH (COK): "Organisation" ( ( ( AKA ( "You"
slAKA> VALUE: ((["Organisation"],4),[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

************ \ slAKA has returned (["Organisation"],4)                                                          :3_2:UnDeeper:
************ / undeepers                                                                                        :3_2:UnDeeper:
************* > sameLine/undeepers: reached end of line; now need to clear 4 UnDeepers                         :3_2:UnDeeper:
************* > sameLine: success!                                                                                     :3_6:UnDeeper:
undeepers> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
undeepers> MATCH (COK): ) ) ) )
undeepers> VALUE: ((),[])

************ \ undeepers has returned ()                                                                                :3_6:UnDeeper:
pAKA> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
pAKA> MATCH (COK): "Organisation" ( ( ( AKA ( "You" ) ) ) )
pAKA> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

*********** \ pAKA has returned ["Organisation"]                                                                         :3_6:UnDeeper:
pMultiTermAka> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
pMultiTermAka> MATCH (COK): "Organisation" ( ( ( AKA ( "You" ) ) ) )
pMultiTermAka> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

********** \ pMultiTermAka has returned ["Organisation"]                                                                  :3_6:UnDeeper:
manyIndentation/leaf?> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
manyIndentation/leaf?> MATCH (COK): "Organisation" ( ( ( AKA ( "You" ) ) ) )
manyIndentation/leaf?> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

********* \ manyIndentation/leaf? has returned ["Organisation"]                                                            :3_6:UnDeeper:
********* / myindented-UnDeeper                                                                                            :3_6:UnDeeper:
myindented-UnDeeper> IN: ) WHO ( "is" ( "not" ( "a Public Agency" <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

********* \ myindented-UnDeeper has returned UnDeeper                                                           :3_1:Who:
someIndentation> IN: ( "Organisation" ( ( ( AKA ( "You" ) ) ) <…>
someIndentation> MATCH (COK): ( "Organisation" ( ( ( AKA ( "You" ) ) ) <…>
someIndentation> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

******** \ someIndentation has returned ["Organisation"]                                                         :3_1:Who:
pActor [REvery,RParty,RTokAll]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pActor [REvery,RParty,RTokAll]> MATCH (COK): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pActor [REvery,RParty,RTokAll]> VALUE: ((REvery,Leaf (("Organisation" :| [],Nothing) :| [])),[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

******* \ pActor [REvery,RParty,RTokAll] has returned (REvery,Leaf (("Organisation" :| [],Nothing) :| []))        :3_1:Who:
******* / manyIndentation/leaf?                                                                                   :3_1:Who:
******** / preambleBoolStructR [Who,Which,Whose]                                                                 :3_1:Who:
********* / pBSR                                                                                                 :3_2:GoDeeper:
********** / ppp inner                                                                                          :3_2:GoDeeper:
*********** / expression                                                                                       :3_2:GoDeeper:
************ / term p                                                                                         :3_2:GoDeeper:
************* / term p/1a:label ends directly above next line                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / someSL                                                                                   :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
pNumAsText> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=19:
pNumAsText> unexpected (
pNumAsText> expecting number

**************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                          :3_2:GoDeeper:
someSL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=19:
someSL> unexpected (
someSL> expecting other text or number

*************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                  :3_2:GoDeeper:
$*|> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=19:
$*|> unexpected (
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                       :3_2:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=19:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :3_2:GoDeeper:
************* / term p/1b:label ends to the left of line below, with EOL                                     :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / someSL                                                                                   :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
pNumAsText> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=19:
pNumAsText> unexpected (
pNumAsText> expecting number

**************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                          :3_2:GoDeeper:
someSL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=19:
someSL> unexpected (
someSL> expecting other text or number

*************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                  :3_2:GoDeeper:
$*|> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=19:
$*|> unexpected (
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                       :3_2:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=19:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :3_2:GoDeeper:
************* / term p/1c:label ends to the right of line below                                              :3_2:GoDeeper:
************** > |<|                                                                                        :3_2:GoDeeper:
************** > |<* starting                                                                               :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / someSL                                                                                   :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
pNumAsText> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=19:
pNumAsText> unexpected (
pNumAsText> expecting number

**************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                          :3_2:GoDeeper:
someSL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=19:
someSL> unexpected (
someSL> expecting other text or number

*************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                  :3_2:GoDeeper:
$*|> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=19:
$*|> unexpected (
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                       :3_2:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=19:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :3_2:GoDeeper:
************* / term p/notLabelTerm                                                                          :3_2:GoDeeper:
************** / term p/2:someIndentation expr p                                                            :3_2:GoDeeper:
*************** / someIndentation                                                                          :3_2:GoDeeper:
**************** / myindented-GoDeeper                                                                    :3_2:GoDeeper:
myindented-GoDeeper> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

**************** \ myindented-GoDeeper has returned GoDeeper                                               :3_2:Other "is":
**************** / manyIndentation/leaf?                                                                   :3_2:Other "is":
***************** / ppp inner                                                                             :3_2:Other "is":
****************** / expression                                                                          :3_2:Other "is":
******************* / term p                                                                            :3_2:Other "is":
******************** / term p/1a:label ends directly above next line                                   :3_2:Other "is":
********************* / $*|                                                                           :3_2:Other "is":
********************** / someSL                                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

********************** \ someSL has returned (["is","not","a Public Agency"],2)                       :4_2:UnDeeper:
********************** / pNumAsText                                                                   :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (CERR): "is" ( "not" ( "a Public Agency"
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting ( or other text or number

********************* \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number           :4_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/1a:label ends directly above next line> MATCH (CERR): "is" ( "not" ( "a Public Agency"
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=25:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

******************** \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :4_2:UnDeeper:
******************** / term p/1b:label ends to the left of line below, with EOL                        :3_2:Other "is":
********************* / $*|                                                                           :3_2:Other "is":
********************** / someSL                                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

********************** \ someSL has returned (["is","not","a Public Agency"],2)                       :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

********************* \ $*| has returned (["is","not","a Public Agency"],2)                            :4_2:UnDeeper:
********************* / matching EOL                                                                   :4_2:UnDeeper:
matching EOL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=25:
matching EOL> unexpected )
matching EOL> expecting EOL

********************* \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL                   :4_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "is" ( "not" ( "a Public Agency"
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=25:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

******************** \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :4_2:UnDeeper:
******************** / term p/1c:label ends to the right of line below                                 :3_2:Other "is":
********************* > |<|                                                                           :3_2:Other "is":
********************* > |<* starting                                                                  :3_2:Other "is":
********************* / $*|                                                                           :3_2:Other "is":
********************** / someSL                                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

********************** \ someSL has returned (["is","not","a Public Agency"],2)                       :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

********************* \ $*| has returned (["is","not","a Public Agency"],2)                            :4_2:UnDeeper:
********************* / |<*/parent                                                                     :4_2:UnDeeper:
********************** > |<*/recurse                                                                  :4_2:UnDeeper:
********************** / ppp inner                                                                 :4_1:Must:
*********************** / expression                                                              :4_1:Must:
************************ / term p                                                                :4_1:Must:
************************* / term p/1a:label ends directly above next line                       :4_1:Must:
************************** / $*|                                                               :4_1:Must:
*************************** / someSL                                                          :4_1:Must:
**************************** / pNumAsText                                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/1a:label ends directly above next line> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=28:
term p/1a:label ends directly above next line> unexpected MUST
term p/1a:label ends directly above next line> expecting other text or number

************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected MUST Expecting: other text or number :4_1:Must:
************************* / term p/1b:label ends to the left of line below, with EOL            :4_1:Must:
************************** / $*|                                                               :4_1:Must:
*************************** / someSL                                                          :4_1:Must:
**************************** / pNumAsText                                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/1b:label ends to the left of line below, with EOL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=28:
term p/1b:label ends to the left of line below, with EOL> unexpected MUST
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected MUST Expecting: other text or number :4_1:Must:
************************* / term p/1c:label ends to the right of line below                     :4_1:Must:
************************** > |<|                                                               :4_1:Must:
************************** > |<* starting                                                      :4_1:Must:
************************** / $*|                                                               :4_1:Must:
*************************** / someSL                                                          :4_1:Must:
**************************** / pNumAsText                                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/1c:label ends to the right of line below> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=28:
term p/1c:label ends to the right of line below> unexpected MUST
term p/1c:label ends to the right of line below> expecting other text or number

************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected MUST Expecting: other text or number :4_1:Must:
************************* / term p/notLabelTerm                                                 :4_1:Must:
************************** / term p/2:someIndentation expr p                                   :4_1:Must:
*************************** / someIndentation                                                 :4_1:Must:
**************************** / myindented-GoDeeper                                           :4_1:Must:
myindented-GoDeeper> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=28:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

**************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: ( :4_1:Must:
someIndentation> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=28:
someIndentation> unexpected MUST
someIndentation> expecting (

*************************** \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: ( :4_1:Must:
term p/2:someIndentation expr p> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=28:
term p/2:someIndentation expr p> unexpected MUST
term p/2:someIndentation expr p> expecting (

************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected MUST Expecting: ( :4_1:Must:
************************** / term p/3:plain p                                                  :4_1:Must:
*************************** / pRelPred                                                        :4_1:Must:
**************************** / slRelPred                                                     :4_1:Must:
***************************** / nested simpleHorn                                           :4_1:Must:
****************************** > |^|                                                       :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slMultiTerm                                             :4_1:Must:
******************************** / someSL                                                :4_1:Must:
********************************* / pNumAsText                                          :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
nested simpleHorn> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=28:
nested simpleHorn> unexpected MUST
nested simpleHorn> expecting other text or number

***************************** \ !Unconsumed Error: nested simpleHorn: Unexpected MUST Expecting: other text or number :4_1:Must:
***************************** / RPConstraint                                                :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slMultiTerm                                             :4_1:Must:
******************************** / someSL                                                :4_1:Must:
********************************* / pNumAsText                                          :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
RPConstraint> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=28:
RPConstraint> unexpected MUST
RPConstraint> expecting other text or number

***************************** \ !Unconsumed Error: RPConstraint: Unexpected MUST Expecting: other text or number :4_1:Must:
***************************** / RPBoolStructR                                               :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slMultiTerm                                             :4_1:Must:
******************************** / someSL                                                :4_1:Must:
********************************* / pNumAsText                                          :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
RPBoolStructR> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=28:
RPBoolStructR> unexpected MUST
RPBoolStructR> expecting other text or number

***************************** \ !Unconsumed Error: RPBoolStructR: Unexpected MUST Expecting: other text or number :4_1:Must:
***************************** / RPMT                                                        :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slAKA                                                   :4_1:Must:
******************************** / $*|                                                   :4_1:Must:
********************************* / slAKA base                                          :4_1:Must:
********************************** / slMultiTerm                                       :4_1:Must:
*********************************** / someSL                                          :4_1:Must:
************************************ / pNumAsText                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

************************************ \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*********************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

********************************** \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
slAKA base> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=28:
slAKA base> unexpected MUST
slAKA base> expecting other text or number

********************************* \ !Unconsumed Error: slAKA base: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
slAKA> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=28:
slAKA> unexpected MUST
slAKA> expecting other text or number

******************************* \ !Unconsumed Error: slAKA: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
RPMT> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=28:
RPMT> unexpected MUST
RPMT> expecting other text or number

***************************** \ !Unconsumed Error: RPMT: Unexpected MUST Expecting: other text or number :4_1:Must:
slRelPred> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=28:
slRelPred> unexpected MUST
slRelPred> expecting other text or number

**************************** \ !Unconsumed Error: slRelPred: Unexpected MUST Expecting: other text or number :4_1:Must:
pRelPred> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=28:
pRelPred> unexpected MUST
pRelPred> expecting other text or number

*************************** \ !Unconsumed Error: pRelPred: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/3:plain p> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=28:
term p/3:plain p> unexpected MUST
term p/3:plain p> expecting other text or number

************************** \ !Unconsumed Error: term p/3:plain p: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/notLabelTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=28:
term p/notLabelTerm> unexpected MUST
term p/notLabelTerm> expecting ( or term

************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected MUST Expecting: ( term :4_1:Must:
term p> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=28:
term p> unexpected MUST
term p> expecting (, other text or number, or term

************************ \ !Unconsumed Error: term p: Unexpected MUST Expecting: ( other text or number term :4_1:Must:
expression> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=28:
expression> unexpected MUST
expression> expecting expression

*********************** \ !Unconsumed Error: expression: Unexpected MUST Expecting: expression    :4_1:Must:
ppp inner> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=28:
ppp inner> unexpected MUST
ppp inner> expecting expression

********************** \ !Unconsumed Error: ppp inner: Unexpected MUST Expecting: expression       :4_1:Must:
********************** / withPrePost                                                               :4_1:Must:
*********************** > |<* starting                                                            :4_1:Must:
*********************** / $*|                                                                     :4_1:Must:
************************ / pre part                                                              :4_1:Must:
pre part> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=28:
pre part> unexpected MUST
pre part> expecting ( or Other text

************************ \ !Unconsumed Error: pre part: Unexpected MUST Expecting: ( Other text  :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting ( or Other text

*********************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: ( Other text         :4_1:Must:
withPrePost> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=28:
withPrePost> unexpected MUST
withPrePost> expecting ( or Other text

********************** \ !Unconsumed Error: withPrePost: Unexpected MUST Expecting: ( Other text   :4_1:Must:
********************** / $*|                                                                       :4_1:Must:
*********************** / pre part                                                                :4_1:Must:
pre part> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=28:
pre part> unexpected MUST
pre part> expecting ( or Other text

*********************** \ !Unconsumed Error: pre part: Unexpected MUST Expecting: ( Other text    :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting ( or Other text

********************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: ( Other text           :4_1:Must:
********************** / |<*/base                                                                     :4_2:UnDeeper:
*********************** / ppp inner                                                                  :4_2:UnDeeper:
************************ / expression                                                               :4_2:UnDeeper:
************************* / term p                                                                 :4_2:UnDeeper:
************************** / term p/1a:label ends directly above next line                        :4_2:UnDeeper:
*************************** / $*|                                                                :4_2:UnDeeper:
**************************** / someSL                                                           :4_2:UnDeeper:
***************************** / pNumAsText                                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number  :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

**************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

*************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=25:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
************************** / term p/1b:label ends to the left of line below, with EOL             :4_2:UnDeeper:
*************************** / $*|                                                                :4_2:UnDeeper:
**************************** / someSL                                                           :4_2:UnDeeper:
***************************** / pNumAsText                                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number  :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

**************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

*************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=25:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
************************** / term p/1c:label ends to the right of line below                      :4_2:UnDeeper:
*************************** > |<|                                                                :4_2:UnDeeper:
*************************** > |<* starting                                                       :4_2:UnDeeper:
*************************** / $*|                                                                :4_2:UnDeeper:
**************************** / someSL                                                           :4_2:UnDeeper:
***************************** / pNumAsText                                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number  :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

**************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

*************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=25:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
************************** / term p/notLabelTerm                                                  :4_2:UnDeeper:
*************************** / term p/2:someIndentation expr p                                    :4_2:UnDeeper:
**************************** / someIndentation                                                  :4_2:UnDeeper:
***************************** / myindented-GoDeeper                                            :4_2:UnDeeper:
myindented-GoDeeper> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=25:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

***************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :4_2:UnDeeper:
someIndentation> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=25:
someIndentation> unexpected )
someIndentation> expecting (

**************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (    :4_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=25:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

*************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :4_2:UnDeeper:
*************************** / term p/3:plain p                                                   :4_2:UnDeeper:
**************************** / pRelPred                                                         :4_2:UnDeeper:
***************************** / slRelPred                                                      :4_2:UnDeeper:
****************************** / nested simpleHorn                                            :4_2:UnDeeper:
******************************* > |^|                                                        :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slMultiTerm                                              :4_2:UnDeeper:
********************************* / someSL                                                 :4_2:UnDeeper:
********************************** / pNumAsText                                           :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
nested simpleHorn> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=25:
nested simpleHorn> unexpected )
nested simpleHorn> expecting other text or number

****************************** \ !Unconsumed Error: nested simpleHorn: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
****************************** / RPConstraint                                                 :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slMultiTerm                                              :4_2:UnDeeper:
********************************* / someSL                                                 :4_2:UnDeeper:
********************************** / pNumAsText                                           :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
RPConstraint> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=25:
RPConstraint> unexpected )
RPConstraint> expecting other text or number

****************************** \ !Unconsumed Error: RPConstraint: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
****************************** / RPBoolStructR                                                :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slMultiTerm                                              :4_2:UnDeeper:
********************************* / someSL                                                 :4_2:UnDeeper:
********************************** / pNumAsText                                           :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
RPBoolStructR> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=25:
RPBoolStructR> unexpected )
RPBoolStructR> expecting other text or number

****************************** \ !Unconsumed Error: RPBoolStructR: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
****************************** / RPMT                                                         :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slAKA                                                    :4_2:UnDeeper:
********************************* / $*|                                                    :4_2:UnDeeper:
********************************** / slAKA base                                           :4_2:UnDeeper:
*********************************** / slMultiTerm                                        :4_2:UnDeeper:
************************************ / someSL                                           :4_2:UnDeeper:
************************************* / pNumAsText                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

************************************ \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

*********************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slAKA base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=25:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slAKA> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=25:
slAKA> unexpected )
slAKA> expecting other text or number

******************************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
RPMT> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=25:
RPMT> unexpected )
RPMT> expecting other text or number

****************************** \ !Unconsumed Error: RPMT: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slRelPred> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=25:
slRelPred> unexpected )
slRelPred> expecting other text or number

***************************** \ !Unconsumed Error: slRelPred: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
pRelPred> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=25:
pRelPred> unexpected )
pRelPred> expecting other text or number

**************************** \ !Unconsumed Error: pRelPred: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/3:plain p> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=25:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

*************************** \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/notLabelTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=25:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :4_2:UnDeeper:
term p> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=25:
term p> unexpected )
term p> expecting (, other text or number, or term

************************* \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :4_2:UnDeeper:
expression> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=25:
expression> unexpected )
expression> expecting expression

************************ \ !Unconsumed Error: expression: Unexpected ) Expecting: expression        :4_2:UnDeeper:
ppp inner> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=25:
ppp inner> unexpected )
ppp inner> expecting expression

*********************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression           :4_2:UnDeeper:
*********************** / withPrePost                                                                :4_2:UnDeeper:
************************ > |<* starting                                                             :4_2:UnDeeper:
************************ / $*|                                                                      :4_2:UnDeeper:
************************* / pre part                                                               :4_2:UnDeeper:
pre part> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=25:
pre part> unexpected )
pre part> expecting ( or Other text

************************* \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text      :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting ( or Other text

************************ \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text             :4_2:UnDeeper:
withPrePost> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=25:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

*********************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text       :4_2:UnDeeper:
*********************** / $*|                                                                        :4_2:UnDeeper:
************************ / pre part                                                                 :4_2:UnDeeper:
pre part> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=25:
pre part> unexpected )
pre part> expecting ( or Other text

************************ \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text        :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting ( or Other text

*********************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text               :4_2:UnDeeper:
|<*/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=25:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

********************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :4_2:UnDeeper:
|<*/parent> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=28:
|<*/parent> unexpected MUST
|<*/parent> expecting (, ), Other text, or expression

********************* \ !Unconsumed Error: |<*/parent: Unexpected MUST Expecting: ( ( ) Other text expression :4_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "is" ( "not" ( "a Public Agency"
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=28:
term p/1c:label ends to the right of line below> unexpected MUST
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

******************** \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected MUST Expecting: ( ( ( ) Other text expression :4_2:UnDeeper:
******************** / term p/notLabelTerm                                                             :3_2:Other "is":
********************* / term p/2:someIndentation expr p                                               :3_2:Other "is":
********************** / someIndentation                                                             :3_2:Other "is":
*********************** / myindented-GoDeeper                                                       :3_2:Other "is":
myindented-GoDeeper> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=20:
myindented-GoDeeper> unexpected "is"
myindented-GoDeeper> expecting (

*********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "is" Expecting: (      :3_2:Other "is":
someIndentation> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=20:
someIndentation> unexpected "is"
someIndentation> expecting (

********************** \ !Unconsumed Error: someIndentation: Unexpected "is" Expecting: (            :3_2:Other "is":
term p/2:someIndentation expr p> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=20:
term p/2:someIndentation expr p> unexpected "is"
term p/2:someIndentation expr p> expecting (

********************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "is" Expecting: ( :3_2:Other "is":
********************* / term p/3:plain p                                                              :3_2:Other "is":
********************** / pRelPred                                                                    :3_2:Other "is":
*********************** / slRelPred                                                                 :3_2:Other "is":
************************ / nested simpleHorn                                                       :3_2:Other "is":
************************* > |^|                                                                   :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slMultiTerm                                                         :3_2:Other "is":
*************************** / someSL                                                            :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ someSL has returned (["is","not","a Public Agency"],2)             :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)          :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
************************* / |^| deeps                                                              :4_2:UnDeeper:
|^| deeps> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|^| deeps> MATCH (COK): ) ) )
|^| deeps> VALUE: (([(),(),()],-3),[])

************************* \ |^| deeps has returned ([(),(),()],-3)                              :4_1:Must:
nested simpleHorn> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
nested simpleHorn> MATCH (CERR): "is" ( "not" ( "a Public Agency" ) ) )
nested simpleHorn> ERROR:
nested simpleHorn> offset=28:
nested simpleHorn> unexpected MUST
nested simpleHorn> expecting ) or MEANS

************************ \ !Consumed Error: nested simpleHorn: Unexpected MUST Expecting: MEANS ) :4_1:Must:
************************ / RPConstraint                                                            :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slMultiTerm                                                         :3_2:Other "is":
*************************** / someSL                                                            :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ someSL has returned (["is","not","a Public Agency"],2)             :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)          :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
************************* / |>| calling $>>                                                        :4_2:UnDeeper:
************************** / |>>/recurse                                                          :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :4_2:UnDeeper:
************************** / |>>/base                                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :4_2:UnDeeper:
|>| calling $>>> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=25:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
RPConstraint> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
RPConstraint> MATCH (CERR): "is" ( "not" ( "a Public Agency"
RPConstraint> ERROR:
RPConstraint> offset=25:
RPConstraint> unexpected )
RPConstraint> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Consumed Error: RPConstraint: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
************************ / RPBoolStructR                                                           :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slMultiTerm                                                         :3_2:Other "is":
*************************** / someSL                                                            :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ someSL has returned (["is","not","a Public Agency"],2)             :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)          :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
************************* / |>| calling $>>                                                        :4_2:UnDeeper:
************************** / |>>/recurse                                                          :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :4_2:UnDeeper:
************************** / |>>/base                                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :4_2:UnDeeper:
|>| calling $>>> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=25:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
RPBoolStructR> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
RPBoolStructR> MATCH (CERR): "is" ( "not" ( "a Public Agency"
RPBoolStructR> ERROR:
RPBoolStructR> offset=25:
RPBoolStructR> unexpected )
RPBoolStructR> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Consumed Error: RPBoolStructR: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
************************ / RPMT                                                                    :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slAKA                                                               :3_2:Other "is":
*************************** / $*|                                                               :3_2:Other "is":
**************************** / slAKA base                                                      :3_2:Other "is":
***************************** / slMultiTerm                                                   :3_2:Other "is":
****************************** / someSL                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

****************************** \ someSL has returned (["is","not","a Public Agency"],2)       :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

***************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)    :4_2:UnDeeper:
slAKA base> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slAKA base> MATCH (COK): "is" ( "not" ( "a Public Agency"
slAKA base> VALUE: ((["is","not","a Public Agency"],2),[])

**************************** \ slAKA base has returned (["is","not","a Public Agency"],2)       :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ $*| has returned (["is","not","a Public Agency"],2)                :4_2:UnDeeper:
*************************** / |>>/recurse                                                        :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (          :4_2:UnDeeper:
*************************** / |>>/base                                                           :4_2:UnDeeper:
**************************** / slAKA optional akapart                                           :4_2:UnDeeper:
***************************** / |?| optional something                                         :4_2:UnDeeper:
****************************** / |>>/recurse                                                  :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (    :4_2:UnDeeper:
****************************** / |>>/base                                                     :4_2:UnDeeper:
******************************* / PAKA/akapart                                               :4_2:UnDeeper:
******************************** / $>|                                                      :4_2:UnDeeper:
********************************* / Aka Token                                              :4_2:UnDeeper:
Aka Token> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=25:
Aka Token> unexpected )
Aka Token> expecting AKA

********************************* \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :4_2:UnDeeper:
$>|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=25:
$>|> unexpected )
$>|> expecting AKA

******************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA      :4_2:UnDeeper:
PAKA/akapart> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=25:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

******************************* \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting AKA

****************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA     :4_2:UnDeeper:
|?| optional something> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************************** \ |?| optional something has returned (Nothing,0)                :4_2:UnDeeper:
slAKA optional akapart> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

**************************** \ slAKA optional akapart has returned (Nothing,0)                  :4_2:UnDeeper:
**************************** > |>>/base got Nothing                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************************** \ |>>/base has returned (Nothing,0)                                  :4_2:UnDeeper:
*************************** / |>>/recurse                                                        :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (          :4_2:UnDeeper:
*************************** / |>>/base                                                           :4_2:UnDeeper:
**************************** / slAKA optional typically                                         :4_2:UnDeeper:
***************************** / |?| optional something                                         :4_2:UnDeeper:
****************************** / |>>/recurse                                                  :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (    :4_2:UnDeeper:
****************************** / |>>/base                                                     :4_2:UnDeeper:
******************************* / typically                                                  :4_2:UnDeeper:
******************************** / $>|                                                      :4_2:UnDeeper:
$>|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=25:
$>|> unexpected )
$>|> expecting TYPICALLY

******************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :4_2:UnDeeper:
typically> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=25:
typically> unexpected )
typically> expecting TYPICALLY

******************************* \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

****************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :4_2:UnDeeper:
|?| optional something> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************************** \ |?| optional something has returned (Nothing,0)                :4_2:UnDeeper:
slAKA optional typically> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

**************************** \ slAKA optional typically has returned (Nothing,0)                :4_2:UnDeeper:
**************************** > |>>/base got Nothing                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************************** \ |>>/base has returned (Nothing,0)                                  :4_2:UnDeeper:
*************************** > slAKA: proceeding after base and entityalias are retrieved ...     :4_2:UnDeeper:
*************************** > pAKA: entityalias = Nothing                                        :4_2:UnDeeper:
slAKA> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slAKA> MATCH (COK): "is" ( "not" ( "a Public Agency"
slAKA> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slAKA has returned (["is","not","a Public Agency"],2)                :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
RPMT> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
RPMT> MATCH (COK): "is" ( "not" ( "a Public Agency"
RPMT> VALUE: ((RPMT ["is","not","a Public Agency"],2),[])

************************ \ RPMT has returned (RPMT ["is","not","a Public Agency"],2)                :4_2:UnDeeper:
slRelPred> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slRelPred> MATCH (COK): "is" ( "not" ( "a Public Agency"
slRelPred> VALUE: ((RPMT ["is","not","a Public Agency"],2),[])

*********************** \ slRelPred has returned (RPMT ["is","not","a Public Agency"],2)             :4_2:UnDeeper:
*********************** / undeepers                                                                  :4_2:UnDeeper:
************************ > sameLine/undeepers: reached end of line; now need to clear 2 UnDeepers   :4_2:UnDeeper:
************************ > sameLine: success!                                                           :4_4:UnDeeper:
undeepers> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
undeepers> MATCH (COK): ) )
undeepers> VALUE: ((),[])

*********************** \ undeepers has returned ()                                                      :4_4:UnDeeper:
pRelPred> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
pRelPred> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
pRelPred> VALUE: (RPMT ["is","not","a Public Agency"],[])

********************** \ pRelPred has returned RPMT ["is","not","a Public Agency"]                        :4_4:UnDeeper:
term p/3:plain p> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/3:plain p> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
term p/3:plain p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

********************* \ term p/3:plain p has returned MyLeaf (RPMT ["is","not","a Public Agency"])         :4_4:UnDeeper:
term p/notLabelTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/notLabelTerm> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

******************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["is","not","a Public Agency"])        :4_4:UnDeeper:
term p> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
term p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

******************* \ term p has returned MyLeaf (RPMT ["is","not","a Public Agency"])                       :4_4:UnDeeper:
******************* / binary(Or)                                                                             :4_4:UnDeeper:
binary(Or)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=27:
binary(Or)> unexpected )
binary(Or)> expecting OR

******************* \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                              :4_4:UnDeeper:
******************* / binary(And)                                                                            :4_4:UnDeeper:
binary(And)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=27:
binary(And)> unexpected )
binary(And)> expecting AND

******************* \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                            :4_4:UnDeeper:
******************* / binary(SetLess)                                                                        :4_4:UnDeeper:
binary(SetLess)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=27:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

******************* \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS                       :4_4:UnDeeper:
******************* / binary(SetPlus)                                                                        :4_4:UnDeeper:
binary(SetPlus)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=27:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

******************* \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS                       :4_4:UnDeeper:
expression> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
expression> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
expression> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

****************** \ expression has returned MyLeaf (RPMT ["is","not","a Public Agency"])                     :4_4:UnDeeper:
ppp inner> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
ppp inner> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
ppp inner> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

***************** \ ppp inner has returned MyLeaf (RPMT ["is","not","a Public Agency"])                        :4_4:UnDeeper:
manyIndentation/leaf?> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
manyIndentation/leaf?> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

**************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["is","not","a Public Agency"])              :4_4:UnDeeper:
**************** / myindented-UnDeeper                                                                          :4_4:UnDeeper:
myindented-UnDeeper> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

**************** \ myindented-UnDeeper has returned UnDeeper                                             :4_1:Must:
someIndentation> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someIndentation> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
someIndentation> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

*************** \ someIndentation has returned MyLeaf (RPMT ["is","not","a Public Agency"])               :4_1:Must:
term p/2:someIndentation expr p> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/2:someIndentation expr p> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["is","not","a Public Agency"]) :4_1:Must:
term p/notLabelTerm> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/notLabelTerm> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["is","not","a Public Agency"])               :4_1:Must:
term p> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
term p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

************ \ term p has returned MyLeaf (RPMT ["is","not","a Public Agency"])                              :4_1:Must:
************ / binary(Or)                                                                                    :4_1:Must:
binary(Or)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=28:
binary(Or)> unexpected MUST
binary(Or)> expecting OR

************ \ !Unconsumed Error: binary(Or): Unexpected MUST Expecting: OR                                  :4_1:Must:
************ / binary(And)                                                                                   :4_1:Must:
binary(And)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=28:
binary(And)> unexpected MUST
binary(And)> expecting AND

************ \ !Unconsumed Error: binary(And): Unexpected MUST Expecting: AND                                :4_1:Must:
************ / binary(SetLess)                                                                               :4_1:Must:
binary(SetLess)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=28:
binary(SetLess)> unexpected MUST
binary(SetLess)> expecting LESS

************ \ !Unconsumed Error: binary(SetLess): Unexpected MUST Expecting: LESS                           :4_1:Must:
************ / binary(SetPlus)                                                                               :4_1:Must:
binary(SetPlus)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=28:
binary(SetPlus)> unexpected MUST
binary(SetPlus)> expecting PLUS

************ \ !Unconsumed Error: binary(SetPlus): Unexpected MUST Expecting: PLUS                           :4_1:Must:
expression> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
expression> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
expression> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

*********** \ expression has returned MyLeaf (RPMT ["is","not","a Public Agency"])                            :4_1:Must:
ppp inner> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
ppp inner> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
ppp inner> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

********** \ ppp inner has returned MyLeaf (RPMT ["is","not","a Public Agency"])                               :4_1:Must:
pBSR> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pBSR> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
pBSR> VALUE: (Leaf (RPMT ["is","not","a Public Agency"]),[])

********* \ pBSR has returned Leaf (RPMT ["is","not","a Public Agency"])                                        :4_1:Must:
preambleBoolStructR [Who,Which,Whose]> IN: WHO ( "is" ( "not" ( "a Public Agency" ) <…>
preambleBoolStructR [Who,Which,Whose]> MATCH (COK): WHO ( "is" ( "not" ( "a Public Agency" ) <…>
preambleBoolStructR [Who,Which,Whose]> VALUE: ((Who,Leaf (RPMT ["is","not","a Public Agency"])),[])

******** \ preambleBoolStructR [Who,Which,Whose] has returned (Who,Leaf (RPMT ["is","not","a Public Agency"]))   :4_1:Must:
manyIndentation/leaf?> IN: WHO ( "is" ( "not" ( "a Public Agency" ) <…>
manyIndentation/leaf?> MATCH (COK): WHO ( "is" ( "not" ( "a Public Agency" ) <…>
manyIndentation/leaf?> VALUE: ((Who,Leaf (RPMT ["is","not","a Public Agency"])),[])

******* \ manyIndentation/leaf? has returned (Who,Leaf (RPMT ["is","not","a Public Agency"]))                     :4_1:Must:
******* / WHERE                                                                                                   :4_1:Must:
WHERE> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=28:
WHERE> unexpected MUST
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                                              :4_1:Must:
******* / preambleParamText:[Having]                                                                              :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=28:
$>|> unexpected MUST
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                                             :4_1:Must:
preambleParamText:[Having]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=28:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING                        :4_1:Must:
******* / preambleParamText:[Given]                                                                               :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=28:
$>|> unexpected MUST
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                                              :4_1:Must:
preambleParamText:[Given]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=28:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN                          :4_1:Must:
******* / preambleParamText:[Upon]                                                                                :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=28:
$>|> unexpected MUST
$>|> expecting UPON

******** \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                                               :4_1:Must:
preambleParamText:[Upon]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=28:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

******* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON                            :4_1:Must:
******* / preambleBoolStructR [Unless]                                                                            :4_1:Must:
preambleBoolStructR [Unless]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=28:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS                      :4_1:Must:
******* / preambleBoolStructR [When,If]                                                                           :4_1:Must:
preambleBoolStructR [When,If]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=28:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

******* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN                    :4_1:Must:
******* / pDT                                                                                                     :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (COK): MUST
$>|> VALUE: (DMust,[])

******** \ $>| has returned DMust                                                                                 :4_2:GoDeeper:
******** / |>| calling $>>                                                                                        :4_2:GoDeeper:
********* / |>>/recurse                                                                                          :4_2:GoDeeper:
********** / |>>/recurse                                                                                         :4_2:Before:
|>>/recurse> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=30:
|>>/recurse> unexpected BEFORE
|>>/recurse> expecting (

********** \ !Unconsumed Error: |>>/recurse: Unexpected BEFORE Expecting: (                                      :4_2:Before:
********** / |>>/base                                                                                            :4_2:Before:
*********** / pTemporal/eventually                                                                              :4_2:Before:
pTemporal/eventually> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=30:
pTemporal/eventually> unexpected BEFORE
pTemporal/eventually> expecting EVENTUALLY

*********** \ !Unconsumed Error: pTemporal/eventually: Unexpected BEFORE Expecting: EVENTUALLY                  :4_2:Before:
*********** / pTemporal/specifically                                                                            :4_2:Before:
************ / $>|                                                                                             :4_2:Before:
$>|> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
$>|> MATCH (COK): BEFORE
$>|> VALUE: (Before,[])

************ \ $>| has returned Before                                                                          :4_3:GoDeeper:
************ / |>>/recurse                                                                                      :4_3:GoDeeper:
************* / |>>/recurse                                                                                     :4_3:TNumber 30:
|>>/recurse> IN: 30 ( "days" ) ) ) UPON ( "becoming aware <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=32:
|>>/recurse> unexpected 30
|>>/recurse> expecting (

************* \ !Unconsumed Error: |>>/recurse: Unexpected 30 Expecting: (                                      :4_3:TNumber 30:
************* / |>>/base                                                                                        :4_3:TNumber 30:
************** > |>>/base got Just 30                                                                           :4_4:GoDeeper:
|>>/base> IN: 30 ( "days" ) ) ) UPON ( "becoming aware <…>
|>>/base> MATCH (COK): 30
|>>/base> VALUE: ((Just 30,0),[])

************* \ |>>/base has returned (Just 30,0)                                                                :4_4:GoDeeper:
|>>/recurse> IN: ( 30 ( "days" ) ) ) UPON ( "becoming awa <…>
|>>/recurse> MATCH (COK): ( 30
|>>/recurse> VALUE: ((Just 30,1),[])

************ \ |>>/recurse has returned (Just 30,1)                                                               :4_4:GoDeeper:
************ / |>| calling $>>                                                                                    :4_4:GoDeeper:
************* / |>>/recurse                                                                                      :4_4:GoDeeper:
************** / |>>/recurse                                                                                     :4_4:Other "days:
|>>/recurse> IN: "days" ) ) ) UPON ( "becoming aware a da <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=34:
|>>/recurse> unexpected "days"
|>>/recurse> expecting (

************** \ !Unconsumed Error: |>>/recurse: Unexpected "days" Expecting: (                                  :4_4:Other "days:
************** / |>>/base                                                                                        :4_4:Other "days:
*************** > |>>/base got "days"                                                                        :5_2:UnDeeper:
|>>/base> IN: "days" ) ) ) UPON ( "becoming aware a da <…>
|>>/base> MATCH (COK): "days"
|>>/base> VALUE: (("days",0),[])

************** \ |>>/base has returned ("days",0)                                                             :5_2:UnDeeper:
|>>/recurse> IN: ( "days" ) ) ) UPON ( "becoming aware a  <…>
|>>/recurse> MATCH (COK): ( "days"
|>>/recurse> VALUE: (("days",1),[])

************* \ |>>/recurse has returned ("days",1)                                                            :5_2:UnDeeper:
|>| calling $>>> IN: ( "days" ) ) ) UPON ( "becoming aware a  <…>
|>| calling $>>> MATCH (COK): ( "days"
|>| calling $>>> VALUE: (("days",1),[])

************ \ |>| calling $>> has returned ("days",1)                                                          :5_2:UnDeeper:
************ / undeepers                                                                                        :5_2:UnDeeper:
************* > sameLine/undeepers: reached end of line; now need to clear 2 UnDeepers                         :5_2:UnDeeper:
************* > sameLine: success!                                                                                 :5_4:UnDeeper:
undeepers> IN: ) ) ) UPON ( "becoming aware a data brea <…>
undeepers> MATCH (COK): ) )
undeepers> VALUE: ((),[])

************ \ undeepers has returned ()                                                                            :5_4:UnDeeper:
pTemporal/specifically> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
pTemporal/specifically> MATCH (COK): BEFORE ( 30 ( "days" ) )
pTemporal/specifically> VALUE: (Just (TemporalConstraint TBefore (Just 30) "days"),[])

*********** \ pTemporal/specifically has returned Just (TemporalConstraint TBefore (Just 30) "days")                 :5_4:UnDeeper:
*********** > |>>/base got Just (Just (TemporalConstraint TBefore (Just 30) "days"))                                 :5_4:UnDeeper:
|>>/base> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
|>>/base> MATCH (COK): BEFORE ( 30 ( "days" ) )
|>>/base> VALUE: ((Just (Just (TemporalConstraint TBefore (Just 30) "days")),0),[])

********** \ |>>/base has returned (Just (Just (TemporalConstraint TBefore (Just 30) "days")),0)                      :5_4:UnDeeper:
|>>/recurse> IN: ( BEFORE ( 30 ( "days" ) ) ) UPON ( "bec <…>
|>>/recurse> MATCH (COK): ( BEFORE ( 30 ( "days" ) )
|>>/recurse> VALUE: ((Just (Just (TemporalConstraint TBefore (Just 30) "days")),1),[])

********* \ |>>/recurse has returned (Just (Just (TemporalConstraint TBefore (Just 30) "days")),1)                     :5_4:UnDeeper:
|>| calling $>>> IN: ( BEFORE ( 30 ( "days" ) ) ) UPON ( "bec <…>
|>| calling $>>> MATCH (COK): ( BEFORE ( 30 ( "days" ) )
|>| calling $>>> VALUE: ((Just (Just (TemporalConstraint TBefore (Just 30) "days")),1),[])

******** \ |>| calling $>> has returned (Just (Just (TemporalConstraint TBefore (Just 30) "days")),1)                   :5_4:UnDeeper:
******** / undeepers                                                                                                    :5_4:UnDeeper:
********* > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                     :5_4:UnDeeper:
********* > sameLine: success!                                                                                  :5_1:Upon:
undeepers> IN: ) UPON ( "becoming aware a data breach m <…>
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

******** \ undeepers has returned ()                                                                             :5_1:Upon:
pDT> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pDT> MATCH (COK): MUST ( BEFORE ( 30 ( "days" ) ) )
pDT> VALUE: ((DMust,Just (TemporalConstraint TBefore (Just 30) "days")),[])

******* \ pDT has returned (DMust,Just (TemporalConstraint TBefore (Just 30) "days"))                             :5_1:Upon:
******* / WHERE                                                                                                   :5_1:Upon:
WHERE> IN: UPON ( "becoming aware a data breach may <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=38:
WHERE> unexpected UPON
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected UPON Expecting: WHERE                                              :5_1:Upon:
******* / preambleParamText:[Having]                                                                              :5_1:Upon:
******** / $>|                                                                                                   :5_1:Upon:
$>|> IN: UPON ( "becoming aware a data breach may <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=38:
$>|> unexpected UPON
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected UPON Expecting: HAVING                                             :5_1:Upon:
preambleParamText:[Having]> IN: UPON ( "becoming aware a data breach may <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=38:
preambleParamText:[Having]> unexpected UPON
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected UPON Expecting: HAVING                        :5_1:Upon:
******* / preambleParamText:[Given]                                                                               :5_1:Upon:
******** / $>|                                                                                                   :5_1:Upon:
$>|> IN: UPON ( "becoming aware a data breach may <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=38:
$>|> unexpected UPON
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected UPON Expecting: GIVEN                                              :5_1:Upon:
preambleParamText:[Given]> IN: UPON ( "becoming aware a data breach may <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=38:
preambleParamText:[Given]> unexpected UPON
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected UPON Expecting: GIVEN                          :5_1:Upon:
******* / preambleParamText:[Upon]                                                                                :5_1:Upon:
******** / $>|                                                                                                   :5_1:Upon:
$>|> IN: UPON ( "becoming aware a data breach may <…>
$>|> MATCH (COK): UPON
$>|> VALUE: (Upon,[])

******** \ $>| has returned Upon                                                                                  :5_2:GoDeeper:
******** / |>| calling $>>                                                                                        :5_2:GoDeeper:
********* / |>>/recurse                                                                                          :5_2:GoDeeper:
********** / |>>/recurse                                                                                         :5_2:Other "beco:
|>>/recurse> IN: "becoming aware a data breach may have o <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=40:
|>>/recurse> unexpected "becoming aware a data breach may have occurred"
|>>/recurse> expecting (

********** \ !Unconsumed Error: |>>/recurse: Unexpected "becoming aware a data breach may have occurred" Expecting: ( :5_2:Other "beco:
********** / |>>/base                                                                                            :5_2:Other "beco:
*********** / pParamText                                                                                        :5_2:Other "beco:
************ / pParamText(flat) first line: pKeyValues                                                         :5_2:Other "beco:
************* / pKeyValuesAka                                                                                 :5_2:Other "beco:
************** / slAKA                                                                                       :5_2:Other "beco:
*************** / $*|                                                                                       :5_2:Other "beco:
**************** / slAKA base                                                                              :5_2:Other "beco:
***************** / slKeyValues                                                                           :5_2:Other "beco:
****************** / $*|                                                                                 :5_2:Other "beco:
******************* / someSL                                                                            :5_2:Other "beco:
someSL> IN: "becoming aware a data breach may have o <…>
someSL> MATCH (COK): "becoming aware a data breach may have o <…>
someSL> VALUE: ((["becoming aware a data breach may have occurred"],0),[])

******************* \ someSL has returned (["becoming aware a data breach may have occurred"],0)         :6_2:UnDeeper:
$*|> IN: "becoming aware a data breach may have o <…>
$*|> MATCH (COK): "becoming aware a data breach may have o <…>
$*|> VALUE: ((["becoming aware a data breach may have occurred"],0),[])

****************** \ $*| has returned (["becoming aware a data breach may have occurred"],0)              :6_2:UnDeeper:
****************** / |>>/recurse                                                                          :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                            :6_2:UnDeeper:
****************** / |>>/base                                                                             :6_2:UnDeeper:
******************* / |?| optional something                                                             :6_2:UnDeeper:
******************** / |>>/recurse                                                                      :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                        :6_2:UnDeeper:
******************** / |>>/base                                                                         :6_2:UnDeeper:
********************* / slTypeSig                                                                      :6_2:UnDeeper:
********************** / $>|                                                                          :6_2:UnDeeper:
$>|> IN: ) WHEN ( "the data breach occurs on or a <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=41:
$>|> unexpected )
$>|> expecting :: or IS

********************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS ::                        :6_2:UnDeeper:
slTypeSig> IN: ) WHEN ( "the data breach occurs on or a <…>
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=41:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

********************* \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS ::                    :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=41:
|>>/base> unexpected )
|>>/base> expecting :: or IS

******************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS ::                       :6_2:UnDeeper:
|?| optional something> IN: ) WHEN ( "the data breach occurs on or a <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

******************* \ |?| optional something has returned (Nothing,0)                                    :6_2:UnDeeper:
******************* > |>>/base got Nothing                                                               :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************** \ |>>/base has returned (Nothing,0)                                                    :6_2:UnDeeper:
slKeyValues> IN: "becoming aware a data breach may have o <…>
slKeyValues> MATCH (COK): "becoming aware a data breach may have o <…>
slKeyValues> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

***************** \ slKeyValues has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0) :6_2:UnDeeper:
slAKA base> IN: "becoming aware a data breach may have o <…>
slAKA base> MATCH (COK): "becoming aware a data breach may have o <…>
slAKA base> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

**************** \ slAKA base has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0) :6_2:UnDeeper:
$*|> IN: "becoming aware a data breach may have o <…>
$*|> MATCH (COK): "becoming aware a data breach may have o <…>
$*|> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

*************** \ $*| has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0)      :6_2:UnDeeper:
*************** / |>>/recurse                                                                                :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                  :6_2:UnDeeper:
*************** / |>>/base                                                                                   :6_2:UnDeeper:
**************** / slAKA optional akapart                                                                   :6_2:UnDeeper:
***************** / |?| optional something                                                                 :6_2:UnDeeper:
****************** / |>>/recurse                                                                          :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                            :6_2:UnDeeper:
****************** / |>>/base                                                                             :6_2:UnDeeper:
******************* / PAKA/akapart                                                                       :6_2:UnDeeper:
******************** / $>|                                                                              :6_2:UnDeeper:
********************* / Aka Token                                                                      :6_2:UnDeeper:
Aka Token> IN: ) WHEN ( "the data breach occurs on or a <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=41:
Aka Token> unexpected )
Aka Token> expecting AKA

********************* \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA                      :6_2:UnDeeper:
$>|> IN: ) WHEN ( "the data breach occurs on or a <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=41:
$>|> unexpected )
$>|> expecting AKA

******************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA                              :6_2:UnDeeper:
PAKA/akapart> IN: ) WHEN ( "the data breach occurs on or a <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=41:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

******************* \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA                       :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=41:
|>>/base> unexpected )
|>>/base> expecting AKA

****************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA                             :6_2:UnDeeper:
|?| optional something> IN: ) WHEN ( "the data breach occurs on or a <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************** \ |?| optional something has returned (Nothing,0)                                        :6_2:UnDeeper:
slAKA optional akapart> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

**************** \ slAKA optional akapart has returned (Nothing,0)                                          :6_2:UnDeeper:
**************** > |>>/base got Nothing                                                                     :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************** \ |>>/base has returned (Nothing,0)                                                          :6_2:UnDeeper:
*************** / |>>/recurse                                                                                :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                  :6_2:UnDeeper:
*************** / |>>/base                                                                                   :6_2:UnDeeper:
**************** / slAKA optional typically                                                                 :6_2:UnDeeper:
***************** / |?| optional something                                                                 :6_2:UnDeeper:
****************** / |>>/recurse                                                                          :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                            :6_2:UnDeeper:
****************** / |>>/base                                                                             :6_2:UnDeeper:
******************* / typically                                                                          :6_2:UnDeeper:
******************** / $>|                                                                              :6_2:UnDeeper:
$>|> IN: ) WHEN ( "the data breach occurs on or a <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=41:
$>|> unexpected )
$>|> expecting TYPICALLY

******************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY                        :6_2:UnDeeper:
typically> IN: ) WHEN ( "the data breach occurs on or a <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=41:
typically> unexpected )
typically> expecting TYPICALLY

******************* \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY                    :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=41:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

****************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY                       :6_2:UnDeeper:
|?| optional something> IN: ) WHEN ( "the data breach occurs on or a <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************** \ |?| optional something has returned (Nothing,0)                                        :6_2:UnDeeper:
slAKA optional typically> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

**************** \ slAKA optional typically has returned (Nothing,0)                                        :6_2:UnDeeper:
**************** > |>>/base got Nothing                                                                     :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************** \ |>>/base has returned (Nothing,0)                                                          :6_2:UnDeeper:
*************** > slAKA: proceeding after base and entityalias are retrieved ...                             :6_2:UnDeeper:
*************** > pAKA: entityalias = Nothing                                                                :6_2:UnDeeper:
slAKA> IN: "becoming aware a data breach may have o <…>
slAKA> MATCH (COK): "becoming aware a data breach may have o <…>
slAKA> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

************** \ slAKA has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0)      :6_2:UnDeeper:
************** / undeepers                                                                                    :6_2:UnDeeper:
*************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :6_2:UnDeeper:
*************** > sameLine: success!                                                                         :6_2:UnDeeper:
undeepers> IN: ) WHEN ( "the data breach occurs on or a <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************** \ undeepers has returned ()                                                                    :6_2:UnDeeper:
pKeyValuesAka> IN: "becoming aware a data breach may have o <…>
pKeyValuesAka> MATCH (COK): "becoming aware a data breach may have o <…>
pKeyValuesAka> VALUE: (("becoming aware a data breach may have occurred" :| [],Nothing),[])

************* \ pKeyValuesAka has returned ("becoming aware a data breach may have occurred" :| [],Nothing)    :6_2:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "becoming aware a data breach may have o <…>
pParamText(flat) first line: pKeyValues> MATCH (COK): "becoming aware a data breach may have o <…>
pParamText(flat) first line: pKeyValues> VALUE: (("becoming aware a data breach may have occurred" :| [],Nothing),[])

************ \ pParamText(flat) first line: pKeyValues has returned ("becoming aware a data breach may have occurred" :| [],Nothing) :6_2:UnDeeper:
************ / pParamText(flat) subsequent lines: sameMany pKeyValues                                           :6_2:UnDeeper:
************* / manyIndentation/leaf?                                                                          :6_2:UnDeeper:
************** / sameMany                                                                                     :6_2:UnDeeper:
*************** / pKeyValuesAka                                                                              :6_2:UnDeeper:
**************** / slAKA                                                                                    :6_2:UnDeeper:
***************** / $*|                                                                                    :6_2:UnDeeper:
****************** / slAKA base                                                                           :6_2:UnDeeper:
******************* / slKeyValues                                                                        :6_2:UnDeeper:
******************** / $*|                                                                              :6_2:UnDeeper:
********************* / someSL                                                                         :6_2:UnDeeper:
********************** / pNumAsText                                                                   :6_2:UnDeeper:
pNumAsText> IN: ) WHEN ( "the data breach occurs on or a <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=41:
pNumAsText> unexpected )
pNumAsText> expecting number

********************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                :6_2:UnDeeper:
someSL> IN: ) WHEN ( "the data breach occurs on or a <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=41:
someSL> unexpected )
someSL> expecting other text or number

********************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number        :6_2:UnDeeper:
$*|> IN: ) WHEN ( "the data breach occurs on or a <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=41:
$*|> unexpected )
$*|> expecting other text or number

******************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number             :6_2:UnDeeper:
slKeyValues> IN: ) WHEN ( "the data breach occurs on or a <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=41:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

******************* \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number       :6_2:UnDeeper:
slAKA base> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=41:
slAKA base> unexpected )
slAKA base> expecting other text or number

****************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number          :6_2:UnDeeper:
$*|> IN: ) WHEN ( "the data breach occurs on or a <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=41:
$*|> unexpected )
$*|> expecting other text or number

***************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number                   :6_2:UnDeeper:
slAKA> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=41:
slAKA> unexpected )
slAKA> expecting other text or number

**************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number                   :6_2:UnDeeper:
pKeyValuesAka> IN: ) WHEN ( "the data breach occurs on or a <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=41:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

*************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number             :6_2:UnDeeper:
sameMany> IN: ) WHEN ( "the data breach occurs on or a <…>
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

************** \ sameMany has returned []                                                                     :6_2:UnDeeper:
manyIndentation/leaf?> IN: ) WHEN ( "the data breach occurs on or a <…>
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

************* \ manyIndentation/leaf? has returned []                                                          :6_2:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) WHEN ( "the data breach occurs on or a <…>
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

************ \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned []                           :6_2:UnDeeper:
pParamText> IN: "becoming aware a data breach may have o <…>
pParamText> MATCH (COK): "becoming aware a data breach may have o <…>
pParamText> VALUE: (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],[])

*********** \ pParamText has returned ("becoming aware a data breach may have occurred" :| [],Nothing) :| []     :6_2:UnDeeper:
*********** > |>>/base got ("becoming aware a data breach may have occurred" :| [],Nothing) :| []                :6_2:UnDeeper:
|>>/base> IN: "becoming aware a data breach may have o <…>
|>>/base> MATCH (COK): "becoming aware a data breach may have o <…>
|>>/base> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing) :| [],0),[])

********** \ |>>/base has returned (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],0)     :6_2:UnDeeper:
|>>/recurse> IN: ( "becoming aware a data breach may have <…>
|>>/recurse> MATCH (COK): ( "becoming aware a data breach may have <…>
|>>/recurse> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1),[])

********* \ |>>/recurse has returned (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1)    :6_2:UnDeeper:
|>| calling $>>> IN: ( "becoming aware a data breach may have <…>
|>| calling $>>> MATCH (COK): ( "becoming aware a data breach may have <…>
|>| calling $>>> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1),[])

******** \ |>| calling $>> has returned (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1)  :6_2:UnDeeper:
******** / undeepers                                                                                                :6_2:UnDeeper:
********* > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                 :6_2:UnDeeper:
********* > sameLine: success!                                                                                  :6_1:When:
undeepers> IN: ) WHEN ( "the data breach occurs on or a <…>
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

******** \ undeepers has returned ()                                                                             :6_1:When:
preambleParamText:[Upon]> IN: UPON ( "becoming aware a data breach may <…>
preambleParamText:[Upon]> MATCH (COK): UPON ( "becoming aware a data breach may <…>
preambleParamText:[Upon]> VALUE: ((Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| []),[])

******* \ preambleParamText:[Upon] has returned (Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| []) :6_1:When:
******* / preambleParamText:[Upon]                                                                                :6_1:When:
******** / $>|                                                                                                   :6_1:When:
$>|> IN: WHEN ( "the data breach occurs on or aft <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=42:
$>|> unexpected WHEN
$>|> expecting UPON

******** \ !Unconsumed Error: $>|: Unexpected WHEN Expecting: UPON                                               :6_1:When:
preambleParamText:[Upon]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=42:
preambleParamText:[Upon]> unexpected WHEN
preambleParamText:[Upon]> expecting UPON

******* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected WHEN Expecting: UPON                            :6_1:When:
******* / WHERE                                                                                                   :6_1:When:
WHERE> IN: WHEN ( "the data breach occurs on or aft <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=42:
WHERE> unexpected WHEN
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected WHEN Expecting: WHERE                                              :6_1:When:
******* / preambleParamText:[Having]                                                                              :6_1:When:
******** / $>|                                                                                                   :6_1:When:
$>|> IN: WHEN ( "the data breach occurs on or aft <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=42:
$>|> unexpected WHEN
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected WHEN Expecting: HAVING                                             :6_1:When:
preambleParamText:[Having]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=42:
preambleParamText:[Having]> unexpected WHEN
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected WHEN Expecting: HAVING                        :6_1:When:
******* / preambleParamText:[Given]                                                                               :6_1:When:
******** / $>|                                                                                                   :6_1:When:
$>|> IN: WHEN ( "the data breach occurs on or aft <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=42:
$>|> unexpected WHEN
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected WHEN Expecting: GIVEN                                              :6_1:When:
preambleParamText:[Given]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=42:
preambleParamText:[Given]> unexpected WHEN
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected WHEN Expecting: GIVEN                          :6_1:When:
******* / preambleBoolStructR [Unless]                                                                            :6_1:When:
preambleBoolStructR [Unless]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=42:
preambleBoolStructR [Unless]> unexpected WHEN
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected WHEN Expecting: UNLESS                      :6_1:When:
******* / preambleBoolStructR [When,If]                                                                           :6_1:When:
******** / pBSR                                                                                                   :6_2:GoDeeper:
********* / ppp inner                                                                                            :6_2:GoDeeper:
********** / expression                                                                                         :6_2:GoDeeper:
*********** / term p                                                                                           :6_2:GoDeeper:
************ / term p/1a:label ends directly above next line                                                  :6_2:GoDeeper:
************* / $*|                                                                                          :6_2:GoDeeper:
************** / someSL                                                                                     :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
pNumAsText> IN: ( "the data breach occurs on or after th <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=43:
pNumAsText> unexpected (
pNumAsText> expecting number

*************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                            :6_2:GoDeeper:
someSL> IN: ( "the data breach occurs on or after th <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=43:
someSL> unexpected (
someSL> expecting other text or number

************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                    :6_2:GoDeeper:
$*|> IN: ( "the data breach occurs on or after th <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=43:
$*|> unexpected (
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                         :6_2:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "the data breach occurs on or after th <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=43:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

************ \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :6_2:GoDeeper:
************ / term p/1b:label ends to the left of line below, with EOL                                       :6_2:GoDeeper:
************* / $*|                                                                                          :6_2:GoDeeper:
************** / someSL                                                                                     :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
pNumAsText> IN: ( "the data breach occurs on or after th <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=43:
pNumAsText> unexpected (
pNumAsText> expecting number

*************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                            :6_2:GoDeeper:
someSL> IN: ( "the data breach occurs on or after th <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=43:
someSL> unexpected (
someSL> expecting other text or number

************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                    :6_2:GoDeeper:
$*|> IN: ( "the data breach occurs on or after th <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=43:
$*|> unexpected (
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                         :6_2:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "the data breach occurs on or after th <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=43:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************ \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :6_2:GoDeeper:
************ / term p/1c:label ends to the right of line below                                                :6_2:GoDeeper:
************* > |<|                                                                                          :6_2:GoDeeper:
************* > |<* starting                                                                                 :6_2:GoDeeper:
************* / $*|                                                                                          :6_2:GoDeeper:
************** / someSL                                                                                     :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
pNumAsText> IN: ( "the data breach occurs on or after th <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=43:
pNumAsText> unexpected (
pNumAsText> expecting number

*************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                            :6_2:GoDeeper:
someSL> IN: ( "the data breach occurs on or after th <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=43:
someSL> unexpected (
someSL> expecting other text or number

************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                    :6_2:GoDeeper:
$*|> IN: ( "the data breach occurs on or after th <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=43:
$*|> unexpected (
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                         :6_2:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "the data breach occurs on or after th <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=43:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

************ \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :6_2:GoDeeper:
************ / term p/notLabelTerm                                                                            :6_2:GoDeeper:
************* / term p/2:someIndentation expr p                                                              :6_2:GoDeeper:
************** / someIndentation                                                                            :6_2:GoDeeper:
*************** / myindented-GoDeeper                                                                      :6_2:GoDeeper:
myindented-GoDeeper> IN: ( "the data breach occurs on or after th <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

*************** \ myindented-GoDeeper has returned GoDeeper                                                 :6_2:Other "the:
*************** / manyIndentation/leaf?                                                                     :6_2:Other "the:
**************** / ppp inner                                                                               :6_2:Other "the:
***************** / expression                                                                            :6_2:Other "the:
****************** / term p                                                                              :6_2:Other "the:
******************* / term p/1a:label ends directly above next line                                     :6_2:Other "the:
******************** / $*|                                                                             :6_2:Other "the:
********************* / someSL                                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************* \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
********************* / pNumAsText                                                                     :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                  :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (CERR): "the data breach occurs on or after the  <…>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting ( or other text or number

******************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number             :7_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "the data breach occurs on or after the  <…>
term p/1a:label ends directly above next line> MATCH (CERR): "the data breach occurs on or after the  <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=45:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

******************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :7_2:UnDeeper:
******************* / term p/1b:label ends to the left of line below, with EOL                          :6_2:Other "the:
******************** / $*|                                                                             :6_2:Other "the:
********************* / someSL                                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************* \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

******************** \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
******************** / matching EOL                                                                     :7_2:UnDeeper:
matching EOL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=45:
matching EOL> unexpected )
matching EOL> expecting EOL

******************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL                     :7_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "the data breach occurs on or after the  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "the data breach occurs on or after the  <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=45:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

******************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :7_2:UnDeeper:
******************* / term p/1c:label ends to the right of line below                                   :6_2:Other "the:
******************** > |<|                                                                             :6_2:Other "the:
******************** > |<* starting                                                                    :6_2:Other "the:
******************** / $*|                                                                             :6_2:Other "the:
********************* / someSL                                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************* \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

******************** \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
******************** / |<*/parent                                                                       :7_2:UnDeeper:
********************* > |<*/recurse                                                                    :7_2:UnDeeper:
********************* / ppp inner                                                                   :7_1:Do:
********************** / expression                                                                :7_1:Do:
*********************** / term p                                                                  :7_1:Do:
************************ / term p/1a:label ends directly above next line                         :7_1:Do:
************************* / $*|                                                                 :7_1:Do:
************************** / someSL                                                            :7_1:Do:
*************************** / pNumAsText                                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number  :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
term p/1a:label ends directly above next line> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=46:
term p/1a:label ends directly above next line> unexpected DO
term p/1a:label ends directly above next line> expecting other text or number

************************ \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected DO Expecting: other text or number :7_1:Do:
************************ / term p/1b:label ends to the left of line below, with EOL              :7_1:Do:
************************* / $*|                                                                 :7_1:Do:
************************** / someSL                                                            :7_1:Do:
*************************** / pNumAsText                                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number  :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
term p/1b:label ends to the left of line below, with EOL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=46:
term p/1b:label ends to the left of line below, with EOL> unexpected DO
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************ \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected DO Expecting: other text or number :7_1:Do:
************************ / term p/1c:label ends to the right of line below                       :7_1:Do:
************************* > |<|                                                                 :7_1:Do:
************************* > |<* starting                                                        :7_1:Do:
************************* / $*|                                                                 :7_1:Do:
************************** / someSL                                                            :7_1:Do:
*************************** / pNumAsText                                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number  :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
term p/1c:label ends to the right of line below> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=46:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting other text or number

************************ \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: other text or number :7_1:Do:
************************ / term p/notLabelTerm                                                   :7_1:Do:
************************* / term p/2:someIndentation expr p                                     :7_1:Do:
************************** / someIndentation                                                   :7_1:Do:
*************************** / myindented-GoDeeper                                             :7_1:Do:
myindented-GoDeeper> IN: DO ( "assess" ( "if it is a Notifiable D <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=46:
myindented-GoDeeper> unexpected DO
myindented-GoDeeper> expecting (

*************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected DO Expecting: ( :7_1:Do:
someIndentation> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=46:
someIndentation> unexpected DO
someIndentation> expecting (

************************** \ !Unconsumed Error: someIndentation: Unexpected DO Expecting: (    :7_1:Do:
term p/2:someIndentation expr p> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=46:
term p/2:someIndentation expr p> unexpected DO
term p/2:someIndentation expr p> expecting (

************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected DO Expecting: ( :7_1:Do:
************************* / term p/3:plain p                                                    :7_1:Do:
************************** / pRelPred                                                          :7_1:Do:
*************************** / slRelPred                                                       :7_1:Do:
**************************** / nested simpleHorn                                             :7_1:Do:
***************************** > |^|                                                         :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slMultiTerm                                               :7_1:Do:
******************************* / someSL                                                  :7_1:Do:
******************************** / pNumAsText                                            :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

******************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

******************************* \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

****************************** \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
nested simpleHorn> IN: DO ( "assess" ( "if it is a Notifiable D <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=46:
nested simpleHorn> unexpected DO
nested simpleHorn> expecting other text or number

**************************** \ !Unconsumed Error: nested simpleHorn: Unexpected DO Expecting: other text or number :7_1:Do:
**************************** / RPConstraint                                                  :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slMultiTerm                                               :7_1:Do:
******************************* / someSL                                                  :7_1:Do:
******************************** / pNumAsText                                            :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

******************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

******************************* \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

****************************** \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
RPConstraint> IN: DO ( "assess" ( "if it is a Notifiable D <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=46:
RPConstraint> unexpected DO
RPConstraint> expecting other text or number

**************************** \ !Unconsumed Error: RPConstraint: Unexpected DO Expecting: other text or number :7_1:Do:
**************************** / RPBoolStructR                                                 :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slMultiTerm                                               :7_1:Do:
******************************* / someSL                                                  :7_1:Do:
******************************** / pNumAsText                                            :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

******************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

******************************* \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

****************************** \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
RPBoolStructR> IN: DO ( "assess" ( "if it is a Notifiable D <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=46:
RPBoolStructR> unexpected DO
RPBoolStructR> expecting other text or number

**************************** \ !Unconsumed Error: RPBoolStructR: Unexpected DO Expecting: other text or number :7_1:Do:
**************************** / RPMT                                                          :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slAKA                                                     :7_1:Do:
******************************* / $*|                                                     :7_1:Do:
******************************** / slAKA base                                            :7_1:Do:
********************************* / slMultiTerm                                         :7_1:Do:
********************************** / someSL                                            :7_1:Do:
*********************************** / pNumAsText                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

********************************* \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
slAKA base> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=46:
slAKA base> unexpected DO
slAKA base> expecting other text or number

******************************** \ !Unconsumed Error: slAKA base: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
slAKA> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=46:
slAKA> unexpected DO
slAKA> expecting other text or number

****************************** \ !Unconsumed Error: slAKA: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
RPMT> IN: DO ( "assess" ( "if it is a Notifiable D <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=46:
RPMT> unexpected DO
RPMT> expecting other text or number

**************************** \ !Unconsumed Error: RPMT: Unexpected DO Expecting: other text or number :7_1:Do:
slRelPred> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=46:
slRelPred> unexpected DO
slRelPred> expecting other text or number

*************************** \ !Unconsumed Error: slRelPred: Unexpected DO Expecting: other text or number :7_1:Do:
pRelPred> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=46:
pRelPred> unexpected DO
pRelPred> expecting other text or number

************************** \ !Unconsumed Error: pRelPred: Unexpected DO Expecting: other text or number :7_1:Do:
term p/3:plain p> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=46:
term p/3:plain p> unexpected DO
term p/3:plain p> expecting other text or number

************************* \ !Unconsumed Error: term p/3:plain p: Unexpected DO Expecting: other text or number :7_1:Do:
term p/notLabelTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=46:
term p/notLabelTerm> unexpected DO
term p/notLabelTerm> expecting ( or term

************************ \ !Unconsumed Error: term p/notLabelTerm: Unexpected DO Expecting: ( term :7_1:Do:
term p> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=46:
term p> unexpected DO
term p> expecting (, other text or number, or term

*********************** \ !Unconsumed Error: term p: Unexpected DO Expecting: ( other text or number term :7_1:Do:
expression> IN: DO ( "assess" ( "if it is a Notifiable D <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=46:
expression> unexpected DO
expression> expecting expression

********************** \ !Unconsumed Error: expression: Unexpected DO Expecting: expression        :7_1:Do:
ppp inner> IN: DO ( "assess" ( "if it is a Notifiable D <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=46:
ppp inner> unexpected DO
ppp inner> expecting expression

********************* \ !Unconsumed Error: ppp inner: Unexpected DO Expecting: expression           :7_1:Do:
********************* / withPrePost                                                                 :7_1:Do:
********************** > |<* starting                                                              :7_1:Do:
********************** / $*|                                                                       :7_1:Do:
*********************** / pre part                                                                :7_1:Do:
pre part> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=46:
pre part> unexpected DO
pre part> expecting ( or Other text

*********************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text      :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting ( or Other text

********************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text             :7_1:Do:
withPrePost> IN: DO ( "assess" ( "if it is a Notifiable D <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=46:
withPrePost> unexpected DO
withPrePost> expecting ( or Other text

********************* \ !Unconsumed Error: withPrePost: Unexpected DO Expecting: ( Other text       :7_1:Do:
********************* / $*|                                                                         :7_1:Do:
********************** / pre part                                                                  :7_1:Do:
pre part> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=46:
pre part> unexpected DO
pre part> expecting ( or Other text

********************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text        :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting ( or Other text

********************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text               :7_1:Do:
********************* / |<*/base                                                                       :7_2:UnDeeper:
********************** / ppp inner                                                                    :7_2:UnDeeper:
*********************** / expression                                                                 :7_2:UnDeeper:
************************ / term p                                                                   :7_2:UnDeeper:
************************* / term p/1a:label ends directly above next line                          :7_2:UnDeeper:
************************** / $*|                                                                  :7_2:UnDeeper:
*************************** / someSL                                                             :7_2:UnDeeper:
**************************** / pNumAsText                                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=45:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
************************* / term p/1b:label ends to the left of line below, with EOL               :7_2:UnDeeper:
************************** / $*|                                                                  :7_2:UnDeeper:
*************************** / someSL                                                             :7_2:UnDeeper:
**************************** / pNumAsText                                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=45:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
************************* / term p/1c:label ends to the right of line below                        :7_2:UnDeeper:
************************** > |<|                                                                  :7_2:UnDeeper:
************************** > |<* starting                                                         :7_2:UnDeeper:
************************** / $*|                                                                  :7_2:UnDeeper:
*************************** / someSL                                                             :7_2:UnDeeper:
**************************** / pNumAsText                                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=45:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
************************* / term p/notLabelTerm                                                    :7_2:UnDeeper:
************************** / term p/2:someIndentation expr p                                      :7_2:UnDeeper:
*************************** / someIndentation                                                    :7_2:UnDeeper:
**************************** / myindented-GoDeeper                                              :7_2:UnDeeper:
myindented-GoDeeper> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=45:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

**************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :7_2:UnDeeper:
someIndentation> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=45:
someIndentation> unexpected )
someIndentation> expecting (

*************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (      :7_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=45:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :7_2:UnDeeper:
************************** / term p/3:plain p                                                     :7_2:UnDeeper:
*************************** / pRelPred                                                           :7_2:UnDeeper:
**************************** / slRelPred                                                        :7_2:UnDeeper:
***************************** / nested simpleHorn                                              :7_2:UnDeeper:
****************************** > |^|                                                          :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slMultiTerm                                                :7_2:UnDeeper:
******************************** / someSL                                                   :7_2:UnDeeper:
********************************* / pNumAsText                                             :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
nested simpleHorn> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=45:
nested simpleHorn> unexpected )
nested simpleHorn> expecting other text or number

***************************** \ !Unconsumed Error: nested simpleHorn: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
***************************** / RPConstraint                                                   :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slMultiTerm                                                :7_2:UnDeeper:
******************************** / someSL                                                   :7_2:UnDeeper:
********************************* / pNumAsText                                             :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
RPConstraint> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=45:
RPConstraint> unexpected )
RPConstraint> expecting other text or number

***************************** \ !Unconsumed Error: RPConstraint: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
***************************** / RPBoolStructR                                                  :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slMultiTerm                                                :7_2:UnDeeper:
******************************** / someSL                                                   :7_2:UnDeeper:
********************************* / pNumAsText                                             :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
RPBoolStructR> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=45:
RPBoolStructR> unexpected )
RPBoolStructR> expecting other text or number

***************************** \ !Unconsumed Error: RPBoolStructR: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
***************************** / RPMT                                                           :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slAKA                                                      :7_2:UnDeeper:
******************************** / $*|                                                      :7_2:UnDeeper:
********************************* / slAKA base                                             :7_2:UnDeeper:
********************************** / slMultiTerm                                          :7_2:UnDeeper:
*********************************** / someSL                                             :7_2:UnDeeper:
************************************ / pNumAsText                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************ \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

********************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slAKA base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=45:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************* \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slAKA> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=45:
slAKA> unexpected )
slAKA> expecting other text or number

******************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
RPMT> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=45:
RPMT> unexpected )
RPMT> expecting other text or number

***************************** \ !Unconsumed Error: RPMT: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slRelPred> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=45:
slRelPred> unexpected )
slRelPred> expecting other text or number

**************************** \ !Unconsumed Error: slRelPred: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
pRelPred> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=45:
pRelPred> unexpected )
pRelPred> expecting other text or number

*************************** \ !Unconsumed Error: pRelPred: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/3:plain p> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=45:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

************************** \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/notLabelTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=45:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :7_2:UnDeeper:
term p> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=45:
term p> unexpected )
term p> expecting (, other text or number, or term

************************ \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :7_2:UnDeeper:
expression> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=45:
expression> unexpected )
expression> expecting expression

*********************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression          :7_2:UnDeeper:
ppp inner> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=45:
ppp inner> unexpected )
ppp inner> expecting expression

********************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression             :7_2:UnDeeper:
********************** / withPrePost                                                                  :7_2:UnDeeper:
*********************** > |<* starting                                                               :7_2:UnDeeper:
*********************** / $*|                                                                        :7_2:UnDeeper:
************************ / pre part                                                                 :7_2:UnDeeper:
pre part> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=45:
pre part> unexpected )
pre part> expecting ( or Other text

************************ \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text        :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting ( or Other text

*********************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text               :7_2:UnDeeper:
withPrePost> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=45:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

********************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text         :7_2:UnDeeper:
********************** / $*|                                                                          :7_2:UnDeeper:
*********************** / pre part                                                                   :7_2:UnDeeper:
pre part> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=45:
pre part> unexpected )
pre part> expecting ( or Other text

*********************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text          :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting ( or Other text

********************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text                 :7_2:UnDeeper:
|<*/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=45:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

********************* \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :7_2:UnDeeper:
|<*/parent> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=46:
|<*/parent> unexpected DO
|<*/parent> expecting (, ), Other text, or expression

******************** \ !Unconsumed Error: |<*/parent: Unexpected DO Expecting: ( ( ) Other text expression :7_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "the data breach occurs on or after the  <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "the data breach occurs on or after the  <…>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=46:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

******************* \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: ( ( ( ) Other text expression :7_2:UnDeeper:
******************* / term p/notLabelTerm                                                               :6_2:Other "the:
******************** / term p/2:someIndentation expr p                                                 :6_2:Other "the:
********************* / someIndentation                                                               :6_2:Other "the:
********************** / myindented-GoDeeper                                                         :6_2:Other "the:
myindented-GoDeeper> IN: "the data breach occurs on or after the  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=44:
myindented-GoDeeper> unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"
myindented-GoDeeper> expecting (

********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13" Expecting: ( :6_2:Other "the:
someIndentation> IN: "the data breach occurs on or after the  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=44:
someIndentation> unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"
someIndentation> expecting (

********************* \ !Unconsumed Error: someIndentation: Unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13" Expecting: ( :6_2:Other "the:
term p/2:someIndentation expr p> IN: "the data breach occurs on or after the  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=44:
term p/2:someIndentation expr p> unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"
term p/2:someIndentation expr p> expecting (

******************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13" Expecting: ( :6_2:Other "the:
******************** / term p/3:plain p                                                                :6_2:Other "the:
********************* / pRelPred                                                                      :6_2:Other "the:
********************** / slRelPred                                                                   :6_2:Other "the:
*********************** / nested simpleHorn                                                         :6_2:Other "the:
************************ > |^|                                                                     :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slMultiTerm                                                           :6_2:Other "the:
************************** / someSL                                                              :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************ / |^| deeps                                                                :7_2:UnDeeper:
|^| deeps> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|^| deeps> MATCH (COK): )
|^| deeps> VALUE: (([()],-1),[])

************************ \ |^| deeps has returned ([()],-1)                                      :7_1:Do:
nested simpleHorn> IN: "the data breach occurs on or after the  <…>
nested simpleHorn> MATCH (CERR): "the data breach occurs on or after the  <…>
nested simpleHorn> ERROR:
nested simpleHorn> offset=46:
nested simpleHorn> unexpected DO
nested simpleHorn> expecting ) or MEANS

*********************** \ !Consumed Error: nested simpleHorn: Unexpected DO Expecting: MEANS )    :7_1:Do:
*********************** / RPConstraint                                                              :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slMultiTerm                                                           :6_2:Other "the:
************************** / someSL                                                              :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************ / |>| calling $>>                                                          :7_2:UnDeeper:
************************* / |>>/recurse                                                            :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (              :7_2:UnDeeper:
************************* / |>>/base                                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :7_2:UnDeeper:
|>| calling $>>> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=45:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
RPConstraint> IN: "the data breach occurs on or after the  <…>
RPConstraint> MATCH (CERR): "the data breach occurs on or after the  <…>
RPConstraint> ERROR:
RPConstraint> offset=45:
RPConstraint> unexpected )
RPConstraint> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

*********************** \ !Consumed Error: RPConstraint: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
*********************** / RPBoolStructR                                                             :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slMultiTerm                                                           :6_2:Other "the:
************************** / someSL                                                              :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************ / |>| calling $>>                                                          :7_2:UnDeeper:
************************* / |>>/recurse                                                            :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (              :7_2:UnDeeper:
************************* / |>>/base                                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :7_2:UnDeeper:
|>| calling $>>> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=45:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
RPBoolStructR> IN: "the data breach occurs on or after the  <…>
RPBoolStructR> MATCH (CERR): "the data breach occurs on or after the  <…>
RPBoolStructR> ERROR:
RPBoolStructR> offset=45:
RPBoolStructR> unexpected )
RPBoolStructR> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

*********************** \ !Consumed Error: RPBoolStructR: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
*********************** / RPMT                                                                      :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slAKA                                                                 :6_2:Other "the:
************************** / $*|                                                                 :6_2:Other "the:
*************************** / slAKA base                                                        :6_2:Other "the:
**************************** / slMultiTerm                                                     :6_2:Other "the:
***************************** / someSL                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

***************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

**************************** \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slAKA base> IN: "the data breach occurs on or after the  <…>
slAKA base> MATCH (COK): "the data breach occurs on or after the  <…>
slAKA base> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

*************************** \ slAKA base has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************** / |>>/recurse                                                          :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :7_2:UnDeeper:
************************** / |>>/base                                                             :7_2:UnDeeper:
*************************** / slAKA optional akapart                                             :7_2:UnDeeper:
**************************** / |?| optional something                                           :7_2:UnDeeper:
***************************** / |>>/recurse                                                    :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

***************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (      :7_2:UnDeeper:
***************************** / |>>/base                                                       :7_2:UnDeeper:
****************************** / PAKA/akapart                                                 :7_2:UnDeeper:
******************************* / $>|                                                        :7_2:UnDeeper:
******************************** / Aka Token                                                :7_2:UnDeeper:
Aka Token> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=45:
Aka Token> unexpected )
Aka Token> expecting AKA

******************************** \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :7_2:UnDeeper:
$>|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=45:
$>|> unexpected )
$>|> expecting AKA

******************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA        :7_2:UnDeeper:
PAKA/akapart> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=45:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

****************************** \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting AKA

***************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA       :7_2:UnDeeper:
|?| optional something> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

**************************** \ |?| optional something has returned (Nothing,0)                  :7_2:UnDeeper:
slAKA optional akapart> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*************************** \ slAKA optional akapart has returned (Nothing,0)                    :7_2:UnDeeper:
*************************** > |>>/base got Nothing                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************************** \ |>>/base has returned (Nothing,0)                                    :7_2:UnDeeper:
************************** / |>>/recurse                                                          :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :7_2:UnDeeper:
************************** / |>>/base                                                             :7_2:UnDeeper:
*************************** / slAKA optional typically                                           :7_2:UnDeeper:
**************************** / |?| optional something                                           :7_2:UnDeeper:
***************************** / |>>/recurse                                                    :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

***************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (      :7_2:UnDeeper:
***************************** / |>>/base                                                       :7_2:UnDeeper:
****************************** / typically                                                    :7_2:UnDeeper:
******************************* / $>|                                                        :7_2:UnDeeper:
$>|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=45:
$>|> unexpected )
$>|> expecting TYPICALLY

******************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY  :7_2:UnDeeper:
typically> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=45:
typically> unexpected )
typically> expecting TYPICALLY

****************************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

***************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :7_2:UnDeeper:
|?| optional something> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

**************************** \ |?| optional something has returned (Nothing,0)                  :7_2:UnDeeper:
slAKA optional typically> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*************************** \ slAKA optional typically has returned (Nothing,0)                  :7_2:UnDeeper:
*************************** > |>>/base got Nothing                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************************** \ |>>/base has returned (Nothing,0)                                    :7_2:UnDeeper:
************************** > slAKA: proceeding after base and entityalias are retrieved ...       :7_2:UnDeeper:
************************** > pAKA: entityalias = Nothing                                          :7_2:UnDeeper:
slAKA> IN: "the data breach occurs on or after the  <…>
slAKA> MATCH (COK): "the data breach occurs on or after the  <…>
slAKA> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slAKA has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
RPMT> IN: "the data breach occurs on or after the  <…>
RPMT> MATCH (COK): "the data breach occurs on or after the  <…>
RPMT> VALUE: ((RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

*********************** \ RPMT has returned (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slRelPred> IN: "the data breach occurs on or after the  <…>
slRelPred> MATCH (COK): "the data breach occurs on or after the  <…>
slRelPred> VALUE: ((RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************** \ slRelPred has returned (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
********************** / undeepers                                                                    :7_2:UnDeeper:
*********************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers     :7_2:UnDeeper:
*********************** > sameLine: success!                                                         :7_2:UnDeeper:
undeepers> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

********************** \ undeepers has returned ()                                                    :7_2:UnDeeper:
pRelPred> IN: "the data breach occurs on or after the  <…>
pRelPred> MATCH (COK): "the data breach occurs on or after the  <…>
pRelPred> VALUE: (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],[])

********************* \ pRelPred has returned RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"] :7_2:UnDeeper:
term p/3:plain p> IN: "the data breach occurs on or after the  <…>
term p/3:plain p> MATCH (COK): "the data breach occurs on or after the  <…>
term p/3:plain p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

******************** \ term p/3:plain p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
term p/notLabelTerm> IN: "the data breach occurs on or after the  <…>
term p/notLabelTerm> MATCH (COK): "the data breach occurs on or after the  <…>
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
term p> IN: "the data breach occurs on or after the  <…>
term p> MATCH (COK): "the data breach occurs on or after the  <…>
term p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

****************** \ term p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
****************** / binary(Or)                                                                           :7_2:UnDeeper:
binary(Or)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=45:
binary(Or)> unexpected )
binary(Or)> expecting OR

****************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                            :7_2:UnDeeper:
****************** / binary(And)                                                                          :7_2:UnDeeper:
binary(And)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=45:
binary(And)> unexpected )
binary(And)> expecting AND

****************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                          :7_2:UnDeeper:
****************** / binary(SetLess)                                                                      :7_2:UnDeeper:
binary(SetLess)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=45:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

****************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS                     :7_2:UnDeeper:
****************** / binary(SetPlus)                                                                      :7_2:UnDeeper:
binary(SetPlus)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=45:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

****************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS                     :7_2:UnDeeper:
expression> IN: "the data breach occurs on or after the  <…>
expression> MATCH (COK): "the data breach occurs on or after the  <…>
expression> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

***************** \ expression has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
ppp inner> IN: "the data breach occurs on or after the  <…>
ppp inner> MATCH (COK): "the data breach occurs on or after the  <…>
ppp inner> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

**************** \ ppp inner has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
manyIndentation/leaf?> IN: "the data breach occurs on or after the  <…>
manyIndentation/leaf?> MATCH (COK): "the data breach occurs on or after the  <…>
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

*************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
*************** / myindented-UnDeeper                                                                        :7_2:UnDeeper:
myindented-UnDeeper> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

*************** \ myindented-UnDeeper has returned UnDeeper                                               :7_1:Do:
someIndentation> IN: ( "the data breach occurs on or after th <…>
someIndentation> MATCH (COK): ( "the data breach occurs on or after th <…>
someIndentation> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

************** \ someIndentation has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
term p/2:someIndentation expr p> IN: ( "the data breach occurs on or after th <…>
term p/2:someIndentation expr p> MATCH (COK): ( "the data breach occurs on or after th <…>
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
term p/notLabelTerm> IN: ( "the data breach occurs on or after th <…>
term p/notLabelTerm> MATCH (COK): ( "the data breach occurs on or after th <…>
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

************ \ term p/notLabelTerm has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
term p> IN: ( "the data breach occurs on or after th <…>
term p> MATCH (COK): ( "the data breach occurs on or after th <…>
term p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

*********** \ term p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
*********** / binary(Or)                                                                                      :7_1:Do:
binary(Or)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=46:
binary(Or)> unexpected DO
binary(Or)> expecting OR

*********** \ !Unconsumed Error: binary(Or): Unexpected DO Expecting: OR                                      :7_1:Do:
*********** / binary(And)                                                                                     :7_1:Do:
binary(And)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=46:
binary(And)> unexpected DO
binary(And)> expecting AND

*********** \ !Unconsumed Error: binary(And): Unexpected DO Expecting: AND                                    :7_1:Do:
*********** / binary(SetLess)                                                                                 :7_1:Do:
binary(SetLess)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=46:
binary(SetLess)> unexpected DO
binary(SetLess)> expecting LESS

*********** \ !Unconsumed Error: binary(SetLess): Unexpected DO Expecting: LESS                               :7_1:Do:
*********** / binary(SetPlus)                                                                                 :7_1:Do:
binary(SetPlus)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=46:
binary(SetPlus)> unexpected DO
binary(SetPlus)> expecting PLUS

*********** \ !Unconsumed Error: binary(SetPlus): Unexpected DO Expecting: PLUS                               :7_1:Do:
expression> IN: ( "the data breach occurs on or after th <…>
expression> MATCH (COK): ( "the data breach occurs on or after th <…>
expression> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

********** \ expression has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
ppp inner> IN: ( "the data breach occurs on or after th <…>
ppp inner> MATCH (COK): ( "the data breach occurs on or after th <…>
ppp inner> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

********* \ ppp inner has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
pBSR> IN: ( "the data breach occurs on or after th <…>
pBSR> MATCH (COK): ( "the data breach occurs on or after th <…>
pBSR> VALUE: (Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

******** \ pBSR has returned Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
preambleBoolStructR [When,If]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleBoolStructR [When,If]> MATCH (COK): WHEN ( "the data breach occurs on or aft <…>
preambleBoolStructR [When,If]> VALUE: ((When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"])),[])

******* \ preambleBoolStructR [When,If] has returned (When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"])) :7_1:Do:
******* / preambleBoolStructR [When,If]                                                                           :7_1:Do:
preambleBoolStructR [When,If]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=46:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

******* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN                      :7_1:Do:
******* / WHERE                                                                                                   :7_1:Do:
WHERE> IN: DO ( "assess" ( "if it is a Notifiable D <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=46:
WHERE> unexpected DO
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                                                :7_1:Do:
******* / preambleParamText:[Having]                                                                              :7_1:Do:
******** / $>|                                                                                                   :7_1:Do:
$>|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=46:
$>|> unexpected DO
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                                               :7_1:Do:
preambleParamText:[Having]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=46:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING                          :7_1:Do:
******* / preambleParamText:[Given]                                                                               :7_1:Do:
******** / $>|                                                                                                   :7_1:Do:
$>|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=46:
$>|> unexpected DO
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                                                :7_1:Do:
preambleParamText:[Given]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=46:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN                            :7_1:Do:
******* / preambleBoolStructR [Unless]                                                                            :7_1:Do:
preambleBoolStructR [Unless]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=46:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS                        :7_1:Do:
******* / pDoAction/Do                                                                                            :7_1:Do:
pDoAction/Do> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pDoAction/Do> MATCH (COK): DO
pDoAction/Do> VALUE: (Do,[])

******* \ pDoAction/Do has returned Do                                                                             :7_2:GoDeeper:
******* / pDoAction/pAction                                                                                        :7_2:GoDeeper:
******** / pAction calling dBoolStructP                                                                           :7_2:GoDeeper:
********* / dBoolStructP calling exprP                                                                           :7_2:GoDeeper:
********** / expr pParamText                                                                                    :7_2:GoDeeper:
*********** / ppp inner                                                                                        :7_2:GoDeeper:
************ / expression                                                                                     :7_2:GoDeeper:
************* / term p                                                                                       :7_2:GoDeeper:
************** / term p/1a:label ends directly above next line                                              :7_2:GoDeeper:
*************** / $*|                                                                                      :7_2:GoDeeper:
**************** / someSL                                                                                 :7_2:GoDeeper:
***************** / pNumAsText                                                                           :7_2:GoDeeper:
pNumAsText> IN: ( "assess" ( "if it is a Notifiable Data <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=47:
pNumAsText> unexpected (
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                        :7_2:GoDeeper:
someSL> IN: ( "assess" ( "if it is a Notifiable Data <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=47:
someSL> unexpected (
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                :7_2:GoDeeper:
$*|> IN: ( "assess" ( "if it is a Notifiable Data <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=47:
$*|> unexpected (
$*|> expecting other text or number

*************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                     :7_2:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=47:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :7_2:GoDeeper:
************** / term p/1b:label ends to the left of line below, with EOL                                   :7_2:GoDeeper:
*************** / $*|                                                                                      :7_2:GoDeeper:
**************** / someSL                                                                                 :7_2:GoDeeper:
***************** / pNumAsText                                                                           :7_2:GoDeeper:
pNumAsText> IN: ( "assess" ( "if it is a Notifiable Data <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=47:
pNumAsText> unexpected (
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                        :7_2:GoDeeper:
someSL> IN: ( "assess" ( "if it is a Notifiable Data <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=47:
someSL> unexpected (
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                :7_2:GoDeeper:
$*|> IN: ( "assess" ( "if it is a Notifiable Data <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=47:
$*|> unexpected (
$*|> expecting other text or number

*************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                     :7_2:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=47:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :7_2:GoDeeper:
************** / term p/1c:label ends to the right of line below                                            :7_2:GoDeeper:
*************** > |<|                                                                                      :7_2:GoDeeper:
*************** > |<* starting                                                                             :7_2:GoDeeper:
*************** / $*|                                                                                      :7_2:GoDeeper:
**************** / someSL                                                                                 :7_2:GoDeeper:
***************** / pNumAsText                                                                           :7_2:GoDeeper:
pNumAsText> IN: ( "assess" ( "if it is a Notifiable Data <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=47:
pNumAsText> unexpected (
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                        :7_2:GoDeeper:
someSL> IN: ( "assess" ( "if it is a Notifiable Data <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=47:
someSL> unexpected (
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                :7_2:GoDeeper:
$*|> IN: ( "assess" ( "if it is a Notifiable Data <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=47:
$*|> unexpected (
$*|> expecting other text or number

*************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                     :7_2:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=47:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :7_2:GoDeeper:
************** / term p/notLabelTerm                                                                        :7_2:GoDeeper:
*************** / term p/2:someIndentation expr p                                                          :7_2:GoDeeper:
**************** / someIndentation                                                                        :7_2:GoDeeper:
***************** / myindented-GoDeeper                                                                  :7_2:GoDeeper:
myindented-GoDeeper> IN: ( "assess" ( "if it is a Notifiable Data <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

***************** \ myindented-GoDeeper has returned GoDeeper                                             :7_2:Other "asse:
***************** / manyIndentation/leaf?                                                                 :7_2:Other "asse:
****************** / ppp inner                                                                           :7_2:Other "asse:
******************* / expression                                                                        :7_2:Other "asse:
******************** / term p                                                                          :7_2:Other "asse:
********************* / term p/1a:label ends directly above next line                                 :7_2:Other "asse:
********************** / $*|                                                                         :7_2:Other "asse:
*********************** / someSL                                                                    :7_2:Other "asse:
someSL> IN: "assess" ( "if it is a Notifiable Data B <…>
someSL> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
someSL> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

*********************** \ someSL has returned (["assess","if it is a Notifiable Data Breach"],1)       :8_3:UnDeeper:
*********************** / pNumAsText                                                                   :8_3:UnDeeper:
pNumAsText> IN: ) "by" ( "performing" ( ( "NDB Qualifica <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=51:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                :8_3:UnDeeper:
$*|> IN: "assess" ( "if it is a Notifiable Data B <…>
$*|> MATCH (CERR): "assess" ( "if it is a Notifiable Data B <…>
$*|> ERROR:
$*|> offset=51:
$*|> unexpected )
$*|> expecting ( or other text or number

********************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number           :8_3:UnDeeper:
term p/1a:label ends directly above next line> IN: "assess" ( "if it is a Notifiable Data B <…>
term p/1a:label ends directly above next line> MATCH (CERR): "assess" ( "if it is a Notifiable Data B <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=51:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

********************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :8_3:UnDeeper:
********************* / term p/1b:label ends to the left of line below, with EOL                      :7_2:Other "asse:
********************** / $*|                                                                         :7_2:Other "asse:
*********************** / someSL                                                                    :7_2:Other "asse:
someSL> IN: "assess" ( "if it is a Notifiable Data B <…>
someSL> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
someSL> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

*********************** \ someSL has returned (["assess","if it is a Notifiable Data Breach"],1)       :8_3:UnDeeper:
$*|> IN: "assess" ( "if it is a Notifiable Data B <…>
$*|> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
$*|> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

********************** \ $*| has returned (["assess","if it is a Notifiable Data Breach"],1)            :8_3:UnDeeper:
********************** / matching EOL                                                                   :8_3:UnDeeper:
matching EOL> IN: ) "by" ( "performing" ( ( "NDB Qualifica <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=51:
matching EOL> unexpected )
matching EOL> expecting EOL

********************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL                   :8_3:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "assess" ( "if it is a Notifiable Data B <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "assess" ( "if it is a Notifiable Data B <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=51:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

********************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :8_3:UnDeeper:
********************* / term p/1c:label ends to the right of line below                               :7_2:Other "asse:
********************** > |<|                                                                         :7_2:Other "asse:
********************** > |<* starting                                                                :7_2:Other "asse:
********************** / $*|                                                                         :7_2:Other "asse:
*********************** / someSL                                                                    :7_2:Other "asse:
someSL> IN: "assess" ( "if it is a Notifiable Data B <…>
someSL> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
someSL> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

*********************** \ someSL has returned (["assess","if it is a Notifiable Data Breach"],1)       :8_3:UnDeeper:
$*|> IN: "assess" ( "if it is a Notifiable Data B <…>
$*|> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
$*|> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

********************** \ $*| has returned (["assess","if it is a Notifiable Data Breach"],1)            :8_3:UnDeeper:
********************** / |<*/parent                                                                     :8_3:UnDeeper:
*********************** > |<*/recurse                                                                  :8_3:UnDeeper:
*********************** / ppp inner                                                                 :8_2:Other "by":
************************ / expression                                                              :8_2:Other "by":
************************* / term p                                                                :8_2:Other "by":
************************** / term p/1a:label ends directly above next line                       :8_2:Other "by":
*************************** / $*|                                                               :8_2:Other "by":
**************************** / someSL                                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

**************************** \ someSL has returned (["by","performing","NDB Qualification"],3)  :9_2:UnDeeper:
**************************** / pNumAsText                                                       :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting ( or other text or number

*************************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :9_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1a:label ends directly above next line> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=58:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

************************** \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :9_2:UnDeeper:
************************** / term p/1b:label ends to the left of line below, with EOL            :8_2:Other "by":
*************************** / $*|                                                               :8_2:Other "by":
**************************** / someSL                                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

**************************** \ someSL has returned (["by","performing","NDB Qualification"],3)  :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((["by","performing","NDB Qualification"],3),[])

*************************** \ $*| has returned (["by","performing","NDB Qualification"],3)       :9_2:UnDeeper:
*************************** / matching EOL                                                       :9_2:UnDeeper:
matching EOL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=58:
matching EOL> unexpected )
matching EOL> expecting EOL

*************************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL       :9_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=58:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

************************** \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :9_2:UnDeeper:
************************** / term p/1c:label ends to the right of line below                     :8_2:Other "by":
*************************** > |<|                                                               :8_2:Other "by":
*************************** > |<* starting                                                      :8_2:Other "by":
*************************** / $*|                                                               :8_2:Other "by":
**************************** / someSL                                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

**************************** \ someSL has returned (["by","performing","NDB Qualification"],3)  :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((["by","performing","NDB Qualification"],3),[])

*************************** \ $*| has returned (["by","performing","NDB Qualification"],3)       :9_2:UnDeeper:
*************************** / |<*/parent                                                         :9_2:UnDeeper:
**************************** > |<*/recurse                                                      :9_2:UnDeeper:
**************************** / ppp inner                                                     :9_1:Hence:
***************************** / expression                                                  :9_1:Hence:
****************************** / term p                                                    :9_1:Hence:
******************************* / term p/1a:label ends directly above next line           :9_1:Hence:
******************************** / $*|                                                   :9_1:Hence:
********************************* / someSL                                              :9_1:Hence:
********************************** / pNumAsText                                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/1a:label ends directly above next line> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=62:
term p/1a:label ends directly above next line> unexpected HENCE
term p/1a:label ends directly above next line> expecting other text or number

******************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected HENCE Expecting: other text or number :9_1:Hence:
******************************* / term p/1b:label ends to the left of line below, with EOL :9_1:Hence:
******************************** / $*|                                                   :9_1:Hence:
********************************* / someSL                                              :9_1:Hence:
********************************** / pNumAsText                                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/1b:label ends to the left of line below, with EOL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=62:
term p/1b:label ends to the left of line below, with EOL> unexpected HENCE
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

******************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
******************************* / term p/1c:label ends to the right of line below         :9_1:Hence:
******************************** > |<|                                                   :9_1:Hence:
******************************** > |<* starting                                          :9_1:Hence:
******************************** / $*|                                                   :9_1:Hence:
********************************* / someSL                                              :9_1:Hence:
********************************** / pNumAsText                                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/1c:label ends to the right of line below> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=62:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting other text or number

******************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: other text or number :9_1:Hence:
******************************* / term p/notLabelTerm                                     :9_1:Hence:
******************************** / term p/2:someIndentation expr p                       :9_1:Hence:
********************************* / someIndentation                                     :9_1:Hence:
********************************** / myindented-GoDeeper                               :9_1:Hence:
myindented-GoDeeper> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=62:
myindented-GoDeeper> unexpected HENCE
myindented-GoDeeper> expecting (

********************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected HENCE Expecting: ( :9_1:Hence:
someIndentation> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=62:
someIndentation> unexpected HENCE
someIndentation> expecting (

********************************* \ !Unconsumed Error: someIndentation: Unexpected HENCE Expecting: ( :9_1:Hence:
term p/2:someIndentation expr p> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=62:
term p/2:someIndentation expr p> unexpected HENCE
term p/2:someIndentation expr p> expecting (

******************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected HENCE Expecting: ( :9_1:Hence:
******************************** / term p/3:plain p                                      :9_1:Hence:
********************************* / pParamText                                          :9_1:Hence:
********************************** / pParamText(flat) first line: pKeyValues           :9_1:Hence:
*********************************** / pKeyValuesAka                                   :9_1:Hence:
************************************ / slAKA                                         :9_1:Hence:
************************************* / $*|                                         :9_1:Hence:
************************************** / slAKA base                                :9_1:Hence:
*************************************** / slKeyValues                             :9_1:Hence:
**************************************** / $*|                                   :9_1:Hence:
***************************************** / someSL                              :9_1:Hence:
****************************************** / pNumAsText                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

****************************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

***************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

**************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
slKeyValues> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=62:
slKeyValues> unexpected HENCE
slKeyValues> expecting other text or number

*************************************** \ !Unconsumed Error: slKeyValues: Unexpected HENCE Expecting: other text or number :9_1:Hence:
slAKA base> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=62:
slAKA base> unexpected HENCE
slAKA base> expecting other text or number

************************************** \ !Unconsumed Error: slAKA base: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
slAKA> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=62:
slAKA> unexpected HENCE
slAKA> expecting other text or number

************************************ \ !Unconsumed Error: slAKA: Unexpected HENCE Expecting: other text or number :9_1:Hence:
pKeyValuesAka> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=62:
pKeyValuesAka> unexpected HENCE
pKeyValuesAka> expecting other text or number

*********************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected HENCE Expecting: other text or number :9_1:Hence:
pParamText(flat) first line: pKeyValues> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=62:
pParamText(flat) first line: pKeyValues> unexpected HENCE
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected HENCE Expecting: other text or number :9_1:Hence:
pParamText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=62:
pParamText> unexpected HENCE
pParamText> expecting other text or number

********************************* \ !Unconsumed Error: pParamText: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/3:plain p> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=62:
term p/3:plain p> unexpected HENCE
term p/3:plain p> expecting other text or number

******************************** \ !Unconsumed Error: term p/3:plain p: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/notLabelTerm> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=62:
term p/notLabelTerm> unexpected HENCE
term p/notLabelTerm> expecting ( or term

******************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected HENCE Expecting: ( term :9_1:Hence:
term p> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=62:
term p> unexpected HENCE
term p> expecting (, other text or number, or term

****************************** \ !Unconsumed Error: term p: Unexpected HENCE Expecting: ( other text or number term :9_1:Hence:
expression> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=62:
expression> unexpected HENCE
expression> expecting expression

***************************** \ !Unconsumed Error: expression: Unexpected HENCE Expecting: expression :9_1:Hence:
ppp inner> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=62:
ppp inner> unexpected HENCE
ppp inner> expecting expression

**************************** \ !Unconsumed Error: ppp inner: Unexpected HENCE Expecting: expression :9_1:Hence:
**************************** / withPrePost                                                   :9_1:Hence:
***************************** > |<* starting                                                :9_1:Hence:
***************************** / $*|                                                         :9_1:Hence:
****************************** / pre part                                                  :9_1:Hence:
pre part> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=62:
pre part> unexpected HENCE
pre part> expecting ( or Other text

****************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting ( or Other text

***************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
withPrePost> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=62:
withPrePost> unexpected HENCE
withPrePost> expecting ( or Other text

**************************** \ !Unconsumed Error: withPrePost: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
**************************** / $*|                                                           :9_1:Hence:
***************************** / pre part                                                    :9_1:Hence:
pre part> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=62:
pre part> unexpected HENCE
pre part> expecting ( or Other text

***************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting ( or Other text

**************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
**************************** / |<*/base                                                         :9_2:UnDeeper:
***************************** / ppp inner                                                      :9_2:UnDeeper:
****************************** / expression                                                   :9_2:UnDeeper:
******************************* / term p                                                     :9_2:UnDeeper:
******************************** / term p/1a:label ends directly above next line            :9_2:UnDeeper:
********************************* / $*|                                                    :9_2:UnDeeper:
********************************** / someSL                                               :9_2:UnDeeper:
*********************************** / pNumAsText                                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=58:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

******************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
******************************** / term p/1b:label ends to the left of line below, with EOL :9_2:UnDeeper:
********************************* / $*|                                                    :9_2:UnDeeper:
********************************** / someSL                                               :9_2:UnDeeper:
*********************************** / pNumAsText                                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=58:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

******************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
******************************** / term p/1c:label ends to the right of line below          :9_2:UnDeeper:
********************************* > |<|                                                    :9_2:UnDeeper:
********************************* > |<* starting                                           :9_2:UnDeeper:
********************************* / $*|                                                    :9_2:UnDeeper:
********************************** / someSL                                               :9_2:UnDeeper:
*********************************** / pNumAsText                                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=58:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

******************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
******************************** / term p/notLabelTerm                                      :9_2:UnDeeper:
********************************* / term p/2:someIndentation expr p                        :9_2:UnDeeper:
********************************** / someIndentation                                      :9_2:UnDeeper:
*********************************** / myindented-GoDeeper                                :9_2:UnDeeper:
myindented-GoDeeper> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=58:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

*********************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :9_2:UnDeeper:
someIndentation> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=58:
someIndentation> unexpected )
someIndentation> expecting (

********************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: ( :9_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=58:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

********************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :9_2:UnDeeper:
********************************* / term p/3:plain p                                       :9_2:UnDeeper:
********************************** / pParamText                                           :9_2:UnDeeper:
*********************************** / pParamText(flat) first line: pKeyValues            :9_2:UnDeeper:
************************************ / pKeyValuesAka                                    :9_2:UnDeeper:
************************************* / slAKA                                          :9_2:UnDeeper:
************************************** / $*|                                          :9_2:UnDeeper:
*************************************** / slAKA base                                 :9_2:UnDeeper:
**************************************** / slKeyValues                              :9_2:UnDeeper:
***************************************** / $*|                                    :9_2:UnDeeper:
****************************************** / someSL                               :9_2:UnDeeper:
******************************************* / pNumAsText                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

******************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

****************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

***************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
slKeyValues> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=58:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

**************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
slAKA base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=58:
slAKA base> unexpected )
slAKA base> expecting other text or number

*************************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
slAKA> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=58:
slAKA> unexpected )
slAKA> expecting other text or number

************************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
pKeyValuesAka> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=58:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

************************************ \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=58:
pParamText(flat) first line: pKeyValues> unexpected )
pParamText(flat) first line: pKeyValues> expecting other text or number

*********************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
pParamText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=58:
pParamText> unexpected )
pParamText> expecting other text or number

********************************** \ !Unconsumed Error: pParamText: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/3:plain p> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=58:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

********************************* \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/notLabelTerm> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=58:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

******************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :9_2:UnDeeper:
term p> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=58:
term p> unexpected )
term p> expecting (, other text or number, or term

******************************* \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :9_2:UnDeeper:
expression> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=58:
expression> unexpected )
expression> expecting expression

****************************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression :9_2:UnDeeper:
ppp inner> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=58:
ppp inner> unexpected )
ppp inner> expecting expression

***************************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression :9_2:UnDeeper:
***************************** / withPrePost                                                    :9_2:UnDeeper:
****************************** > |<* starting                                                 :9_2:UnDeeper:
****************************** / $*|                                                          :9_2:UnDeeper:
******************************* / pre part                                                   :9_2:UnDeeper:
pre part> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=58:
pre part> unexpected )
pre part> expecting ( or Other text

******************************* \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting ( or Other text

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
withPrePost> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=58:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

***************************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
***************************** / $*|                                                            :9_2:UnDeeper:
****************************** / pre part                                                     :9_2:UnDeeper:
pre part> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=58:
pre part> unexpected )
pre part> expecting ( or Other text

****************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting ( or Other text

***************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text   :9_2:UnDeeper:
|<*/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=58:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

**************************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :9_2:UnDeeper:
|<*/parent> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=62:
|<*/parent> unexpected HENCE
|<*/parent> expecting (, ), Other text, or expression

*************************** \ !Unconsumed Error: |<*/parent: Unexpected HENCE Expecting: ( ( ) Other text expression :9_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=62:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

************************** \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: ( ( ( ) Other text expression :9_2:UnDeeper:
************************** / term p/notLabelTerm                                                 :8_2:Other "by":
*************************** / term p/2:someIndentation expr p                                   :8_2:Other "by":
**************************** / someIndentation                                                 :8_2:Other "by":
***************************** / myindented-GoDeeper                                           :8_2:Other "by":
myindented-GoDeeper> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=52:
myindented-GoDeeper> unexpected "by"
myindented-GoDeeper> expecting (

***************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "by" Expecting: ( :8_2:Other "by":
someIndentation> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=52:
someIndentation> unexpected "by"
someIndentation> expecting (

**************************** \ !Unconsumed Error: someIndentation: Unexpected "by" Expecting: ( :8_2:Other "by":
term p/2:someIndentation expr p> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=52:
term p/2:someIndentation expr p> unexpected "by"
term p/2:someIndentation expr p> expecting (

*************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "by" Expecting: ( :8_2:Other "by":
*************************** / term p/3:plain p                                                  :8_2:Other "by":
**************************** / pParamText                                                      :8_2:Other "by":
***************************** / pParamText(flat) first line: pKeyValues                       :8_2:Other "by":
****************************** / pKeyValuesAka                                               :8_2:Other "by":
******************************* / slAKA                                                     :8_2:Other "by":
******************************** / $*|                                                     :8_2:Other "by":
********************************* / slAKA base                                            :8_2:Other "by":
********************************** / slKeyValues                                         :8_2:Other "by":
*********************************** / $*|                                               :8_2:Other "by":
************************************ / someSL                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

************************************ \ someSL has returned (["by","performing","NDB Qualification"],3) :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((["by","performing","NDB Qualification"],3),[])

*********************************** \ $*| has returned (["by","performing","NDB Qualification"],3) :9_2:UnDeeper:
*********************************** / |>>/recurse                                        :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
*********************************** / |>>/base                                           :9_2:UnDeeper:
************************************ / |?| optional something                           :9_2:UnDeeper:
************************************* / |>>/recurse                                    :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
************************************* / |>>/base                                       :9_2:UnDeeper:
************************************** / slTypeSig                                    :9_2:UnDeeper:
*************************************** / $>|                                        :9_2:UnDeeper:
$>|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=58:
$>|> unexpected )
$>|> expecting :: or IS

*************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS :: :9_2:UnDeeper:
slTypeSig> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=58:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

************************************** \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS :: :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=58:
|>>/base> unexpected )
|>>/base> expecting :: or IS

************************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS :: :9_2:UnDeeper:
|?| optional something> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************************ \ |?| optional something has returned (Nothing,0)  :9_2:UnDeeper:
************************************ > |>>/base got Nothing                             :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*********************************** \ |>>/base has returned (Nothing,0)                  :9_2:UnDeeper:
slKeyValues> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
slKeyValues> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
slKeyValues> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

********************************** \ slKeyValues has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
slAKA base> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA base> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA base> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

********************************* \ slAKA base has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

******************************** \ $*| has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
******************************** / |>>/recurse                                              :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
******************************** / |>>/base                                                 :9_2:UnDeeper:
********************************* / slAKA optional akapart                                 :9_2:UnDeeper:
********************************** / |?| optional something                               :9_2:UnDeeper:
*********************************** / |>>/recurse                                        :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
*********************************** / |>>/base                                           :9_2:UnDeeper:
************************************ / PAKA/akapart                                     :9_2:UnDeeper:
************************************* / $>|                                            :9_2:UnDeeper:
************************************** / Aka Token                                    :9_2:UnDeeper:
Aka Token> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=58:
Aka Token> unexpected )
Aka Token> expecting AKA

************************************** \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :9_2:UnDeeper:
$>|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=58:
$>|> unexpected )
$>|> expecting AKA

************************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA :9_2:UnDeeper:
PAKA/akapart> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=58:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

************************************ \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=58:
|>>/base> unexpected )
|>>/base> expecting AKA

*********************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA :9_2:UnDeeper:
|?| optional something> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)      :9_2:UnDeeper:
slAKA optional akapart> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional akapart has returned (Nothing,0)        :9_2:UnDeeper:
********************************* > |>>/base got Nothing                                   :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                        :9_2:UnDeeper:
******************************** / |>>/recurse                                              :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
******************************** / |>>/base                                                 :9_2:UnDeeper:
********************************* / slAKA optional typically                               :9_2:UnDeeper:
********************************** / |?| optional something                               :9_2:UnDeeper:
*********************************** / |>>/recurse                                        :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
*********************************** / |>>/base                                           :9_2:UnDeeper:
************************************ / typically                                        :9_2:UnDeeper:
************************************* / $>|                                            :9_2:UnDeeper:
$>|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=58:
$>|> unexpected )
$>|> expecting TYPICALLY

************************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :9_2:UnDeeper:
typically> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=58:
typically> unexpected )
typically> expecting TYPICALLY

************************************ \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=58:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

*********************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :9_2:UnDeeper:
|?| optional something> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)      :9_2:UnDeeper:
slAKA optional typically> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional typically has returned (Nothing,0)      :9_2:UnDeeper:
********************************* > |>>/base got Nothing                                   :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                        :9_2:UnDeeper:
******************************** > slAKA: proceeding after base and entityalias are retrieved ... :9_2:UnDeeper:
******************************** > pAKA: entityalias = Nothing                              :9_2:UnDeeper:
slAKA> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

******************************* \ slAKA has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
******************************* / undeepers                                                  :9_2:UnDeeper:
******************************** > sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers :9_2:UnDeeper:
******************************** > sameLine: success!                                             :9_5:UnDeeper:
undeepers> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
undeepers> MATCH (COK): ) ) )
undeepers> VALUE: ((),[])

******************************* \ undeepers has returned ()                                        :9_5:UnDeeper:
pKeyValuesAka> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
pKeyValuesAka> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
pKeyValuesAka> VALUE: (("by" :| ["performing","NDB Qualification"],Nothing),[])

****************************** \ pKeyValuesAka has returned ("by" :| ["performing","NDB Qualification"],Nothing) :9_5:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText(flat) first line: pKeyValues> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText(flat) first line: pKeyValues> VALUE: (("by" :| ["performing","NDB Qualification"],Nothing),[])

***************************** \ pParamText(flat) first line: pKeyValues has returned ("by" :| ["performing","NDB Qualification"],Nothing) :9_5:UnDeeper:
***************************** / pParamText(flat) subsequent lines: sameMany pKeyValues               :9_5:UnDeeper:
****************************** / manyIndentation/leaf?                                              :9_5:UnDeeper:
******************************* / sameMany                                                         :9_5:UnDeeper:
******************************** / pKeyValuesAka                                                  :9_5:UnDeeper:
********************************* / slAKA                                                        :9_5:UnDeeper:
********************************** / $*|                                                        :9_5:UnDeeper:
*********************************** / slAKA base                                               :9_5:UnDeeper:
************************************ / slKeyValues                                            :9_5:UnDeeper:
************************************* / $*|                                                  :9_5:UnDeeper:
************************************** / someSL                                             :9_5:UnDeeper:
*************************************** / pNumAsText                                       :9_5:UnDeeper:
pNumAsText> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=61:
pNumAsText> unexpected )
pNumAsText> expecting number

*************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_5:UnDeeper:
someSL> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=61:
someSL> unexpected )
someSL> expecting other text or number

************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
$*|> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=61:
$*|> unexpected )
$*|> expecting other text or number

************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
slKeyValues> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=61:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

************************************ \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
slAKA base> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=61:
slAKA base> unexpected )
slAKA base> expecting other text or number

*********************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
$*|> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=61:
$*|> unexpected )
$*|> expecting other text or number

********************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
slAKA> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=61:
slAKA> unexpected )
slAKA> expecting other text or number

********************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
pKeyValuesAka> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=61:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

******************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
sameMany> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

******************************* \ sameMany has returned []                                         :9_5:UnDeeper:
manyIndentation/leaf?> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

****************************** \ manyIndentation/leaf? has returned []                              :9_5:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

***************************** \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned [] :9_5:UnDeeper:
pParamText> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText> VALUE: (("by" :| ["performing","NDB Qualification"],Nothing) :| [],[])

**************************** \ pParamText has returned ("by" :| ["performing","NDB Qualification"],Nothing) :| [] :9_5:UnDeeper:
term p/3:plain p> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/3:plain p> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/3:plain p> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

*************************** \ term p/3:plain p has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
term p/notLabelTerm> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/notLabelTerm> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/notLabelTerm> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

************************** \ term p/notLabelTerm has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
term p> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
term p> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

************************* \ term p has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
************************* / binary(Or)                                                                   :9_5:UnDeeper:
binary(Or)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=61:
binary(Or)> unexpected )
binary(Or)> expecting OR

************************* \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                    :9_5:UnDeeper:
************************* / binary(And)                                                                  :9_5:UnDeeper:
binary(And)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=61:
binary(And)> unexpected )
binary(And)> expecting AND

************************* \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                  :9_5:UnDeeper:
************************* / binary(SetLess)                                                              :9_5:UnDeeper:
binary(SetLess)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=61:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

************************* \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS             :9_5:UnDeeper:
************************* / binary(SetPlus)                                                              :9_5:UnDeeper:
binary(SetPlus)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=61:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

************************* \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS             :9_5:UnDeeper:
expression> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
expression> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
expression> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

************************ \ expression has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
ppp inner> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
ppp inner> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
ppp inner> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

*********************** \ ppp inner has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
*********************** > |<*/recurse matched 1 UnDeepers                                                  :9_5:UnDeeper:
|<*/parent> IN: ) "by" ( "performing" ( ( "NDB Qualifica <…>
|<*/parent> MATCH (COK): ) "by" ( "performing" ( ( "NDB Qualifica <…>
|<*/parent> VALUE: ((MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),-1),[])

********************** \ |<*/parent has returned (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),-1) :9_5:UnDeeper:
********************** / undeepers                                                                          :9_5:UnDeeper:
*********************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers           :9_5:UnDeeper:
*********************** > sameLine: success!                                                               :9_5:UnDeeper:
undeepers> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

********************** \ undeepers has returned ()                                                          :9_5:UnDeeper:
********************** > 1c: got label to the right of next line: ["assess","if it is a Notifiable Data Breach"] :9_5:UnDeeper:
********************** > 1c: got inner: MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
term p/1c:label ends to the right of line below> IN: "assess" ( "if it is a Notifiable Data B <…>
term p/1c:label ends to the right of line below> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
term p/1c:label ends to the right of line below> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

********************* \ term p/1c:label ends to the right of line below has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
term p> IN: "assess" ( "if it is a Notifiable Data B <…>
term p> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
term p> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

******************** \ term p has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
******************** / binary(Or)                                                                             :9_5:UnDeeper:
binary(Or)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=61:
binary(Or)> unexpected )
binary(Or)> expecting OR

******************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                              :9_5:UnDeeper:
******************** / binary(And)                                                                            :9_5:UnDeeper:
binary(And)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=61:
binary(And)> unexpected )
binary(And)> expecting AND

******************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                            :9_5:UnDeeper:
******************** / binary(SetLess)                                                                        :9_5:UnDeeper:
binary(SetLess)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=61:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

******************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS                       :9_5:UnDeeper:
******************** / binary(SetPlus)                                                                        :9_5:UnDeeper:
binary(SetPlus)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=61:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

******************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS                       :9_5:UnDeeper:
expression> IN: "assess" ( "if it is a Notifiable Data B <…>
expression> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
expression> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

******************* \ expression has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
ppp inner> IN: "assess" ( "if it is a Notifiable Data B <…>
ppp inner> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
ppp inner> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

****************** \ ppp inner has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
manyIndentation/leaf?> IN: "assess" ( "if it is a Notifiable Data B <…>
manyIndentation/leaf?> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
manyIndentation/leaf?> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

***************** \ manyIndentation/leaf? has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
***************** / myindented-UnDeeper                                                                          :9_5:UnDeeper:
myindented-UnDeeper> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

***************** \ myindented-UnDeeper has returned UnDeeper                                           :9_1:Hence:
someIndentation> IN: ( "assess" ( "if it is a Notifiable Data <…>
someIndentation> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
someIndentation> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

**************** \ someIndentation has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
term p/2:someIndentation expr p> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/2:someIndentation expr p> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
term p/2:someIndentation expr p> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

*************** \ term p/2:someIndentation expr p has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
term p/notLabelTerm> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/notLabelTerm> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
term p/notLabelTerm> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

************** \ term p/notLabelTerm has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
term p> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
term p> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

************* \ term p has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
************* / binary(Or)                                                                                  :9_1:Hence:
binary(Or)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=62:
binary(Or)> unexpected HENCE
binary(Or)> expecting OR

************* \ !Unconsumed Error: binary(Or): Unexpected HENCE Expecting: OR                               :9_1:Hence:
************* / binary(And)                                                                                 :9_1:Hence:
binary(And)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=62:
binary(And)> unexpected HENCE
binary(And)> expecting AND

************* \ !Unconsumed Error: binary(And): Unexpected HENCE Expecting: AND                             :9_1:Hence:
************* / binary(SetLess)                                                                             :9_1:Hence:
binary(SetLess)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=62:
binary(SetLess)> unexpected HENCE
binary(SetLess)> expecting LESS

************* \ !Unconsumed Error: binary(SetLess): Unexpected HENCE Expecting: LESS                        :9_1:Hence:
************* / binary(SetPlus)                                                                             :9_1:Hence:
binary(SetPlus)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=62:
binary(SetPlus)> unexpected HENCE
binary(SetPlus)> expecting PLUS

************* \ !Unconsumed Error: binary(SetPlus): Unexpected HENCE Expecting: PLUS                        :9_1:Hence:
expression> IN: ( "assess" ( "if it is a Notifiable Data <…>
expression> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
expression> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

************ \ expression has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
ppp inner> IN: ( "assess" ( "if it is a Notifiable Data <…>
ppp inner> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
ppp inner> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

*********** \ ppp inner has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
expr pParamText> IN: ( "assess" ( "if it is a Notifiable Data <…>
expr pParamText> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
expr pParamText> VALUE: (MyLeaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

********** \ expr pParamText has returned MyLeaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
dBoolStructP calling exprP> IN: ( "assess" ( "if it is a Notifiable Data <…>
dBoolStructP calling exprP> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
dBoolStructP calling exprP> VALUE: (Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

********* \ dBoolStructP calling exprP has returned Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
pAction calling dBoolStructP> IN: ( "assess" ( "if it is a Notifiable Data <…>
pAction calling dBoolStructP> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
pAction calling dBoolStructP> VALUE: (Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

******** \ pAction calling dBoolStructP has returned Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
pDoAction/pAction> IN: ( "assess" ( "if it is a Notifiable Data <…>
pDoAction/pAction> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
pDoAction/pAction> VALUE: (Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

******* \ pDoAction/pAction has returned Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
******* / WHERE                                                                                                   :9_1:Hence:
WHERE> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=62:
WHERE> unexpected HENCE
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected HENCE Expecting: WHERE                                             :9_1:Hence:
******* / preambleParamText:[Having]                                                                              :9_1:Hence:
******** / $>|                                                                                                   :9_1:Hence:
$>|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=62:
$>|> unexpected HENCE
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: HAVING                                            :9_1:Hence:
preambleParamText:[Having]> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=62:
preambleParamText:[Having]> unexpected HENCE
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected HENCE Expecting: HAVING                       :9_1:Hence:
******* / preambleParamText:[Given]                                                                               :9_1:Hence:
******** / $>|                                                                                                   :9_1:Hence:
$>|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=62:
$>|> unexpected HENCE
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: GIVEN                                             :9_1:Hence:
preambleParamText:[Given]> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=62:
preambleParamText:[Given]> unexpected HENCE
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected HENCE Expecting: GIVEN                         :9_1:Hence:
******* / preambleBoolStructR [Unless]                                                                            :9_1:Hence:
preambleBoolStructR [Unless]> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=62:
preambleBoolStructR [Unless]> unexpected HENCE
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected HENCE Expecting: UNLESS                     :9_1:Hence:
regulative permutation with deontic-temporal> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
regulative permutation with deontic-temporal> MATCH (COK): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
regulative permutation with deontic-temporal> VALUE: (RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []},[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

****** \ regulative permutation with deontic-temporal has returned RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []} :9_1:Hence:
permutationsReg> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
permutationsReg> MATCH (COK): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
permutationsReg> VALUE: (RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []},[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

***** \ permutationsReg has returned RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []} :9_1:Hence:
***** / pHenceLest-Hence                                                                                            :9_1:Hence:
****** / someIndentation                                                                                            :9_2:GoDeeper:
******* / myindented-GoDeeper                                                                                      :9_2:GoDeeper:
myindented-GoDeeper> IN: ( "Notification" ) LEST ( ( "the PDPC" ( <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******* \ myindented-GoDeeper has returned GoDeeper                                                                 :9_2:Other "Noti:
******* / manyIndentation/leaf?                                                                                     :9_2:Other "Noti:
******** / pRegRule                                                                                                :9_2:Other "Noti:
********* / pRuleLabel                                                                                            :9_2:Other "Noti:
********** / $>|                                                                                                 :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting §

********** \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: §                                     :9_2:Other "Noti:
pRuleLabel> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=64:
pRuleLabel> unexpected "Notification"
pRuleLabel> expecting §

********* \ !Unconsumed Error: pRuleLabel: Unexpected "Notification" Expecting: §                                :9_2:Other "Noti:
********* / pRegRuleSugary                                                                                        :9_2:Other "Noti:
********** / someDeep                                                                                            :9_2:Other "Noti:
*********** / someDeep first part calls base directly                                                           :9_2:Other "Noti:
someDeep first part calls base directly> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep first part calls base directly> MATCH (COK): "Notification"
someDeep first part calls base directly> VALUE: ("Notification",[])

*********** \ someDeep first part calls base directly has returned "Notification"                                :10_2:UnDeeper:
*********** / someDeep second part recurses with someIndentation                                                 :10_2:UnDeeper:
************ / someIndentation                                                                                  :10_2:UnDeeper:
************* / myindented-GoDeeper                                                                            :10_2:UnDeeper:
myindented-GoDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=65:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: (                              :10_2:UnDeeper:
someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=65:
someIndentation> unexpected )
someIndentation> expecting (

************ \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (                                    :10_2:UnDeeper:
someDeep second part recurses with someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=65:
someDeep second part recurses with someIndentation> unexpected )
someDeep second part recurses with someIndentation> expecting (

*********** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected ) Expecting: (   :10_2:UnDeeper:
*********** > someDeep no luck, returning []                                                                     :10_2:UnDeeper:
someDeep> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep> MATCH (COK): "Notification"
someDeep> VALUE: (["Notification"],[])

********** \ someDeep has returned ["Notification"]                                                               :10_2:UnDeeper:
********** / someIndentation                                                                                      :10_2:UnDeeper:
*********** / myindented-GoDeeper                                                                                :10_2:UnDeeper:
myindented-GoDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=65:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

*********** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: (                                  :10_2:UnDeeper:
someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=65:
someIndentation> unexpected )
someIndentation> expecting (

********** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (                                        :10_2:UnDeeper:
pRegRuleSugary> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRegRuleSugary> MATCH (CERR): "Notification"
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=65:
pRegRuleSugary> unexpected )
pRegRuleSugary> expecting (

********* \ !Consumed Error: pRegRuleSugary: Unexpected ) Expecting: ( (                                           :10_2:UnDeeper:
********* / pRegRuleNormal                                                                                        :9_2:Other "Noti:
********** / permutationsReg                                                                                     :9_2:Other "Noti:
*********** / regulative permutation with deontic-temporal                                                      :9_2:Other "Noti:
************ / WHERE                                                                                           :9_2:Other "Noti:
WHERE> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=64:
WHERE> unexpected "Notification"
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected "Notification" Expecting: WHERE                            :9_2:Other "Noti:
************ / preambleParamText:[Having]                                                                      :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: HAVING                           :9_2:Other "Noti:
preambleParamText:[Having]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=64:
preambleParamText:[Having]> unexpected "Notification"
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "Notification" Expecting: HAVING      :9_2:Other "Noti:
************ / preambleParamText:[Given]                                                                       :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: GIVEN                            :9_2:Other "Noti:
preambleParamText:[Given]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=64:
preambleParamText:[Given]> unexpected "Notification"
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "Notification" Expecting: GIVEN        :9_2:Other "Noti:
************ / preambleParamText:[Upon]                                                                        :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: UPON                             :9_2:Other "Noti:
preambleParamText:[Upon]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=64:
preambleParamText:[Upon]> unexpected "Notification"
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "Notification" Expecting: UPON          :9_2:Other "Noti:
************ / preambleBoolStructR [Unless]                                                                    :9_2:Other "Noti:
preambleBoolStructR [Unless]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=64:
preambleBoolStructR [Unless]> unexpected "Notification"
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "Notification" Expecting: UNLESS    :9_2:Other "Noti:
************ / preambleBoolStructR [When,If]                                                                   :9_2:Other "Noti:
preambleBoolStructR [When,If]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=64:
preambleBoolStructR [When,If]> unexpected "Notification"
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "Notification" Expecting: IF WHEN  :9_2:Other "Noti:
************ / pDT                                                                                             :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting MAY, MUST, or SHANT

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: MUST MAY SHANT                   :9_2:Other "Noti:
pDT> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=64:
pDT> unexpected "Notification"
pDT> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDT: Unexpected "Notification" Expecting: MUST MAY SHANT                     :9_2:Other "Noti:
************ / pActor [REvery,RParty,RTokAll]                                                                  :9_2:Other "Noti:
pActor [REvery,RParty,RTokAll]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=64:
pActor [REvery,RParty,RTokAll]> unexpected "Notification"
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected "Notification" Expecting: EVERY PARTY ALL :9_2:Other "Noti:
************ / pDoAction/Do                                                                                    :9_2:Other "Noti:
pDoAction/Do> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=64:
pDoAction/Do> unexpected "Notification"
pDoAction/Do> expecting DO

************ \ !Unconsumed Error: pDoAction/Do: Unexpected "Notification" Expecting: DO                        :9_2:Other "Noti:
regulative permutation with deontic-temporal> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=64:
regulative permutation with deontic-temporal> unexpected "Notification"
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected "Notification" Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :9_2:Other "Noti:
*********** / regulative permutation with deontic-action                                                        :9_2:Other "Noti:
************ / WHERE                                                                                           :9_2:Other "Noti:
WHERE> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=64:
WHERE> unexpected "Notification"
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected "Notification" Expecting: WHERE                            :9_2:Other "Noti:
************ / preambleParamText:[Having]                                                                      :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: HAVING                           :9_2:Other "Noti:
preambleParamText:[Having]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=64:
preambleParamText:[Having]> unexpected "Notification"
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "Notification" Expecting: HAVING      :9_2:Other "Noti:
************ / preambleParamText:[Given]                                                                       :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: GIVEN                            :9_2:Other "Noti:
preambleParamText:[Given]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=64:
preambleParamText:[Given]> unexpected "Notification"
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "Notification" Expecting: GIVEN        :9_2:Other "Noti:
************ / preambleParamText:[Upon]                                                                        :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: UPON                             :9_2:Other "Noti:
preambleParamText:[Upon]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=64:
preambleParamText:[Upon]> unexpected "Notification"
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "Notification" Expecting: UPON          :9_2:Other "Noti:
************ / preambleBoolStructR [Unless]                                                                    :9_2:Other "Noti:
preambleBoolStructR [Unless]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=64:
preambleBoolStructR [Unless]> unexpected "Notification"
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "Notification" Expecting: UNLESS    :9_2:Other "Noti:
************ / preambleBoolStructR [When,If]                                                                   :9_2:Other "Noti:
preambleBoolStructR [When,If]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=64:
preambleBoolStructR [When,If]> unexpected "Notification"
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "Notification" Expecting: IF WHEN  :9_2:Other "Noti:
************ / pTemporal/eventually                                                                            :9_2:Other "Noti:
pTemporal/eventually> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=64:
pTemporal/eventually> unexpected "Notification"
pTemporal/eventually> expecting EVENTUALLY

************ \ !Unconsumed Error: pTemporal/eventually: Unexpected "Notification" Expecting: EVENTUALLY        :9_2:Other "Noti:
************ / pTemporal/specifically                                                                          :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting AFTER, BEFORE, BY, or ON

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: BEFORE AFTER BY ON               :9_2:Other "Noti:
pTemporal/specifically> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=64:
pTemporal/specifically> unexpected "Notification"
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************ \ !Unconsumed Error: pTemporal/specifically: Unexpected "Notification" Expecting: BEFORE AFTER BY ON :9_2:Other "Noti:
************ / pTemporal/vaguely                                                                               :9_2:Other "Noti:
pTemporal/vaguely> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pTemporal/vaguely> MATCH (COK): "Notification"
pTemporal/vaguely> VALUE: (Just (TemporalConstraint TVague (Just 0) "Notification"),[])

************ \ pTemporal/vaguely has returned Just (TemporalConstraint TVague (Just 0) "Notification")          :10_2:UnDeeper:
************ / WHERE                                                                                            :10_2:UnDeeper:
WHERE> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=65:
WHERE> unexpected )
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected ) Expecting: WHERE                                          :10_2:UnDeeper:
************ / preambleParamText:[Having]                                                                       :10_2:UnDeeper:
************* / $>|                                                                                            :10_2:UnDeeper:
$>|> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=65:
$>|> unexpected )
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: HAVING                                         :10_2:UnDeeper:
preambleParamText:[Having]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=65:
preambleParamText:[Having]> unexpected )
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ) Expecting: HAVING                    :10_2:UnDeeper:
************ / preambleParamText:[Given]                                                                        :10_2:UnDeeper:
************* / $>|                                                                                            :10_2:UnDeeper:
$>|> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=65:
$>|> unexpected )
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: GIVEN                                          :10_2:UnDeeper:
preambleParamText:[Given]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=65:
preambleParamText:[Given]> unexpected )
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ) Expecting: GIVEN                      :10_2:UnDeeper:
************ / preambleParamText:[Upon]                                                                         :10_2:UnDeeper:
************* / $>|                                                                                            :10_2:UnDeeper:
$>|> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=65:
$>|> unexpected )
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: UPON                                           :10_2:UnDeeper:
preambleParamText:[Upon]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=65:
preambleParamText:[Upon]> unexpected )
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ) Expecting: UPON                        :10_2:UnDeeper:
************ / preambleBoolStructR [Unless]                                                                     :10_2:UnDeeper:
preambleBoolStructR [Unless]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=65:
preambleBoolStructR [Unless]> unexpected )
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ) Expecting: UNLESS                  :10_2:UnDeeper:
************ / preambleBoolStructR [When,If]                                                                    :10_2:UnDeeper:
preambleBoolStructR [When,If]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=65:
preambleBoolStructR [When,If]> unexpected )
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ) Expecting: IF WHEN                :10_2:UnDeeper:
************ / pActor [REvery,RParty,RTokAll]                                                                   :10_2:UnDeeper:
pActor [REvery,RParty,RTokAll]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=65:
pActor [REvery,RParty,RTokAll]> unexpected )
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ) Expecting: EVERY PARTY ALL       :10_2:UnDeeper:
************ / pDA                                                                                              :10_2:UnDeeper:
pDA> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=65:
pDA> unexpected )
pDA> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDA: Unexpected ) Expecting: MUST MAY SHANT                                   :10_2:UnDeeper:
regulative permutation with deontic-action> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
regulative permutation with deontic-action> MATCH (CERR): "Notification"
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=65:
regulative permutation with deontic-action> unexpected )
regulative permutation with deontic-action> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Consumed Error: regulative permutation with deontic-action: Unexpected ) Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_2:UnDeeper:
permutationsReg> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=65:
permutationsReg> unexpected )
permutationsReg> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********** \ !Unconsumed Error: permutationsReg: Unexpected ) Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :9_2:Other "Noti:
pRegRuleNormal> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=65:
pRegRuleNormal> unexpected )
pRegRuleNormal> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********* \ !Unconsumed Error: pRegRuleNormal: Unexpected ) Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :9_2:Other "Noti:
pRegRule> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=65:
pRegRule> unexpected )
pRegRule> expecting (, ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, WHERE, or §

******** \ !Unconsumed Error: pRegRule: Unexpected ) Expecting: § GIVEN HAVING UPON WHERE ( ( EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :9_2:Other "Noti:
******** / someDeep                                                                                                :9_2:Other "Noti:
********* / someDeep first part calls base directly                                                               :9_2:Other "Noti:
someDeep first part calls base directly> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep first part calls base directly> MATCH (COK): "Notification"
someDeep first part calls base directly> VALUE: ("Notification",[])

********* \ someDeep first part calls base directly has returned "Notification"                                    :10_2:UnDeeper:
********* / someDeep second part recurses with someIndentation                                                     :10_2:UnDeeper:
********** / someIndentation                                                                                      :10_2:UnDeeper:
*********** / myindented-GoDeeper                                                                                :10_2:UnDeeper:
myindented-GoDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=65:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

*********** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: (                                  :10_2:UnDeeper:
someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=65:
someIndentation> unexpected )
someIndentation> expecting (

********** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (                                        :10_2:UnDeeper:
someDeep second part recurses with someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=65:
someDeep second part recurses with someIndentation> unexpected )
someDeep second part recurses with someIndentation> expecting (

********* \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected ) Expecting: (       :10_2:UnDeeper:
********* > someDeep no luck, returning []                                                                         :10_2:UnDeeper:
someDeep> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep> MATCH (COK): "Notification"
someDeep> VALUE: (["Notification"],[])

******** \ someDeep has returned ["Notification"]                                                                   :10_2:UnDeeper:
manyIndentation/leaf?> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
manyIndentation/leaf?> MATCH (COK): "Notification"
manyIndentation/leaf?> VALUE: (RuleAlias ["Notification"],[])

******* \ manyIndentation/leaf? has returned RuleAlias ["Notification"]                                              :10_2:UnDeeper:
******* / myindented-UnDeeper                                                                                        :10_2:UnDeeper:
myindented-UnDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

******* \ myindented-UnDeeper has returned UnDeeper                                                               :10_1:Lest:
someIndentation> IN: ( "Notification" ) LEST ( ( "the PDPC" ( <…>
someIndentation> MATCH (COK): ( "Notification" )
someIndentation> VALUE: (RuleAlias ["Notification"],[])

****** \ someIndentation has returned RuleAlias ["Notification"]                                                   :10_1:Lest:
pHenceLest-Hence> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pHenceLest-Hence> MATCH (COK): HENCE ( "Notification" )
pHenceLest-Hence> VALUE: (RuleAlias ["Notification"],[])

***** \ pHenceLest-Hence has returned RuleAlias ["Notification"]                                                    :10_1:Lest:
***** / pHenceLest-Lest                                                                                             :10_1:Lest:
****** / someIndentation                                                                                            :10_2:GoDeeper:
******* / myindented-GoDeeper                                                                                      :10_2:GoDeeper:
myindented-GoDeeper> IN: ( ( "the PDPC" ( MAY DO ( ( "demand" ( " <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******* \ myindented-GoDeeper has returned GoDeeper                                                                  :10_3:GoDeeper:
******* / manyIndentation/leaf?                                                                                      :10_3:GoDeeper:
******** / pRegRule                                                                                                 :10_3:GoDeeper:
********* / pRuleLabel                                                                                             :10_3:GoDeeper:
********** / $>|                                                                                                  :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting §

********** \ !Unconsumed Error: $>|: Unexpected ( Expecting: §                                                   :10_3:GoDeeper:
pRuleLabel> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=68:
pRuleLabel> unexpected (
pRuleLabel> expecting §

********* \ !Unconsumed Error: pRuleLabel: Unexpected ( Expecting: §                                              :10_3:GoDeeper:
********* / pRegRuleSugary                                                                                         :10_3:GoDeeper:
********** / someDeep                                                                                             :10_3:GoDeeper:
*********** / someDeep first part calls base directly                                                            :10_3:GoDeeper:
someDeep first part calls base directly> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=68:
someDeep first part calls base directly> unexpected (
someDeep first part calls base directly> expecting Other text

*********** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected ( Expecting: Other text     :10_3:GoDeeper:
someDeep> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=68:
someDeep> unexpected (
someDeep> expecting Other text

********** \ !Unconsumed Error: someDeep: Unexpected ( Expecting: Other text                                      :10_3:GoDeeper:
pRegRuleSugary> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRegRuleSugary> MATCH (EERR): <EMPTY>
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=68:
pRegRuleSugary> unexpected (
pRegRuleSugary> expecting Other text

********* \ !Unconsumed Error: pRegRuleSugary: Unexpected ( Expecting: Other text                                  :10_3:GoDeeper:
********* / pRegRuleNormal                                                                                         :10_3:GoDeeper:
********** / permutationsReg                                                                                      :10_3:GoDeeper:
*********** / regulative permutation with deontic-temporal                                                       :10_3:GoDeeper:
************ / WHERE                                                                                            :10_3:GoDeeper:
WHERE> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=68:
WHERE> unexpected (
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                                          :10_3:GoDeeper:
************ / preambleParamText:[Having]                                                                       :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                                         :10_3:GoDeeper:
preambleParamText:[Having]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=68:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING                    :10_3:GoDeeper:
************ / preambleParamText:[Given]                                                                        :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                                          :10_3:GoDeeper:
preambleParamText:[Given]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=68:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN                      :10_3:GoDeeper:
************ / preambleParamText:[Upon]                                                                         :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                                           :10_3:GoDeeper:
preambleParamText:[Upon]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=68:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON                        :10_3:GoDeeper:
************ / preambleBoolStructR [Unless]                                                                     :10_3:GoDeeper:
preambleBoolStructR [Unless]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=68:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS                  :10_3:GoDeeper:
************ / preambleBoolStructR [When,If]                                                                    :10_3:GoDeeper:
preambleBoolStructR [When,If]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=68:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN                :10_3:GoDeeper:
************ / pDT                                                                                              :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting MAY, MUST, or SHANT

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: MUST MAY SHANT                                 :10_3:GoDeeper:
pDT> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=68:
pDT> unexpected (
pDT> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDT: Unexpected ( Expecting: MUST MAY SHANT                                   :10_3:GoDeeper:
************ / pActor [REvery,RParty,RTokAll]                                                                   :10_3:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=68:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL       :10_3:GoDeeper:
************ / pDoAction/Do                                                                                     :10_3:GoDeeper:
pDoAction/Do> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=68:
pDoAction/Do> unexpected (
pDoAction/Do> expecting DO

************ \ !Unconsumed Error: pDoAction/Do: Unexpected ( Expecting: DO                                      :10_3:GoDeeper:
regulative permutation with deontic-temporal> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=68:
regulative permutation with deontic-temporal> unexpected (
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected ( Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :10_3:GoDeeper:
*********** / regulative permutation with deontic-action                                                         :10_3:GoDeeper:
************ / WHERE                                                                                            :10_3:GoDeeper:
WHERE> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=68:
WHERE> unexpected (
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                                          :10_3:GoDeeper:
************ / preambleParamText:[Having]                                                                       :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                                         :10_3:GoDeeper:
preambleParamText:[Having]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=68:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING                    :10_3:GoDeeper:
************ / preambleParamText:[Given]                                                                        :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                                          :10_3:GoDeeper:
preambleParamText:[Given]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=68:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN                      :10_3:GoDeeper:
************ / preambleParamText:[Upon]                                                                         :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                                           :10_3:GoDeeper:
preambleParamText:[Upon]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=68:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON                        :10_3:GoDeeper:
************ / preambleBoolStructR [Unless]                                                                     :10_3:GoDeeper:
preambleBoolStructR [Unless]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=68:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS                  :10_3:GoDeeper:
************ / preambleBoolStructR [When,If]                                                                    :10_3:GoDeeper:
preambleBoolStructR [When,If]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=68:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN                :10_3:GoDeeper:
************ / pTemporal/eventually                                                                             :10_3:GoDeeper:
pTemporal/eventually> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=68:
pTemporal/eventually> unexpected (
pTemporal/eventually> expecting EVENTUALLY

************ \ !Unconsumed Error: pTemporal/eventually: Unexpected ( Expecting: EVENTUALLY                      :10_3:GoDeeper:
************ / pTemporal/specifically                                                                           :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting AFTER, BEFORE, BY, or ON

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: BEFORE AFTER BY ON                             :10_3:GoDeeper:
pTemporal/specifically> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=68:
pTemporal/specifically> unexpected (
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************ \ !Unconsumed Error: pTemporal/specifically: Unexpected ( Expecting: BEFORE AFTER BY ON            :10_3:GoDeeper:
************ / pTemporal/vaguely                                                                                :10_3:GoDeeper:
pTemporal/vaguely> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=68:
pTemporal/vaguely> unexpected (
pTemporal/vaguely> expecting Other text

************ \ !Unconsumed Error: pTemporal/vaguely: Unexpected ( Expecting: Other text                         :10_3:GoDeeper:
************ / pActor [REvery,RParty,RTokAll]                                                                   :10_3:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=68:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL       :10_3:GoDeeper:
************ / pDA                                                                                              :10_3:GoDeeper:
pDA> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=68:
pDA> unexpected (
pDA> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDA: Unexpected ( Expecting: MUST MAY SHANT                                   :10_3:GoDeeper:
regulative permutation with deontic-action> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
regulative permutation with deontic-action> MATCH (EERR): <EMPTY>
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=68:
regulative permutation with deontic-action> unexpected (
regulative permutation with deontic-action> expecting AFTER, ALL, BEFORE, BY, EVENTUALLY, EVERY, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: regulative permutation with deontic-action: Unexpected ( Expecting: BEFORE AFTER BY ON GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT EVENTUALLY UNLESS IF WHEN Other text :10_3:GoDeeper:
permutationsReg> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=68:
permutationsReg> unexpected (
permutationsReg> expecting AFTER, ALL, BEFORE, BY, DO, EVENTUALLY, EVERY, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********** \ !Unconsumed Error: permutationsReg: Unexpected ( Expecting: MUST MAY SHANT BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
pRegRuleNormal> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=68:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting AFTER, ALL, BEFORE, BY, DO, EVENTUALLY, EVERY, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********* \ !Unconsumed Error: pRegRuleNormal: Unexpected ( Expecting: MUST MAY SHANT BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
pRegRule> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=68:
pRegRule> unexpected (
pRegRule> expecting AFTER, ALL, BEFORE, BREACH, BY, DO, EVENTUALLY, EVERY, FULFILLED, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, WHERE, or §

******** \ !Unconsumed Error: pRegRule: Unexpected ( Expecting: MUST MAY SHANT § BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO FULFILLED BREACH EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
******** / someDeep                                                                                                 :10_3:GoDeeper:
********* / someDeep first part calls base directly                                                                :10_3:GoDeeper:
someDeep first part calls base directly> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=68:
someDeep first part calls base directly> unexpected (
someDeep first part calls base directly> expecting Other text

********* \ !Unconsumed Error: someDeep first part calls base directly: Unexpected ( Expecting: Other text         :10_3:GoDeeper:
someDeep> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=68:
someDeep> unexpected (
someDeep> expecting Other text

******** \ !Unconsumed Error: someDeep: Unexpected ( Expecting: Other text                                          :10_3:GoDeeper:
manyIndentation/leaf?> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=68:
manyIndentation/leaf?> unexpected (
manyIndentation/leaf?> expecting AFTER, ALL, BEFORE, BREACH, BY, DO, EVENTUALLY, EVERY, FULFILLED, GIVEN, GOTO, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, WHERE, or §

******* \ !Unconsumed Error: manyIndentation/leaf?: Unexpected ( Expecting: MUST MAY SHANT § BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE GOTO EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO FULFILLED BREACH EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
******* / manyIndentation/deeper; calling someIndentation                                                            :10_3:GoDeeper:
******** / someIndentation                                                                                          :10_3:GoDeeper:
********* / myindented-GoDeeper                                                                                    :10_3:GoDeeper:
myindented-GoDeeper> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********* \ myindented-GoDeeper has returned GoDeeper                                                               :10_3:Other "the:
********* / manyIndentation/leaf?                                                                                   :10_3:Other "the:
********** / pRegRule                                                                                              :10_3:Other "the:
*********** / pRuleLabel                                                                                          :10_3:Other "the:
************ / $>|                                                                                               :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting §

************ \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: §                                       :10_3:Other "the:
pRuleLabel> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=69:
pRuleLabel> unexpected "the PDPC"
pRuleLabel> expecting §

*********** \ !Unconsumed Error: pRuleLabel: Unexpected "the PDPC" Expecting: §                                  :10_3:Other "the:
*********** / pRegRuleSugary                                                                                      :10_3:Other "the:
************ / someDeep                                                                                          :10_3:Other "the:
************* / someDeep first part calls base directly                                                         :10_3:Other "the:
someDeep first part calls base directly> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep first part calls base directly> MATCH (COK): "the PDPC"
someDeep first part calls base directly> VALUE: ("the PDPC",[])

************* \ someDeep first part calls base directly has returned "the PDPC"                                  :10_4:GoDeeper:
************* / someDeep second part recurses with someIndentation                                               :10_4:GoDeeper:
************** / someIndentation                                                                                :10_4:GoDeeper:
*************** / myindented-GoDeeper                                                                          :10_4:GoDeeper:
myindented-GoDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

*************** \ myindented-GoDeeper has returned GoDeeper                                                     :10_4:May:
*************** / manyIndentation/leaf?                                                                         :10_4:May:
**************** / someDeep                                                                                    :10_4:May:
***************** / someDeep first part calls base directly                                                   :10_4:May:
someDeep first part calls base directly> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=71:
someDeep first part calls base directly> unexpected MAY
someDeep first part calls base directly> expecting Other text

***************** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MAY Expecting: Other text :10_4:May:
someDeep> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=71:
someDeep> unexpected MAY
someDeep> expecting Other text

**************** \ !Unconsumed Error: someDeep: Unexpected MAY Expecting: Other text                           :10_4:May:
manyIndentation/leaf?> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=71:
manyIndentation/leaf?> unexpected MAY
manyIndentation/leaf?> expecting Other text

*************** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MAY Expecting: Other text                :10_4:May:
*************** / manyIndentation/deeper; calling someIndentation                                               :10_4:May:
**************** / someIndentation                                                                             :10_4:May:
***************** / myindented-GoDeeper                                                                       :10_4:May:
myindented-GoDeeper> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=71:
myindented-GoDeeper> unexpected MAY
myindented-GoDeeper> expecting (

***************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MAY Expecting: (                       :10_4:May:
someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting (

**************** \ !Unconsumed Error: someIndentation: Unexpected MAY Expecting: (                             :10_4:May:
manyIndentation/deeper; calling someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=71:
manyIndentation/deeper; calling someIndentation> unexpected MAY
manyIndentation/deeper; calling someIndentation> expecting (

*************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MAY Expecting: ( :10_4:May:
someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting ( or Other text

************** \ !Consumed Error: someIndentation: Unexpected MAY Expecting: ( Other text                        :10_4:May:
someDeep second part recurses with someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=71:
someDeep second part recurses with someIndentation> unexpected MAY
someDeep second part recurses with someIndentation> expecting ( or Other text

************* \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MAY Expecting: ( Other text :10_4:GoDeeper:
************* > someDeep no luck, returning []                                                                   :10_4:GoDeeper:
someDeep> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep> MATCH (COK): "the PDPC"
someDeep> VALUE: (["the PDPC"],[])

************ \ someDeep has returned ["the PDPC"]                                                                 :10_4:GoDeeper:
************ / someIndentation                                                                                    :10_4:GoDeeper:
************* / myindented-GoDeeper                                                                              :10_4:GoDeeper:
myindented-GoDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

************* \ myindented-GoDeeper has returned GoDeeper                                                         :10_4:May:
************* / manyIndentation/leaf?                                                                             :10_4:May:
************** / permutationsReg                                                                                 :10_4:May:
*************** / regulative permutation with deontic-temporal                                                  :10_4:May:
**************** / WHERE                                                                                       :10_4:May:
WHERE> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=71:
WHERE> unexpected MAY
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected MAY Expecting: WHERE                                   :10_4:May:
**************** / preambleParamText:[Having]                                                                  :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=71:
$>|> unexpected MAY
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected MAY Expecting: HAVING                                  :10_4:May:
preambleParamText:[Having]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=71:
preambleParamText:[Having]> unexpected MAY
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MAY Expecting: HAVING             :10_4:May:
**************** / preambleParamText:[Given]                                                                   :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=71:
$>|> unexpected MAY
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected MAY Expecting: GIVEN                                   :10_4:May:
preambleParamText:[Given]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=71:
preambleParamText:[Given]> unexpected MAY
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MAY Expecting: GIVEN               :10_4:May:
**************** / preambleParamText:[Upon]                                                                    :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=71:
$>|> unexpected MAY
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected MAY Expecting: UPON                                    :10_4:May:
preambleParamText:[Upon]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=71:
preambleParamText:[Upon]> unexpected MAY
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MAY Expecting: UPON                 :10_4:May:
**************** / preambleBoolStructR [Unless]                                                                :10_4:May:
preambleBoolStructR [Unless]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=71:
preambleBoolStructR [Unless]> unexpected MAY
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MAY Expecting: UNLESS           :10_4:May:
**************** / preambleBoolStructR [When,If]                                                               :10_4:May:
preambleBoolStructR [When,If]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=71:
preambleBoolStructR [When,If]> unexpected MAY
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MAY Expecting: IF WHEN         :10_4:May:
**************** / pDT                                                                                         :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (COK): MAY
$>|> VALUE: (DMay,[])

***************** \ $>| has returned DMay                                                                     :11_4:Do:
***************** / |>| calling $>>                                                                           :11_4:Do:
****************** / |>>/recurse                                                                             :11_4:Do:
|>>/recurse> IN: DO ( ( "demand" ( "an explanation for yo <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=72:
|>>/recurse> unexpected DO
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected DO Expecting: (                              :11_4:Do:
****************** / |>>/base                                                                                :11_4:Do:
******************* / pTemporal/eventually                                                                  :11_4:Do:
pTemporal/eventually> IN: DO ( ( "demand" ( "an explanation for yo <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=72:
pTemporal/eventually> unexpected DO
pTemporal/eventually> expecting EVENTUALLY

******************* \ !Unconsumed Error: pTemporal/eventually: Unexpected DO Expecting: EVENTUALLY          :11_4:Do:
******************* / pTemporal/specifically                                                                :11_4:Do:
******************** / $>|                                                                                 :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting AFTER, BEFORE, BY, or ON

******************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: BEFORE AFTER BY ON                 :11_4:Do:
pTemporal/specifically> IN: DO ( ( "demand" ( "an explanation for yo <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=72:
pTemporal/specifically> unexpected DO
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

******************* \ !Unconsumed Error: pTemporal/specifically: Unexpected DO Expecting: BEFORE AFTER BY ON :11_4:Do:
******************* / pTemporal/vaguely                                                                     :11_4:Do:
pTemporal/vaguely> IN: DO ( ( "demand" ( "an explanation for yo <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=72:
pTemporal/vaguely> unexpected DO
pTemporal/vaguely> expecting Other text

******************* \ !Unconsumed Error: pTemporal/vaguely: Unexpected DO Expecting: Other text             :11_4:Do:
******************* > |>>/base got Nothing                                                                  :11_4:Do:
|>>/base> IN: DO ( ( "demand" ( "an explanation for yo <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************** \ |>>/base has returned (Nothing,0)                                                       :11_4:Do:
|>| calling $>>> IN: DO ( ( "demand" ( "an explanation for yo <…>
|>| calling $>>> MATCH (EOK): <EMPTY>
|>| calling $>>> VALUE: ((Nothing,0),[])

***************** \ |>| calling $>> has returned (Nothing,0)                                                  :11_4:Do:
***************** / undeepers                                                                                 :11_4:Do:
****************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                  :11_4:Do:
****************** > sameLine: success!                                                                      :11_4:Do:
undeepers> IN: DO ( ( "demand" ( "an explanation for yo <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

***************** \ undeepers has returned ()                                                                 :11_4:Do:
pDT> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
pDT> MATCH (COK): MAY
pDT> VALUE: ((DMay,Nothing),[])

**************** \ pDT has returned (DMay,Nothing)                                                             :11_4:Do:
**************** / WHERE                                                                                       :11_4:Do:
WHERE> IN: DO ( ( "demand" ( "an explanation for yo <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=72:
WHERE> unexpected DO
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                                    :11_4:Do:
**************** / preambleParamText:[Having]                                                                  :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                                   :11_4:Do:
preambleParamText:[Having]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=72:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING              :11_4:Do:
**************** / preambleParamText:[Given]                                                                   :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                                    :11_4:Do:
preambleParamText:[Given]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=72:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN                :11_4:Do:
**************** / preambleParamText:[Upon]                                                                    :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                                     :11_4:Do:
preambleParamText:[Upon]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=72:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON                  :11_4:Do:
**************** / preambleBoolStructR [Unless]                                                                :11_4:Do:
preambleBoolStructR [Unless]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=72:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS            :11_4:Do:
**************** / preambleBoolStructR [When,If]                                                               :11_4:Do:
preambleBoolStructR [When,If]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=72:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN          :11_4:Do:
**************** / WHERE                                                                                       :11_4:Do:
WHERE> IN: DO ( ( "demand" ( "an explanation for yo <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=72:
WHERE> unexpected DO
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                                    :11_4:Do:
**************** / preambleParamText:[Having]                                                                  :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                                   :11_4:Do:
preambleParamText:[Having]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=72:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING              :11_4:Do:
**************** / preambleParamText:[Given]                                                                   :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                                    :11_4:Do:
preambleParamText:[Given]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=72:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN                :11_4:Do:
**************** / preambleParamText:[Upon]                                                                    :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                                     :11_4:Do:
preambleParamText:[Upon]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=72:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON                  :11_4:Do:
**************** / preambleBoolStructR [Unless]                                                                :11_4:Do:
preambleBoolStructR [Unless]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=72:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS            :11_4:Do:
**************** / preambleBoolStructR [When,If]                                                               :11_4:Do:
preambleBoolStructR [When,If]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=72:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN          :11_4:Do:
**************** / pDoAction/Do                                                                                :11_4:Do:
pDoAction/Do> IN: DO ( ( "demand" ( "an explanation for yo <…>
pDoAction/Do> MATCH (COK): DO
pDoAction/Do> VALUE: (Do,[])

**************** \ pDoAction/Do has returned Do                                                                 :11_5:GoDeeper:
**************** / pDoAction/pAction                                                                            :11_5:GoDeeper:
***************** / pAction calling dBoolStructP                                                               :11_5:GoDeeper:
****************** / dBoolStructP calling exprP                                                               :11_5:GoDeeper:
******************* / expr pParamText                                                                        :11_5:GoDeeper:
******************** / ppp inner                                                                            :11_5:GoDeeper:
********************* / expression                                                                         :11_5:GoDeeper:
********************** / term p                                                                           :11_5:GoDeeper:
*********************** / term p/1a:label ends directly above next line                                  :11_5:GoDeeper:
************************ / $*|                                                                          :11_5:GoDeeper:
************************* / someSL                                                                     :11_5:GoDeeper:
************************** / pNumAsText                                                               :11_5:GoDeeper:
pNumAsText> IN: ( ( "demand" ( "an explanation for your  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=73:
pNumAsText> unexpected (
pNumAsText> expecting number

************************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number            :11_5:GoDeeper:
someSL> IN: ( ( "demand" ( "an explanation for your  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=73:
someSL> unexpected (
someSL> expecting other text or number

************************* \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number    :11_5:GoDeeper:
$*|> IN: ( ( "demand" ( "an explanation for your  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=73:
$*|> unexpected (
$*|> expecting other text or number

************************ \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number         :11_5:GoDeeper:
term p/1a:label ends directly above next line> IN: ( ( "demand" ( "an explanation for your  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=73:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

*********************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :11_5:GoDeeper:
*********************** / term p/1b:label ends to the left of line below, with EOL                       :11_5:GoDeeper:
************************ / $*|                                                                          :11_5:GoDeeper:
************************* / someSL                                                                     :11_5:GoDeeper:
************************** / pNumAsText                                                               :11_5:GoDeeper:
pNumAsText> IN: ( ( "demand" ( "an explanation for your  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=73:
pNumAsText> unexpected (
pNumAsText> expecting number

************************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number            :11_5:GoDeeper:
someSL> IN: ( ( "demand" ( "an explanation for your  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=73:
someSL> unexpected (
someSL> expecting other text or number

************************* \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number    :11_5:GoDeeper:
$*|> IN: ( ( "demand" ( "an explanation for your  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=73:
$*|> unexpected (
$*|> expecting other text or number

************************ \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number         :11_5:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( ( "demand" ( "an explanation for your  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=73:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

*********************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :11_5:GoDeeper:
*********************** / term p/1c:label ends to the right of line below                                :11_5:GoDeeper:
************************ > |<|                                                                          :11_5:GoDeeper:
************************ > |<* starting                                                                 :11_5:GoDeeper:
************************ / $*|                                                                          :11_5:GoDeeper:
************************* / someSL                                                                     :11_5:GoDeeper:
************************** / pNumAsText                                                               :11_5:GoDeeper:
pNumAsText> IN: ( ( "demand" ( "an explanation for your  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=73:
pNumAsText> unexpected (
pNumAsText> expecting number

************************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number            :11_5:GoDeeper:
someSL> IN: ( ( "demand" ( "an explanation for your  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=73:
someSL> unexpected (
someSL> expecting other text or number

************************* \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number    :11_5:GoDeeper:
$*|> IN: ( ( "demand" ( "an explanation for your  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=73:
$*|> unexpected (
$*|> expecting other text or number

************************ \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number         :11_5:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( ( "demand" ( "an explanation for your  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=73:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

*********************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :11_5:GoDeeper:
*********************** / term p/notLabelTerm                                                            :11_5:GoDeeper:
************************ / term p/2:someIndentation expr p                                              :11_5:GoDeeper:
************************* / someIndentation                                                            :11_5:GoDeeper:
************************** / myindented-GoDeeper                                                      :11_5:GoDeeper:
myindented-GoDeeper> IN: ( ( "demand" ( "an explanation for your  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

************************** \ myindented-GoDeeper has returned GoDeeper                                  :11_6:GoDeeper:
************************** / manyIndentation/leaf?                                                      :11_6:GoDeeper:
*************************** / ppp inner                                                                :11_6:GoDeeper:
**************************** / expression                                                             :11_6:GoDeeper:
***************************** / term p                                                               :11_6:GoDeeper:
****************************** / term p/1a:label ends directly above next line                      :11_6:GoDeeper:
******************************* / $*|                                                              :11_6:GoDeeper:
******************************** / someSL                                                         :11_6:GoDeeper:
********************************* / pNumAsText                                                   :11_6:GoDeeper:
pNumAsText> IN: ( "demand" ( "an explanation for your in <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=74:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number :11_6:GoDeeper:
someSL> IN: ( "demand" ( "an explanation for your in <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=74:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
$*|> IN: ( "demand" ( "an explanation for your in <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=74:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "demand" ( "an explanation for your in <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=74:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
****************************** / term p/1b:label ends to the left of line below, with EOL           :11_6:GoDeeper:
******************************* / $*|                                                              :11_6:GoDeeper:
******************************** / someSL                                                         :11_6:GoDeeper:
********************************* / pNumAsText                                                   :11_6:GoDeeper:
pNumAsText> IN: ( "demand" ( "an explanation for your in <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=74:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number :11_6:GoDeeper:
someSL> IN: ( "demand" ( "an explanation for your in <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=74:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
$*|> IN: ( "demand" ( "an explanation for your in <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=74:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "demand" ( "an explanation for your in <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=74:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
****************************** / term p/1c:label ends to the right of line below                    :11_6:GoDeeper:
******************************* > |<|                                                              :11_6:GoDeeper:
******************************* > |<* starting                                                     :11_6:GoDeeper:
******************************* / $*|                                                              :11_6:GoDeeper:
******************************** / someSL                                                         :11_6:GoDeeper:
********************************* / pNumAsText                                                   :11_6:GoDeeper:
pNumAsText> IN: ( "demand" ( "an explanation for your in <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=74:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number :11_6:GoDeeper:
someSL> IN: ( "demand" ( "an explanation for your in <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=74:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
$*|> IN: ( "demand" ( "an explanation for your in <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=74:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "demand" ( "an explanation for your in <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=74:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
****************************** / term p/notLabelTerm                                                :11_6:GoDeeper:
******************************* / term p/2:someIndentation expr p                                  :11_6:GoDeeper:
******************************** / someIndentation                                                :11_6:GoDeeper:
********************************* / myindented-GoDeeper                                          :11_6:GoDeeper:
myindented-GoDeeper> IN: ( "demand" ( "an explanation for your in <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********************************* \ myindented-GoDeeper has returned GoDeeper                     :11_6:Other "dem:
********************************* / manyIndentation/leaf?                                         :11_6:Other "dem:
********************************** / ppp inner                                                   :11_6:Other "dem:
*********************************** / expression                                                :11_6:Other "dem:
************************************ / term p                                                  :11_6:Other "dem:
************************************* / term p/1a:label ends directly above next line         :11_6:Other "dem:
************************************** / $*|                                                 :11_6:Other "dem:
*************************************** / someSL                                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
*************************************** / pNumAsText                                       :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

*************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (CERR): "demand" ( "an explanation for your inac <…>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting ( or other text or number

************************************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :12_5:UnDeeper:
term p/1a:label ends directly above next line> IN: "demand" ( "an explanation for your inac <…>
term p/1a:label ends directly above next line> MATCH (CERR): "demand" ( "an explanation for your inac <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=78:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

************************************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :12_5:UnDeeper:
************************************* / term p/1b:label ends to the left of line below, with EOL :11_6:Other "dem:
************************************** / $*|                                                 :11_6:Other "dem:
*************************************** / someSL                                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((["demand","an explanation for your inaction"],1),[])

************************************** \ $*| has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
************************************** / matching EOL                                       :12_5:UnDeeper:
matching EOL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=78:
matching EOL> unexpected )
matching EOL> expecting EOL

************************************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL :12_5:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "demand" ( "an explanation for your inac <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "demand" ( "an explanation for your inac <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=78:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

************************************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :12_5:UnDeeper:
************************************* / term p/1c:label ends to the right of line below       :11_6:Other "dem:
************************************** > |<|                                                 :11_6:Other "dem:
************************************** > |<* starting                                        :11_6:Other "dem:
************************************** / $*|                                                 :11_6:Other "dem:
*************************************** / someSL                                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((["demand","an explanation for your inaction"],1),[])

************************************** \ $*| has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
************************************** / |<*/parent                                         :12_5:UnDeeper:
*************************************** > |<*/recurse                                      :12_5:UnDeeper:
*************************************** / ppp inner                                     :12_4:Hence:
**************************************** / expression                                  :12_4:Hence:
***************************************** / term p                                    :12_4:Hence:
****************************************** / term p/1a:label ends directly above next line :12_4:Hence:
******************************************* / $*|                                   :12_4:Hence:
******************************************** / someSL                              :12_4:Hence:
********************************************* / pNumAsText                        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

******************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/1a:label ends directly above next line> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=81:
term p/1a:label ends directly above next line> unexpected HENCE
term p/1a:label ends directly above next line> expecting other text or number

****************************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected HENCE Expecting: other text or number :12_4:Hence:
****************************************** / term p/1b:label ends to the left of line below, with EOL :12_4:Hence:
******************************************* / $*|                                   :12_4:Hence:
******************************************** / someSL                              :12_4:Hence:
********************************************* / pNumAsText                        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

******************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/1b:label ends to the left of line below, with EOL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=81:
term p/1b:label ends to the left of line below, with EOL> unexpected HENCE
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
****************************************** / term p/1c:label ends to the right of line below :12_4:Hence:
******************************************* > |<|                                   :12_4:Hence:
******************************************* > |<* starting                          :12_4:Hence:
******************************************* / $*|                                   :12_4:Hence:
******************************************** / someSL                              :12_4:Hence:
********************************************* / pNumAsText                        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

******************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/1c:label ends to the right of line below> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=81:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting other text or number

****************************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: other text or number :12_4:Hence:
****************************************** / term p/notLabelTerm                     :12_4:Hence:
******************************************* / term p/2:someIndentation expr p       :12_4:Hence:
******************************************** / someIndentation                     :12_4:Hence:
********************************************* / myindented-GoDeeper               :12_4:Hence:
myindented-GoDeeper> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=81:
myindented-GoDeeper> unexpected HENCE
myindented-GoDeeper> expecting (

********************************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected HENCE Expecting: ( :12_4:Hence:
someIndentation> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=81:
someIndentation> unexpected HENCE
someIndentation> expecting (

******************************************** \ !Unconsumed Error: someIndentation: Unexpected HENCE Expecting: ( :12_4:Hence:
term p/2:someIndentation expr p> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=81:
term p/2:someIndentation expr p> unexpected HENCE
term p/2:someIndentation expr p> expecting (

******************************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected HENCE Expecting: ( :12_4:Hence:
******************************************* / term p/3:plain p                      :12_4:Hence:
******************************************** / pParamText                          :12_4:Hence:
********************************************* / pParamText(flat) first line: pKeyValues :12_4:Hence:
********************************************** / pKeyValuesAka                   :12_4:Hence:
*********************************************** / slAKA                         :12_4:Hence:
************************************************ / $*|                         :12_4:Hence:
************************************************* / slAKA base                :12_4:Hence:
************************************************** / slKeyValues             :12_4:Hence:
*************************************************** / $*|                   :12_4:Hence:
**************************************************** / someSL              :12_4:Hence:
***************************************************** / pNumAsText        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

***************************************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

**************************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

*************************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
slKeyValues> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=81:
slKeyValues> unexpected HENCE
slKeyValues> expecting other text or number

************************************************** \ !Unconsumed Error: slKeyValues: Unexpected HENCE Expecting: other text or number :12_4:Hence:
slAKA base> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=81:
slAKA base> unexpected HENCE
slAKA base> expecting other text or number

************************************************* \ !Unconsumed Error: slAKA base: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

************************************************ \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
slAKA> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=81:
slAKA> unexpected HENCE
slAKA> expecting other text or number

*********************************************** \ !Unconsumed Error: slAKA: Unexpected HENCE Expecting: other text or number :12_4:Hence:
pKeyValuesAka> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=81:
pKeyValuesAka> unexpected HENCE
pKeyValuesAka> expecting other text or number

********************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected HENCE Expecting: other text or number :12_4:Hence:
pParamText(flat) first line: pKeyValues> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=81:
pParamText(flat) first line: pKeyValues> unexpected HENCE
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected HENCE Expecting: other text or number :12_4:Hence:
pParamText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=81:
pParamText> unexpected HENCE
pParamText> expecting other text or number

******************************************** \ !Unconsumed Error: pParamText: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/3:plain p> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=81:
term p/3:plain p> unexpected HENCE
term p/3:plain p> expecting other text or number

******************************************* \ !Unconsumed Error: term p/3:plain p: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/notLabelTerm> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=81:
term p/notLabelTerm> unexpected HENCE
term p/notLabelTerm> expecting ( or term

****************************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected HENCE Expecting: ( term :12_4:Hence:
term p> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=81:
term p> unexpected HENCE
term p> expecting (, other text or number, or term

***************************************** \ !Unconsumed Error: term p: Unexpected HENCE Expecting: ( other text or number term :12_4:Hence:
expression> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=81:
expression> unexpected HENCE
expression> expecting expression

**************************************** \ !Unconsumed Error: expression: Unexpected HENCE Expecting: expression :12_4:Hence:
ppp inner> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=81:
ppp inner> unexpected HENCE
ppp inner> expecting expression

*************************************** \ !Unconsumed Error: ppp inner: Unexpected HENCE Expecting: expression :12_4:Hence:
*************************************** / withPrePost                                   :12_4:Hence:
**************************************** > |<* starting                                :12_4:Hence:
**************************************** / $*|                                         :12_4:Hence:
***************************************** / pre part                                  :12_4:Hence:
pre part> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=81:
pre part> unexpected HENCE
pre part> expecting ( or Other text

***************************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting ( or Other text

**************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
withPrePost> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=81:
withPrePost> unexpected HENCE
withPrePost> expecting ( or Other text

*************************************** \ !Unconsumed Error: withPrePost: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
*************************************** / $*|                                           :12_4:Hence:
**************************************** / pre part                                    :12_4:Hence:
pre part> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=81:
pre part> unexpected HENCE
pre part> expecting ( or Other text

**************************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting ( or Other text

*************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
*************************************** / |<*/base                                         :12_5:UnDeeper:
**************************************** / ppp inner                                      :12_5:UnDeeper:
***************************************** / expression                                   :12_5:UnDeeper:
****************************************** / term p                                     :12_5:UnDeeper:
******************************************* / term p/1a:label ends directly above next line :12_5:UnDeeper:
******************************************** / $*|                                    :12_5:UnDeeper:
********************************************* / someSL                               :12_5:UnDeeper:
********************************************** / pNumAsText                         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

********************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

******************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=78:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

******************************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
******************************************* / term p/1b:label ends to the left of line below, with EOL :12_5:UnDeeper:
******************************************** / $*|                                    :12_5:UnDeeper:
********************************************* / someSL                               :12_5:UnDeeper:
********************************************** / pNumAsText                         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

********************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

******************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=78:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

******************************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
******************************************* / term p/1c:label ends to the right of line below :12_5:UnDeeper:
******************************************** > |<|                                    :12_5:UnDeeper:
******************************************** > |<* starting                           :12_5:UnDeeper:
******************************************** / $*|                                    :12_5:UnDeeper:
********************************************* / someSL                               :12_5:UnDeeper:
********************************************** / pNumAsText                         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

********************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

******************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=78:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

******************************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
******************************************* / term p/notLabelTerm                      :12_5:UnDeeper:
******************************************** / term p/2:someIndentation expr p        :12_5:UnDeeper:
********************************************* / someIndentation                      :12_5:UnDeeper:
********************************************** / myindented-GoDeeper                :12_5:UnDeeper:
myindented-GoDeeper> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=78:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

********************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :12_5:UnDeeper:
someIndentation> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=78:
someIndentation> unexpected )
someIndentation> expecting (

********************************************* \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: ( :12_5:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=78:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

******************************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :12_5:UnDeeper:
******************************************** / term p/3:plain p                       :12_5:UnDeeper:
********************************************* / pParamText                           :12_5:UnDeeper:
********************************************** / pParamText(flat) first line: pKeyValues :12_5:UnDeeper:
*********************************************** / pKeyValuesAka                    :12_5:UnDeeper:
************************************************ / slAKA                          :12_5:UnDeeper:
************************************************* / $*|                          :12_5:UnDeeper:
************************************************** / slAKA base                 :12_5:UnDeeper:
*************************************************** / slKeyValues              :12_5:UnDeeper:
**************************************************** / $*|                    :12_5:UnDeeper:
***************************************************** / someSL               :12_5:UnDeeper:
****************************************************** / pNumAsText         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

****************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

***************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

**************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
slKeyValues> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=78:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

*************************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
slAKA base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=78:
slAKA base> unexpected )
slAKA base> expecting other text or number

************************************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
slAKA> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=78:
slAKA> unexpected )
slAKA> expecting other text or number

************************************************ \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
pKeyValuesAka> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=78:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

*********************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=78:
pParamText(flat) first line: pKeyValues> unexpected )
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
pParamText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=78:
pParamText> unexpected )
pParamText> expecting other text or number

********************************************* \ !Unconsumed Error: pParamText: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/3:plain p> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=78:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

******************************************** \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/notLabelTerm> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=78:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

******************************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :12_5:UnDeeper:
term p> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=78:
term p> unexpected )
term p> expecting (, other text or number, or term

****************************************** \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :12_5:UnDeeper:
expression> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=78:
expression> unexpected )
expression> expecting expression

***************************************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression :12_5:UnDeeper:
ppp inner> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=78:
ppp inner> unexpected )
ppp inner> expecting expression

**************************************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression :12_5:UnDeeper:
**************************************** / withPrePost                                    :12_5:UnDeeper:
***************************************** > |<* starting                                 :12_5:UnDeeper:
***************************************** / $*|                                          :12_5:UnDeeper:
****************************************** / pre part                                   :12_5:UnDeeper:
pre part> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=78:
pre part> unexpected )
pre part> expecting ( or Other text

****************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting ( or Other text

***************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
withPrePost> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=78:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

**************************************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
**************************************** / $*|                                            :12_5:UnDeeper:
***************************************** / pre part                                     :12_5:UnDeeper:
pre part> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=78:
pre part> unexpected )
pre part> expecting ( or Other text

***************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting ( or Other text

**************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
|<*/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=78:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

*************************************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :12_5:UnDeeper:
|<*/parent> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=81:
|<*/parent> unexpected HENCE
|<*/parent> expecting (, ), Other text, or expression

************************************** \ !Unconsumed Error: |<*/parent: Unexpected HENCE Expecting: ( ( ) Other text expression :12_5:UnDeeper:
term p/1c:label ends to the right of line below> IN: "demand" ( "an explanation for your inac <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "demand" ( "an explanation for your inac <…>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=81:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

************************************* \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: ( ( ( ) Other text expression :12_5:UnDeeper:
************************************* / term p/notLabelTerm                                   :11_6:Other "dem:
************************************** / term p/2:someIndentation expr p                     :11_6:Other "dem:
*************************************** / someIndentation                                   :11_6:Other "dem:
**************************************** / myindented-GoDeeper                             :11_6:Other "dem:
myindented-GoDeeper> IN: "demand" ( "an explanation for your inac <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=75:
myindented-GoDeeper> unexpected "demand"
myindented-GoDeeper> expecting (

**************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "demand" Expecting: ( :11_6:Other "dem:
someIndentation> IN: "demand" ( "an explanation for your inac <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=75:
someIndentation> unexpected "demand"
someIndentation> expecting (

*************************************** \ !Unconsumed Error: someIndentation: Unexpected "demand" Expecting: ( :11_6:Other "dem:
term p/2:someIndentation expr p> IN: "demand" ( "an explanation for your inac <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=75:
term p/2:someIndentation expr p> unexpected "demand"
term p/2:someIndentation expr p> expecting (

************************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "demand" Expecting: ( :11_6:Other "dem:
************************************** / term p/3:plain p                                    :11_6:Other "dem:
*************************************** / pParamText                                        :11_6:Other "dem:
**************************************** / pParamText(flat) first line: pKeyValues         :11_6:Other "dem:
***************************************** / pKeyValuesAka                                 :11_6:Other "dem:
****************************************** / slAKA                                       :11_6:Other "dem:
******************************************* / $*|                                       :11_6:Other "dem:
******************************************** / slAKA base                              :11_6:Other "dem:
********************************************* / slKeyValues                           :11_6:Other "dem:
********************************************** / $*|                                 :11_6:Other "dem:
*********************************************** / someSL                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*********************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((["demand","an explanation for your inaction"],1),[])

********************************************** \ $*| has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
********************************************** / |>>/recurse                        :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
********************************************** / |>>/base                           :12_5:UnDeeper:
*********************************************** / |?| optional something           :12_5:UnDeeper:
************************************************ / |>>/recurse                    :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************************************ \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
************************************************ / |>>/base                       :12_5:UnDeeper:
************************************************* / slTypeSig                    :12_5:UnDeeper:
************************************************** / $>|                        :12_5:UnDeeper:
$>|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=78:
$>|> unexpected )
$>|> expecting :: or IS

************************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS :: :12_5:UnDeeper:
slTypeSig> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=78:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

************************************************* \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS :: :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=78:
|>>/base> unexpected )
|>>/base> expecting :: or IS

************************************************ \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS :: :12_5:UnDeeper:
|?| optional something> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

*********************************************** \ |?| optional something has returned (Nothing,0) :12_5:UnDeeper:
*********************************************** > |>>/base got Nothing             :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************************************** \ |>>/base has returned (Nothing,0)  :12_5:UnDeeper:
slKeyValues> IN: "demand" ( "an explanation for your inac <…>
slKeyValues> MATCH (COK): "demand" ( "an explanation for your inac <…>
slKeyValues> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

********************************************* \ slKeyValues has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
slAKA base> IN: "demand" ( "an explanation for your inac <…>
slAKA base> MATCH (COK): "demand" ( "an explanation for your inac <…>
slAKA base> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

******************************************** \ slAKA base has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

******************************************* \ $*| has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
******************************************* / |>>/recurse                              :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
******************************************* / |>>/base                                 :12_5:UnDeeper:
******************************************** / slAKA optional akapart                 :12_5:UnDeeper:
********************************************* / |?| optional something               :12_5:UnDeeper:
********************************************** / |>>/recurse                        :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
********************************************** / |>>/base                           :12_5:UnDeeper:
*********************************************** / PAKA/akapart                     :12_5:UnDeeper:
************************************************ / $>|                            :12_5:UnDeeper:
************************************************* / Aka Token                    :12_5:UnDeeper:
Aka Token> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=78:
Aka Token> unexpected )
Aka Token> expecting AKA

************************************************* \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :12_5:UnDeeper:
$>|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=78:
$>|> unexpected )
$>|> expecting AKA

************************************************ \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA :12_5:UnDeeper:
PAKA/akapart> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=78:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

*********************************************** \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=78:
|>>/base> unexpected )
|>>/base> expecting AKA

********************************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA :12_5:UnDeeper:
|?| optional something> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************************* \ |?| optional something has returned (Nothing,0) :12_5:UnDeeper:
slAKA optional akapart> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

******************************************** \ slAKA optional akapart has returned (Nothing,0) :12_5:UnDeeper:
******************************************** > |>>/base got Nothing                   :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************************* \ |>>/base has returned (Nothing,0)        :12_5:UnDeeper:
******************************************* / |>>/recurse                              :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
******************************************* / |>>/base                                 :12_5:UnDeeper:
******************************************** / slAKA optional typically               :12_5:UnDeeper:
********************************************* / |?| optional something               :12_5:UnDeeper:
********************************************** / |>>/recurse                        :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
********************************************** / |>>/base                           :12_5:UnDeeper:
*********************************************** / typically                        :12_5:UnDeeper:
************************************************ / $>|                            :12_5:UnDeeper:
$>|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=78:
$>|> unexpected )
$>|> expecting TYPICALLY

************************************************ \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :12_5:UnDeeper:
typically> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=78:
typically> unexpected )
typically> expecting TYPICALLY

*********************************************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=78:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

********************************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :12_5:UnDeeper:
|?| optional something> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************************* \ |?| optional something has returned (Nothing,0) :12_5:UnDeeper:
slAKA optional typically> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

******************************************** \ slAKA optional typically has returned (Nothing,0) :12_5:UnDeeper:
******************************************** > |>>/base got Nothing                   :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************************* \ |>>/base has returned (Nothing,0)        :12_5:UnDeeper:
******************************************* > slAKA: proceeding after base and entityalias are retrieved ... :12_5:UnDeeper:
******************************************* > pAKA: entityalias = Nothing              :12_5:UnDeeper:
slAKA> IN: "demand" ( "an explanation for your inac <…>
slAKA> MATCH (COK): "demand" ( "an explanation for your inac <…>
slAKA> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

****************************************** \ slAKA has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
****************************************** / undeepers                                  :12_5:UnDeeper:
******************************************* > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers :12_5:UnDeeper:
******************************************* > sameLine: success!                         :12_6:UnDeeper:
undeepers> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

****************************************** \ undeepers has returned ()                    :12_6:UnDeeper:
pKeyValuesAka> IN: "demand" ( "an explanation for your inac <…>
pKeyValuesAka> MATCH (COK): "demand" ( "an explanation for your inac <…>
pKeyValuesAka> VALUE: (("demand" :| ["an explanation for your inaction"],Nothing),[])

***************************************** \ pKeyValuesAka has returned ("demand" :| ["an explanation for your inaction"],Nothing) :12_6:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "demand" ( "an explanation for your inac <…>
pParamText(flat) first line: pKeyValues> MATCH (COK): "demand" ( "an explanation for your inac <…>
pParamText(flat) first line: pKeyValues> VALUE: (("demand" :| ["an explanation for your inaction"],Nothing),[])

**************************************** \ pParamText(flat) first line: pKeyValues has returned ("demand" :| ["an explanation for your inaction"],Nothing) :12_6:UnDeeper:
**************************************** / pParamText(flat) subsequent lines: sameMany pKeyValues :12_6:UnDeeper:
***************************************** / manyIndentation/leaf?                          :12_6:UnDeeper:
****************************************** / sameMany                                     :12_6:UnDeeper:
******************************************* / pKeyValuesAka                              :12_6:UnDeeper:
******************************************** / slAKA                                    :12_6:UnDeeper:
********************************************* / $*|                                    :12_6:UnDeeper:
********************************************** / slAKA base                           :12_6:UnDeeper:
*********************************************** / slKeyValues                        :12_6:UnDeeper:
************************************************ / $*|                              :12_6:UnDeeper:
************************************************* / someSL                         :12_6:UnDeeper:
************************************************** / pNumAsText                   :12_6:UnDeeper:
pNumAsText> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=79:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_6:UnDeeper:
someSL> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=79:
someSL> unexpected )
someSL> expecting other text or number

************************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
$*|> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=79:
$*|> unexpected )
$*|> expecting other text or number

************************************************ \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
slKeyValues> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=79:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

*********************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
slAKA base> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=79:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
$*|> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=79:
$*|> unexpected )
$*|> expecting other text or number

********************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
slAKA> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=79:
slAKA> unexpected )
slAKA> expecting other text or number

******************************************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
pKeyValuesAka> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=79:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

******************************************* \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
sameMany> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

****************************************** \ sameMany has returned []                     :12_6:UnDeeper:
manyIndentation/leaf?> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

***************************************** \ manyIndentation/leaf? has returned []          :12_6:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

**************************************** \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned [] :12_6:UnDeeper:
pParamText> IN: "demand" ( "an explanation for your inac <…>
pParamText> MATCH (COK): "demand" ( "an explanation for your inac <…>
pParamText> VALUE: (("demand" :| ["an explanation for your inaction"],Nothing) :| [],[])

*************************************** \ pParamText has returned ("demand" :| ["an explanation for your inaction"],Nothing) :| [] :12_6:UnDeeper:
term p/3:plain p> IN: "demand" ( "an explanation for your inac <…>
term p/3:plain p> MATCH (COK): "demand" ( "an explanation for your inac <…>
term p/3:plain p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************************** \ term p/3:plain p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
term p/notLabelTerm> IN: "demand" ( "an explanation for your inac <…>
term p/notLabelTerm> MATCH (COK): "demand" ( "an explanation for your inac <…>
term p/notLabelTerm> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************************* \ term p/notLabelTerm has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
term p> IN: "demand" ( "an explanation for your inac <…>
term p> MATCH (COK): "demand" ( "an explanation for your inac <…>
term p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************************ \ term p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
************************************ / binary(Or)                                               :12_6:UnDeeper:
binary(Or)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=79:
binary(Or)> unexpected )
binary(Or)> expecting OR

************************************ \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :12_6:UnDeeper:
************************************ / binary(And)                                              :12_6:UnDeeper:
binary(And)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=79:
binary(And)> unexpected )
binary(And)> expecting AND

************************************ \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :12_6:UnDeeper:
************************************ / binary(SetLess)                                          :12_6:UnDeeper:
binary(SetLess)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=79:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

************************************ \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :12_6:UnDeeper:
************************************ / binary(SetPlus)                                          :12_6:UnDeeper:
binary(SetPlus)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=79:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

************************************ \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :12_6:UnDeeper:
expression> IN: "demand" ( "an explanation for your inac <…>
expression> MATCH (COK): "demand" ( "an explanation for your inac <…>
expression> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

*********************************** \ expression has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
ppp inner> IN: "demand" ( "an explanation for your inac <…>
ppp inner> MATCH (COK): "demand" ( "an explanation for your inac <…>
ppp inner> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************************** \ ppp inner has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
manyIndentation/leaf?> IN: "demand" ( "an explanation for your inac <…>
manyIndentation/leaf?> MATCH (COK): "demand" ( "an explanation for your inac <…>
manyIndentation/leaf?> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************************* \ manyIndentation/leaf? has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
********************************* / myindented-UnDeeper                                            :12_6:UnDeeper:
myindented-UnDeeper> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

********************************* \ myindented-UnDeeper has returned UnDeeper                        :12_7:UnDeeper:
someIndentation> IN: ( "demand" ( "an explanation for your in <…>
someIndentation> MATCH (COK): ( "demand" ( "an explanation for your in <…>
someIndentation> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************************** \ someIndentation has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
term p/2:someIndentation expr p> IN: ( "demand" ( "an explanation for your in <…>
term p/2:someIndentation expr p> MATCH (COK): ( "demand" ( "an explanation for your in <…>
term p/2:someIndentation expr p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************************* \ term p/2:someIndentation expr p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
term p/notLabelTerm> IN: ( "demand" ( "an explanation for your in <…>
term p/notLabelTerm> MATCH (COK): ( "demand" ( "an explanation for your in <…>
term p/notLabelTerm> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

****************************** \ term p/notLabelTerm has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
term p> IN: ( "demand" ( "an explanation for your in <…>
term p> MATCH (COK): ( "demand" ( "an explanation for your in <…>
term p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

***************************** \ term p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
***************************** / binary(Or)                                                               :12_7:UnDeeper:
binary(Or)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=80:
binary(Or)> unexpected )
binary(Or)> expecting OR

***************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                :12_7:UnDeeper:
***************************** / binary(And)                                                              :12_7:UnDeeper:
binary(And)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=80:
binary(And)> unexpected )
binary(And)> expecting AND

***************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND              :12_7:UnDeeper:
***************************** / binary(SetLess)                                                          :12_7:UnDeeper:
binary(SetLess)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=80:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

***************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS         :12_7:UnDeeper:
***************************** / binary(SetPlus)                                                          :12_7:UnDeeper:
binary(SetPlus)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=80:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

***************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS         :12_7:UnDeeper:
expression> IN: ( "demand" ( "an explanation for your in <…>
expression> MATCH (COK): ( "demand" ( "an explanation for your in <…>
expression> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

**************************** \ expression has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
ppp inner> IN: ( "demand" ( "an explanation for your in <…>
ppp inner> MATCH (COK): ( "demand" ( "an explanation for your in <…>
ppp inner> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

*************************** \ ppp inner has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
manyIndentation/leaf?> IN: ( "demand" ( "an explanation for your in <…>
manyIndentation/leaf?> MATCH (COK): ( "demand" ( "an explanation for your in <…>
manyIndentation/leaf?> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************** \ manyIndentation/leaf? has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
************************** / myindented-UnDeeper                                                            :12_7:UnDeeper:
myindented-UnDeeper> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

************************** \ myindented-UnDeeper has returned UnDeeper                               :12_4:Hence:
someIndentation> IN: ( ( "demand" ( "an explanation for your  <…>
someIndentation> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
someIndentation> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************* \ someIndentation has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
term p/2:someIndentation expr p> IN: ( ( "demand" ( "an explanation for your  <…>
term p/2:someIndentation expr p> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
term p/2:someIndentation expr p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************ \ term p/2:someIndentation expr p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
term p/notLabelTerm> IN: ( ( "demand" ( "an explanation for your  <…>
term p/notLabelTerm> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
term p/notLabelTerm> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

*********************** \ term p/notLabelTerm has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
term p> IN: ( ( "demand" ( "an explanation for your  <…>
term p> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
term p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************** \ term p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
********************** / binary(Or)                                                                      :12_4:Hence:
binary(Or)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=81:
binary(Or)> unexpected HENCE
binary(Or)> expecting OR

********************** \ !Unconsumed Error: binary(Or): Unexpected HENCE Expecting: OR                   :12_4:Hence:
********************** / binary(And)                                                                     :12_4:Hence:
binary(And)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=81:
binary(And)> unexpected HENCE
binary(And)> expecting AND

********************** \ !Unconsumed Error: binary(And): Unexpected HENCE Expecting: AND                 :12_4:Hence:
********************** / binary(SetLess)                                                                 :12_4:Hence:
binary(SetLess)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=81:
binary(SetLess)> unexpected HENCE
binary(SetLess)> expecting LESS

********************** \ !Unconsumed Error: binary(SetLess): Unexpected HENCE Expecting: LESS            :12_4:Hence:
********************** / binary(SetPlus)                                                                 :12_4:Hence:
binary(SetPlus)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=81:
binary(SetPlus)> unexpected HENCE
binary(SetPlus)> expecting PLUS

********************** \ !Unconsumed Error: binary(SetPlus): Unexpected HENCE Expecting: PLUS            :12_4:Hence:
expression> IN: ( ( "demand" ( "an explanation for your  <…>
expression> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
expression> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************* \ expression has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
ppp inner> IN: ( ( "demand" ( "an explanation for your  <…>
ppp inner> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
ppp inner> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************** \ ppp inner has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
expr pParamText> IN: ( ( "demand" ( "an explanation for your  <…>
expr pParamText> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
expr pParamText> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************* \ expr pParamText has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
dBoolStructP calling exprP> IN: ( ( "demand" ( "an explanation for your  <…>
dBoolStructP calling exprP> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
dBoolStructP calling exprP> VALUE: (Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

****************** \ dBoolStructP calling exprP has returned Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
pAction calling dBoolStructP> IN: ( ( "demand" ( "an explanation for your  <…>
pAction calling dBoolStructP> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
pAction calling dBoolStructP> VALUE: (Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

***************** \ pAction calling dBoolStructP has returned Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
pDoAction/pAction> IN: ( ( "demand" ( "an explanation for your  <…>
pDoAction/pAction> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
pDoAction/pAction> VALUE: (Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

**************** \ pDoAction/pAction has returned Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
**************** / WHERE                                                                                       :12_4:Hence:
WHERE> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=81:
WHERE> unexpected HENCE
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected HENCE Expecting: WHERE                                 :12_4:Hence:
**************** / preambleParamText:[Having]                                                                  :12_4:Hence:
***************** / $>|                                                                                       :12_4:Hence:
$>|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=81:
$>|> unexpected HENCE
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: HAVING                                :12_4:Hence:
preambleParamText:[Having]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=81:
preambleParamText:[Having]> unexpected HENCE
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected HENCE Expecting: HAVING           :12_4:Hence:
**************** / preambleParamText:[Given]                                                                   :12_4:Hence:
***************** / $>|                                                                                       :12_4:Hence:
$>|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=81:
$>|> unexpected HENCE
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: GIVEN                                 :12_4:Hence:
preambleParamText:[Given]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=81:
preambleParamText:[Given]> unexpected HENCE
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected HENCE Expecting: GIVEN             :12_4:Hence:
**************** / preambleParamText:[Upon]                                                                    :12_4:Hence:
***************** / $>|                                                                                       :12_4:Hence:
$>|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=81:
$>|> unexpected HENCE
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: UPON                                  :12_4:Hence:
preambleParamText:[Upon]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=81:
preambleParamText:[Upon]> unexpected HENCE
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected HENCE Expecting: UPON               :12_4:Hence:
**************** / preambleBoolStructR [Unless]                                                                :12_4:Hence:
preambleBoolStructR [Unless]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=81:
preambleBoolStructR [Unless]> unexpected HENCE
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected HENCE Expecting: UNLESS         :12_4:Hence:
**************** / preambleBoolStructR [When,If]                                                               :12_4:Hence:
preambleBoolStructR [When,If]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=81:
preambleBoolStructR [When,If]> unexpected HENCE
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected HENCE Expecting: IF WHEN       :12_4:Hence:
regulative permutation with deontic-temporal> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
regulative permutation with deontic-temporal> MATCH (COK): MAY DO ( ( "demand" ( "an explanation fo <…>
regulative permutation with deontic-temporal> VALUE: (RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []},[])

*************** \ regulative permutation with deontic-temporal has returned RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []} :12_4:Hence:
permutationsReg> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
permutationsReg> MATCH (COK): MAY DO ( ( "demand" ( "an explanation fo <…>
permutationsReg> VALUE: (RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []},[])

************** \ permutationsReg has returned RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []} :12_4:Hence:
************** / pHenceLest-Hence                                                                                :12_4:Hence:
*************** / someIndentation                                                                                :12_5:GoDeeper:
**************** / myindented-GoDeeper                                                                          :12_5:GoDeeper:
myindented-GoDeeper> IN: ( "You" ( MUST DO ( "respond" "to" ( "th <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

**************** \ myindented-GoDeeper has returned GoDeeper                                                     :12_5:Other "You:
**************** / manyIndentation/leaf?                                                                         :12_5:Other "You:
***************** / pRegRule                                                                                    :12_5:Other "You:
****************** / pRuleLabel                                                                                :12_5:Other "You:
******************* / $>|                                                                                     :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting §

******************* \ !Unconsumed Error: $>|: Unexpected "You" Expecting: §                                  :12_5:Other "You:
pRuleLabel> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=83:
pRuleLabel> unexpected "You"
pRuleLabel> expecting §

****************** \ !Unconsumed Error: pRuleLabel: Unexpected "You" Expecting: §                             :12_5:Other "You:
****************** / pRegRuleSugary                                                                            :12_5:Other "You:
******************* / someDeep                                                                                :12_5:Other "You:
******************** / someDeep first part calls base directly                                               :12_5:Other "You:
someDeep first part calls base directly> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep first part calls base directly> MATCH (COK): "You"
someDeep first part calls base directly> VALUE: ("You",[])

******************** \ someDeep first part calls base directly has returned "You"                             :12_6:GoDeeper:
******************** / someDeep second part recurses with someIndentation                                     :12_6:GoDeeper:
********************* / someIndentation                                                                      :12_6:GoDeeper:
********************** / myindented-GoDeeper                                                                :12_6:GoDeeper:
myindented-GoDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented-GoDeeper has returned GoDeeper                                           :12_6:Must:
********************** / manyIndentation/leaf?                                                               :12_6:Must:
*********************** / someDeep                                                                          :12_6:Must:
************************ / someDeep first part calls base directly                                         :12_6:Must:
someDeep first part calls base directly> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=85:
someDeep first part calls base directly> unexpected MUST
someDeep first part calls base directly> expecting Other text

************************ \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MUST Expecting: Other text :12_6:Must:
someDeep> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=85:
someDeep> unexpected MUST
someDeep> expecting Other text

*********************** \ !Unconsumed Error: someDeep: Unexpected MUST Expecting: Other text                :12_6:Must:
manyIndentation/leaf?> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=85:
manyIndentation/leaf?> unexpected MUST
manyIndentation/leaf?> expecting Other text

********************** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MUST Expecting: Other text     :12_6:Must:
********************** / manyIndentation/deeper; calling someIndentation                                     :12_6:Must:
*********************** / someIndentation                                                                   :12_6:Must:
************************ / myindented-GoDeeper                                                             :12_6:Must:
myindented-GoDeeper> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=85:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

************************ \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: (            :12_6:Must:
someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting (

*********************** \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: (                  :12_6:Must:
manyIndentation/deeper; calling someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=85:
manyIndentation/deeper; calling someIndentation> unexpected MUST
manyIndentation/deeper; calling someIndentation> expecting (

********************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MUST Expecting: ( :12_6:Must:
someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting ( or Other text

********************* \ !Consumed Error: someIndentation: Unexpected MUST Expecting: ( Other text             :12_6:Must:
someDeep second part recurses with someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=85:
someDeep second part recurses with someIndentation> unexpected MUST
someDeep second part recurses with someIndentation> expecting ( or Other text

******************** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MUST Expecting: ( Other text :12_6:GoDeeper:
******************** > someDeep no luck, returning []                                                         :12_6:GoDeeper:
someDeep> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep> MATCH (COK): "You"
someDeep> VALUE: (["You"],[])

******************* \ someDeep has returned ["You"]                                                            :12_6:GoDeeper:
******************* / someIndentation                                                                          :12_6:GoDeeper:
******************** / myindented-GoDeeper                                                                    :12_6:GoDeeper:
myindented-GoDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******************** \ myindented-GoDeeper has returned GoDeeper                                               :12_6:Must:
******************** / manyIndentation/leaf?                                                                   :12_6:Must:
********************* / permutationsReg                                                                       :12_6:Must:
********************** / regulative permutation with deontic-temporal                                        :12_6:Must:
*********************** / WHERE                                                                             :12_6:Must:
WHERE> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=85:
WHERE> unexpected MUST
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                        :12_6:Must:
*********************** / preambleParamText:[Having]                                                        :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                       :12_6:Must:
preambleParamText:[Having]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=85:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING  :12_6:Must:
*********************** / preambleParamText:[Given]                                                         :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                        :12_6:Must:
preambleParamText:[Given]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=85:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN    :12_6:Must:
*********************** / preambleParamText:[Upon]                                                          :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                         :12_6:Must:
preambleParamText:[Upon]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=85:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON      :12_6:Must:
*********************** / preambleBoolStructR [Unless]                                                      :12_6:Must:
preambleBoolStructR [Unless]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=85:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS :12_6:Must:
*********************** / preambleBoolStructR [When,If]                                                     :12_6:Must:
preambleBoolStructR [When,If]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=85:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN :12_6:Must:
*********************** / pDT                                                                               :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (COK): MUST
$>|> VALUE: (DMust,[])

************************ \ $>| has returned DMust                                                          :13_6:Do:
************************ / |>| calling $>>                                                                 :13_6:Do:
************************* / |>>/recurse                                                                   :13_6:Do:
|>>/recurse> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=86:
|>>/recurse> unexpected DO
|>>/recurse> expecting (

************************* \ !Unconsumed Error: |>>/recurse: Unexpected DO Expecting: (                    :13_6:Do:
************************* / |>>/base                                                                      :13_6:Do:
************************** / pTemporal/eventually                                                        :13_6:Do:
pTemporal/eventually> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=86:
pTemporal/eventually> unexpected DO
pTemporal/eventually> expecting EVENTUALLY

************************** \ !Unconsumed Error: pTemporal/eventually: Unexpected DO Expecting: EVENTUALLY :13_6:Do:
************************** / pTemporal/specifically                                                      :13_6:Do:
*************************** / $>|                                                                       :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting AFTER, BEFORE, BY, or ON

*************************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: BEFORE AFTER BY ON       :13_6:Do:
pTemporal/specifically> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=86:
pTemporal/specifically> unexpected DO
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************************** \ !Unconsumed Error: pTemporal/specifically: Unexpected DO Expecting: BEFORE AFTER BY ON :13_6:Do:
************************** / pTemporal/vaguely                                                           :13_6:Do:
pTemporal/vaguely> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=86:
pTemporal/vaguely> unexpected DO
pTemporal/vaguely> expecting Other text

************************** \ !Unconsumed Error: pTemporal/vaguely: Unexpected DO Expecting: Other text   :13_6:Do:
************************** > |>>/base got Nothing                                                        :13_6:Do:
|>>/base> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************************* \ |>>/base has returned (Nothing,0)                                             :13_6:Do:
|>| calling $>>> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
|>| calling $>>> MATCH (EOK): <EMPTY>
|>| calling $>>> VALUE: ((Nothing,0),[])

************************ \ |>| calling $>> has returned (Nothing,0)                                        :13_6:Do:
************************ / undeepers                                                                       :13_6:Do:
************************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers        :13_6:Do:
************************* > sameLine: success!                                                            :13_6:Do:
undeepers> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************ \ undeepers has returned ()                                                       :13_6:Do:
pDT> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pDT> MATCH (COK): MUST
pDT> VALUE: ((DMust,Nothing),[])

*********************** \ pDT has returned (DMust,Nothing)                                                  :13_6:Do:
*********************** / WHERE                                                                             :13_6:Do:
WHERE> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=86:
WHERE> unexpected DO
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                          :13_6:Do:
*********************** / preambleParamText:[Having]                                                        :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                         :13_6:Do:
preambleParamText:[Having]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=86:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING    :13_6:Do:
*********************** / preambleParamText:[Given]                                                         :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                          :13_6:Do:
preambleParamText:[Given]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=86:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN      :13_6:Do:
*********************** / preambleParamText:[Upon]                                                          :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                           :13_6:Do:
preambleParamText:[Upon]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=86:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON        :13_6:Do:
*********************** / preambleBoolStructR [Unless]                                                      :13_6:Do:
preambleBoolStructR [Unless]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=86:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS  :13_6:Do:
*********************** / preambleBoolStructR [When,If]                                                     :13_6:Do:
preambleBoolStructR [When,If]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=86:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN :13_6:Do:
*********************** / WHERE                                                                             :13_6:Do:
WHERE> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=86:
WHERE> unexpected DO
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                          :13_6:Do:
*********************** / preambleParamText:[Having]                                                        :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                         :13_6:Do:
preambleParamText:[Having]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=86:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING    :13_6:Do:
*********************** / preambleParamText:[Given]                                                         :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                          :13_6:Do:
preambleParamText:[Given]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=86:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN      :13_6:Do:
*********************** / preambleParamText:[Upon]                                                          :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                           :13_6:Do:
preambleParamText:[Upon]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=86:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON        :13_6:Do:
*********************** / preambleBoolStructR [Unless]                                                      :13_6:Do:
preambleBoolStructR [Unless]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=86:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS  :13_6:Do:
*********************** / preambleBoolStructR [When,If]                                                     :13_6:Do:
preambleBoolStructR [When,If]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=86:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN :13_6:Do:
*********************** / pDoAction/Do                                                                      :13_6:Do:
pDoAction/Do> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pDoAction/Do> MATCH (COK): DO
pDoAction/Do> VALUE: (Do,[])

*********************** \ pDoAction/Do has returned Do                                                       :13_7:GoDeeper:
*********************** / pDoAction/pAction                                                                  :13_7:GoDeeper:
************************ / pAction calling dBoolStructP                                                     :13_7:GoDeeper:
************************* / dBoolStructP calling exprP                                                     :13_7:GoDeeper:
************************** / expr pParamText                                                              :13_7:GoDeeper:
*************************** / ppp inner                                                                  :13_7:GoDeeper:
**************************** / expression                                                               :13_7:GoDeeper:
***************************** / term p                                                                 :13_7:GoDeeper:
****************************** / term p/1a:label ends directly above next line                        :13_7:GoDeeper:
******************************* / $*|                                                                :13_7:GoDeeper:
******************************** / someSL                                                           :13_7:GoDeeper:
********************************* / pNumAsText                                                     :13_7:GoDeeper:
pNumAsText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=87:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number  :13_7:GoDeeper:
someSL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=87:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
$*|> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=87:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=87:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
****************************** / term p/1b:label ends to the left of line below, with EOL             :13_7:GoDeeper:
******************************* / $*|                                                                :13_7:GoDeeper:
******************************** / someSL                                                           :13_7:GoDeeper:
********************************* / pNumAsText                                                     :13_7:GoDeeper:
pNumAsText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=87:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number  :13_7:GoDeeper:
someSL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=87:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
$*|> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=87:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=87:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
****************************** / term p/1c:label ends to the right of line below                      :13_7:GoDeeper:
******************************* > |<|                                                                :13_7:GoDeeper:
******************************* > |<* starting                                                       :13_7:GoDeeper:
******************************* / $*|                                                                :13_7:GoDeeper:
******************************** / someSL                                                           :13_7:GoDeeper:
********************************* / pNumAsText                                                     :13_7:GoDeeper:
pNumAsText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=87:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number  :13_7:GoDeeper:
someSL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=87:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
$*|> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=87:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=87:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
****************************** / term p/notLabelTerm                                                  :13_7:GoDeeper:
******************************* / term p/2:someIndentation expr p                                    :13_7:GoDeeper:
******************************** / someIndentation                                                  :13_7:GoDeeper:
********************************* / myindented-GoDeeper                                            :13_7:GoDeeper:
myindented-GoDeeper> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********************************* \ myindented-GoDeeper has returned GoDeeper                       :13_7:Other "res:
********************************* / manyIndentation/leaf?                                           :13_7:Other "res:
********************************** / ppp inner                                                     :13_7:Other "res:
*********************************** / expression                                                  :13_7:Other "res:
************************************ / term p                                                    :13_7:Other "res:
************************************* / term p/1a:label ends directly above next line           :13_7:Other "res:
************************************** / $*|                                                   :13_7:Other "res:
*************************************** / someSL                                              :13_7:Other "res:
someSL> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
someSL> MATCH (COK): "respond"
someSL> VALUE: ((["respond"],0),[])

*************************************** \ someSL has returned (["respond"],0)                 :14_7:Other "to":
$*|> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
$*|> MATCH (COK): "respond"
$*|> VALUE: ((["respond"],0),[])

************************************** \ $*| has returned (["respond"],0)                      :14_7:Other "to":
************************************** / |>| calling $>>                                       :14_7:Other "to":
*************************************** / |>>/recurse                                         :14_7:Other "to":
|>>/recurse> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=89:
|>>/recurse> unexpected "to"
|>>/recurse> expecting (

*************************************** \ !Unconsumed Error: |>>/recurse: Unexpected "to" Expecting: ( :14_7:Other "to":
*************************************** / |>>/base                                            :14_7:Other "to":
**************************************** / ppp inner                                         :14_7:Other "to":
***************************************** / expression                                      :14_7:Other "to":
****************************************** / term p                                        :14_7:Other "to":
******************************************* / term p/1a:label ends directly above next line :14_7:Other "to":
******************************************** / $*|                                       :14_7:Other "to":
********************************************* / someSL                                  :14_7:Other "to":
someSL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
someSL> MATCH (COK): "to" ( "the PDPC"
someSL> VALUE: ((["to","the PDPC"],1),[])

********************************************* \ someSL has returned (["to","the PDPC"],1)  :15_8:UnDeeper:
********************************************* / pNumAsText                                 :15_8:UnDeeper:
pNumAsText> IN: ) "about" ( "your inaction" ) ) ) ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=92:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :15_8:UnDeeper:
$*|> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
$*|> MATCH (CERR): "to" ( "the PDPC"
$*|> ERROR:
$*|> offset=92:
$*|> unexpected )
$*|> expecting ( or other text or number

******************************************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :15_8:UnDeeper:
term p/1a:label ends directly above next line> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1a:label ends directly above next line> MATCH (CERR): "to" ( "the PDPC"
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=92:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

******************************************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :15_8:UnDeeper:
******************************************* / term p/1b:label ends to the left of line below, with EOL :14_7:Other "to":
******************************************** / $*|                                       :14_7:Other "to":
********************************************* / someSL                                  :14_7:Other "to":
someSL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
someSL> MATCH (COK): "to" ( "the PDPC"
someSL> VALUE: ((["to","the PDPC"],1),[])

********************************************* \ someSL has returned (["to","the PDPC"],1)  :15_8:UnDeeper:
$*|> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
$*|> MATCH (COK): "to" ( "the PDPC"
$*|> VALUE: ((["to","the PDPC"],1),[])

******************************************** \ $*| has returned (["to","the PDPC"],1)       :15_8:UnDeeper:
******************************************** / matching EOL                                 :15_8:UnDeeper:
matching EOL> IN: ) "about" ( "your inaction" ) ) ) ) ) )  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=92:
matching EOL> unexpected )
matching EOL> expecting EOL

******************************************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL :15_8:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "to" ( "the PDPC"
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=92:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

******************************************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :15_8:UnDeeper:
******************************************* / term p/1c:label ends to the right of line below :14_7:Other "to":
******************************************** > |<|                                       :14_7:Other "to":
******************************************** > |<* starting                              :14_7:Other "to":
******************************************** / $*|                                       :14_7:Other "to":
********************************************* / someSL                                  :14_7:Other "to":
someSL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
someSL> MATCH (COK): "to" ( "the PDPC"
someSL> VALUE: ((["to","the PDPC"],1),[])

********************************************* \ someSL has returned (["to","the PDPC"],1)  :15_8:UnDeeper:
$*|> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
$*|> MATCH (COK): "to" ( "the PDPC"
$*|> VALUE: ((["to","the PDPC"],1),[])

******************************************** \ $*| has returned (["to","the PDPC"],1)       :15_8:UnDeeper:
******************************************** / |<*/parent                                   :15_8:UnDeeper:
********************************************* > |<*/recurse                                :15_8:UnDeeper:
********************************************* / ppp inner                               :15_7:Other "abo:
********************************************** / expression                            :15_7:Other "abo:
*********************************************** / term p                              :15_7:Other "abo:
************************************************ / term p/1a:label ends directly above next line :15_7:Other "abo:
************************************************* / $*|                             :15_7:Other "abo:
************************************************** / someSL                        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
************************************************** / pNumAsText           :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (CERR): "about" ( "your inaction"
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting ( or other text or number

************************************************* \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :1_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/1a:label ends directly above next line> MATCH (CERR): "about" ( "your inaction"
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=96:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

************************************************ \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :1_2:UnDeeper:
************************************************ / term p/1b:label ends to the left of line below, with EOL :15_7:Other "abo:
************************************************* / $*|                             :15_7:Other "abo:
************************************************** / someSL                        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((["about","your inaction"],1),[])

************************************************* \ $*| has returned (["about","your inaction"],1) :1_2:UnDeeper:
************************************************* / matching EOL           :1_2:UnDeeper:
matching EOL> IN: ) ) ) ) ) ) )
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=96:
matching EOL> unexpected )
matching EOL> expecting EOL

************************************************* \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL :1_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "about" ( "your inaction"
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=96:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

************************************************ \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :1_2:UnDeeper:
************************************************ / term p/1c:label ends to the right of line below :15_7:Other "abo:
************************************************* > |<|                             :15_7:Other "abo:
************************************************* > |<* starting                    :15_7:Other "abo:
************************************************* / $*|                             :15_7:Other "abo:
************************************************** / someSL                        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((["about","your inaction"],1),[])

************************************************* \ $*| has returned (["about","your inaction"],1) :1_2:UnDeeper:
************************************************* / |<*/parent             :1_2:UnDeeper:
************************************************** > |<*/recurse          :1_2:UnDeeper:
************************************************** / ppp inner       :EOF:
*************************************************** / expression    :EOF:
**************************************************** / term p      :EOF:
***************************************************** / term p/1a:label ends directly above next line :EOF:
****************************************************** / $*|     :EOF:
******************************************************* / someSL :EOF:
******************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

******************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

******************************************************* \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
term p/1a:label ends directly above next line> IN: <EMPTY>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=103:
term p/1a:label ends directly above next line> unexpected end of input
term p/1a:label ends directly above next line> expecting any token or other text or number

***************************************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected end of input Expecting: any token other text or number :EOF:
***************************************************** / term p/1b:label ends to the left of line below, with EOL :EOF:
****************************************************** / $*|     :EOF:
******************************************************* / someSL :EOF:
******************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

******************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

******************************************************* \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
term p/1b:label ends to the left of line below, with EOL> IN: <EMPTY>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=103:
term p/1b:label ends to the left of line below, with EOL> unexpected end of input
term p/1b:label ends to the left of line below, with EOL> expecting any token or other text or number

***************************************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected end of input Expecting: any token other text or number :EOF:
***************************************************** / term p/1c:label ends to the right of line below :EOF:
****************************************************** > |<|     :EOF:
****************************************************** > |<* starting :EOF:
****************************************************** / $*|     :EOF:
******************************************************* / someSL :EOF:
******************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

******************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

******************************************************* \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
term p/1c:label ends to the right of line below> IN: <EMPTY>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=103:
term p/1c:label ends to the right of line below> unexpected end of input
term p/1c:label ends to the right of line below> expecting any token or other text or number

***************************************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected end of input Expecting: any token other text or number :EOF:
***************************************************** / term p/notLabelTerm :EOF:
****************************************************** / term p/2:someIndentation expr p :EOF:
******************************************************* / someIndentation :EOF:
******************************************************** / myindented-GoDeeper :EOF:
myindented-GoDeeper> IN: <EMPTY>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=103:
myindented-GoDeeper> unexpected end of input
myindented-GoDeeper> expecting (

******************************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected end of input Expecting: ( :EOF:
someIndentation> IN: <EMPTY>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=103:
someIndentation> unexpected end of input
someIndentation> expecting ( or any token

******************************************************* \ !Unconsumed Error: someIndentation: Unexpected end of input Expecting: ( any token :EOF:
term p/2:someIndentation expr p> IN: <EMPTY>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=103:
term p/2:someIndentation expr p> unexpected end of input
term p/2:someIndentation expr p> expecting ( or any token

****************************************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected end of input Expecting: ( any token :EOF:
****************************************************** / term p/3:plain p :EOF:
******************************************************* / pParamText :EOF:
******************************************************** / pParamText(flat) first line: pKeyValues :EOF:
********************************************************* / pKeyValuesAka :EOF:
********************************************************** / slAKA :EOF:
*********************************************************** / $*| :EOF:
************************************************************ / slAKA base :EOF:
************************************************************* / slKeyValues :EOF:
************************************************************** / $*| :EOF:
*************************************************************** / someSL :EOF:
**************************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

**************************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

*************************************************************** \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

************************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
slKeyValues> IN: <EMPTY>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=103:
slKeyValues> unexpected end of input
slKeyValues> expecting any token or other text or number

************************************************************* \ !Unconsumed Error: slKeyValues: Unexpected end of input Expecting: any token other text or number :EOF:
slAKA base> IN: <EMPTY>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=103:
slAKA base> unexpected end of input
slAKA base> expecting any token or other text or number

************************************************************ \ !Unconsumed Error: slAKA base: Unexpected end of input Expecting: any token other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

*********************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
slAKA> IN: <EMPTY>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=103:
slAKA> unexpected end of input
slAKA> expecting any token or other text or number

********************************************************** \ !Unconsumed Error: slAKA: Unexpected end of input Expecting: any token other text or number :EOF:
pKeyValuesAka> IN: <EMPTY>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=103:
pKeyValuesAka> unexpected end of input
pKeyValuesAka> expecting any token or other text or number

********************************************************* \ !Unconsumed Error: pKeyValuesAka: Unexpected end of input Expecting: any token other text or number :EOF:
pParamText(flat) first line: pKeyValues> IN: <EMPTY>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=103:
pParamText(flat) first line: pKeyValues> unexpected end of input
pParamText(flat) first line: pKeyValues> expecting any token or other text or number

******************************************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected end of input Expecting: any token other text or number :EOF:
pParamText> IN: <EMPTY>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=103:
pParamText> unexpected end of input
pParamText> expecting any token or other text or number

******************************************************* \ !Unconsumed Error: pParamText: Unexpected end of input Expecting: any token other text or number :EOF:
term p/3:plain p> IN: <EMPTY>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=103:
term p/3:plain p> unexpected end of input
term p/3:plain p> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: term p/3:plain p: Unexpected end of input Expecting: any token other text or number :EOF:
term p/notLabelTerm> IN: <EMPTY>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=103:
term p/notLabelTerm> unexpected end of input
term p/notLabelTerm> expecting (, any token, or term

***************************************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected end of input Expecting: ( any token term :EOF:
term p> IN: <EMPTY>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=103:
term p> unexpected end of input
term p> expecting (, any token, other text or number, or term

**************************************************** \ !Unconsumed Error: term p: Unexpected end of input Expecting: ( any token other text or number term :EOF:
expression> IN: <EMPTY>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=103:
expression> unexpected end of input
expression> expecting expression

*************************************************** \ !Unconsumed Error: expression: Unexpected end of input Expecting: expression :EOF:
ppp inner> IN: <EMPTY>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=103:
ppp inner> unexpected end of input
ppp inner> expecting any token or expression

************************************************** \ !Unconsumed Error: ppp inner: Unexpected end of input Expecting: any token expression :EOF:
************************************************** / withPrePost     :EOF:
*************************************************** > |<* starting  :EOF:
*************************************************** / $*|           :EOF:
**************************************************** / pre part    :EOF:
pre part> IN: <EMPTY>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=103:
pre part> unexpected end of input
pre part> expecting ( or Other text

**************************************************** \ !Unconsumed Error: pre part: Unexpected end of input Expecting: ( Other text :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting (, Other text, or any token

*************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: ( Other text any token :EOF:
withPrePost> IN: <EMPTY>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=103:
withPrePost> unexpected end of input
withPrePost> expecting (, Other text, or any token

************************************************** \ !Unconsumed Error: withPrePost: Unexpected end of input Expecting: ( Other text any token :EOF:
************************************************** / $*|             :EOF:
*************************************************** / pre part      :EOF:
pre part> IN: <EMPTY>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=103:
pre part> unexpected end of input
pre part> expecting ( or Other text

*************************************************** \ !Unconsumed Error: pre part: Unexpected end of input Expecting: ( Other text :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting (, Other text, or any token

************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: ( Other text any token :EOF:
************************************************** / |<*/base             :1_2:UnDeeper:
*************************************************** / ppp inner          :1_2:UnDeeper:
**************************************************** / expression       :1_2:UnDeeper:
***************************************************** / term p         :1_2:UnDeeper:
****************************************************** / term p/1a:label ends directly above next line :1_2:UnDeeper:
******************************************************* / $*|        :1_2:UnDeeper:
******************************************************** / someSL   :1_2:UnDeeper:
********************************************************* / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

******************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

******************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) ) ) ) )
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=96:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

****************************************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
****************************************************** / term p/1b:label ends to the left of line below, with EOL :1_2:UnDeeper:
******************************************************* / $*|        :1_2:UnDeeper:
******************************************************** / someSL   :1_2:UnDeeper:
********************************************************* / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

******************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

******************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) ) ) ) )
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=96:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
****************************************************** / term p/1c:label ends to the right of line below :1_2:UnDeeper:
******************************************************* > |<|        :1_2:UnDeeper:
******************************************************* > |<* starting :1_2:UnDeeper:
******************************************************* / $*|        :1_2:UnDeeper:
******************************************************** / someSL   :1_2:UnDeeper:
********************************************************* / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

******************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

******************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) ) ) ) )
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=96:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

****************************************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
****************************************************** / term p/notLabelTerm :1_2:UnDeeper:
******************************************************* / term p/2:someIndentation expr p :1_2:UnDeeper:
******************************************************** / someIndentation :1_2:UnDeeper:
********************************************************* / myindented-GoDeeper :1_2:UnDeeper:
myindented-GoDeeper> IN: ) ) ) ) ) ) )
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=96:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

********************************************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :1_2:UnDeeper:
someIndentation> IN: ) ) ) ) ) ) )
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=96:
someIndentation> unexpected )
someIndentation> expecting (

******************************************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: ( :1_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) ) ) ) )
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=96:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

******************************************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :1_2:UnDeeper:
******************************************************* / term p/3:plain p :1_2:UnDeeper:
******************************************************** / pParamText :1_2:UnDeeper:
********************************************************* / pParamText(flat) first line: pKeyValues :1_2:UnDeeper:
********************************************************** / pKeyValuesAka :1_2:UnDeeper:
*********************************************************** / slAKA :1_2:UnDeeper:
************************************************************ / $*| :1_2:UnDeeper:
************************************************************* / slAKA base :1_2:UnDeeper:
************************************************************** / slKeyValues :1_2:UnDeeper:
*************************************************************** / $*| :1_2:UnDeeper:
**************************************************************** / someSL :1_2:UnDeeper:
***************************************************************** / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

**************************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

*************************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
slKeyValues> IN: ) ) ) ) ) ) )
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=96:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

************************************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
slAKA base> IN: ) ) ) ) ) ) )
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=96:
slAKA base> unexpected )
slAKA base> expecting other text or number

************************************************************* \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

************************************************************ \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
slAKA> IN: ) ) ) ) ) ) )
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=96:
slAKA> unexpected )
slAKA> expecting other text or number

*********************************************************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
pKeyValuesAka> IN: ) ) ) ) ) ) )
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=96:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

********************************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: ) ) ) ) ) ) )
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=96:
pParamText(flat) first line: pKeyValues> unexpected )
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
pParamText> IN: ) ) ) ) ) ) )
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=96:
pParamText> unexpected )
pParamText> expecting other text or number

******************************************************** \ !Unconsumed Error: pParamText: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/3:plain p> IN: ) ) ) ) ) ) )
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=96:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

******************************************************* \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/notLabelTerm> IN: ) ) ) ) ) ) )
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=96:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

****************************************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :1_2:UnDeeper:
term p> IN: ) ) ) ) ) ) )
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=96:
term p> unexpected )
term p> expecting (, other text or number, or term

***************************************************** \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :1_2:UnDeeper:
expression> IN: ) ) ) ) ) ) )
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=96:
expression> unexpected )
expression> expecting expression

**************************************************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression :1_2:UnDeeper:
ppp inner> IN: ) ) ) ) ) ) )
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=96:
ppp inner> unexpected )
ppp inner> expecting expression

*************************************************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression :1_2:UnDeeper:
*************************************************** / withPrePost        :1_2:UnDeeper:
**************************************************** > |<* starting     :1_2:UnDeeper:
**************************************************** / $*|              :1_2:UnDeeper:
***************************************************** / pre part       :1_2:UnDeeper:
pre part> IN: ) ) ) ) ) ) )
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=96:
pre part> unexpected )
pre part> expecting ( or Other text

***************************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting ( or Other text

**************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
withPrePost> IN: ) ) ) ) ) ) )
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=96:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

*************************************************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
*************************************************** / $*|                :1_2:UnDeeper:
**************************************************** / pre part         :1_2:UnDeeper:
pre part> IN: ) ) ) ) ) ) )
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=96:
pre part> unexpected )
pre part> expecting ( or Other text

**************************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting ( or Other text

*************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
|<*/base> IN: ) ) ) ) ) ) )
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=96:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

************************************************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :1_2:UnDeeper:
|<*/parent> IN: ) ) ) ) ) ) )
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=103:
|<*/parent> unexpected end of input
|<*/parent> expecting (, ), Other text, any token, or expression

************************************************* \ !Unconsumed Error: |<*/parent: Unexpected end of input Expecting: ( ( ) Other text any token expression :1_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/1c:label ends to the right of line below> MATCH (CERR): "about" ( "your inaction"
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=103:
term p/1c:label ends to the right of line below> unexpected end of input
term p/1c:label ends to the right of line below> expecting (, ), Other text, any token, or expression

************************************************ \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected end of input Expecting: ( ( ( ) Other text any token expression :1_2:UnDeeper:
************************************************ / term p/notLabelTerm               :15_7:Other "abo:
************************************************* / term p/2:someIndentation expr p :15_7:Other "abo:
************************************************** / someIndentation               :15_7:Other "abo:
*************************************************** / myindented-GoDeeper         :15_7:Other "abo:
myindented-GoDeeper> IN: "about" ( "your inaction" ) ) ) ) ) ) )
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=93:
myindented-GoDeeper> unexpected "about"
myindented-GoDeeper> expecting (

*************************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "about" Expecting: ( :15_7:Other "abo:
someIndentation> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=93:
someIndentation> unexpected "about"
someIndentation> expecting (

************************************************** \ !Unconsumed Error: someIndentation: Unexpected "about" Expecting: ( :15_7:Other "abo:
term p/2:someIndentation expr p> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=93:
term p/2:someIndentation expr p> unexpected "about"
term p/2:someIndentation expr p> expecting (

************************************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "about" Expecting: ( :15_7:Other "abo:
************************************************* / term p/3:plain p                :15_7:Other "abo:
************************************************** / pParamText                    :15_7:Other "abo:
*************************************************** / pParamText(flat) first line: pKeyValues :15_7:Other "abo:
**************************************************** / pKeyValuesAka             :15_7:Other "abo:
***************************************************** / slAKA                   :15_7:Other "abo:
****************************************************** / $*|                   :15_7:Other "abo:
******************************************************* / slAKA base          :15_7:Other "abo:
******************************************************** / slKeyValues       :15_7:Other "abo:
********************************************************* / $*|             :15_7:Other "abo:
********************************************************** / someSL        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

********************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((["about","your inaction"],1),[])

********************************************************* \ $*| has returned (["about","your inaction"],1) :1_2:UnDeeper:
********************************************************* / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
********************************************************* / |>>/base :1_2:UnDeeper:
********************************************************** / |?| optional something :1_2:UnDeeper:
*********************************************************** / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
*********************************************************** / |>>/base :1_2:UnDeeper:
************************************************************ / slTypeSig :1_2:UnDeeper:
************************************************************* / $>| :1_2:UnDeeper:
$>|> IN: ) ) ) ) ) ) )
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=96:
$>|> unexpected )
$>|> expecting :: or IS

************************************************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS :: :1_2:UnDeeper:
slTypeSig> IN: ) ) ) ) ) ) )
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=96:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

************************************************************ \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS :: :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=96:
|>>/base> unexpected )
|>>/base> expecting :: or IS

*********************************************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS :: :1_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) ) )
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************************************** \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
********************************************************** > |>>/base got Nothing :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************************************************* \ |>>/base has returned (Nothing,0) :1_2:UnDeeper:
slKeyValues> IN: "about" ( "your inaction" ) ) ) ) ) ) )
slKeyValues> MATCH (COK): "about" ( "your inaction"
slKeyValues> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

******************************************************** \ slKeyValues has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
slAKA base> IN: "about" ( "your inaction" ) ) ) ) ) ) )
slAKA base> MATCH (COK): "about" ( "your inaction"
slAKA base> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

******************************************************* \ slAKA base has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

****************************************************** \ $*| has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
****************************************************** / |>>/recurse  :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
****************************************************** / |>>/base     :1_2:UnDeeper:
******************************************************* / slAKA optional akapart :1_2:UnDeeper:
******************************************************** / |?| optional something :1_2:UnDeeper:
********************************************************* / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
********************************************************* / |>>/base :1_2:UnDeeper:
********************************************************** / PAKA/akapart :1_2:UnDeeper:
*********************************************************** / $>| :1_2:UnDeeper:
************************************************************ / Aka Token :1_2:UnDeeper:
Aka Token> IN: ) ) ) ) ) ) )
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=96:
Aka Token> unexpected )
Aka Token> expecting AKA

************************************************************ \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :1_2:UnDeeper:
$>|> IN: ) ) ) ) ) ) )
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=96:
$>|> unexpected )
$>|> expecting AKA

*********************************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA :1_2:UnDeeper:
PAKA/akapart> IN: ) ) ) ) ) ) )
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=96:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

********************************************************** \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=96:
|>>/base> unexpected )
|>>/base> expecting AKA

********************************************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA :1_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) ) )
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

******************************************************** \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
slAKA optional akapart> IN: ) ) ) ) ) ) )
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

******************************************************* \ slAKA optional akapart has returned (Nothing,0) :1_2:UnDeeper:
******************************************************* > |>>/base got Nothing :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************************************************** \ |>>/base has returned (Nothing,0) :1_2:UnDeeper:
****************************************************** / |>>/recurse  :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
****************************************************** / |>>/base     :1_2:UnDeeper:
******************************************************* / slAKA optional typically :1_2:UnDeeper:
******************************************************** / |?| optional something :1_2:UnDeeper:
********************************************************* / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
********************************************************* / |>>/base :1_2:UnDeeper:
********************************************************** / typically :1_2:UnDeeper:
*********************************************************** / $>| :1_2:UnDeeper:
$>|> IN: ) ) ) ) ) ) )
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=96:
$>|> unexpected )
$>|> expecting TYPICALLY

*********************************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :1_2:UnDeeper:
typically> IN: ) ) ) ) ) ) )
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=96:
typically> unexpected )
typically> expecting TYPICALLY

********************************************************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=96:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

********************************************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :1_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) ) )
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

******************************************************** \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
slAKA optional typically> IN: ) ) ) ) ) ) )
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

******************************************************* \ slAKA optional typically has returned (Nothing,0) :1_2:UnDeeper:
******************************************************* > |>>/base got Nothing :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************************************************** \ |>>/base has returned (Nothing,0) :1_2:UnDeeper:
****************************************************** > slAKA: proceeding after base and entityalias are retrieved ... :1_2:UnDeeper:
****************************************************** > pAKA: entityalias = Nothing :1_2:UnDeeper:
slAKA> IN: "about" ( "your inaction" ) ) ) ) ) ) )
slAKA> MATCH (COK): "about" ( "your inaction"
slAKA> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

***************************************************** \ slAKA has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
***************************************************** / undeepers      :1_2:UnDeeper:
****************************************************** > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers :1_2:UnDeeper:
****************************************************** > sameLine: success! :1_3:UnDeeper:
undeepers> IN: ) ) ) ) ) ) )
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

***************************************************** \ undeepers has returned () :1_3:UnDeeper:
pKeyValuesAka> IN: "about" ( "your inaction" ) ) ) ) ) ) )
pKeyValuesAka> MATCH (COK): "about" ( "your inaction" )
pKeyValuesAka> VALUE: (("about" :| ["your inaction"],Nothing),[])

**************************************************** \ pKeyValuesAka has returned ("about" :| ["your inaction"],Nothing) :1_3:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "about" ( "your inaction" ) ) ) ) ) ) )
pParamText(flat) first line: pKeyValues> MATCH (COK): "about" ( "your inaction" )
pParamText(flat) first line: pKeyValues> VALUE: (("about" :| ["your inaction"],Nothing),[])

*************************************************** \ pParamText(flat) first line: pKeyValues has returned ("about" :| ["your inaction"],Nothing) :1_3:UnDeeper:
*************************************************** / pParamText(flat) subsequent lines: sameMany pKeyValues :1_3:UnDeeper:
**************************************************** / manyIndentation/leaf? :1_3:UnDeeper:
***************************************************** / sameMany         :1_3:UnDeeper:
****************************************************** / pKeyValuesAka  :1_3:UnDeeper:
******************************************************* / slAKA        :1_3:UnDeeper:
******************************************************** / $*|        :1_3:UnDeeper:
********************************************************* / slAKA base :1_3:UnDeeper:
********************************************************** / slKeyValues :1_3:UnDeeper:
*********************************************************** / $*|  :1_3:UnDeeper:
************************************************************ / someSL :1_3:UnDeeper:
************************************************************* / pNumAsText :1_3:UnDeeper:
pNumAsText> IN: ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=97:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_3:UnDeeper:
someSL> IN: ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=97:
someSL> unexpected )
someSL> expecting other text or number

************************************************************ \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
$*|> IN: ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=97:
$*|> unexpected )
$*|> expecting other text or number

*********************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
slKeyValues> IN: ) ) ) ) ) )
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=97:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

********************************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
slAKA base> IN: ) ) ) ) ) )
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=97:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************************************* \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
$*|> IN: ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=97:
$*|> unexpected )
$*|> expecting other text or number

******************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
slAKA> IN: ) ) ) ) ) )
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=97:
slAKA> unexpected )
slAKA> expecting other text or number

******************************************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
pKeyValuesAka> IN: ) ) ) ) ) )
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=97:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

****************************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
sameMany> IN: ) ) ) ) ) )
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

***************************************************** \ sameMany has returned [] :1_3:UnDeeper:
manyIndentation/leaf?> IN: ) ) ) ) ) )
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

**************************************************** \ manyIndentation/leaf? has returned [] :1_3:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) ) ) ) ) )
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

*************************************************** \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned [] :1_3:UnDeeper:
pParamText> IN: "about" ( "your inaction" ) ) ) ) ) ) )
pParamText> MATCH (COK): "about" ( "your inaction" )
pParamText> VALUE: (("about" :| ["your inaction"],Nothing) :| [],[])

************************************************** \ pParamText has returned ("about" :| ["your inaction"],Nothing) :| [] :1_3:UnDeeper:
term p/3:plain p> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/3:plain p> MATCH (COK): "about" ( "your inaction" )
term p/3:plain p> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

************************************************* \ term p/3:plain p has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
term p/notLabelTerm> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/notLabelTerm> MATCH (COK): "about" ( "your inaction" )
term p/notLabelTerm> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

************************************************ \ term p/notLabelTerm has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
term p> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p> MATCH (COK): "about" ( "your inaction" )
term p> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

*********************************************** \ term p has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
*********************************************** / binary(Or)                   :1_3:UnDeeper:
binary(Or)> IN: ) ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=97:
binary(Or)> unexpected )
binary(Or)> expecting OR

*********************************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :1_3:UnDeeper:
*********************************************** / binary(And)                  :1_3:UnDeeper:
binary(And)> IN: ) ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=97:
binary(And)> unexpected )
binary(And)> expecting AND

*********************************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :1_3:UnDeeper:
*********************************************** / binary(SetLess)              :1_3:UnDeeper:
binary(SetLess)> IN: ) ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=97:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

*********************************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :1_3:UnDeeper:
*********************************************** / binary(SetPlus)              :1_3:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=97:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

*********************************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :1_3:UnDeeper:
expression> IN: "about" ( "your inaction" ) ) ) ) ) ) )
expression> MATCH (COK): "about" ( "your inaction" )
expression> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

********************************************** \ expression has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
ppp inner> IN: "about" ( "your inaction" ) ) ) ) ) ) )
ppp inner> MATCH (COK): "about" ( "your inaction" )
ppp inner> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

********************************************* \ ppp inner has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
********************************************* > |<*/recurse matched 1 UnDeepers  :1_3:UnDeeper:
|<*/parent> IN: ) "about" ( "your inaction" ) ) ) ) ) )  <…>
|<*/parent> MATCH (COK): ) "about" ( "your inaction" )
|<*/parent> VALUE: ((MyLeaf (("about" :| ["your inaction"],Nothing) :| []),-1),[])

******************************************** \ |<*/parent has returned (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),-1) :1_3:UnDeeper:
******************************************** / undeepers                          :1_3:UnDeeper:
********************************************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :1_3:UnDeeper:
********************************************* > sameLine: success!               :1_3:UnDeeper:
undeepers> IN: ) ) ) ) ) )
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

******************************************** \ undeepers has returned ()          :1_3:UnDeeper:
******************************************** > 1c: got label to the right of next line: ["to","the PDPC"] :1_3:UnDeeper:
******************************************** > 1c: got inner: MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
term p/1c:label ends to the right of line below> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1c:label ends to the right of line below> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1c:label ends to the right of line below> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

******************************************* \ term p/1c:label ends to the right of line below has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
term p> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
term p> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

****************************************** \ term p has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
****************************************** / binary(Or)                             :1_3:UnDeeper:
binary(Or)> IN: ) ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=97:
binary(Or)> unexpected )
binary(Or)> expecting OR

****************************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :1_3:UnDeeper:
****************************************** / binary(And)                            :1_3:UnDeeper:
binary(And)> IN: ) ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=97:
binary(And)> unexpected )
binary(And)> expecting AND

****************************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :1_3:UnDeeper:
****************************************** / binary(SetLess)                        :1_3:UnDeeper:
binary(SetLess)> IN: ) ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=97:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

****************************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :1_3:UnDeeper:
****************************************** / binary(SetPlus)                        :1_3:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=97:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

****************************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :1_3:UnDeeper:
expression> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
expression> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
expression> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

***************************************** \ expression has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
ppp inner> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
ppp inner> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
ppp inner> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

**************************************** \ ppp inner has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
**************************************** > |>>/base got MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
|>>/base> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
|>>/base> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
|>>/base> VALUE: ((MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0),[])

*************************************** \ |>>/base has returned (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0) :1_3:UnDeeper:
|>| calling $>>> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
|>| calling $>>> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
|>| calling $>>> VALUE: ((MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0),[])

************************************** \ |>| calling $>> has returned (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0) :1_3:UnDeeper:
************************************** / undeepers                                      :1_3:UnDeeper:
*************************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :1_3:UnDeeper:
*************************************** > sameLine: success!                           :1_3:UnDeeper:
undeepers> IN: ) ) ) ) ) )
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************************** \ undeepers has returned ()                      :1_3:UnDeeper:
************************************** > 1a: got label, then inner immediately below: ["respond"] :1_3:UnDeeper:
************************************** > 1a: got inner: MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
term p/1a:label ends directly above next line> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
term p/1a:label ends directly above next line> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
term p/1a:label ends directly above next line> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

************************************* \ term p/1a:label ends directly above next line has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
term p> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
term p> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
term p> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

************************************ \ term p has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
************************************ / binary(Or)                                         :1_3:UnDeeper:
binary(Or)> IN: ) ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=97:
binary(Or)> unexpected )
binary(Or)> expecting OR

************************************ \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :1_3:UnDeeper:
************************************ / binary(And)                                        :1_3:UnDeeper:
binary(And)> IN: ) ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=97:
binary(And)> unexpected )
binary(And)> expecting AND

************************************ \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :1_3:UnDeeper:
************************************ / binary(SetLess)                                    :1_3:UnDeeper:
binary(SetLess)> IN: ) ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=97:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

************************************ \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :1_3:UnDeeper:
************************************ / binary(SetPlus)                                    :1_3:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=97:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

************************************ \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :1_3:UnDeeper:
expression> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
expression> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
expression> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

*********************************** \ expression has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
ppp inner> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
ppp inner> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
ppp inner> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

********************************** \ ppp inner has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
manyIndentation/leaf?> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
manyIndentation/leaf?> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
manyIndentation/leaf?> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

********************************* \ manyIndentation/leaf? has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
********************************* / myindented-UnDeeper                                      :1_3:UnDeeper:
myindented-UnDeeper> IN: ) ) ) ) ) )
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

********************************* \ myindented-UnDeeper has returned UnDeeper                  :1_4:UnDeeper:
someIndentation> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someIndentation> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
someIndentation> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

******************************** \ someIndentation has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
term p/2:someIndentation expr p> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/2:someIndentation expr p> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/2:someIndentation expr p> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

******************************* \ term p/2:someIndentation expr p has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
term p/notLabelTerm> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/notLabelTerm> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/notLabelTerm> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

****************************** \ term p/notLabelTerm has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
term p> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

***************************** \ term p has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
***************************** / binary(Or)                                                         :1_4:UnDeeper:
binary(Or)> IN: ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=98:
binary(Or)> unexpected )
binary(Or)> expecting OR

***************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR          :1_4:UnDeeper:
***************************** / binary(And)                                                        :1_4:UnDeeper:
binary(And)> IN: ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=98:
binary(And)> unexpected )
binary(And)> expecting AND

***************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND        :1_4:UnDeeper:
***************************** / binary(SetLess)                                                    :1_4:UnDeeper:
binary(SetLess)> IN: ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=98:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

***************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS   :1_4:UnDeeper:
***************************** / binary(SetPlus)                                                    :1_4:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=98:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

***************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS   :1_4:UnDeeper:
expression> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
expression> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
expression> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

**************************** \ expression has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
ppp inner> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
ppp inner> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
ppp inner> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

*************************** \ ppp inner has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
expr pParamText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
expr pParamText> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
expr pParamText> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)])),[])

************************** \ expr pParamText has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)])) :1_4:UnDeeper:
dBoolStructP calling exprP> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
dBoolStructP calling exprP> MATCH (CERR): ( "respond" "to" ( "the PDPC" ) "about"  <…>
dBoolStructP calling exprP> ERROR:
dBoolStructP calling exprP> offset=98:
dBoolStructP calling exprP> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

************************* \ !Consumed Error: dBoolStructP calling exprP: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
pAction calling dBoolStructP> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pAction calling dBoolStructP> MATCH (CERR): ( "respond" "to" ( "the PDPC" ) "about"  <…>
pAction calling dBoolStructP> ERROR:
pAction calling dBoolStructP> offset=98:
pAction calling dBoolStructP> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

************************ \ !Consumed Error: pAction calling dBoolStructP: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
pDoAction/pAction> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pDoAction/pAction> MATCH (CERR): ( "respond" "to" ( "the PDPC" ) "about"  <…>
pDoAction/pAction> ERROR:
pDoAction/pAction> offset=98:
pDoAction/pAction> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

*********************** \ !Consumed Error: pDoAction/pAction: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
regulative permutation with deontic-temporal> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
regulative permutation with deontic-temporal> MATCH (CERR): MUST DO ( "respond" "to" ( "the PDPC" )  <…>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=98:
regulative permutation with deontic-temporal> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

********************** \ !Consumed Error: regulative permutation with deontic-temporal: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
********************** / regulative permutation with deontic-action                                          :12_6:Must:
*********************** / WHERE                                                                             :12_6:Must:
WHERE> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=85:
WHERE> unexpected MUST
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                        :12_6:Must:
*********************** / preambleParamText:[Having]                                                        :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                       :12_6:Must:
preambleParamText:[Having]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=85:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING  :12_6:Must:
*********************** / preambleParamText:[Given]                                                         :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                        :12_6:Must:
preambleParamText:[Given]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=85:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN    :12_6:Must:
*********************** / preambleParamText:[Upon]                                                          :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                         :12_6:Must:
preambleParamText:[Upon]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=85:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON      :12_6:Must:
*********************** / preambleBoolStructR [Unless]                                                      :12_6:Must:
preambleBoolStructR [Unless]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=85:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS :12_6:Must:
*********************** / preambleBoolStructR [When,If]                                                     :12_6:Must:
preambleBoolStructR [When,If]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=85:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN :12_6:Must:
*********************** / pTemporal/eventually                                                              :12_6:Must:
pTemporal/eventually> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=85:
pTemporal/eventually> unexpected MUST
pTemporal/eventually> expecting EVENTUALLY

*********************** \ !Unconsumed Error: pTemporal/eventually: Unexpected MUST Expecting: EVENTUALLY    :12_6:Must:
*********************** / pTemporal/specifically                                                            :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting AFTER, BEFORE, BY, or ON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: BEFORE AFTER BY ON           :12_6:Must:
pTemporal/specifically> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=85:
pTemporal/specifically> unexpected MUST
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

*********************** \ !Unconsumed Error: pTemporal/specifically: Unexpected MUST Expecting: BEFORE AFTER BY ON :12_6:Must:
*********************** / pTemporal/vaguely                                                                 :12_6:Must:
pTemporal/vaguely> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=85:
pTemporal/vaguely> unexpected MUST
pTemporal/vaguely> expecting Other text

*********************** \ !Unconsumed Error: pTemporal/vaguely: Unexpected MUST Expecting: Other text       :12_6:Must:
*********************** / WHERE                                                                             :12_6:Must:
WHERE> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=85:
WHERE> unexpected MUST
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                        :12_6:Must:
*********************** / preambleParamText:[Having]                                                        :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                       :12_6:Must:
preambleParamText:[Having]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=85:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING  :12_6:Must:
*********************** / preambleParamText:[Given]                                                         :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                        :12_6:Must:
preambleParamText:[Given]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=85:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN    :12_6:Must:
*********************** / preambleParamText:[Upon]                                                          :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                         :12_6:Must:
preambleParamText:[Upon]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=85:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON      :12_6:Must:
*********************** / preambleBoolStructR [Unless]                                                      :12_6:Must:
preambleBoolStructR [Unless]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=85:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS :12_6:Must:
*********************** / preambleBoolStructR [When,If]                                                     :12_6:Must:
preambleBoolStructR [When,If]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=85:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN :12_6:Must:
*********************** / pTemporal/eventually                                                              :12_6:Must:
pTemporal/eventually> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=85:
pTemporal/eventually> unexpected MUST
pTemporal/eventually> expecting EVENTUALLY

*********************** \ !Unconsumed Error: pTemporal/eventually: Unexpected MUST Expecting: EVENTUALLY    :12_6:Must:
*********************** / pTemporal/specifically                                                            :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting AFTER, BEFORE, BY, or ON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: BEFORE AFTER BY ON           :12_6:Must:
pTemporal/specifically> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=85:
pTemporal/specifically> unexpected MUST
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

*********************** \ !Unconsumed Error: pTemporal/specifically: Unexpected MUST Expecting: BEFORE AFTER BY ON :12_6:Must:
*********************** / pTemporal/vaguely                                                                 :12_6:Must:
pTemporal/vaguely> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=85:
pTemporal/vaguely> unexpected MUST
pTemporal/vaguely> expecting Other text

*********************** \ !Unconsumed Error: pTemporal/vaguely: Unexpected MUST Expecting: Other text       :12_6:Must:
*********************** / pDA                                                                               :12_6:Must:
************************ / pAction calling dBoolStructP                                                    :13_6:Do:
************************* / dBoolStructP calling exprP                                                    :13_6:Do:
************************** / expr pParamText                                                             :13_6:Do:
*************************** / ppp inner                                                                 :13_6:Do:
**************************** / expression                                                              :13_6:Do:
***************************** / term p                                                                :13_6:Do:
****************************** / term p/1a:label ends directly above next line                       :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1a:label ends directly above next line> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=86:
term p/1a:label ends directly above next line> unexpected DO
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1b:label ends to the left of line below, with EOL            :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1b:label ends to the left of line below, with EOL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=86:
term p/1b:label ends to the left of line below, with EOL> unexpected DO
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1c:label ends to the right of line below                     :13_6:Do:
******************************* > |<|                                                               :13_6:Do:
******************************* > |<* starting                                                      :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1c:label ends to the right of line below> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=86:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/notLabelTerm                                                 :13_6:Do:
******************************* / term p/2:someIndentation expr p                                   :13_6:Do:
******************************** / someIndentation                                                 :13_6:Do:
********************************* / myindented-GoDeeper                                           :13_6:Do:
myindented-GoDeeper> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=86:
myindented-GoDeeper> unexpected DO
myindented-GoDeeper> expecting (

********************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected DO Expecting: ( :13_6:Do:
someIndentation> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=86:
someIndentation> unexpected DO
someIndentation> expecting (

******************************** \ !Unconsumed Error: someIndentation: Unexpected DO Expecting: (  :13_6:Do:
term p/2:someIndentation expr p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=86:
term p/2:someIndentation expr p> unexpected DO
term p/2:someIndentation expr p> expecting (

******************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected DO Expecting: ( :13_6:Do:
******************************* / term p/3:plain p                                                  :13_6:Do:
******************************** / pParamText                                                      :13_6:Do:
********************************* / pParamText(flat) first line: pKeyValues                       :13_6:Do:
********************************** / pKeyValuesAka                                               :13_6:Do:
*********************************** / slAKA                                                     :13_6:Do:
************************************ / $*|                                                     :13_6:Do:
************************************* / slAKA base                                            :13_6:Do:
************************************** / slKeyValues                                         :13_6:Do:
*************************************** / $*|                                               :13_6:Do:
**************************************** / someSL                                          :13_6:Do:
***************************************** / pNumAsText                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

***************************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

**************************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

*************************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=86:
slKeyValues> unexpected DO
slKeyValues> expecting other text or number

************************************** \ !Unconsumed Error: slKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA base> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=86:
slAKA base> unexpected DO
slAKA base> expecting other text or number

************************************* \ !Unconsumed Error: slAKA base: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

************************************ \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=86:
slAKA> unexpected DO
slAKA> expecting other text or number

*********************************** \ !Unconsumed Error: slAKA: Unexpected DO Expecting: other text or number :13_6:Do:
pKeyValuesAka> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=86:
pKeyValuesAka> unexpected DO
pKeyValuesAka> expecting other text or number

********************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText(flat) first line: pKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=86:
pParamText(flat) first line: pKeyValues> unexpected DO
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=86:
pParamText> unexpected DO
pParamText> expecting other text or number

******************************** \ !Unconsumed Error: pParamText: Unexpected DO Expecting: other text or number :13_6:Do:
term p/3:plain p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=86:
term p/3:plain p> unexpected DO
term p/3:plain p> expecting other text or number

******************************* \ !Unconsumed Error: term p/3:plain p: Unexpected DO Expecting: other text or number :13_6:Do:
term p/notLabelTerm> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=86:
term p/notLabelTerm> unexpected DO
term p/notLabelTerm> expecting ( or term

****************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected DO Expecting: ( term :13_6:Do:
term p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=86:
term p> unexpected DO
term p> expecting (, other text or number, or term

***************************** \ !Unconsumed Error: term p: Unexpected DO Expecting: ( other text or number term :13_6:Do:
expression> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=86:
expression> unexpected DO
expression> expecting expression

**************************** \ !Unconsumed Error: expression: Unexpected DO Expecting: expression      :13_6:Do:
ppp inner> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=86:
ppp inner> unexpected DO
ppp inner> expecting expression

*************************** \ !Unconsumed Error: ppp inner: Unexpected DO Expecting: expression         :13_6:Do:
*************************** / withPrePost                                                               :13_6:Do:
**************************** > |<* starting                                                            :13_6:Do:
**************************** / $*|                                                                     :13_6:Do:
***************************** / pre part                                                              :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

***************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text    :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

**************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text           :13_6:Do:
withPrePost> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=86:
withPrePost> unexpected DO
withPrePost> expecting ( or Other text

*************************** \ !Unconsumed Error: withPrePost: Unexpected DO Expecting: ( Other text     :13_6:Do:
*************************** / $*|                                                                       :13_6:Do:
**************************** / pre part                                                                :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

**************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text      :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

*************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text             :13_6:Do:
expr pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expr pParamText> MATCH (EERR): <EMPTY>
expr pParamText> ERROR:
expr pParamText> offset=86:
expr pParamText> unexpected DO
expr pParamText> expecting (, Other text, or expression

************************** \ !Unconsumed Error: expr pParamText: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
dBoolStructP calling exprP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
dBoolStructP calling exprP> MATCH (EERR): <EMPTY>
dBoolStructP calling exprP> ERROR:
dBoolStructP calling exprP> offset=86:
dBoolStructP calling exprP> unexpected DO
dBoolStructP calling exprP> expecting (, Other text, or expression

************************* \ !Unconsumed Error: dBoolStructP calling exprP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pAction calling dBoolStructP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pAction calling dBoolStructP> MATCH (EERR): <EMPTY>
pAction calling dBoolStructP> ERROR:
pAction calling dBoolStructP> offset=86:
pAction calling dBoolStructP> unexpected DO
pAction calling dBoolStructP> expecting (, Other text, or expression

************************ \ !Unconsumed Error: pAction calling dBoolStructP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pDA> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pDA> MATCH (CERR): MUST
pDA> ERROR:
pDA> offset=86:
pDA> unexpected DO
pDA> expecting (, Other text, or expression

*********************** \ !Consumed Error: pDA: Unexpected DO Expecting: ( ( Other text expression          :13_6:Do:
*********************** / pDA                                                                               :12_6:Must:
************************ / pAction calling dBoolStructP                                                    :13_6:Do:
************************* / dBoolStructP calling exprP                                                    :13_6:Do:
************************** / expr pParamText                                                             :13_6:Do:
*************************** / ppp inner                                                                 :13_6:Do:
**************************** / expression                                                              :13_6:Do:
***************************** / term p                                                                :13_6:Do:
****************************** / term p/1a:label ends directly above next line                       :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1a:label ends directly above next line> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=86:
term p/1a:label ends directly above next line> unexpected DO
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1b:label ends to the left of line below, with EOL            :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1b:label ends to the left of line below, with EOL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=86:
term p/1b:label ends to the left of line below, with EOL> unexpected DO
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1c:label ends to the right of line below                     :13_6:Do:
******************************* > |<|                                                               :13_6:Do:
******************************* > |<* starting                                                      :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1c:label ends to the right of line below> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=86:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/notLabelTerm                                                 :13_6:Do:
******************************* / term p/2:someIndentation expr p                                   :13_6:Do:
******************************** / someIndentation                                                 :13_6:Do:
********************************* / myindented-GoDeeper                                           :13_6:Do:
myindented-GoDeeper> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=86:
myindented-GoDeeper> unexpected DO
myindented-GoDeeper> expecting (

********************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected DO Expecting: ( :13_6:Do:
someIndentation> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=86:
someIndentation> unexpected DO
someIndentation> expecting (

******************************** \ !Unconsumed Error: someIndentation: Unexpected DO Expecting: (  :13_6:Do:
term p/2:someIndentation expr p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=86:
term p/2:someIndentation expr p> unexpected DO
term p/2:someIndentation expr p> expecting (

******************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected DO Expecting: ( :13_6:Do:
******************************* / term p/3:plain p                                                  :13_6:Do:
******************************** / pParamText                                                      :13_6:Do:
********************************* / pParamText(flat) first line: pKeyValues                       :13_6:Do:
********************************** / pKeyValuesAka                                               :13_6:Do:
*********************************** / slAKA                                                     :13_6:Do:
************************************ / $*|                                                     :13_6:Do:
************************************* / slAKA base                                            :13_6:Do:
************************************** / slKeyValues                                         :13_6:Do:
*************************************** / $*|                                               :13_6:Do:
**************************************** / someSL                                          :13_6:Do:
***************************************** / pNumAsText                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

***************************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

**************************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

*************************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=86:
slKeyValues> unexpected DO
slKeyValues> expecting other text or number

************************************** \ !Unconsumed Error: slKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA base> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=86:
slAKA base> unexpected DO
slAKA base> expecting other text or number

************************************* \ !Unconsumed Error: slAKA base: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

************************************ \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=86:
slAKA> unexpected DO
slAKA> expecting other text or number

*********************************** \ !Unconsumed Error: slAKA: Unexpected DO Expecting: other text or number :13_6:Do:
pKeyValuesAka> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=86:
pKeyValuesAka> unexpected DO
pKeyValuesAka> expecting other text or number

********************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText(flat) first line: pKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=86:
pParamText(flat) first line: pKeyValues> unexpected DO
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=86:
pParamText> unexpected DO
pParamText> expecting other text or number

******************************** \ !Unconsumed Error: pParamText: Unexpected DO Expecting: other text or number :13_6:Do:
term p/3:plain p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=86:
term p/3:plain p> unexpected DO
term p/3:plain p> expecting other text or number

******************************* \ !Unconsumed Error: term p/3:plain p: Unexpected DO Expecting: other text or number :13_6:Do:
term p/notLabelTerm> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=86:
term p/notLabelTerm> unexpected DO
term p/notLabelTerm> expecting ( or term

****************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected DO Expecting: ( term :13_6:Do:
term p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=86:
term p> unexpected DO
term p> expecting (, other text or number, or term

***************************** \ !Unconsumed Error: term p: Unexpected DO Expecting: ( other text or number term :13_6:Do:
expression> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=86:
expression> unexpected DO
expression> expecting expression

**************************** \ !Unconsumed Error: expression: Unexpected DO Expecting: expression      :13_6:Do:
ppp inner> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=86:
ppp inner> unexpected DO
ppp inner> expecting expression

*************************** \ !Unconsumed Error: ppp inner: Unexpected DO Expecting: expression         :13_6:Do:
*************************** / withPrePost                                                               :13_6:Do:
**************************** > |<* starting                                                            :13_6:Do:
**************************** / $*|                                                                     :13_6:Do:
***************************** / pre part                                                              :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

***************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text    :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

**************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text           :13_6:Do:
withPrePost> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=86:
withPrePost> unexpected DO
withPrePost> expecting ( or Other text

*************************** \ !Unconsumed Error: withPrePost: Unexpected DO Expecting: ( Other text     :13_6:Do:
*************************** / $*|                                                                       :13_6:Do:
**************************** / pre part                                                                :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

**************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text      :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

*************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text             :13_6:Do:
expr pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expr pParamText> MATCH (EERR): <EMPTY>
expr pParamText> ERROR:
expr pParamText> offset=86:
expr pParamText> unexpected DO
expr pParamText> expecting (, Other text, or expression

************************** \ !Unconsumed Error: expr pParamText: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
dBoolStructP calling exprP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
dBoolStructP calling exprP> MATCH (EERR): <EMPTY>
dBoolStructP calling exprP> ERROR:
dBoolStructP calling exprP> offset=86:
dBoolStructP calling exprP> unexpected DO
dBoolStructP calling exprP> expecting (, Other text, or expression

************************* \ !Unconsumed Error: dBoolStructP calling exprP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pAction calling dBoolStructP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pAction calling dBoolStructP> MATCH (EERR): <EMPTY>
pAction calling dBoolStructP> ERROR:
pAction calling dBoolStructP> offset=86:
pAction calling dBoolStructP> unexpected DO
pAction calling dBoolStructP> expecting (, Other text, or expression

************************ \ !Unconsumed Error: pAction calling dBoolStructP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pDA> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pDA> MATCH (CERR): MUST
pDA> ERROR:
pDA> offset=86:
pDA> unexpected DO
pDA> expecting (, Other text, or expression

*********************** \ !Consumed Error: pDA: Unexpected DO Expecting: ( ( Other text expression          :13_6:Do:
regulative permutation with deontic-action> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
regulative permutation with deontic-action> MATCH (EERR): <EMPTY>
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=86:
regulative permutation with deontic-action> unexpected DO
regulative permutation with deontic-action> expecting (, Other text, or expression

********************** \ !Unconsumed Error: regulative permutation with deontic-action: Unexpected DO Expecting: ( ( Other text expression :12_6:Must:
permutationsReg> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=98:
permutationsReg> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

********************* \ !Unconsumed Error: permutationsReg: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
manyIndentation/leaf?> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=98:
manyIndentation/leaf?> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

******************** \ !Unconsumed Error: manyIndentation/leaf?: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
******************** / manyIndentation/deeper; calling someIndentation                                         :12_6:Must:
********************* / someIndentation                                                                       :12_6:Must:
********************** / myindented-GoDeeper                                                                 :12_6:Must:
myindented-GoDeeper> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=85:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: (                :12_6:Must:
someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting (

********************* \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: (                      :12_6:Must:
manyIndentation/deeper; calling someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=85:
manyIndentation/deeper; calling someIndentation> unexpected MUST
manyIndentation/deeper; calling someIndentation> expecting (

******************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MUST Expecting: ( :12_6:Must:
someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=98:
someIndentation> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

******************* \ !Consumed Error: someIndentation: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
pRegRuleSugary> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRegRuleSugary> MATCH (CERR): "You" (
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=98:
pRegRuleSugary> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

****************** \ !Consumed Error: pRegRuleSugary: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
****************** / pRegRuleNormal                                                                            :12_5:Other "You:
******************* / permutationsReg                                                                         :12_5:Other "You:
******************** / regulative permutation with deontic-temporal                                          :12_5:Other "You:
********************* / WHERE                                                                               :12_5:Other "You:
WHERE> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=83:
WHERE> unexpected "You"
WHERE> expecting WHERE

********************* \ !Unconsumed Error: WHERE: Unexpected "You" Expecting: WHERE                         :12_5:Other "You:
********************* / preambleParamText:[Having]                                                          :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting HAVING

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: HAVING                        :12_5:Other "You:
preambleParamText:[Having]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=83:
preambleParamText:[Having]> unexpected "You"
preambleParamText:[Having]> expecting HAVING

********************* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "You" Expecting: HAVING   :12_5:Other "You:
********************* / preambleParamText:[Given]                                                           :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting GIVEN

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: GIVEN                         :12_5:Other "You:
preambleParamText:[Given]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=83:
preambleParamText:[Given]> unexpected "You"
preambleParamText:[Given]> expecting GIVEN

********************* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "You" Expecting: GIVEN     :12_5:Other "You:
********************* / preambleParamText:[Upon]                                                            :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting UPON

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: UPON                          :12_5:Other "You:
preambleParamText:[Upon]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=83:
preambleParamText:[Upon]> unexpected "You"
preambleParamText:[Upon]> expecting UPON

********************* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "You" Expecting: UPON       :12_5:Other "You:
********************* / preambleBoolStructR [Unless]                                                        :12_5:Other "You:
preambleBoolStructR [Unless]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=83:
preambleBoolStructR [Unless]> unexpected "You"
preambleBoolStructR [Unless]> expecting UNLESS

********************* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "You" Expecting: UNLESS :12_5:Other "You:
********************* / preambleBoolStructR [When,If]                                                       :12_5:Other "You:
preambleBoolStructR [When,If]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=83:
preambleBoolStructR [When,If]> unexpected "You"
preambleBoolStructR [When,If]> expecting IF or WHEN

********************* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "You" Expecting: IF WHEN :12_5:Other "You:
********************* / pDT                                                                                 :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting MAY, MUST, or SHANT

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: MUST MAY SHANT                :12_5:Other "You:
pDT> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=83:
pDT> unexpected "You"
pDT> expecting MAY, MUST, or SHANT

********************* \ !Unconsumed Error: pDT: Unexpected "You" Expecting: MUST MAY SHANT                  :12_5:Other "You:
********************* / pActor [REvery,RParty,RTokAll]                                                      :12_5:Other "You:
pActor [REvery,RParty,RTokAll]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=83:
pActor [REvery,RParty,RTokAll]> unexpected "You"
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

********************* \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected "You" Expecting: EVERY PARTY ALL :12_5:Other "You:
********************* / pDoAction/Do                                                                        :12_5:Other "You:
pDoAction/Do> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=83:
pDoAction/Do> unexpected "You"
pDoAction/Do> expecting DO

********************* \ !Unconsumed Error: pDoAction/Do: Unexpected "You" Expecting: DO                     :12_5:Other "You:
regulative permutation with deontic-temporal> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=83:
regulative permutation with deontic-temporal> unexpected "You"
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

******************** \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected "You" Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :12_5:Other "You:
******************** / regulative permutation with deontic-action                                            :12_5:Other "You:
********************* / WHERE                                                                               :12_5:Other "You:
WHERE> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=83:
WHERE> unexpected "You"
WHERE> expecting WHERE

********************* \ !Unconsumed Error: WHERE: Unexpected "You" Expecting: WHERE                         :12_5:Other "You:
********************* / preambleParamText:[Having]                                                          :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting HAVING

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: HAVING                        :12_5:Other "You:
preambleParamText:[Having]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=83:
preambleParamText:[Having]> unexpected "You"
preambleParamText:[Having]> expecting HAVING

********************* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "You" Expecting: HAVING   :12_5:Other "You:
********************* / preambleParamText:[Given]                                                           :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting GIVEN

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: GIVEN                         :12_5:Other "You:
preambleParamText:[Given]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=83:
preambleParamText:[Given]> unexpected "You"
preambleParamText:[Given]> expecting GIVEN

********************* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "You" Expecting: GIVEN     :12_5:Other "You:
********************* / preambleParamText:[Upon]                                                            :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting UPON

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: UPON                          :12_5:Other "You:
preambleParamText:[Upon]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=83:
preambleParamText:[Upon]> unexpected "You"
preambleParamText:[Upon]> expecting UPON

********************* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "You" Expecting: UPON       :12_5:Other "You:
********************* / preambleBoolStructR [Unless]                                                        :12_5:Other "You:
preambleBoolStructR [Unless]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=83:
preambleBoolStructR [Unless]> unexpected "You"
preambleBoolStructR [Unless]> expecting UNLESS

********************* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "You" Expecting: UNLESS :12_5:Other "You:
********************* / preambleBoolStructR [When,If]                                                       :12_5:Other "You:
preambleBoolStructR [When,If]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=83:
preambleBoolStructR [When,If]> unexpected "You"
preambleBoolStructR [When,If]> expecting IF or WHEN

********************* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "You" Expecting: IF WHEN :12_5:Other "You:
********************* / pTemporal/eventually                                                                :12_5:Other "You:
pTemporal/eventually> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=83:
pTemporal/eventually> unexpected "You"
pTemporal/eventually> expecting EVENTUALLY

********************* \ !Unconsumed Error: pTemporal/eventually: Unexpected "You" Expecting: EVENTUALLY     :12_5:Other "You:
********************* / pTemporal/specifically                                                              :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting AFTER, BEFORE, BY, or ON

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: BEFORE AFTER BY ON            :12_5:Other "You:
pTemporal/specifically> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=83:
pTemporal/specifically> unexpected "You"
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

********************* \ !Unconsumed Error: pTemporal/specifically: Unexpected "You" Expecting: BEFORE AFTER BY ON :12_5:Other "You:
********************* / pTemporal/vaguely                                                                   :12_5:Other "You:
pTemporal/vaguely> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pTemporal/vaguely> MATCH (COK): "You"
pTemporal/vaguely> VALUE: (Just (TemporalConstraint TVague (Just 0) "You"),[])

********************* \ pTemporal/vaguely has returned Just (TemporalConstraint TVague (Just 0) "You")       :12_6:GoDeeper:
********************* / WHERE                                                                                :12_6:GoDeeper:
WHERE> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=84:
WHERE> unexpected (
WHERE> expecting WHERE

********************* \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                              :12_6:GoDeeper:
********************* / preambleParamText:[Having]                                                           :12_6:GoDeeper:
********************** / $>|                                                                                :12_6:GoDeeper:
$>|> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=84:
$>|> unexpected (
$>|> expecting HAVING

********************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                             :12_6:GoDeeper:
preambleParamText:[Having]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=84:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

********************* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING        :12_6:GoDeeper:
********************* / preambleParamText:[Given]                                                            :12_6:GoDeeper:
********************** / $>|                                                                                :12_6:GoDeeper:
$>|> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=84:
$>|> unexpected (
$>|> expecting GIVEN

********************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                              :12_6:GoDeeper:
preambleParamText:[Given]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=84:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

********************* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN          :12_6:GoDeeper:
********************* / preambleParamText:[Upon]                                                             :12_6:GoDeeper:
********************** / $>|                                                                                :12_6:GoDeeper:
$>|> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=84:
$>|> unexpected (
$>|> expecting UPON

********************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                               :12_6:GoDeeper:
preambleParamText:[Upon]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=84:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

********************* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON            :12_6:GoDeeper:
********************* / preambleBoolStructR [Unless]                                                         :12_6:GoDeeper:
preambleBoolStructR [Unless]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=84:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

********************* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS      :12_6:GoDeeper:
********************* / preambleBoolStructR [When,If]                                                        :12_6:GoDeeper:
preambleBoolStructR [When,If]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=84:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

********************* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN    :12_6:GoDeeper:
********************* / pActor [REvery,RParty,RTokAll]                                                       :12_6:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=84:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

********************* \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL :12_6:GoDeeper:
********************* / pDA                                                                                  :12_6:GoDeeper:
pDA> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=84:
pDA> unexpected (
pDA> expecting MAY, MUST, or SHANT

********************* \ !Unconsumed Error: pDA: Unexpected ( Expecting: MUST MAY SHANT                       :12_6:GoDeeper:
regulative permutation with deontic-action> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
regulative permutation with deontic-action> MATCH (CERR): "You"
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=84:
regulative permutation with deontic-action> unexpected (
regulative permutation with deontic-action> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

******************** \ !Consumed Error: regulative permutation with deontic-action: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :12_6:GoDeeper:
permutationsReg> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=84:
permutationsReg> unexpected (
permutationsReg> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

******************* \ !Unconsumed Error: permutationsReg: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :12_5:Other "You:
pRegRuleNormal> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=84:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

****************** \ !Unconsumed Error: pRegRuleNormal: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :12_5:Other "You:
pRegRule> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=98:
pRegRule> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

***************** \ !Unconsumed Error: pRegRule: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_5:Other "You:
***************** / someDeep                                                                                    :12_5:Other "You:
****************** / someDeep first part calls base directly                                                   :12_5:Other "You:
someDeep first part calls base directly> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep first part calls base directly> MATCH (COK): "You"
someDeep first part calls base directly> VALUE: ("You",[])

****************** \ someDeep first part calls base directly has returned "You"                                 :12_6:GoDeeper:
****************** / someDeep second part recurses with someIndentation                                         :12_6:GoDeeper:
******************* / someIndentation                                                                          :12_6:GoDeeper:
******************** / myindented-GoDeeper                                                                    :12_6:GoDeeper:
myindented-GoDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******************** \ myindented-GoDeeper has returned GoDeeper                                               :12_6:Must:
******************** / manyIndentation/leaf?                                                                   :12_6:Must:
********************* / someDeep                                                                              :12_6:Must:
********************** / someDeep first part calls base directly                                             :12_6:Must:
someDeep first part calls base directly> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=85:
someDeep first part calls base directly> unexpected MUST
someDeep first part calls base directly> expecting Other text

********************** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MUST Expecting: Other text :12_6:Must:
someDeep> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=85:
someDeep> unexpected MUST
someDeep> expecting Other text

********************* \ !Unconsumed Error: someDeep: Unexpected MUST Expecting: Other text                    :12_6:Must:
manyIndentation/leaf?> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=85:
manyIndentation/leaf?> unexpected MUST
manyIndentation/leaf?> expecting Other text

******************** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MUST Expecting: Other text         :12_6:Must:
******************** / manyIndentation/deeper; calling someIndentation                                         :12_6:Must:
********************* / someIndentation                                                                       :12_6:Must:
********************** / myindented-GoDeeper                                                                 :12_6:Must:
myindented-GoDeeper> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=85:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: (                :12_6:Must:
someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting (

********************* \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: (                      :12_6:Must:
manyIndentation/deeper; calling someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=85:
manyIndentation/deeper; calling someIndentation> unexpected MUST
manyIndentation/deeper; calling someIndentation> expecting (

******************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MUST Expecting: ( :12_6:Must:
someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting ( or Other text

******************* \ !Consumed Error: someIndentation: Unexpected MUST Expecting: ( Other text                 :12_6:Must:
someDeep second part recurses with someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=85:
someDeep second part recurses with someIndentation> unexpected MUST
someDeep second part recurses with someIndentation> expecting ( or Other text

****************** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MUST Expecting: ( Other text :12_6:GoDeeper:
****************** > someDeep no luck, returning []                                                             :12_6:GoDeeper:
someDeep> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep> MATCH (COK): "You"
someDeep> VALUE: (["You"],[])

***************** \ someDeep has returned ["You"]                                                                :12_6:GoDeeper:
manyIndentation/leaf?> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
manyIndentation/leaf?> MATCH (COK): "You"
manyIndentation/leaf?> VALUE: (RuleAlias ["You"],[])

**************** \ manyIndentation/leaf? has returned RuleAlias ["You"]                                           :12_6:GoDeeper:
**************** / myindented-UnDeeper                                                                            :12_6:GoDeeper:
myindented-UnDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-UnDeeper> MATCH (EERR): <EMPTY>
myindented-UnDeeper> ERROR:
myindented-UnDeeper> offset=84:
myindented-UnDeeper> unexpected (
myindented-UnDeeper> expecting )

**************** \ !Unconsumed Error: myindented-UnDeeper: Unexpected ( Expecting: )                              :12_6:GoDeeper:
someIndentation> IN: ( "You" ( MUST DO ( "respond" "to" ( "th <…>
someIndentation> MATCH (CERR): ( "You"
someIndentation> ERROR:
someIndentation> offset=84:
someIndentation> unexpected (
someIndentation> expecting )

*************** \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                      :12_6:GoDeeper:
pHenceLest-Hence> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pHenceLest-Hence> MATCH (CERR): HENCE ( "You"
pHenceLest-Hence> ERROR:
pHenceLest-Hence> offset=84:
pHenceLest-Hence> unexpected (
pHenceLest-Hence> expecting )

************** \ !Consumed Error: pHenceLest-Hence: Unexpected ( Expecting: )                                       :12_6:GoDeeper:
manyIndentation/leaf?> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=84:
manyIndentation/leaf?> unexpected (
manyIndentation/leaf?> expecting )

************* \ !Unconsumed Error: manyIndentation/leaf?: Unexpected ( Expecting: )                               :10_4:May:
************* / manyIndentation/deeper; calling someIndentation                                                   :10_4:May:
************** / someIndentation                                                                                 :10_4:May:
*************** / myindented-GoDeeper                                                                           :10_4:May:
myindented-GoDeeper> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=71:
myindented-GoDeeper> unexpected MAY
myindented-GoDeeper> expecting (

*************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MAY Expecting: (                           :10_4:May:
someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting (

************** \ !Unconsumed Error: someIndentation: Unexpected MAY Expecting: (                                 :10_4:May:
manyIndentation/deeper; calling someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=71:
manyIndentation/deeper; calling someIndentation> unexpected MAY
manyIndentation/deeper; calling someIndentation> expecting (

************* \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MAY Expecting: (   :10_4:May:
someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=84:
someIndentation> unexpected (
someIndentation> expecting )

************ \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                         :10_4:May:
pRegRuleSugary> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRegRuleSugary> MATCH (CERR): "the PDPC" (
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=84:
pRegRuleSugary> unexpected (
pRegRuleSugary> expecting )

*********** \ !Consumed Error: pRegRuleSugary: Unexpected ( Expecting: )                                            :10_4:May:
*********** / pRegRuleNormal                                                                                      :10_3:Other "the:
************ / permutationsReg                                                                                   :10_3:Other "the:
************* / regulative permutation with deontic-temporal                                                    :10_3:Other "the:
************** / WHERE                                                                                         :10_3:Other "the:
WHERE> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=69:
WHERE> unexpected "the PDPC"
WHERE> expecting WHERE

************** \ !Unconsumed Error: WHERE: Unexpected "the PDPC" Expecting: WHERE                              :10_3:Other "the:
************** / preambleParamText:[Having]                                                                    :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting HAVING

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: HAVING                             :10_3:Other "the:
preambleParamText:[Having]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=69:
preambleParamText:[Having]> unexpected "the PDPC"
preambleParamText:[Having]> expecting HAVING

************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "the PDPC" Expecting: HAVING        :10_3:Other "the:
************** / preambleParamText:[Given]                                                                     :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting GIVEN

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: GIVEN                              :10_3:Other "the:
preambleParamText:[Given]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=69:
preambleParamText:[Given]> unexpected "the PDPC"
preambleParamText:[Given]> expecting GIVEN

************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "the PDPC" Expecting: GIVEN          :10_3:Other "the:
************** / preambleParamText:[Upon]                                                                      :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting UPON

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: UPON                               :10_3:Other "the:
preambleParamText:[Upon]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=69:
preambleParamText:[Upon]> unexpected "the PDPC"
preambleParamText:[Upon]> expecting UPON

************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "the PDPC" Expecting: UPON            :10_3:Other "the:
************** / preambleBoolStructR [Unless]                                                                  :10_3:Other "the:
preambleBoolStructR [Unless]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=69:
preambleBoolStructR [Unless]> unexpected "the PDPC"
preambleBoolStructR [Unless]> expecting UNLESS

************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "the PDPC" Expecting: UNLESS      :10_3:Other "the:
************** / preambleBoolStructR [When,If]                                                                 :10_3:Other "the:
preambleBoolStructR [When,If]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=69:
preambleBoolStructR [When,If]> unexpected "the PDPC"
preambleBoolStructR [When,If]> expecting IF or WHEN

************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "the PDPC" Expecting: IF WHEN    :10_3:Other "the:
************** / pDT                                                                                           :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting MAY, MUST, or SHANT

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: MUST MAY SHANT                     :10_3:Other "the:
pDT> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=69:
pDT> unexpected "the PDPC"
pDT> expecting MAY, MUST, or SHANT

************** \ !Unconsumed Error: pDT: Unexpected "the PDPC" Expecting: MUST MAY SHANT                       :10_3:Other "the:
************** / pActor [REvery,RParty,RTokAll]                                                                :10_3:Other "the:
pActor [REvery,RParty,RTokAll]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=69:
pActor [REvery,RParty,RTokAll]> unexpected "the PDPC"
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************** \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected "the PDPC" Expecting: EVERY PARTY ALL :10_3:Other "the:
************** / pDoAction/Do                                                                                  :10_3:Other "the:
pDoAction/Do> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=69:
pDoAction/Do> unexpected "the PDPC"
pDoAction/Do> expecting DO

************** \ !Unconsumed Error: pDoAction/Do: Unexpected "the PDPC" Expecting: DO                          :10_3:Other "the:
regulative permutation with deontic-temporal> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=69:
regulative permutation with deontic-temporal> unexpected "the PDPC"
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

************* \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected "the PDPC" Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :10_3:Other "the:
************* / regulative permutation with deontic-action                                                      :10_3:Other "the:
************** / WHERE                                                                                         :10_3:Other "the:
WHERE> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=69:
WHERE> unexpected "the PDPC"
WHERE> expecting WHERE

************** \ !Unconsumed Error: WHERE: Unexpected "the PDPC" Expecting: WHERE                              :10_3:Other "the:
************** / preambleParamText:[Having]                                                                    :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting HAVING

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: HAVING                             :10_3:Other "the:
preambleParamText:[Having]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=69:
preambleParamText:[Having]> unexpected "the PDPC"
preambleParamText:[Having]> expecting HAVING

************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "the PDPC" Expecting: HAVING        :10_3:Other "the:
************** / preambleParamText:[Given]                                                                     :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting GIVEN

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: GIVEN                              :10_3:Other "the:
preambleParamText:[Given]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=69:
preambleParamText:[Given]> unexpected "the PDPC"
preambleParamText:[Given]> expecting GIVEN

************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "the PDPC" Expecting: GIVEN          :10_3:Other "the:
************** / preambleParamText:[Upon]                                                                      :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting UPON

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: UPON                               :10_3:Other "the:
preambleParamText:[Upon]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=69:
preambleParamText:[Upon]> unexpected "the PDPC"
preambleParamText:[Upon]> expecting UPON

************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "the PDPC" Expecting: UPON            :10_3:Other "the:
************** / preambleBoolStructR [Unless]                                                                  :10_3:Other "the:
preambleBoolStructR [Unless]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=69:
preambleBoolStructR [Unless]> unexpected "the PDPC"
preambleBoolStructR [Unless]> expecting UNLESS

************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "the PDPC" Expecting: UNLESS      :10_3:Other "the:
************** / preambleBoolStructR [When,If]                                                                 :10_3:Other "the:
preambleBoolStructR [When,If]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=69:
preambleBoolStructR [When,If]> unexpected "the PDPC"
preambleBoolStructR [When,If]> expecting IF or WHEN

************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "the PDPC" Expecting: IF WHEN    :10_3:Other "the:
************** / pTemporal/eventually                                                                          :10_3:Other "the:
pTemporal/eventually> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=69:
pTemporal/eventually> unexpected "the PDPC"
pTemporal/eventually> expecting EVENTUALLY

************** \ !Unconsumed Error: pTemporal/eventually: Unexpected "the PDPC" Expecting: EVENTUALLY          :10_3:Other "the:
************** / pTemporal/specifically                                                                        :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting AFTER, BEFORE, BY, or ON

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: BEFORE AFTER BY ON                 :10_3:Other "the:
pTemporal/specifically> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=69:
pTemporal/specifically> unexpected "the PDPC"
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************** \ !Unconsumed Error: pTemporal/specifically: Unexpected "the PDPC" Expecting: BEFORE AFTER BY ON :10_3:Other "the:
************** / pTemporal/vaguely                                                                             :10_3:Other "the:
pTemporal/vaguely> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pTemporal/vaguely> MATCH (COK): "the PDPC"
pTemporal/vaguely> VALUE: (Just (TemporalConstraint TVague (Just 0) "the PDPC"),[])

************** \ pTemporal/vaguely has returned Just (TemporalConstraint TVague (Just 0) "the PDPC")            :10_4:GoDeeper:
************** / WHERE                                                                                          :10_4:GoDeeper:
WHERE> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=70:
WHERE> unexpected (
WHERE> expecting WHERE

************** \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                                        :10_4:GoDeeper:
************** / preambleParamText:[Having]                                                                     :10_4:GoDeeper:
*************** / $>|                                                                                          :10_4:GoDeeper:
$>|> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=70:
$>|> unexpected (
$>|> expecting HAVING

*************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                                       :10_4:GoDeeper:
preambleParamText:[Having]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=70:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING                  :10_4:GoDeeper:
************** / preambleParamText:[Given]                                                                      :10_4:GoDeeper:
*************** / $>|                                                                                          :10_4:GoDeeper:
$>|> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=70:
$>|> unexpected (
$>|> expecting GIVEN

*************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                                        :10_4:GoDeeper:
preambleParamText:[Given]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=70:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN                    :10_4:GoDeeper:
************** / preambleParamText:[Upon]                                                                       :10_4:GoDeeper:
*************** / $>|                                                                                          :10_4:GoDeeper:
$>|> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=70:
$>|> unexpected (
$>|> expecting UPON

*************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                                         :10_4:GoDeeper:
preambleParamText:[Upon]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=70:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON                      :10_4:GoDeeper:
************** / preambleBoolStructR [Unless]                                                                   :10_4:GoDeeper:
preambleBoolStructR [Unless]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=70:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS                :10_4:GoDeeper:
************** / preambleBoolStructR [When,If]                                                                  :10_4:GoDeeper:
preambleBoolStructR [When,If]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=70:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN              :10_4:GoDeeper:
************** / pActor [REvery,RParty,RTokAll]                                                                 :10_4:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=70:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************** \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL     :10_4:GoDeeper:
************** / pDA                                                                                            :10_4:GoDeeper:
pDA> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=70:
pDA> unexpected (
pDA> expecting MAY, MUST, or SHANT

************** \ !Unconsumed Error: pDA: Unexpected ( Expecting: MUST MAY SHANT                                 :10_4:GoDeeper:
regulative permutation with deontic-action> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
regulative permutation with deontic-action> MATCH (CERR): "the PDPC"
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=70:
regulative permutation with deontic-action> unexpected (
regulative permutation with deontic-action> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

************* \ !Consumed Error: regulative permutation with deontic-action: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_4:GoDeeper:
permutationsReg> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=70:
permutationsReg> unexpected (
permutationsReg> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

************ \ !Unconsumed Error: permutationsReg: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_3:Other "the:
pRegRuleNormal> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=70:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: pRegRuleNormal: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_3:Other "the:
pRegRule> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=84:
pRegRule> unexpected (
pRegRule> expecting ) or §

********** \ !Unconsumed Error: pRegRule: Unexpected ( Expecting: § )                                             :10_3:Other "the:
********** / someDeep                                                                                              :10_3:Other "the:
*********** / someDeep first part calls base directly                                                             :10_3:Other "the:
someDeep first part calls base directly> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep first part calls base directly> MATCH (COK): "the PDPC"
someDeep first part calls base directly> VALUE: ("the PDPC",[])

*********** \ someDeep first part calls base directly has returned "the PDPC"                                      :10_4:GoDeeper:
*********** / someDeep second part recurses with someIndentation                                                   :10_4:GoDeeper:
************ / someIndentation                                                                                    :10_4:GoDeeper:
************* / myindented-GoDeeper                                                                              :10_4:GoDeeper:
myindented-GoDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

************* \ myindented-GoDeeper has returned GoDeeper                                                         :10_4:May:
************* / manyIndentation/leaf?                                                                             :10_4:May:
************** / someDeep                                                                                        :10_4:May:
*************** / someDeep first part calls base directly                                                       :10_4:May:
someDeep first part calls base directly> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=71:
someDeep first part calls base directly> unexpected MAY
someDeep first part calls base directly> expecting Other text

*************** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MAY Expecting: Other text :10_4:May:
someDeep> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=71:
someDeep> unexpected MAY
someDeep> expecting Other text

************** \ !Unconsumed Error: someDeep: Unexpected MAY Expecting: Other text                               :10_4:May:
manyIndentation/leaf?> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=71:
manyIndentation/leaf?> unexpected MAY
manyIndentation/leaf?> expecting Other text

************* \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MAY Expecting: Other text                    :10_4:May:
************* / manyIndentation/deeper; calling someIndentation                                                   :10_4:May:
************** / someIndentation                                                                                 :10_4:May:
*************** / myindented-GoDeeper                                                                           :10_4:May:
myindented-GoDeeper> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=71:
myindented-GoDeeper> unexpected MAY
myindented-GoDeeper> expecting (

*************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MAY Expecting: (                           :10_4:May:
someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting (

************** \ !Unconsumed Error: someIndentation: Unexpected MAY Expecting: (                                 :10_4:May:
manyIndentation/deeper; calling someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=71:
manyIndentation/deeper; calling someIndentation> unexpected MAY
manyIndentation/deeper; calling someIndentation> expecting (

************* \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MAY Expecting: (   :10_4:May:
someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting ( or Other text

************ \ !Consumed Error: someIndentation: Unexpected MAY Expecting: ( Other text                            :10_4:May:
someDeep second part recurses with someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=71:
someDeep second part recurses with someIndentation> unexpected MAY
someDeep second part recurses with someIndentation> expecting ( or Other text

*********** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MAY Expecting: ( Other text :10_4:GoDeeper:
*********** > someDeep no luck, returning []                                                                       :10_4:GoDeeper:
someDeep> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep> MATCH (COK): "the PDPC"
someDeep> VALUE: (["the PDPC"],[])

********** \ someDeep has returned ["the PDPC"]                                                                     :10_4:GoDeeper:
manyIndentation/leaf?> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
manyIndentation/leaf?> MATCH (COK): "the PDPC"
manyIndentation/leaf?> VALUE: (RuleAlias ["the PDPC"],[])

********* \ manyIndentation/leaf? has returned RuleAlias ["the PDPC"]                                                :10_4:GoDeeper:
********* / myindented-UnDeeper                                                                                      :10_4:GoDeeper:
myindented-UnDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-UnDeeper> MATCH (EERR): <EMPTY>
myindented-UnDeeper> ERROR:
myindented-UnDeeper> offset=70:
myindented-UnDeeper> unexpected (
myindented-UnDeeper> expecting )

********* \ !Unconsumed Error: myindented-UnDeeper: Unexpected ( Expecting: )                                        :10_4:GoDeeper:
someIndentation> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someIndentation> MATCH (CERR): ( "the PDPC"
someIndentation> ERROR:
someIndentation> offset=70:
someIndentation> unexpected (
someIndentation> expecting )

******** \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                                :10_4:GoDeeper:
manyIndentation/deeper; calling someIndentation> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=70:
manyIndentation/deeper; calling someIndentation> unexpected (
manyIndentation/deeper; calling someIndentation> expecting )

******* \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected ( Expecting: )              :10_3:GoDeeper:
someIndentation> IN: ( ( "the PDPC" ( MAY DO ( ( "demand" ( " <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=70:
someIndentation> unexpected (
someIndentation> expecting )

****** \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                                  :10_3:GoDeeper:
pHenceLest-Lest> IN: LEST ( ( "the PDPC" ( MAY DO ( ( "demand <…>
pHenceLest-Lest> MATCH (CERR): LEST (
pHenceLest-Lest> ERROR:
pHenceLest-Lest> offset=70:
pHenceLest-Lest> unexpected (
pHenceLest-Lest> expecting )

***** \ !Consumed Error: pHenceLest-Lest: Unexpected ( Expecting: )                                                    :10_3:GoDeeper:
pRegRuleNormal> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRegRuleNormal> MATCH (CERR): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=70:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting )

**** \ !Consumed Error: pRegRuleNormal: Unexpected ( Expecting: )                                                       :10_3:GoDeeper:
pRegRule> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pRegRule> MATCH (EERR): §§ ( "Assess" )
pRegRule> ERROR:
pRegRule> offset=70:
pRegRule> unexpected (
pRegRule> expecting ) or end of input

*** \ !Unconsumed Error: pRegRule: Unexpected ( Expecting: ) end of input                                             :2_1:Every:
*** / pTypeDefinition                                                                                                 :1_1:RuleMarker:
**** / pRuleLabel                                                                                                    :1_1:RuleMarker:
***** / $>|                                                                                                         :1_1:RuleMarker:
$>|> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
$>|> MATCH (COK): §§
$>|> VALUE: (RuleMarker 2 "\167",[])

***** \ $>| has returned RuleMarker 2 "\167"                                                                         :1_2:GoDeeper:
***** / |>>/recurse                                                                                                  :1_2:GoDeeper:
****** / |>>/recurse                                                                                                 :1_2:Other "Asse:
|>>/recurse> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=2:
|>>/recurse> unexpected "Assess"
|>>/recurse> expecting (

****** \ !Unconsumed Error: |>>/recurse: Unexpected "Assess" Expecting: (                                            :1_2:Other "Asse:
****** / |>>/base                                                                                                    :1_2:Other "Asse:
******* / |.| manyLike                                                                                              :1_2:Other "Asse:
******** / someSL                                                                                                  :1_2:Other "Asse:
someSL> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
someSL> MATCH (COK): "Assess"
someSL> VALUE: ((["Assess"],0),[])

******** \ someSL has returned (["Assess"],0)                                                                       :2_2:UnDeeper:
|.| manyLike> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|.| manyLike> MATCH (COK): "Assess"
|.| manyLike> VALUE: ((["Assess"],0),[])

******* \ |.| manyLike has returned (["Assess"],0)                                                                   :2_2:UnDeeper:
******* > |>>/base got "Assess"                                                                                      :2_2:UnDeeper:
|>>/base> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/base> MATCH (COK): "Assess"
|>>/base> VALUE: (("Assess",0),[])

****** \ |>>/base has returned ("Assess",0)                                                                           :2_2:UnDeeper:
|>>/recurse> IN: ( "Assess" ) EVERY ( "Organisation" ( (  <…>
|>>/recurse> MATCH (COK): ( "Assess"
|>>/recurse> VALUE: (("Assess",1),[])

***** \ |>>/recurse has returned ("Assess",1)                                                                          :2_2:UnDeeper:
***** / upToNUndeepers/undeeper                                                                                        :2_2:UnDeeper:
****** / upToNUndeepers/done                                                                                       :2_1:Every:
upToNUndeepers/done> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
upToNUndeepers/done> MATCH (EOK): <EMPTY>
upToNUndeepers/done> VALUE: (((),0),[])

****** \ upToNUndeepers/done has returned ((),0)                                                                   :2_1:Every:
upToNUndeepers/undeeper> IN: ) EVERY ( "Organisation" ( ( ( AKA ( "Yo <…>
upToNUndeepers/undeeper> MATCH (COK): )
upToNUndeepers/undeeper> VALUE: (((),-1),[])

***** \ upToNUndeepers/undeeper has returned ((),-1)                                                                :2_1:Every:
pRuleLabel> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pRuleLabel> MATCH (EOK): §§ ( "Assess" )
pRuleLabel> VALUE: (("\167",2,"Assess"),[])

**** \ pRuleLabel has returned ("\167",2,"Assess")                                                                   :2_1:Every:
**** / pHornlike/uponLimb                                                                                            :2_1:Every:
***** / preambleParamText:[Upon]                                                                                    :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                                  :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

***** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                               :2_1:Every:
pHornlike/uponLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/uponLimb> MATCH (EERR): <EMPTY>
pHornlike/uponLimb> ERROR:
pHornlike/uponLimb> offset=4:
pHornlike/uponLimb> unexpected EVERY
pHornlike/uponLimb> expecting UPON

**** \ !Unconsumed Error: pHornlike/uponLimb: Unexpected EVERY Expecting: UPON                                       :2_1:Every:
**** / pHornlike/givenLimb                                                                                           :2_1:Every:
***** / preambleParamText:[Given]                                                                                   :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                                 :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

***** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                             :2_1:Every:
pHornlike/givenLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/givenLimb> MATCH (EERR): <EMPTY>
pHornlike/givenLimb> ERROR:
pHornlike/givenLimb> offset=4:
pHornlike/givenLimb> unexpected EVERY
pHornlike/givenLimb> expecting GIVEN

**** \ !Unconsumed Error: pHornlike/givenLimb: Unexpected EVERY Expecting: GIVEN                                     :2_1:Every:
pTypeDefinition> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pTypeDefinition> MATCH (EERR): §§ ( "Assess" )
pTypeDefinition> ERROR:
pTypeDefinition> offset=4:
pTypeDefinition> unexpected EVERY
pTypeDefinition> expecting DEFINE, GIVEN, UPON, or end of input

*** \ !Unconsumed Error: pTypeDefinition: Unexpected EVERY Expecting: GIVEN UPON DEFINE end of input                  :2_1:Every:
*** / pConstitutiveRule                                                                                               :1_1:RuleMarker:
**** / pRuleLabel                                                                                                    :1_1:RuleMarker:
***** / $>|                                                                                                         :1_1:RuleMarker:
$>|> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
$>|> MATCH (COK): §§
$>|> VALUE: (RuleMarker 2 "\167",[])

***** \ $>| has returned RuleMarker 2 "\167"                                                                         :1_2:GoDeeper:
***** / |>>/recurse                                                                                                  :1_2:GoDeeper:
****** / |>>/recurse                                                                                                 :1_2:Other "Asse:
|>>/recurse> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=2:
|>>/recurse> unexpected "Assess"
|>>/recurse> expecting (

****** \ !Unconsumed Error: |>>/recurse: Unexpected "Assess" Expecting: (                                            :1_2:Other "Asse:
****** / |>>/base                                                                                                    :1_2:Other "Asse:
******* / |.| manyLike                                                                                              :1_2:Other "Asse:
******** / someSL                                                                                                  :1_2:Other "Asse:
someSL> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
someSL> MATCH (COK): "Assess"
someSL> VALUE: ((["Assess"],0),[])

******** \ someSL has returned (["Assess"],0)                                                                       :2_2:UnDeeper:
|.| manyLike> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|.| manyLike> MATCH (COK): "Assess"
|.| manyLike> VALUE: ((["Assess"],0),[])

******* \ |.| manyLike has returned (["Assess"],0)                                                                   :2_2:UnDeeper:
******* > |>>/base got "Assess"                                                                                      :2_2:UnDeeper:
|>>/base> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/base> MATCH (COK): "Assess"
|>>/base> VALUE: (("Assess",0),[])

****** \ |>>/base has returned ("Assess",0)                                                                           :2_2:UnDeeper:
|>>/recurse> IN: ( "Assess" ) EVERY ( "Organisation" ( (  <…>
|>>/recurse> MATCH (COK): ( "Assess"
|>>/recurse> VALUE: (("Assess",1),[])

***** \ |>>/recurse has returned ("Assess",1)                                                                          :2_2:UnDeeper:
***** / upToNUndeepers/undeeper                                                                                        :2_2:UnDeeper:
****** / upToNUndeepers/done                                                                                       :2_1:Every:
upToNUndeepers/done> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
upToNUndeepers/done> MATCH (EOK): <EMPTY>
upToNUndeepers/done> VALUE: (((),0),[])

****** \ upToNUndeepers/done has returned ((),0)                                                                   :2_1:Every:
upToNUndeepers/undeeper> IN: ) EVERY ( "Organisation" ( ( ( AKA ( "Yo <…>
upToNUndeepers/undeeper> MATCH (COK): )
upToNUndeepers/undeeper> VALUE: (((),-1),[])

***** \ upToNUndeepers/undeeper has returned ((),-1)                                                                :2_1:Every:
pRuleLabel> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pRuleLabel> MATCH (EOK): §§ ( "Assess" )
pRuleLabel> VALUE: (("\167",2,"Assess"),[])

**** \ pRuleLabel has returned ("\167",2,"Assess")                                                                   :2_1:Every:
**** / calling myindented pNameParens                                                                                :2_1:Every:
***** / manyIndentation/leaf?                                                                                       :2_1:Every:
****** / pMultiTermAka                                                                                             :2_1:Every:
******* / pAKA                                                                                                    :2_1:Every:
******** / slAKA                                                                                                 :2_1:Every:
********* / $*|                                                                                                 :2_1:Every:
********** / slAKA base                                                                                        :2_1:Every:
*********** / slMultiTerm                                                                                     :2_1:Every:
************ / someSL                                                                                        :2_1:Every:
************* / pNumAsText                                                                                  :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************* \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                           :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************ \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*********** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number                :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

********** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

********* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                            :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

******** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                            :2_1:Every:
pAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pAKA> MATCH (EERR): <EMPTY>
pAKA> ERROR:
pAKA> offset=4:
pAKA> unexpected EVERY
pAKA> expecting other text or number

******* \ !Unconsumed Error: pAKA: Unexpected EVERY Expecting: other text or number                               :2_1:Every:
pMultiTermAka> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pMultiTermAka> MATCH (EERR): <EMPTY>
pMultiTermAka> ERROR:
pMultiTermAka> offset=4:
pMultiTermAka> unexpected EVERY
pMultiTermAka> expecting other text or number

****** \ !Unconsumed Error: pMultiTermAka: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

***** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
***** / manyIndentation/deeper; calling someIndentation                                                             :2_1:Every:
****** / someIndentation                                                                                           :2_1:Every:
******* / myindented-GoDeeper                                                                                     :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******* \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                   :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

****** \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                         :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

***** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (           :2_1:Every:
calling myindented pNameParens> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
calling myindented pNameParens> MATCH (EERR): <EMPTY>
calling myindented pNameParens> ERROR:
calling myindented pNameParens> offset=4:
calling myindented pNameParens> unexpected EVERY
calling myindented pNameParens> expecting ( or other text or number

**** \ !Unconsumed Error: calling myindented pNameParens: Unexpected EVERY Expecting: ( other text or number         :2_1:Every:
pConstitutiveRule> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pConstitutiveRule> MATCH (EERR): §§ ( "Assess" )
pConstitutiveRule> ERROR:
pConstitutiveRule> offset=4:
pConstitutiveRule> unexpected EVERY
pConstitutiveRule> expecting (, end of input, or other text or number

*** \ !Unconsumed Error: pConstitutiveRule: Unexpected EVERY Expecting: ( other text or number end of input           :2_1:Every:
*** / pScenarioRule                                                                                                   :1_1:RuleMarker:
pScenarioRule> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pScenarioRule> MATCH (EERR): <EMPTY>
pScenarioRule> ERROR:
pScenarioRule> offset=0:
pScenarioRule> unexpected §§
pScenarioRule> expecting SCENARIO

*** \ !Unconsumed Error: pScenarioRule: Unexpected §§ Expecting: SCENARIO                                           :1_1:RuleMarker:
*** / pHornlike                                                                                                       :1_1:RuleMarker:
**** / pSrcRef                                                                                                       :1_1:RuleMarker:
***** / pRuleLabel                                                                                                  :1_1:RuleMarker:
****** / $>|                                                                                                       :1_1:RuleMarker:
$>|> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
$>|> MATCH (COK): §§
$>|> VALUE: (RuleMarker 2 "\167",[])

****** \ $>| has returned RuleMarker 2 "\167"                                                                       :1_2:GoDeeper:
****** / |>>/recurse                                                                                                :1_2:GoDeeper:
******* / |>>/recurse                                                                                               :1_2:Other "Asse:
|>>/recurse> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=2:
|>>/recurse> unexpected "Assess"
|>>/recurse> expecting (

******* \ !Unconsumed Error: |>>/recurse: Unexpected "Assess" Expecting: (                                          :1_2:Other "Asse:
******* / |>>/base                                                                                                  :1_2:Other "Asse:
******** / |.| manyLike                                                                                            :1_2:Other "Asse:
********* / someSL                                                                                                :1_2:Other "Asse:
someSL> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
someSL> MATCH (COK): "Assess"
someSL> VALUE: ((["Assess"],0),[])

********* \ someSL has returned (["Assess"],0)                                                                     :2_2:UnDeeper:
|.| manyLike> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|.| manyLike> MATCH (COK): "Assess"
|.| manyLike> VALUE: ((["Assess"],0),[])

******** \ |.| manyLike has returned (["Assess"],0)                                                                 :2_2:UnDeeper:
******** > |>>/base got "Assess"                                                                                    :2_2:UnDeeper:
|>>/base> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/base> MATCH (COK): "Assess"
|>>/base> VALUE: (("Assess",0),[])

******* \ |>>/base has returned ("Assess",0)                                                                         :2_2:UnDeeper:
|>>/recurse> IN: ( "Assess" ) EVERY ( "Organisation" ( (  <…>
|>>/recurse> MATCH (COK): ( "Assess"
|>>/recurse> VALUE: (("Assess",1),[])

****** \ |>>/recurse has returned ("Assess",1)                                                                        :2_2:UnDeeper:
****** / upToNUndeepers/undeeper                                                                                      :2_2:UnDeeper:
******* / upToNUndeepers/done                                                                                     :2_1:Every:
upToNUndeepers/done> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
upToNUndeepers/done> MATCH (EOK): <EMPTY>
upToNUndeepers/done> VALUE: (((),0),[])

******* \ upToNUndeepers/done has returned ((),0)                                                                 :2_1:Every:
upToNUndeepers/undeeper> IN: ) EVERY ( "Organisation" ( ( ( AKA ( "Yo <…>
upToNUndeepers/undeeper> MATCH (COK): )
upToNUndeepers/undeeper> VALUE: (((),-1),[])

****** \ upToNUndeepers/undeeper has returned ((),-1)                                                              :2_1:Every:
pRuleLabel> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pRuleLabel> MATCH (EOK): §§ ( "Assess" )
pRuleLabel> VALUE: (("\167",2,"Assess"),[])

***** \ pRuleLabel has returned ("\167",2,"Assess")                                                                 :2_1:Every:
pSrcRef> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pSrcRef> MATCH (EOK): §§ ( "Assess" )
pSrcRef> VALUE: ((Just ("\167",2,"Assess"),Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 2, version = Nothing})),[])

**** \ pSrcRef has returned (Just ("\167",2,"Assess"),Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 2, version = Nothing})) :2_1:Every:
**** / pHornlike / permute                                                                                           :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/uponLimb                                                                                          :2_1:Every:
****** / preambleParamText:[Upon]                                                                                  :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                                :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

****** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                             :2_1:Every:
pHornlike/uponLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/uponLimb> MATCH (EERR): <EMPTY>
pHornlike/uponLimb> ERROR:
pHornlike/uponLimb> offset=4:
pHornlike/uponLimb> unexpected EVERY
pHornlike/uponLimb> expecting UPON

***** \ !Unconsumed Error: pHornlike/uponLimb: Unexpected EVERY Expecting: UPON                                     :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/givenLimb                                                                                         :2_1:Every:
****** / preambleParamText:[Given]                                                                                 :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                               :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

****** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                           :2_1:Every:
pHornlike/givenLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/givenLimb> MATCH (EERR): <EMPTY>
pHornlike/givenLimb> ERROR:
pHornlike/givenLimb> offset=4:
pHornlike/givenLimb> unexpected EVERY
pHornlike/givenLimb> expecting GIVEN

***** \ !Unconsumed Error: pHornlike/givenLimb: Unexpected EVERY Expecting: GIVEN                                   :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/givenLimb                                                                                         :2_1:Every:
****** / preambleParamText:[Given]                                                                                 :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                               :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

****** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                           :2_1:Every:
pHornlike/givenLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/givenLimb> MATCH (EERR): <EMPTY>
pHornlike/givenLimb> ERROR:
pHornlike/givenLimb> offset=4:
pHornlike/givenLimb> unexpected EVERY
pHornlike/givenLimb> expecting GIVEN

***** \ !Unconsumed Error: pHornlike/givenLimb: Unexpected EVERY Expecting: GIVEN                                   :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/uponLimb                                                                                          :2_1:Every:
****** / preambleParamText:[Upon]                                                                                  :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                                :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

****** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                             :2_1:Every:
pHornlike/uponLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/uponLimb> MATCH (EERR): <EMPTY>
pHornlike/uponLimb> ERROR:
pHornlike/uponLimb> offset=4:
pHornlike/uponLimb> unexpected EVERY
pHornlike/uponLimb> expecting UPON

***** \ !Unconsumed Error: pHornlike/uponLimb: Unexpected EVERY Expecting: UPON                                     :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
pHornlike / permute> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike / permute> MATCH (EERR): <EMPTY>
pHornlike / permute> ERROR:
pHornlike / permute> offset=4:
pHornlike / permute> unexpected EVERY
pHornlike / permute> expecting (, DECIDE, DEFINE, GIVEN, IF, MEANS, OTHERWISE, UPON, WHEN, or other text or number

**** \ !Unconsumed Error: pHornlike / permute: Unexpected EVERY Expecting: DEFINE DECIDE GIVEN UPON OTHERWISE ( DEFINE DECIDE IF WHEN MEANS other text or number :2_1:Every:
pHornlike> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pHornlike> MATCH (EERR): §§ ( "Assess" )
pHornlike> ERROR:
pHornlike> offset=4:
pHornlike> unexpected EVERY
pHornlike> expecting (, DECIDE, DEFINE, GIVEN, IF, MEANS, OTHERWISE, UPON, WHEN, end of input, or other text or number

*** \ !Unconsumed Error: pHornlike: Unexpected EVERY Expecting: DEFINE DECIDE GIVEN UPON OTHERWISE ( DEFINE DECIDE IF WHEN MEANS other text or number end of input :2_1:Every:
*** / pRuleLabel                                                                                                      :1_1:RuleMarker:
**** / $>|                                                                                                           :1_1:RuleMarker:
$>|> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
$>|> MATCH (COK): §§
$>|> VALUE: (RuleMarker 2 "\167",[])

**** \ $>| has returned RuleMarker 2 "\167"                                                                           :1_2:GoDeeper:
**** / |>>/recurse                                                                                                    :1_2:GoDeeper:
***** / |>>/recurse                                                                                                   :1_2:Other "Asse:
|>>/recurse> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=2:
|>>/recurse> unexpected "Assess"
|>>/recurse> expecting (

***** \ !Unconsumed Error: |>>/recurse: Unexpected "Assess" Expecting: (                                              :1_2:Other "Asse:
***** / |>>/base                                                                                                      :1_2:Other "Asse:
****** / |.| manyLike                                                                                                :1_2:Other "Asse:
******* / someSL                                                                                                    :1_2:Other "Asse:
someSL> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
someSL> MATCH (COK): "Assess"
someSL> VALUE: ((["Assess"],0),[])

******* \ someSL has returned (["Assess"],0)                                                                         :2_2:UnDeeper:
|.| manyLike> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|.| manyLike> MATCH (COK): "Assess"
|.| manyLike> VALUE: ((["Assess"],0),[])

****** \ |.| manyLike has returned (["Assess"],0)                                                                     :2_2:UnDeeper:
****** > |>>/base got "Assess"                                                                                        :2_2:UnDeeper:
|>>/base> IN: "Assess" ) EVERY ( "Organisation" ( ( (  <…>
|>>/base> MATCH (COK): "Assess"
|>>/base> VALUE: (("Assess",0),[])

***** \ |>>/base has returned ("Assess",0)                                                                             :2_2:UnDeeper:
|>>/recurse> IN: ( "Assess" ) EVERY ( "Organisation" ( (  <…>
|>>/recurse> MATCH (COK): ( "Assess"
|>>/recurse> VALUE: (("Assess",1),[])

**** \ |>>/recurse has returned ("Assess",1)                                                                            :2_2:UnDeeper:
**** / upToNUndeepers/undeeper                                                                                          :2_2:UnDeeper:
***** / upToNUndeepers/done                                                                                         :2_1:Every:
upToNUndeepers/done> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
upToNUndeepers/done> MATCH (EOK): <EMPTY>
upToNUndeepers/done> VALUE: (((),0),[])

***** \ upToNUndeepers/done has returned ((),0)                                                                     :2_1:Every:
upToNUndeepers/undeeper> IN: ) EVERY ( "Organisation" ( ( ( AKA ( "Yo <…>
upToNUndeepers/undeeper> MATCH (COK): )
upToNUndeepers/undeeper> VALUE: (((),-1),[])

**** \ upToNUndeepers/undeeper has returned ((),-1)                                                                  :2_1:Every:
pRuleLabel> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pRuleLabel> MATCH (EOK): §§ ( "Assess" )
pRuleLabel> VALUE: (("\167",2,"Assess"),[])

*** \ pRuleLabel has returned ("\167",2,"Assess")                                                                     :2_1:Every:
pRule> IN: §§ ( "Assess" ) EVERY ( "Organisation" ( <…>
pRule> MATCH (EOK): §§ ( "Assess" )
pRule> VALUE: (RuleGroup {rlabel = Just ("\167",2,"Assess"), srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 1, version = Nothing})},[])

** \ pRule has returned RuleGroup {rlabel = Just ("\167",2,"Assess"), srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 1, version = Nothing})} :2_1:Every:
** / pRule                                                                                                             :2_1:Every:
*** / pRegRule                                                                                                        :2_1:Every:
**** / pRuleLabel                                                                                                    :2_1:Every:
***** / $>|                                                                                                         :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting §

***** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: §                                                      :2_1:Every:
pRuleLabel> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=4:
pRuleLabel> unexpected EVERY
pRuleLabel> expecting §

**** \ !Unconsumed Error: pRuleLabel: Unexpected EVERY Expecting: §                                                 :2_1:Every:
**** / pRegRuleSugary                                                                                                :2_1:Every:
***** / someDeep                                                                                                    :2_1:Every:
****** / someDeep first part calls base directly                                                                   :2_1:Every:
someDeep first part calls base directly> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=4:
someDeep first part calls base directly> unexpected EVERY
someDeep first part calls base directly> expecting Other text

****** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected EVERY Expecting: Other text        :2_1:Every:
someDeep> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=4:
someDeep> unexpected EVERY
someDeep> expecting Other text

***** \ !Unconsumed Error: someDeep: Unexpected EVERY Expecting: Other text                                         :2_1:Every:
pRegRuleSugary> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRegRuleSugary> MATCH (EERR): <EMPTY>
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=4:
pRegRuleSugary> unexpected EVERY
pRegRuleSugary> expecting Other text

**** \ !Unconsumed Error: pRegRuleSugary: Unexpected EVERY Expecting: Other text                                     :2_1:Every:
**** / pRegRuleNormal                                                                                                :2_1:Every:
***** / permutationsReg                                                                                             :2_1:Every:
****** / regulative permutation with deontic-temporal                                                              :2_1:Every:
******* / WHERE                                                                                                   :2_1:Every:
WHERE> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=4:
WHERE> unexpected EVERY
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected EVERY Expecting: WHERE                                             :2_1:Every:
******* / preambleParamText:[Having]                                                                              :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: HAVING                                            :2_1:Every:
preambleParamText:[Having]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=4:
preambleParamText:[Having]> unexpected EVERY
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected EVERY Expecting: HAVING                       :2_1:Every:
******* / preambleParamText:[Given]                                                                               :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                             :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                         :2_1:Every:
******* / preambleParamText:[Upon]                                                                                :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                              :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

******* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                           :2_1:Every:
******* / preambleBoolStructR [Unless]                                                                            :2_1:Every:
preambleBoolStructR [Unless]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=4:
preambleBoolStructR [Unless]> unexpected EVERY
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected EVERY Expecting: UNLESS                     :2_1:Every:
******* / preambleBoolStructR [When,If]                                                                           :2_1:Every:
preambleBoolStructR [When,If]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=4:
preambleBoolStructR [When,If]> unexpected EVERY
preambleBoolStructR [When,If]> expecting IF or WHEN

******* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected EVERY Expecting: IF WHEN                   :2_1:Every:
******* / pDT                                                                                                     :2_1:Every:
******** / $>|                                                                                                   :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting MAY, MUST, or SHANT

******** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: MUST MAY SHANT                                    :2_1:Every:
pDT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=4:
pDT> unexpected EVERY
pDT> expecting MAY, MUST, or SHANT

******* \ !Unconsumed Error: pDT: Unexpected EVERY Expecting: MUST MAY SHANT                                      :2_1:Every:
******* / pActor [REvery,RParty,RTokAll]                                                                          :2_1:Every:
******** / someIndentation                                                                                        :2_2:GoDeeper:
********* / myindented-GoDeeper                                                                                  :2_2:GoDeeper:
myindented-GoDeeper> IN: ( "Organisation" ( ( ( AKA ( "You" ) ) ) <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********* \ myindented-GoDeeper has returned GoDeeper                                                             :2_2:Other "Orga:
********* / manyIndentation/leaf?                                                                                 :2_2:Other "Orga:
********** / pMultiTermAka                                                                                       :2_2:Other "Orga:
*********** / pAKA                                                                                              :2_2:Other "Orga:
************ / slAKA                                                                                           :2_2:Other "Orga:
************* / $*|                                                                                           :2_2:Other "Orga:
************** / slAKA base                                                                                  :2_2:Other "Orga:
*************** / slMultiTerm                                                                               :2_2:Other "Orga:
**************** / someSL                                                                                  :2_2:Other "Orga:
***************** / pNumAsText                                                                                  :2_5:Aka:
pNumAsText> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=10:
pNumAsText> unexpected AKA
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected AKA Expecting: number                             :2_5:Aka:
someSL> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
someSL> MATCH (COK): "Organisation"
someSL> VALUE: ((["Organisation"],0),[])

**************** \ someSL has returned (["Organisation"],0)                                                 :2_3:GoDeeper:
slMultiTerm> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
slMultiTerm> MATCH (COK): "Organisation"
slMultiTerm> VALUE: ((["Organisation"],0),[])

*************** \ slMultiTerm has returned (["Organisation"],0)                                              :2_3:GoDeeper:
slAKA base> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
slAKA base> MATCH (COK): "Organisation"
slAKA base> VALUE: ((["Organisation"],0),[])

************** \ slAKA base has returned (["Organisation"],0)                                                 :2_3:GoDeeper:
$*|> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
$*|> MATCH (COK): "Organisation"
$*|> VALUE: ((["Organisation"],0),[])

************* \ $*| has returned (["Organisation"],0)                                                          :2_3:GoDeeper:
************* / |>>/recurse                                                                                    :2_3:GoDeeper:
************** / |>>/recurse                                                                                    :2_4:GoDeeper:
*************** / |>>/recurse                                                                                    :2_5:GoDeeper:
**************** / |>>/recurse                                                                                   :2_5:Aka:
|>>/recurse> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected AKA
|>>/recurse> expecting (

**************** \ !Unconsumed Error: |>>/recurse: Unexpected AKA Expecting: (                                   :2_5:Aka:
**************** / |>>/base                                                                                      :2_5:Aka:
***************** / slAKA optional akapart                                                                      :2_5:Aka:
****************** / |?| optional something                                                                    :2_5:Aka:
******************* / |>>/recurse                                                                             :2_5:Aka:
|>>/recurse> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=10:
|>>/recurse> unexpected AKA
|>>/recurse> expecting (

******************* \ !Unconsumed Error: |>>/recurse: Unexpected AKA Expecting: (                             :2_5:Aka:
******************* / |>>/base                                                                                :2_5:Aka:
******************** / PAKA/akapart                                                                          :2_5:Aka:
********************* / $>|                                                                                 :2_5:Aka:
********************** / Aka Token                                                                         :2_5:Aka:
Aka Token> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
Aka Token> MATCH (COK): AKA
Aka Token> VALUE: (Aka,[])

********************** \ Aka Token has returned Aka                                                         :2_6:GoDeeper:
$>|> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
$>|> MATCH (COK): AKA
$>|> VALUE: (Aka,[])

********************* \ $>| has returned Aka                                                                 :2_6:GoDeeper:
********************* / |>>/recurse                                                                          :2_6:GoDeeper:
********************** / |>>/recurse                                                                         :2_6:Other "You":
|>>/recurse> IN: "You" ) ) ) ) ) WHO ( "is" ( "not" ( "a  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=12:
|>>/recurse> unexpected "You"
|>>/recurse> expecting (

********************** \ !Unconsumed Error: |>>/recurse: Unexpected "You" Expecting: (                       :2_6:Other "You":
********************** / |>>/base                                                                            :2_6:Other "You":
*********************** / someSL                                                                            :2_6:Other "You":
someSL> IN: "You" ) ) ) ) ) WHO ( "is" ( "not" ( "a  <…>
someSL> MATCH (COK): "You"
someSL> VALUE: ((["You"],0),[])

*********************** \ someSL has returned (["You"],0)                                            :3_2:UnDeeper:
*********************** > |>>/base got ["You"]                                                       :3_2:UnDeeper:
|>>/base> IN: "You" ) ) ) ) ) WHO ( "is" ( "not" ( "a  <…>
|>>/base> MATCH (COK): "You"
|>>/base> VALUE: ((["You"],0),[])

********************** \ |>>/base has returned (["You"],0)                                            :3_2:UnDeeper:
|>>/recurse> IN: ( "You" ) ) ) ) ) WHO ( "is" ( "not" ( " <…>
|>>/recurse> MATCH (COK): ( "You"
|>>/recurse> VALUE: ((["You"],1),[])

********************* \ |>>/recurse has returned (["You"],1)                                           :3_2:UnDeeper:
PAKA/akapart> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
PAKA/akapart> MATCH (COK): AKA ( "You"
PAKA/akapart> VALUE: ((["You"],1),[])

******************** \ PAKA/akapart has returned (["You"],1)                                            :3_2:UnDeeper:
******************** > |>>/base got ["You"]                                                             :3_2:UnDeeper:
|>>/base> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/base> MATCH (COK): AKA ( "You"
|>>/base> VALUE: ((["You"],1),[])

******************* \ |>>/base has returned (["You"],1)                                                  :3_2:UnDeeper:
|?| optional something> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|?| optional something> MATCH (COK): AKA ( "You"
|?| optional something> VALUE: ((Just ["You"],1),[])

****************** \ |?| optional something has returned (Just ["You"],1)                                 :3_2:UnDeeper:
slAKA optional akapart> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
slAKA optional akapart> MATCH (COK): AKA ( "You"
slAKA optional akapart> VALUE: ((Just ["You"],1),[])

***************** \ slAKA optional akapart has returned (Just ["You"],1)                                   :3_2:UnDeeper:
***************** > |>>/base got Just ["You"]                                                              :3_2:UnDeeper:
|>>/base> IN: AKA ( "You" ) ) ) ) ) WHO ( "is" ( "not" <…>
|>>/base> MATCH (COK): AKA ( "You"
|>>/base> VALUE: ((Just ["You"],1),[])

**************** \ |>>/base has returned (Just ["You"],1)                                                   :3_2:UnDeeper:
|>>/recurse> IN: ( AKA ( "You" ) ) ) ) ) WHO ( "is" ( "no <…>
|>>/recurse> MATCH (COK): ( AKA ( "You"
|>>/recurse> VALUE: ((Just ["You"],2),[])

*************** \ |>>/recurse has returned (Just ["You"],2)                                                  :3_2:UnDeeper:
|>>/recurse> IN: ( ( AKA ( "You" ) ) ) ) ) WHO ( "is" ( " <…>
|>>/recurse> MATCH (COK): ( ( AKA ( "You"
|>>/recurse> VALUE: ((Just ["You"],3),[])

************** \ |>>/recurse has returned (Just ["You"],3)                                                    :3_2:UnDeeper:
|>>/recurse> IN: ( ( ( AKA ( "You" ) ) ) ) ) WHO ( "is" ( <…>
|>>/recurse> MATCH (COK): ( ( ( AKA ( "You"
|>>/recurse> VALUE: ((Just ["You"],4),[])

************* \ |>>/recurse has returned (Just ["You"],4)                                                      :3_2:UnDeeper:
************* / |>>/recurse                                                                                    :3_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=13:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                      :3_2:UnDeeper:
************* / |>>/base                                                                                       :3_2:UnDeeper:
************** / slAKA optional typically                                                                     :3_2:UnDeeper:
*************** / |?| optional something                                                                     :3_2:UnDeeper:
**************** / |>>/recurse                                                                              :3_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=13:
|>>/recurse> unexpected )
|>>/recurse> expecting (

**************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                :3_2:UnDeeper:
**************** / |>>/base                                                                                 :3_2:UnDeeper:
***************** / typically                                                                              :3_2:UnDeeper:
****************** / $>|                                                                                  :3_2:UnDeeper:
$>|> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=13:
$>|> unexpected )
$>|> expecting TYPICALLY

****************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY                            :3_2:UnDeeper:
typically> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=13:
typically> unexpected )
typically> expecting TYPICALLY

***************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY                        :3_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=13:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

**************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY                           :3_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

*************** \ |?| optional something has returned (Nothing,0)                                            :3_2:UnDeeper:
slAKA optional typically> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

************** \ slAKA optional typically has returned (Nothing,0)                                            :3_2:UnDeeper:
************** > |>>/base got Nothing                                                                         :3_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************* \ |>>/base has returned (Nothing,0)                                                              :3_2:UnDeeper:
************* > slAKA: proceeding after base and entityalias are retrieved ...                                 :3_2:UnDeeper:
************* > pAKA: entityalias = Just ["You"]                                                               :3_2:UnDeeper:
slAKA> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
slAKA> MATCH (COK): "Organisation" ( ( ( AKA ( "You"
slAKA> VALUE: ((["Organisation"],4),[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

************ \ slAKA has returned (["Organisation"],4)                                                          :3_2:UnDeeper:
************ / undeepers                                                                                        :3_2:UnDeeper:
************* > sameLine/undeepers: reached end of line; now need to clear 4 UnDeepers                         :3_2:UnDeeper:
************* > sameLine: success!                                                                                     :3_6:UnDeeper:
undeepers> IN: ) ) ) ) ) WHO ( "is" ( "not" ( "a Public <…>
undeepers> MATCH (COK): ) ) ) )
undeepers> VALUE: ((),[])

************ \ undeepers has returned ()                                                                                :3_6:UnDeeper:
pAKA> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
pAKA> MATCH (COK): "Organisation" ( ( ( AKA ( "You" ) ) ) )
pAKA> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

*********** \ pAKA has returned ["Organisation"]                                                                         :3_6:UnDeeper:
pMultiTermAka> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
pMultiTermAka> MATCH (COK): "Organisation" ( ( ( AKA ( "You" ) ) ) )
pMultiTermAka> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

********** \ pMultiTermAka has returned ["Organisation"]                                                                  :3_6:UnDeeper:
manyIndentation/leaf?> IN: "Organisation" ( ( ( AKA ( "You" ) ) ) ) <…>
manyIndentation/leaf?> MATCH (COK): "Organisation" ( ( ( AKA ( "You" ) ) ) )
manyIndentation/leaf?> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

********* \ manyIndentation/leaf? has returned ["Organisation"]                                                            :3_6:UnDeeper:
********* / myindented-UnDeeper                                                                                            :3_6:UnDeeper:
myindented-UnDeeper> IN: ) WHO ( "is" ( "not" ( "a Public Agency" <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

********* \ myindented-UnDeeper has returned UnDeeper                                                           :3_1:Who:
someIndentation> IN: ( "Organisation" ( ( ( AKA ( "You" ) ) ) <…>
someIndentation> MATCH (COK): ( "Organisation" ( ( ( AKA ( "You" ) ) ) <…>
someIndentation> VALUE: (["Organisation"],[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

******** \ someIndentation has returned ["Organisation"]                                                         :3_1:Who:
pActor [REvery,RParty,RTokAll]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pActor [REvery,RParty,RTokAll]> MATCH (COK): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pActor [REvery,RParty,RTokAll]> VALUE: ((REvery,Leaf (("Organisation" :| [],Nothing) :| [])),[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

******* \ pActor [REvery,RParty,RTokAll] has returned (REvery,Leaf (("Organisation" :| [],Nothing) :| []))        :3_1:Who:
******* / manyIndentation/leaf?                                                                                   :3_1:Who:
******** / preambleBoolStructR [Who,Which,Whose]                                                                 :3_1:Who:
********* / pBSR                                                                                                 :3_2:GoDeeper:
********** / ppp inner                                                                                          :3_2:GoDeeper:
*********** / expression                                                                                       :3_2:GoDeeper:
************ / term p                                                                                         :3_2:GoDeeper:
************* / term p/1a:label ends directly above next line                                                :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / someSL                                                                                   :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
pNumAsText> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=19:
pNumAsText> unexpected (
pNumAsText> expecting number

**************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                          :3_2:GoDeeper:
someSL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=19:
someSL> unexpected (
someSL> expecting other text or number

*************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                  :3_2:GoDeeper:
$*|> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=19:
$*|> unexpected (
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                       :3_2:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=19:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :3_2:GoDeeper:
************* / term p/1b:label ends to the left of line below, with EOL                                     :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / someSL                                                                                   :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
pNumAsText> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=19:
pNumAsText> unexpected (
pNumAsText> expecting number

**************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                          :3_2:GoDeeper:
someSL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=19:
someSL> unexpected (
someSL> expecting other text or number

*************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                  :3_2:GoDeeper:
$*|> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=19:
$*|> unexpected (
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                       :3_2:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=19:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :3_2:GoDeeper:
************* / term p/1c:label ends to the right of line below                                              :3_2:GoDeeper:
************** > |<|                                                                                        :3_2:GoDeeper:
************** > |<* starting                                                                               :3_2:GoDeeper:
************** / $*|                                                                                        :3_2:GoDeeper:
*************** / someSL                                                                                   :3_2:GoDeeper:
**************** / pNumAsText                                                                             :3_2:GoDeeper:
pNumAsText> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=19:
pNumAsText> unexpected (
pNumAsText> expecting number

**************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                          :3_2:GoDeeper:
someSL> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=19:
someSL> unexpected (
someSL> expecting other text or number

*************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                  :3_2:GoDeeper:
$*|> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=19:
$*|> unexpected (
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                       :3_2:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=19:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :3_2:GoDeeper:
************* / term p/notLabelTerm                                                                          :3_2:GoDeeper:
************** / term p/2:someIndentation expr p                                                            :3_2:GoDeeper:
*************** / someIndentation                                                                          :3_2:GoDeeper:
**************** / myindented-GoDeeper                                                                    :3_2:GoDeeper:
myindented-GoDeeper> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

**************** \ myindented-GoDeeper has returned GoDeeper                                               :3_2:Other "is":
**************** / manyIndentation/leaf?                                                                   :3_2:Other "is":
***************** / ppp inner                                                                             :3_2:Other "is":
****************** / expression                                                                          :3_2:Other "is":
******************* / term p                                                                            :3_2:Other "is":
******************** / term p/1a:label ends directly above next line                                   :3_2:Other "is":
********************* / $*|                                                                           :3_2:Other "is":
********************** / someSL                                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

********************** \ someSL has returned (["is","not","a Public Agency"],2)                       :4_2:UnDeeper:
********************** / pNumAsText                                                                   :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (CERR): "is" ( "not" ( "a Public Agency"
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting ( or other text or number

********************* \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number           :4_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/1a:label ends directly above next line> MATCH (CERR): "is" ( "not" ( "a Public Agency"
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=25:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

******************** \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :4_2:UnDeeper:
******************** / term p/1b:label ends to the left of line below, with EOL                        :3_2:Other "is":
********************* / $*|                                                                           :3_2:Other "is":
********************** / someSL                                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

********************** \ someSL has returned (["is","not","a Public Agency"],2)                       :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

********************* \ $*| has returned (["is","not","a Public Agency"],2)                            :4_2:UnDeeper:
********************* / matching EOL                                                                   :4_2:UnDeeper:
matching EOL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=25:
matching EOL> unexpected )
matching EOL> expecting EOL

********************* \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL                   :4_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "is" ( "not" ( "a Public Agency"
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=25:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

******************** \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :4_2:UnDeeper:
******************** / term p/1c:label ends to the right of line below                                 :3_2:Other "is":
********************* > |<|                                                                           :3_2:Other "is":
********************* > |<* starting                                                                  :3_2:Other "is":
********************* / $*|                                                                           :3_2:Other "is":
********************** / someSL                                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

********************** \ someSL has returned (["is","not","a Public Agency"],2)                       :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

********************* \ $*| has returned (["is","not","a Public Agency"],2)                            :4_2:UnDeeper:
********************* / |<*/parent                                                                     :4_2:UnDeeper:
********************** > |<*/recurse                                                                  :4_2:UnDeeper:
********************** / ppp inner                                                                 :4_1:Must:
*********************** / expression                                                              :4_1:Must:
************************ / term p                                                                :4_1:Must:
************************* / term p/1a:label ends directly above next line                       :4_1:Must:
************************** / $*|                                                               :4_1:Must:
*************************** / someSL                                                          :4_1:Must:
**************************** / pNumAsText                                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/1a:label ends directly above next line> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=28:
term p/1a:label ends directly above next line> unexpected MUST
term p/1a:label ends directly above next line> expecting other text or number

************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected MUST Expecting: other text or number :4_1:Must:
************************* / term p/1b:label ends to the left of line below, with EOL            :4_1:Must:
************************** / $*|                                                               :4_1:Must:
*************************** / someSL                                                          :4_1:Must:
**************************** / pNumAsText                                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/1b:label ends to the left of line below, with EOL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=28:
term p/1b:label ends to the left of line below, with EOL> unexpected MUST
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected MUST Expecting: other text or number :4_1:Must:
************************* / term p/1c:label ends to the right of line below                     :4_1:Must:
************************** > |<|                                                               :4_1:Must:
************************** > |<* starting                                                      :4_1:Must:
************************** / $*|                                                               :4_1:Must:
*************************** / someSL                                                          :4_1:Must:
**************************** / pNumAsText                                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/1c:label ends to the right of line below> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=28:
term p/1c:label ends to the right of line below> unexpected MUST
term p/1c:label ends to the right of line below> expecting other text or number

************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected MUST Expecting: other text or number :4_1:Must:
************************* / term p/notLabelTerm                                                 :4_1:Must:
************************** / term p/2:someIndentation expr p                                   :4_1:Must:
*************************** / someIndentation                                                 :4_1:Must:
**************************** / myindented-GoDeeper                                           :4_1:Must:
myindented-GoDeeper> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=28:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

**************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: ( :4_1:Must:
someIndentation> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=28:
someIndentation> unexpected MUST
someIndentation> expecting (

*************************** \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: ( :4_1:Must:
term p/2:someIndentation expr p> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=28:
term p/2:someIndentation expr p> unexpected MUST
term p/2:someIndentation expr p> expecting (

************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected MUST Expecting: ( :4_1:Must:
************************** / term p/3:plain p                                                  :4_1:Must:
*************************** / pRelPred                                                        :4_1:Must:
**************************** / slRelPred                                                     :4_1:Must:
***************************** / nested simpleHorn                                           :4_1:Must:
****************************** > |^|                                                       :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slMultiTerm                                             :4_1:Must:
******************************** / someSL                                                :4_1:Must:
********************************* / pNumAsText                                          :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
nested simpleHorn> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=28:
nested simpleHorn> unexpected MUST
nested simpleHorn> expecting other text or number

***************************** \ !Unconsumed Error: nested simpleHorn: Unexpected MUST Expecting: other text or number :4_1:Must:
***************************** / RPConstraint                                                :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slMultiTerm                                             :4_1:Must:
******************************** / someSL                                                :4_1:Must:
********************************* / pNumAsText                                          :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
RPConstraint> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=28:
RPConstraint> unexpected MUST
RPConstraint> expecting other text or number

***************************** \ !Unconsumed Error: RPConstraint: Unexpected MUST Expecting: other text or number :4_1:Must:
***************************** / RPBoolStructR                                               :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slMultiTerm                                             :4_1:Must:
******************************** / someSL                                                :4_1:Must:
********************************* / pNumAsText                                          :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
RPBoolStructR> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=28:
RPBoolStructR> unexpected MUST
RPBoolStructR> expecting other text or number

***************************** \ !Unconsumed Error: RPBoolStructR: Unexpected MUST Expecting: other text or number :4_1:Must:
***************************** / RPMT                                                        :4_1:Must:
****************************** / $*|                                                       :4_1:Must:
******************************* / slAKA                                                   :4_1:Must:
******************************** / $*|                                                   :4_1:Must:
********************************* / slAKA base                                          :4_1:Must:
********************************** / slMultiTerm                                       :4_1:Must:
*********************************** / someSL                                          :4_1:Must:
************************************ / pNumAsText                                    :4_1:Must:
pNumAsText> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=28:
pNumAsText> unexpected MUST
pNumAsText> expecting number

************************************ \ !Unconsumed Error: pNumAsText: Unexpected MUST Expecting: number :4_1:Must:
someSL> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=28:
someSL> unexpected MUST
someSL> expecting other text or number

*********************************** \ !Unconsumed Error: someSL: Unexpected MUST Expecting: other text or number :4_1:Must:
slMultiTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=28:
slMultiTerm> unexpected MUST
slMultiTerm> expecting other text or number

********************************** \ !Unconsumed Error: slMultiTerm: Unexpected MUST Expecting: other text or number :4_1:Must:
slAKA base> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=28:
slAKA base> unexpected MUST
slAKA base> expecting other text or number

********************************* \ !Unconsumed Error: slAKA base: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
slAKA> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=28:
slAKA> unexpected MUST
slAKA> expecting other text or number

******************************* \ !Unconsumed Error: slAKA: Unexpected MUST Expecting: other text or number :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: other text or number :4_1:Must:
RPMT> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=28:
RPMT> unexpected MUST
RPMT> expecting other text or number

***************************** \ !Unconsumed Error: RPMT: Unexpected MUST Expecting: other text or number :4_1:Must:
slRelPred> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=28:
slRelPred> unexpected MUST
slRelPred> expecting other text or number

**************************** \ !Unconsumed Error: slRelPred: Unexpected MUST Expecting: other text or number :4_1:Must:
pRelPred> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=28:
pRelPred> unexpected MUST
pRelPred> expecting other text or number

*************************** \ !Unconsumed Error: pRelPred: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/3:plain p> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=28:
term p/3:plain p> unexpected MUST
term p/3:plain p> expecting other text or number

************************** \ !Unconsumed Error: term p/3:plain p: Unexpected MUST Expecting: other text or number :4_1:Must:
term p/notLabelTerm> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=28:
term p/notLabelTerm> unexpected MUST
term p/notLabelTerm> expecting ( or term

************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected MUST Expecting: ( term :4_1:Must:
term p> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=28:
term p> unexpected MUST
term p> expecting (, other text or number, or term

************************ \ !Unconsumed Error: term p: Unexpected MUST Expecting: ( other text or number term :4_1:Must:
expression> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=28:
expression> unexpected MUST
expression> expecting expression

*********************** \ !Unconsumed Error: expression: Unexpected MUST Expecting: expression    :4_1:Must:
ppp inner> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=28:
ppp inner> unexpected MUST
ppp inner> expecting expression

********************** \ !Unconsumed Error: ppp inner: Unexpected MUST Expecting: expression       :4_1:Must:
********************** / withPrePost                                                               :4_1:Must:
*********************** > |<* starting                                                            :4_1:Must:
*********************** / $*|                                                                     :4_1:Must:
************************ / pre part                                                              :4_1:Must:
pre part> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=28:
pre part> unexpected MUST
pre part> expecting ( or Other text

************************ \ !Unconsumed Error: pre part: Unexpected MUST Expecting: ( Other text  :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting ( or Other text

*********************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: ( Other text         :4_1:Must:
withPrePost> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=28:
withPrePost> unexpected MUST
withPrePost> expecting ( or Other text

********************** \ !Unconsumed Error: withPrePost: Unexpected MUST Expecting: ( Other text   :4_1:Must:
********************** / $*|                                                                       :4_1:Must:
*********************** / pre part                                                                :4_1:Must:
pre part> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=28:
pre part> unexpected MUST
pre part> expecting ( or Other text

*********************** \ !Unconsumed Error: pre part: Unexpected MUST Expecting: ( Other text    :4_1:Must:
$*|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=28:
$*|> unexpected MUST
$*|> expecting ( or Other text

********************** \ !Unconsumed Error: $*|: Unexpected MUST Expecting: ( Other text           :4_1:Must:
********************** / |<*/base                                                                     :4_2:UnDeeper:
*********************** / ppp inner                                                                  :4_2:UnDeeper:
************************ / expression                                                               :4_2:UnDeeper:
************************* / term p                                                                 :4_2:UnDeeper:
************************** / term p/1a:label ends directly above next line                        :4_2:UnDeeper:
*************************** / $*|                                                                :4_2:UnDeeper:
**************************** / someSL                                                           :4_2:UnDeeper:
***************************** / pNumAsText                                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number  :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

**************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

*************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=25:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
************************** / term p/1b:label ends to the left of line below, with EOL             :4_2:UnDeeper:
*************************** / $*|                                                                :4_2:UnDeeper:
**************************** / someSL                                                           :4_2:UnDeeper:
***************************** / pNumAsText                                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number  :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

**************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

*************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=25:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
************************** / term p/1c:label ends to the right of line below                      :4_2:UnDeeper:
*************************** > |<|                                                                :4_2:UnDeeper:
*************************** > |<* starting                                                       :4_2:UnDeeper:
*************************** / $*|                                                                :4_2:UnDeeper:
**************************** / someSL                                                           :4_2:UnDeeper:
***************************** / pNumAsText                                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number  :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

**************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

*************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=25:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
************************** / term p/notLabelTerm                                                  :4_2:UnDeeper:
*************************** / term p/2:someIndentation expr p                                    :4_2:UnDeeper:
**************************** / someIndentation                                                  :4_2:UnDeeper:
***************************** / myindented-GoDeeper                                            :4_2:UnDeeper:
myindented-GoDeeper> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=25:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

***************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :4_2:UnDeeper:
someIndentation> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=25:
someIndentation> unexpected )
someIndentation> expecting (

**************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (    :4_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=25:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

*************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :4_2:UnDeeper:
*************************** / term p/3:plain p                                                   :4_2:UnDeeper:
**************************** / pRelPred                                                         :4_2:UnDeeper:
***************************** / slRelPred                                                      :4_2:UnDeeper:
****************************** / nested simpleHorn                                            :4_2:UnDeeper:
******************************* > |^|                                                        :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slMultiTerm                                              :4_2:UnDeeper:
********************************* / someSL                                                 :4_2:UnDeeper:
********************************** / pNumAsText                                           :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
nested simpleHorn> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=25:
nested simpleHorn> unexpected )
nested simpleHorn> expecting other text or number

****************************** \ !Unconsumed Error: nested simpleHorn: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
****************************** / RPConstraint                                                 :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slMultiTerm                                              :4_2:UnDeeper:
********************************* / someSL                                                 :4_2:UnDeeper:
********************************** / pNumAsText                                           :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
RPConstraint> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=25:
RPConstraint> unexpected )
RPConstraint> expecting other text or number

****************************** \ !Unconsumed Error: RPConstraint: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
****************************** / RPBoolStructR                                                :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slMultiTerm                                              :4_2:UnDeeper:
********************************* / someSL                                                 :4_2:UnDeeper:
********************************** / pNumAsText                                           :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
RPBoolStructR> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=25:
RPBoolStructR> unexpected )
RPBoolStructR> expecting other text or number

****************************** \ !Unconsumed Error: RPBoolStructR: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
****************************** / RPMT                                                         :4_2:UnDeeper:
******************************* / $*|                                                        :4_2:UnDeeper:
******************************** / slAKA                                                    :4_2:UnDeeper:
********************************* / $*|                                                    :4_2:UnDeeper:
********************************** / slAKA base                                           :4_2:UnDeeper:
*********************************** / slMultiTerm                                        :4_2:UnDeeper:
************************************ / someSL                                           :4_2:UnDeeper:
************************************* / pNumAsText                                     :4_2:UnDeeper:
pNumAsText> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=25:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :4_2:UnDeeper:
someSL> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=25:
someSL> unexpected )
someSL> expecting other text or number

************************************ \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slMultiTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=25:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

*********************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slAKA base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=25:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slAKA> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=25:
slAKA> unexpected )
slAKA> expecting other text or number

******************************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
RPMT> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=25:
RPMT> unexpected )
RPMT> expecting other text or number

****************************** \ !Unconsumed Error: RPMT: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
slRelPred> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=25:
slRelPred> unexpected )
slRelPred> expecting other text or number

***************************** \ !Unconsumed Error: slRelPred: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
pRelPred> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=25:
pRelPred> unexpected )
pRelPred> expecting other text or number

**************************** \ !Unconsumed Error: pRelPred: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/3:plain p> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=25:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

*************************** \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :4_2:UnDeeper:
term p/notLabelTerm> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=25:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :4_2:UnDeeper:
term p> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=25:
term p> unexpected )
term p> expecting (, other text or number, or term

************************* \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :4_2:UnDeeper:
expression> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=25:
expression> unexpected )
expression> expecting expression

************************ \ !Unconsumed Error: expression: Unexpected ) Expecting: expression        :4_2:UnDeeper:
ppp inner> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=25:
ppp inner> unexpected )
ppp inner> expecting expression

*********************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression           :4_2:UnDeeper:
*********************** / withPrePost                                                                :4_2:UnDeeper:
************************ > |<* starting                                                             :4_2:UnDeeper:
************************ / $*|                                                                      :4_2:UnDeeper:
************************* / pre part                                                               :4_2:UnDeeper:
pre part> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=25:
pre part> unexpected )
pre part> expecting ( or Other text

************************* \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text      :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting ( or Other text

************************ \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text             :4_2:UnDeeper:
withPrePost> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=25:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

*********************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text       :4_2:UnDeeper:
*********************** / $*|                                                                        :4_2:UnDeeper:
************************ / pre part                                                                 :4_2:UnDeeper:
pre part> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=25:
pre part> unexpected )
pre part> expecting ( or Other text

************************ \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text        :4_2:UnDeeper:
$*|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=25:
$*|> unexpected )
$*|> expecting ( or Other text

*********************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text               :4_2:UnDeeper:
|<*/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=25:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

********************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :4_2:UnDeeper:
|<*/parent> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=28:
|<*/parent> unexpected MUST
|<*/parent> expecting (, ), Other text, or expression

********************* \ !Unconsumed Error: |<*/parent: Unexpected MUST Expecting: ( ( ) Other text expression :4_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "is" ( "not" ( "a Public Agency"
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=28:
term p/1c:label ends to the right of line below> unexpected MUST
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

******************** \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected MUST Expecting: ( ( ( ) Other text expression :4_2:UnDeeper:
******************** / term p/notLabelTerm                                                             :3_2:Other "is":
********************* / term p/2:someIndentation expr p                                               :3_2:Other "is":
********************** / someIndentation                                                             :3_2:Other "is":
*********************** / myindented-GoDeeper                                                       :3_2:Other "is":
myindented-GoDeeper> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=20:
myindented-GoDeeper> unexpected "is"
myindented-GoDeeper> expecting (

*********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "is" Expecting: (      :3_2:Other "is":
someIndentation> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=20:
someIndentation> unexpected "is"
someIndentation> expecting (

********************** \ !Unconsumed Error: someIndentation: Unexpected "is" Expecting: (            :3_2:Other "is":
term p/2:someIndentation expr p> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=20:
term p/2:someIndentation expr p> unexpected "is"
term p/2:someIndentation expr p> expecting (

********************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "is" Expecting: ( :3_2:Other "is":
********************* / term p/3:plain p                                                              :3_2:Other "is":
********************** / pRelPred                                                                    :3_2:Other "is":
*********************** / slRelPred                                                                 :3_2:Other "is":
************************ / nested simpleHorn                                                       :3_2:Other "is":
************************* > |^|                                                                   :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slMultiTerm                                                         :3_2:Other "is":
*************************** / someSL                                                            :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ someSL has returned (["is","not","a Public Agency"],2)             :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)          :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
************************* / |^| deeps                                                              :4_2:UnDeeper:
|^| deeps> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|^| deeps> MATCH (COK): ) ) )
|^| deeps> VALUE: (([(),(),()],-3),[])

************************* \ |^| deeps has returned ([(),(),()],-3)                              :4_1:Must:
nested simpleHorn> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
nested simpleHorn> MATCH (CERR): "is" ( "not" ( "a Public Agency" ) ) )
nested simpleHorn> ERROR:
nested simpleHorn> offset=28:
nested simpleHorn> unexpected MUST
nested simpleHorn> expecting ) or MEANS

************************ \ !Consumed Error: nested simpleHorn: Unexpected MUST Expecting: MEANS ) :4_1:Must:
************************ / RPConstraint                                                            :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slMultiTerm                                                         :3_2:Other "is":
*************************** / someSL                                                            :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ someSL has returned (["is","not","a Public Agency"],2)             :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)          :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
************************* / |>| calling $>>                                                        :4_2:UnDeeper:
************************** / |>>/recurse                                                          :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :4_2:UnDeeper:
************************** / |>>/base                                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :4_2:UnDeeper:
|>| calling $>>> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=25:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
RPConstraint> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
RPConstraint> MATCH (CERR): "is" ( "not" ( "a Public Agency"
RPConstraint> ERROR:
RPConstraint> offset=25:
RPConstraint> unexpected )
RPConstraint> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Consumed Error: RPConstraint: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
************************ / RPBoolStructR                                                           :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slMultiTerm                                                         :3_2:Other "is":
*************************** / someSL                                                            :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ someSL has returned (["is","not","a Public Agency"],2)             :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)          :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
************************* / |>| calling $>>                                                        :4_2:UnDeeper:
************************** / |>>/recurse                                                          :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :4_2:UnDeeper:
************************** / |>>/base                                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :4_2:UnDeeper:
|>| calling $>>> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=25:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
RPBoolStructR> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
RPBoolStructR> MATCH (CERR): "is" ( "not" ( "a Public Agency"
RPBoolStructR> ERROR:
RPBoolStructR> offset=25:
RPBoolStructR> unexpected )
RPBoolStructR> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Consumed Error: RPBoolStructR: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :4_2:UnDeeper:
************************ / RPMT                                                                    :3_2:Other "is":
************************* / $*|                                                                   :3_2:Other "is":
************************** / slAKA                                                               :3_2:Other "is":
*************************** / $*|                                                               :3_2:Other "is":
**************************** / slAKA base                                                      :3_2:Other "is":
***************************** / slMultiTerm                                                   :3_2:Other "is":
****************************** / someSL                                                      :3_2:Other "is":
someSL> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
someSL> MATCH (COK): "is" ( "not" ( "a Public Agency"
someSL> VALUE: ((["is","not","a Public Agency"],2),[])

****************************** \ someSL has returned (["is","not","a Public Agency"],2)       :4_2:UnDeeper:
slMultiTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slMultiTerm> MATCH (COK): "is" ( "not" ( "a Public Agency"
slMultiTerm> VALUE: ((["is","not","a Public Agency"],2),[])

***************************** \ slMultiTerm has returned (["is","not","a Public Agency"],2)    :4_2:UnDeeper:
slAKA base> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slAKA base> MATCH (COK): "is" ( "not" ( "a Public Agency"
slAKA base> VALUE: ((["is","not","a Public Agency"],2),[])

**************************** \ slAKA base has returned (["is","not","a Public Agency"],2)       :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

*************************** \ $*| has returned (["is","not","a Public Agency"],2)                :4_2:UnDeeper:
*************************** / |>>/recurse                                                        :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (          :4_2:UnDeeper:
*************************** / |>>/base                                                           :4_2:UnDeeper:
**************************** / slAKA optional akapart                                           :4_2:UnDeeper:
***************************** / |?| optional something                                         :4_2:UnDeeper:
****************************** / |>>/recurse                                                  :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (    :4_2:UnDeeper:
****************************** / |>>/base                                                     :4_2:UnDeeper:
******************************* / PAKA/akapart                                               :4_2:UnDeeper:
******************************** / $>|                                                      :4_2:UnDeeper:
********************************* / Aka Token                                              :4_2:UnDeeper:
Aka Token> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=25:
Aka Token> unexpected )
Aka Token> expecting AKA

********************************* \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :4_2:UnDeeper:
$>|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=25:
$>|> unexpected )
$>|> expecting AKA

******************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA      :4_2:UnDeeper:
PAKA/akapart> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=25:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

******************************* \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting AKA

****************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA     :4_2:UnDeeper:
|?| optional something> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************************** \ |?| optional something has returned (Nothing,0)                :4_2:UnDeeper:
slAKA optional akapart> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

**************************** \ slAKA optional akapart has returned (Nothing,0)                  :4_2:UnDeeper:
**************************** > |>>/base got Nothing                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************************** \ |>>/base has returned (Nothing,0)                                  :4_2:UnDeeper:
*************************** / |>>/recurse                                                        :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (          :4_2:UnDeeper:
*************************** / |>>/base                                                           :4_2:UnDeeper:
**************************** / slAKA optional typically                                         :4_2:UnDeeper:
***************************** / |?| optional something                                         :4_2:UnDeeper:
****************************** / |>>/recurse                                                  :4_2:UnDeeper:
|>>/recurse> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=25:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (    :4_2:UnDeeper:
****************************** / |>>/base                                                     :4_2:UnDeeper:
******************************* / typically                                                  :4_2:UnDeeper:
******************************** / $>|                                                      :4_2:UnDeeper:
$>|> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=25:
$>|> unexpected )
$>|> expecting TYPICALLY

******************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :4_2:UnDeeper:
typically> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=25:
typically> unexpected )
typically> expecting TYPICALLY

******************************* \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=25:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

****************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :4_2:UnDeeper:
|?| optional something> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************************** \ |?| optional something has returned (Nothing,0)                :4_2:UnDeeper:
slAKA optional typically> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

**************************** \ slAKA optional typically has returned (Nothing,0)                :4_2:UnDeeper:
**************************** > |>>/base got Nothing                                             :4_2:UnDeeper:
|>>/base> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************************** \ |>>/base has returned (Nothing,0)                                  :4_2:UnDeeper:
*************************** > slAKA: proceeding after base and entityalias are retrieved ...     :4_2:UnDeeper:
*************************** > pAKA: entityalias = Nothing                                        :4_2:UnDeeper:
slAKA> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slAKA> MATCH (COK): "is" ( "not" ( "a Public Agency"
slAKA> VALUE: ((["is","not","a Public Agency"],2),[])

************************** \ slAKA has returned (["is","not","a Public Agency"],2)                :4_2:UnDeeper:
$*|> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
$*|> MATCH (COK): "is" ( "not" ( "a Public Agency"
$*|> VALUE: ((["is","not","a Public Agency"],2),[])

************************* \ $*| has returned (["is","not","a Public Agency"],2)                    :4_2:UnDeeper:
RPMT> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
RPMT> MATCH (COK): "is" ( "not" ( "a Public Agency"
RPMT> VALUE: ((RPMT ["is","not","a Public Agency"],2),[])

************************ \ RPMT has returned (RPMT ["is","not","a Public Agency"],2)                :4_2:UnDeeper:
slRelPred> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
slRelPred> MATCH (COK): "is" ( "not" ( "a Public Agency"
slRelPred> VALUE: ((RPMT ["is","not","a Public Agency"],2),[])

*********************** \ slRelPred has returned (RPMT ["is","not","a Public Agency"],2)             :4_2:UnDeeper:
*********************** / undeepers                                                                  :4_2:UnDeeper:
************************ > sameLine/undeepers: reached end of line; now need to clear 2 UnDeepers   :4_2:UnDeeper:
************************ > sameLine: success!                                                           :4_4:UnDeeper:
undeepers> IN: ) ) ) MUST ( BEFORE ( 30 ( "days" ) ) )  <…>
undeepers> MATCH (COK): ) )
undeepers> VALUE: ((),[])

*********************** \ undeepers has returned ()                                                      :4_4:UnDeeper:
pRelPred> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
pRelPred> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
pRelPred> VALUE: (RPMT ["is","not","a Public Agency"],[])

********************** \ pRelPred has returned RPMT ["is","not","a Public Agency"]                        :4_4:UnDeeper:
term p/3:plain p> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/3:plain p> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
term p/3:plain p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

********************* \ term p/3:plain p has returned MyLeaf (RPMT ["is","not","a Public Agency"])         :4_4:UnDeeper:
term p/notLabelTerm> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p/notLabelTerm> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

******************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["is","not","a Public Agency"])        :4_4:UnDeeper:
term p> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
term p> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
term p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

******************* \ term p has returned MyLeaf (RPMT ["is","not","a Public Agency"])                       :4_4:UnDeeper:
******************* / binary(Or)                                                                             :4_4:UnDeeper:
binary(Or)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=27:
binary(Or)> unexpected )
binary(Or)> expecting OR

******************* \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                              :4_4:UnDeeper:
******************* / binary(And)                                                                            :4_4:UnDeeper:
binary(And)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=27:
binary(And)> unexpected )
binary(And)> expecting AND

******************* \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                            :4_4:UnDeeper:
******************* / binary(SetLess)                                                                        :4_4:UnDeeper:
binary(SetLess)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=27:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

******************* \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS                       :4_4:UnDeeper:
******************* / binary(SetPlus)                                                                        :4_4:UnDeeper:
binary(SetPlus)> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=27:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

******************* \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS                       :4_4:UnDeeper:
expression> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
expression> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
expression> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

****************** \ expression has returned MyLeaf (RPMT ["is","not","a Public Agency"])                     :4_4:UnDeeper:
ppp inner> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
ppp inner> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
ppp inner> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

***************** \ ppp inner has returned MyLeaf (RPMT ["is","not","a Public Agency"])                        :4_4:UnDeeper:
manyIndentation/leaf?> IN: "is" ( "not" ( "a Public Agency" ) ) ) M <…>
manyIndentation/leaf?> MATCH (COK): "is" ( "not" ( "a Public Agency" ) )
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

**************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["is","not","a Public Agency"])              :4_4:UnDeeper:
**************** / myindented-UnDeeper                                                                          :4_4:UnDeeper:
myindented-UnDeeper> IN: ) MUST ( BEFORE ( 30 ( "days" ) ) ) UPON <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

**************** \ myindented-UnDeeper has returned UnDeeper                                             :4_1:Must:
someIndentation> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
someIndentation> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
someIndentation> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

*************** \ someIndentation has returned MyLeaf (RPMT ["is","not","a Public Agency"])               :4_1:Must:
term p/2:someIndentation expr p> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/2:someIndentation expr p> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

************** \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["is","not","a Public Agency"]) :4_1:Must:
term p/notLabelTerm> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p/notLabelTerm> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["is","not","a Public Agency"])               :4_1:Must:
term p> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
term p> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
term p> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

************ \ term p has returned MyLeaf (RPMT ["is","not","a Public Agency"])                              :4_1:Must:
************ / binary(Or)                                                                                    :4_1:Must:
binary(Or)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=28:
binary(Or)> unexpected MUST
binary(Or)> expecting OR

************ \ !Unconsumed Error: binary(Or): Unexpected MUST Expecting: OR                                  :4_1:Must:
************ / binary(And)                                                                                   :4_1:Must:
binary(And)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=28:
binary(And)> unexpected MUST
binary(And)> expecting AND

************ \ !Unconsumed Error: binary(And): Unexpected MUST Expecting: AND                                :4_1:Must:
************ / binary(SetLess)                                                                               :4_1:Must:
binary(SetLess)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=28:
binary(SetLess)> unexpected MUST
binary(SetLess)> expecting LESS

************ \ !Unconsumed Error: binary(SetLess): Unexpected MUST Expecting: LESS                           :4_1:Must:
************ / binary(SetPlus)                                                                               :4_1:Must:
binary(SetPlus)> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=28:
binary(SetPlus)> unexpected MUST
binary(SetPlus)> expecting PLUS

************ \ !Unconsumed Error: binary(SetPlus): Unexpected MUST Expecting: PLUS                           :4_1:Must:
expression> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
expression> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
expression> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

*********** \ expression has returned MyLeaf (RPMT ["is","not","a Public Agency"])                            :4_1:Must:
ppp inner> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
ppp inner> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
ppp inner> VALUE: (MyLeaf (RPMT ["is","not","a Public Agency"]),[])

********** \ ppp inner has returned MyLeaf (RPMT ["is","not","a Public Agency"])                               :4_1:Must:
pBSR> IN: ( "is" ( "not" ( "a Public Agency" ) ) ) <…>
pBSR> MATCH (COK): ( "is" ( "not" ( "a Public Agency" ) ) )
pBSR> VALUE: (Leaf (RPMT ["is","not","a Public Agency"]),[])

********* \ pBSR has returned Leaf (RPMT ["is","not","a Public Agency"])                                        :4_1:Must:
preambleBoolStructR [Who,Which,Whose]> IN: WHO ( "is" ( "not" ( "a Public Agency" ) <…>
preambleBoolStructR [Who,Which,Whose]> MATCH (COK): WHO ( "is" ( "not" ( "a Public Agency" ) <…>
preambleBoolStructR [Who,Which,Whose]> VALUE: ((Who,Leaf (RPMT ["is","not","a Public Agency"])),[])

******** \ preambleBoolStructR [Who,Which,Whose] has returned (Who,Leaf (RPMT ["is","not","a Public Agency"]))   :4_1:Must:
manyIndentation/leaf?> IN: WHO ( "is" ( "not" ( "a Public Agency" ) <…>
manyIndentation/leaf?> MATCH (COK): WHO ( "is" ( "not" ( "a Public Agency" ) <…>
manyIndentation/leaf?> VALUE: ((Who,Leaf (RPMT ["is","not","a Public Agency"])),[])

******* \ manyIndentation/leaf? has returned (Who,Leaf (RPMT ["is","not","a Public Agency"]))                     :4_1:Must:
******* / WHERE                                                                                                   :4_1:Must:
WHERE> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=28:
WHERE> unexpected MUST
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                                              :4_1:Must:
******* / preambleParamText:[Having]                                                                              :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=28:
$>|> unexpected MUST
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                                             :4_1:Must:
preambleParamText:[Having]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=28:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING                        :4_1:Must:
******* / preambleParamText:[Given]                                                                               :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=28:
$>|> unexpected MUST
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                                              :4_1:Must:
preambleParamText:[Given]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=28:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN                          :4_1:Must:
******* / preambleParamText:[Upon]                                                                                :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=28:
$>|> unexpected MUST
$>|> expecting UPON

******** \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                                               :4_1:Must:
preambleParamText:[Upon]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=28:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

******* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON                            :4_1:Must:
******* / preambleBoolStructR [Unless]                                                                            :4_1:Must:
preambleBoolStructR [Unless]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=28:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS                      :4_1:Must:
******* / preambleBoolStructR [When,If]                                                                           :4_1:Must:
preambleBoolStructR [When,If]> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=28:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

******* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN                    :4_1:Must:
******* / pDT                                                                                                     :4_1:Must:
******** / $>|                                                                                                   :4_1:Must:
$>|> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
$>|> MATCH (COK): MUST
$>|> VALUE: (DMust,[])

******** \ $>| has returned DMust                                                                                 :4_2:GoDeeper:
******** / |>| calling $>>                                                                                        :4_2:GoDeeper:
********* / |>>/recurse                                                                                          :4_2:GoDeeper:
********** / |>>/recurse                                                                                         :4_2:Before:
|>>/recurse> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=30:
|>>/recurse> unexpected BEFORE
|>>/recurse> expecting (

********** \ !Unconsumed Error: |>>/recurse: Unexpected BEFORE Expecting: (                                      :4_2:Before:
********** / |>>/base                                                                                            :4_2:Before:
*********** / pTemporal/eventually                                                                              :4_2:Before:
pTemporal/eventually> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=30:
pTemporal/eventually> unexpected BEFORE
pTemporal/eventually> expecting EVENTUALLY

*********** \ !Unconsumed Error: pTemporal/eventually: Unexpected BEFORE Expecting: EVENTUALLY                  :4_2:Before:
*********** / pTemporal/specifically                                                                            :4_2:Before:
************ / $>|                                                                                             :4_2:Before:
$>|> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
$>|> MATCH (COK): BEFORE
$>|> VALUE: (Before,[])

************ \ $>| has returned Before                                                                          :4_3:GoDeeper:
************ / |>>/recurse                                                                                      :4_3:GoDeeper:
************* / |>>/recurse                                                                                     :4_3:TNumber 30:
|>>/recurse> IN: 30 ( "days" ) ) ) UPON ( "becoming aware <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=32:
|>>/recurse> unexpected 30
|>>/recurse> expecting (

************* \ !Unconsumed Error: |>>/recurse: Unexpected 30 Expecting: (                                      :4_3:TNumber 30:
************* / |>>/base                                                                                        :4_3:TNumber 30:
************** > |>>/base got Just 30                                                                           :4_4:GoDeeper:
|>>/base> IN: 30 ( "days" ) ) ) UPON ( "becoming aware <…>
|>>/base> MATCH (COK): 30
|>>/base> VALUE: ((Just 30,0),[])

************* \ |>>/base has returned (Just 30,0)                                                                :4_4:GoDeeper:
|>>/recurse> IN: ( 30 ( "days" ) ) ) UPON ( "becoming awa <…>
|>>/recurse> MATCH (COK): ( 30
|>>/recurse> VALUE: ((Just 30,1),[])

************ \ |>>/recurse has returned (Just 30,1)                                                               :4_4:GoDeeper:
************ / |>| calling $>>                                                                                    :4_4:GoDeeper:
************* / |>>/recurse                                                                                      :4_4:GoDeeper:
************** / |>>/recurse                                                                                     :4_4:Other "days:
|>>/recurse> IN: "days" ) ) ) UPON ( "becoming aware a da <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=34:
|>>/recurse> unexpected "days"
|>>/recurse> expecting (

************** \ !Unconsumed Error: |>>/recurse: Unexpected "days" Expecting: (                                  :4_4:Other "days:
************** / |>>/base                                                                                        :4_4:Other "days:
*************** > |>>/base got "days"                                                                        :5_2:UnDeeper:
|>>/base> IN: "days" ) ) ) UPON ( "becoming aware a da <…>
|>>/base> MATCH (COK): "days"
|>>/base> VALUE: (("days",0),[])

************** \ |>>/base has returned ("days",0)                                                             :5_2:UnDeeper:
|>>/recurse> IN: ( "days" ) ) ) UPON ( "becoming aware a  <…>
|>>/recurse> MATCH (COK): ( "days"
|>>/recurse> VALUE: (("days",1),[])

************* \ |>>/recurse has returned ("days",1)                                                            :5_2:UnDeeper:
|>| calling $>>> IN: ( "days" ) ) ) UPON ( "becoming aware a  <…>
|>| calling $>>> MATCH (COK): ( "days"
|>| calling $>>> VALUE: (("days",1),[])

************ \ |>| calling $>> has returned ("days",1)                                                          :5_2:UnDeeper:
************ / undeepers                                                                                        :5_2:UnDeeper:
************* > sameLine/undeepers: reached end of line; now need to clear 2 UnDeepers                         :5_2:UnDeeper:
************* > sameLine: success!                                                                                 :5_4:UnDeeper:
undeepers> IN: ) ) ) UPON ( "becoming aware a data brea <…>
undeepers> MATCH (COK): ) )
undeepers> VALUE: ((),[])

************ \ undeepers has returned ()                                                                            :5_4:UnDeeper:
pTemporal/specifically> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
pTemporal/specifically> MATCH (COK): BEFORE ( 30 ( "days" ) )
pTemporal/specifically> VALUE: (Just (TemporalConstraint TBefore (Just 30) "days"),[])

*********** \ pTemporal/specifically has returned Just (TemporalConstraint TBefore (Just 30) "days")                 :5_4:UnDeeper:
*********** > |>>/base got Just (Just (TemporalConstraint TBefore (Just 30) "days"))                                 :5_4:UnDeeper:
|>>/base> IN: BEFORE ( 30 ( "days" ) ) ) UPON ( "becom <…>
|>>/base> MATCH (COK): BEFORE ( 30 ( "days" ) )
|>>/base> VALUE: ((Just (Just (TemporalConstraint TBefore (Just 30) "days")),0),[])

********** \ |>>/base has returned (Just (Just (TemporalConstraint TBefore (Just 30) "days")),0)                      :5_4:UnDeeper:
|>>/recurse> IN: ( BEFORE ( 30 ( "days" ) ) ) UPON ( "bec <…>
|>>/recurse> MATCH (COK): ( BEFORE ( 30 ( "days" ) )
|>>/recurse> VALUE: ((Just (Just (TemporalConstraint TBefore (Just 30) "days")),1),[])

********* \ |>>/recurse has returned (Just (Just (TemporalConstraint TBefore (Just 30) "days")),1)                     :5_4:UnDeeper:
|>| calling $>>> IN: ( BEFORE ( 30 ( "days" ) ) ) UPON ( "bec <…>
|>| calling $>>> MATCH (COK): ( BEFORE ( 30 ( "days" ) )
|>| calling $>>> VALUE: ((Just (Just (TemporalConstraint TBefore (Just 30) "days")),1),[])

******** \ |>| calling $>> has returned (Just (Just (TemporalConstraint TBefore (Just 30) "days")),1)                   :5_4:UnDeeper:
******** / undeepers                                                                                                    :5_4:UnDeeper:
********* > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                     :5_4:UnDeeper:
********* > sameLine: success!                                                                                  :5_1:Upon:
undeepers> IN: ) UPON ( "becoming aware a data breach m <…>
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

******** \ undeepers has returned ()                                                                             :5_1:Upon:
pDT> IN: MUST ( BEFORE ( 30 ( "days" ) ) ) UPON ( <…>
pDT> MATCH (COK): MUST ( BEFORE ( 30 ( "days" ) ) )
pDT> VALUE: ((DMust,Just (TemporalConstraint TBefore (Just 30) "days")),[])

******* \ pDT has returned (DMust,Just (TemporalConstraint TBefore (Just 30) "days"))                             :5_1:Upon:
******* / WHERE                                                                                                   :5_1:Upon:
WHERE> IN: UPON ( "becoming aware a data breach may <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=38:
WHERE> unexpected UPON
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected UPON Expecting: WHERE                                              :5_1:Upon:
******* / preambleParamText:[Having]                                                                              :5_1:Upon:
******** / $>|                                                                                                   :5_1:Upon:
$>|> IN: UPON ( "becoming aware a data breach may <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=38:
$>|> unexpected UPON
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected UPON Expecting: HAVING                                             :5_1:Upon:
preambleParamText:[Having]> IN: UPON ( "becoming aware a data breach may <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=38:
preambleParamText:[Having]> unexpected UPON
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected UPON Expecting: HAVING                        :5_1:Upon:
******* / preambleParamText:[Given]                                                                               :5_1:Upon:
******** / $>|                                                                                                   :5_1:Upon:
$>|> IN: UPON ( "becoming aware a data breach may <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=38:
$>|> unexpected UPON
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected UPON Expecting: GIVEN                                              :5_1:Upon:
preambleParamText:[Given]> IN: UPON ( "becoming aware a data breach may <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=38:
preambleParamText:[Given]> unexpected UPON
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected UPON Expecting: GIVEN                          :5_1:Upon:
******* / preambleParamText:[Upon]                                                                                :5_1:Upon:
******** / $>|                                                                                                   :5_1:Upon:
$>|> IN: UPON ( "becoming aware a data breach may <…>
$>|> MATCH (COK): UPON
$>|> VALUE: (Upon,[])

******** \ $>| has returned Upon                                                                                  :5_2:GoDeeper:
******** / |>| calling $>>                                                                                        :5_2:GoDeeper:
********* / |>>/recurse                                                                                          :5_2:GoDeeper:
********** / |>>/recurse                                                                                         :5_2:Other "beco:
|>>/recurse> IN: "becoming aware a data breach may have o <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=40:
|>>/recurse> unexpected "becoming aware a data breach may have occurred"
|>>/recurse> expecting (

********** \ !Unconsumed Error: |>>/recurse: Unexpected "becoming aware a data breach may have occurred" Expecting: ( :5_2:Other "beco:
********** / |>>/base                                                                                            :5_2:Other "beco:
*********** / pParamText                                                                                        :5_2:Other "beco:
************ / pParamText(flat) first line: pKeyValues                                                         :5_2:Other "beco:
************* / pKeyValuesAka                                                                                 :5_2:Other "beco:
************** / slAKA                                                                                       :5_2:Other "beco:
*************** / $*|                                                                                       :5_2:Other "beco:
**************** / slAKA base                                                                              :5_2:Other "beco:
***************** / slKeyValues                                                                           :5_2:Other "beco:
****************** / $*|                                                                                 :5_2:Other "beco:
******************* / someSL                                                                            :5_2:Other "beco:
someSL> IN: "becoming aware a data breach may have o <…>
someSL> MATCH (COK): "becoming aware a data breach may have o <…>
someSL> VALUE: ((["becoming aware a data breach may have occurred"],0),[])

******************* \ someSL has returned (["becoming aware a data breach may have occurred"],0)         :6_2:UnDeeper:
$*|> IN: "becoming aware a data breach may have o <…>
$*|> MATCH (COK): "becoming aware a data breach may have o <…>
$*|> VALUE: ((["becoming aware a data breach may have occurred"],0),[])

****************** \ $*| has returned (["becoming aware a data breach may have occurred"],0)              :6_2:UnDeeper:
****************** / |>>/recurse                                                                          :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                            :6_2:UnDeeper:
****************** / |>>/base                                                                             :6_2:UnDeeper:
******************* / |?| optional something                                                             :6_2:UnDeeper:
******************** / |>>/recurse                                                                      :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                        :6_2:UnDeeper:
******************** / |>>/base                                                                         :6_2:UnDeeper:
********************* / slTypeSig                                                                      :6_2:UnDeeper:
********************** / $>|                                                                          :6_2:UnDeeper:
$>|> IN: ) WHEN ( "the data breach occurs on or a <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=41:
$>|> unexpected )
$>|> expecting :: or IS

********************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS ::                        :6_2:UnDeeper:
slTypeSig> IN: ) WHEN ( "the data breach occurs on or a <…>
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=41:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

********************* \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS ::                    :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=41:
|>>/base> unexpected )
|>>/base> expecting :: or IS

******************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS ::                       :6_2:UnDeeper:
|?| optional something> IN: ) WHEN ( "the data breach occurs on or a <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

******************* \ |?| optional something has returned (Nothing,0)                                    :6_2:UnDeeper:
******************* > |>>/base got Nothing                                                               :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************** \ |>>/base has returned (Nothing,0)                                                    :6_2:UnDeeper:
slKeyValues> IN: "becoming aware a data breach may have o <…>
slKeyValues> MATCH (COK): "becoming aware a data breach may have o <…>
slKeyValues> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

***************** \ slKeyValues has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0) :6_2:UnDeeper:
slAKA base> IN: "becoming aware a data breach may have o <…>
slAKA base> MATCH (COK): "becoming aware a data breach may have o <…>
slAKA base> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

**************** \ slAKA base has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0) :6_2:UnDeeper:
$*|> IN: "becoming aware a data breach may have o <…>
$*|> MATCH (COK): "becoming aware a data breach may have o <…>
$*|> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

*************** \ $*| has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0)      :6_2:UnDeeper:
*************** / |>>/recurse                                                                                :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                  :6_2:UnDeeper:
*************** / |>>/base                                                                                   :6_2:UnDeeper:
**************** / slAKA optional akapart                                                                   :6_2:UnDeeper:
***************** / |?| optional something                                                                 :6_2:UnDeeper:
****************** / |>>/recurse                                                                          :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                            :6_2:UnDeeper:
****************** / |>>/base                                                                             :6_2:UnDeeper:
******************* / PAKA/akapart                                                                       :6_2:UnDeeper:
******************** / $>|                                                                              :6_2:UnDeeper:
********************* / Aka Token                                                                      :6_2:UnDeeper:
Aka Token> IN: ) WHEN ( "the data breach occurs on or a <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=41:
Aka Token> unexpected )
Aka Token> expecting AKA

********************* \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA                      :6_2:UnDeeper:
$>|> IN: ) WHEN ( "the data breach occurs on or a <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=41:
$>|> unexpected )
$>|> expecting AKA

******************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA                              :6_2:UnDeeper:
PAKA/akapart> IN: ) WHEN ( "the data breach occurs on or a <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=41:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

******************* \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA                       :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=41:
|>>/base> unexpected )
|>>/base> expecting AKA

****************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA                             :6_2:UnDeeper:
|?| optional something> IN: ) WHEN ( "the data breach occurs on or a <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************** \ |?| optional something has returned (Nothing,0)                                        :6_2:UnDeeper:
slAKA optional akapart> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

**************** \ slAKA optional akapart has returned (Nothing,0)                                          :6_2:UnDeeper:
**************** > |>>/base got Nothing                                                                     :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************** \ |>>/base has returned (Nothing,0)                                                          :6_2:UnDeeper:
*************** / |>>/recurse                                                                                :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                                  :6_2:UnDeeper:
*************** / |>>/base                                                                                   :6_2:UnDeeper:
**************** / slAKA optional typically                                                                 :6_2:UnDeeper:
***************** / |?| optional something                                                                 :6_2:UnDeeper:
****************** / |>>/recurse                                                                          :6_2:UnDeeper:
|>>/recurse> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=41:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (                            :6_2:UnDeeper:
****************** / |>>/base                                                                             :6_2:UnDeeper:
******************* / typically                                                                          :6_2:UnDeeper:
******************** / $>|                                                                              :6_2:UnDeeper:
$>|> IN: ) WHEN ( "the data breach occurs on or a <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=41:
$>|> unexpected )
$>|> expecting TYPICALLY

******************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY                        :6_2:UnDeeper:
typically> IN: ) WHEN ( "the data breach occurs on or a <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=41:
typically> unexpected )
typically> expecting TYPICALLY

******************* \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY                    :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=41:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

****************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY                       :6_2:UnDeeper:
|?| optional something> IN: ) WHEN ( "the data breach occurs on or a <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

***************** \ |?| optional something has returned (Nothing,0)                                        :6_2:UnDeeper:
slAKA optional typically> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

**************** \ slAKA optional typically has returned (Nothing,0)                                        :6_2:UnDeeper:
**************** > |>>/base got Nothing                                                                     :6_2:UnDeeper:
|>>/base> IN: ) WHEN ( "the data breach occurs on or a <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*************** \ |>>/base has returned (Nothing,0)                                                          :6_2:UnDeeper:
*************** > slAKA: proceeding after base and entityalias are retrieved ...                             :6_2:UnDeeper:
*************** > pAKA: entityalias = Nothing                                                                :6_2:UnDeeper:
slAKA> IN: "becoming aware a data breach may have o <…>
slAKA> MATCH (COK): "becoming aware a data breach may have o <…>
slAKA> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing),0),[])

************** \ slAKA has returned (("becoming aware a data breach may have occurred" :| [],Nothing),0)      :6_2:UnDeeper:
************** / undeepers                                                                                    :6_2:UnDeeper:
*************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                     :6_2:UnDeeper:
*************** > sameLine: success!                                                                         :6_2:UnDeeper:
undeepers> IN: ) WHEN ( "the data breach occurs on or a <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************** \ undeepers has returned ()                                                                    :6_2:UnDeeper:
pKeyValuesAka> IN: "becoming aware a data breach may have o <…>
pKeyValuesAka> MATCH (COK): "becoming aware a data breach may have o <…>
pKeyValuesAka> VALUE: (("becoming aware a data breach may have occurred" :| [],Nothing),[])

************* \ pKeyValuesAka has returned ("becoming aware a data breach may have occurred" :| [],Nothing)    :6_2:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "becoming aware a data breach may have o <…>
pParamText(flat) first line: pKeyValues> MATCH (COK): "becoming aware a data breach may have o <…>
pParamText(flat) first line: pKeyValues> VALUE: (("becoming aware a data breach may have occurred" :| [],Nothing),[])

************ \ pParamText(flat) first line: pKeyValues has returned ("becoming aware a data breach may have occurred" :| [],Nothing) :6_2:UnDeeper:
************ / pParamText(flat) subsequent lines: sameMany pKeyValues                                           :6_2:UnDeeper:
************* / manyIndentation/leaf?                                                                          :6_2:UnDeeper:
************** / sameMany                                                                                     :6_2:UnDeeper:
*************** / pKeyValuesAka                                                                              :6_2:UnDeeper:
**************** / slAKA                                                                                    :6_2:UnDeeper:
***************** / $*|                                                                                    :6_2:UnDeeper:
****************** / slAKA base                                                                           :6_2:UnDeeper:
******************* / slKeyValues                                                                        :6_2:UnDeeper:
******************** / $*|                                                                              :6_2:UnDeeper:
********************* / someSL                                                                         :6_2:UnDeeper:
********************** / pNumAsText                                                                   :6_2:UnDeeper:
pNumAsText> IN: ) WHEN ( "the data breach occurs on or a <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=41:
pNumAsText> unexpected )
pNumAsText> expecting number

********************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                :6_2:UnDeeper:
someSL> IN: ) WHEN ( "the data breach occurs on or a <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=41:
someSL> unexpected )
someSL> expecting other text or number

********************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number        :6_2:UnDeeper:
$*|> IN: ) WHEN ( "the data breach occurs on or a <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=41:
$*|> unexpected )
$*|> expecting other text or number

******************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number             :6_2:UnDeeper:
slKeyValues> IN: ) WHEN ( "the data breach occurs on or a <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=41:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

******************* \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number       :6_2:UnDeeper:
slAKA base> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=41:
slAKA base> unexpected )
slAKA base> expecting other text or number

****************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number          :6_2:UnDeeper:
$*|> IN: ) WHEN ( "the data breach occurs on or a <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=41:
$*|> unexpected )
$*|> expecting other text or number

***************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number                   :6_2:UnDeeper:
slAKA> IN: ) WHEN ( "the data breach occurs on or a <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=41:
slAKA> unexpected )
slAKA> expecting other text or number

**************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number                   :6_2:UnDeeper:
pKeyValuesAka> IN: ) WHEN ( "the data breach occurs on or a <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=41:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

*************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number             :6_2:UnDeeper:
sameMany> IN: ) WHEN ( "the data breach occurs on or a <…>
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

************** \ sameMany has returned []                                                                     :6_2:UnDeeper:
manyIndentation/leaf?> IN: ) WHEN ( "the data breach occurs on or a <…>
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

************* \ manyIndentation/leaf? has returned []                                                          :6_2:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) WHEN ( "the data breach occurs on or a <…>
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

************ \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned []                           :6_2:UnDeeper:
pParamText> IN: "becoming aware a data breach may have o <…>
pParamText> MATCH (COK): "becoming aware a data breach may have o <…>
pParamText> VALUE: (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],[])

*********** \ pParamText has returned ("becoming aware a data breach may have occurred" :| [],Nothing) :| []     :6_2:UnDeeper:
*********** > |>>/base got ("becoming aware a data breach may have occurred" :| [],Nothing) :| []                :6_2:UnDeeper:
|>>/base> IN: "becoming aware a data breach may have o <…>
|>>/base> MATCH (COK): "becoming aware a data breach may have o <…>
|>>/base> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing) :| [],0),[])

********** \ |>>/base has returned (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],0)     :6_2:UnDeeper:
|>>/recurse> IN: ( "becoming aware a data breach may have <…>
|>>/recurse> MATCH (COK): ( "becoming aware a data breach may have <…>
|>>/recurse> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1),[])

********* \ |>>/recurse has returned (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1)    :6_2:UnDeeper:
|>| calling $>>> IN: ( "becoming aware a data breach may have <…>
|>| calling $>>> MATCH (COK): ( "becoming aware a data breach may have <…>
|>| calling $>>> VALUE: ((("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1),[])

******** \ |>| calling $>> has returned (("becoming aware a data breach may have occurred" :| [],Nothing) :| [],1)  :6_2:UnDeeper:
******** / undeepers                                                                                                :6_2:UnDeeper:
********* > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                 :6_2:UnDeeper:
********* > sameLine: success!                                                                                  :6_1:When:
undeepers> IN: ) WHEN ( "the data breach occurs on or a <…>
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

******** \ undeepers has returned ()                                                                             :6_1:When:
preambleParamText:[Upon]> IN: UPON ( "becoming aware a data breach may <…>
preambleParamText:[Upon]> MATCH (COK): UPON ( "becoming aware a data breach may <…>
preambleParamText:[Upon]> VALUE: ((Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| []),[])

******* \ preambleParamText:[Upon] has returned (Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| []) :6_1:When:
******* / preambleParamText:[Upon]                                                                                :6_1:When:
******** / $>|                                                                                                   :6_1:When:
$>|> IN: WHEN ( "the data breach occurs on or aft <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=42:
$>|> unexpected WHEN
$>|> expecting UPON

******** \ !Unconsumed Error: $>|: Unexpected WHEN Expecting: UPON                                               :6_1:When:
preambleParamText:[Upon]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=42:
preambleParamText:[Upon]> unexpected WHEN
preambleParamText:[Upon]> expecting UPON

******* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected WHEN Expecting: UPON                            :6_1:When:
******* / WHERE                                                                                                   :6_1:When:
WHERE> IN: WHEN ( "the data breach occurs on or aft <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=42:
WHERE> unexpected WHEN
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected WHEN Expecting: WHERE                                              :6_1:When:
******* / preambleParamText:[Having]                                                                              :6_1:When:
******** / $>|                                                                                                   :6_1:When:
$>|> IN: WHEN ( "the data breach occurs on or aft <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=42:
$>|> unexpected WHEN
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected WHEN Expecting: HAVING                                             :6_1:When:
preambleParamText:[Having]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=42:
preambleParamText:[Having]> unexpected WHEN
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected WHEN Expecting: HAVING                        :6_1:When:
******* / preambleParamText:[Given]                                                                               :6_1:When:
******** / $>|                                                                                                   :6_1:When:
$>|> IN: WHEN ( "the data breach occurs on or aft <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=42:
$>|> unexpected WHEN
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected WHEN Expecting: GIVEN                                              :6_1:When:
preambleParamText:[Given]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=42:
preambleParamText:[Given]> unexpected WHEN
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected WHEN Expecting: GIVEN                          :6_1:When:
******* / preambleBoolStructR [Unless]                                                                            :6_1:When:
preambleBoolStructR [Unless]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=42:
preambleBoolStructR [Unless]> unexpected WHEN
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected WHEN Expecting: UNLESS                      :6_1:When:
******* / preambleBoolStructR [When,If]                                                                           :6_1:When:
******** / pBSR                                                                                                   :6_2:GoDeeper:
********* / ppp inner                                                                                            :6_2:GoDeeper:
********** / expression                                                                                         :6_2:GoDeeper:
*********** / term p                                                                                           :6_2:GoDeeper:
************ / term p/1a:label ends directly above next line                                                  :6_2:GoDeeper:
************* / $*|                                                                                          :6_2:GoDeeper:
************** / someSL                                                                                     :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
pNumAsText> IN: ( "the data breach occurs on or after th <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=43:
pNumAsText> unexpected (
pNumAsText> expecting number

*************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                            :6_2:GoDeeper:
someSL> IN: ( "the data breach occurs on or after th <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=43:
someSL> unexpected (
someSL> expecting other text or number

************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                    :6_2:GoDeeper:
$*|> IN: ( "the data breach occurs on or after th <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=43:
$*|> unexpected (
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                         :6_2:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "the data breach occurs on or after th <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=43:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

************ \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :6_2:GoDeeper:
************ / term p/1b:label ends to the left of line below, with EOL                                       :6_2:GoDeeper:
************* / $*|                                                                                          :6_2:GoDeeper:
************** / someSL                                                                                     :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
pNumAsText> IN: ( "the data breach occurs on or after th <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=43:
pNumAsText> unexpected (
pNumAsText> expecting number

*************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                            :6_2:GoDeeper:
someSL> IN: ( "the data breach occurs on or after th <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=43:
someSL> unexpected (
someSL> expecting other text or number

************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                    :6_2:GoDeeper:
$*|> IN: ( "the data breach occurs on or after th <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=43:
$*|> unexpected (
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                         :6_2:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "the data breach occurs on or after th <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=43:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************ \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :6_2:GoDeeper:
************ / term p/1c:label ends to the right of line below                                                :6_2:GoDeeper:
************* > |<|                                                                                          :6_2:GoDeeper:
************* > |<* starting                                                                                 :6_2:GoDeeper:
************* / $*|                                                                                          :6_2:GoDeeper:
************** / someSL                                                                                     :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
pNumAsText> IN: ( "the data breach occurs on or after th <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=43:
pNumAsText> unexpected (
pNumAsText> expecting number

*************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                            :6_2:GoDeeper:
someSL> IN: ( "the data breach occurs on or after th <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=43:
someSL> unexpected (
someSL> expecting other text or number

************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                    :6_2:GoDeeper:
$*|> IN: ( "the data breach occurs on or after th <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=43:
$*|> unexpected (
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                         :6_2:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "the data breach occurs on or after th <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=43:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

************ \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :6_2:GoDeeper:
************ / term p/notLabelTerm                                                                            :6_2:GoDeeper:
************* / term p/2:someIndentation expr p                                                              :6_2:GoDeeper:
************** / someIndentation                                                                            :6_2:GoDeeper:
*************** / myindented-GoDeeper                                                                      :6_2:GoDeeper:
myindented-GoDeeper> IN: ( "the data breach occurs on or after th <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

*************** \ myindented-GoDeeper has returned GoDeeper                                                 :6_2:Other "the:
*************** / manyIndentation/leaf?                                                                     :6_2:Other "the:
**************** / ppp inner                                                                               :6_2:Other "the:
***************** / expression                                                                            :6_2:Other "the:
****************** / term p                                                                              :6_2:Other "the:
******************* / term p/1a:label ends directly above next line                                     :6_2:Other "the:
******************** / $*|                                                                             :6_2:Other "the:
********************* / someSL                                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************* \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
********************* / pNumAsText                                                                     :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                  :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (CERR): "the data breach occurs on or after the  <…>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting ( or other text or number

******************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number             :7_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "the data breach occurs on or after the  <…>
term p/1a:label ends directly above next line> MATCH (CERR): "the data breach occurs on or after the  <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=45:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

******************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :7_2:UnDeeper:
******************* / term p/1b:label ends to the left of line below, with EOL                          :6_2:Other "the:
******************** / $*|                                                                             :6_2:Other "the:
********************* / someSL                                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************* \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

******************** \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
******************** / matching EOL                                                                     :7_2:UnDeeper:
matching EOL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=45:
matching EOL> unexpected )
matching EOL> expecting EOL

******************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL                     :7_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "the data breach occurs on or after the  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "the data breach occurs on or after the  <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=45:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

******************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :7_2:UnDeeper:
******************* / term p/1c:label ends to the right of line below                                   :6_2:Other "the:
******************** > |<|                                                                             :6_2:Other "the:
******************** > |<* starting                                                                    :6_2:Other "the:
******************** / $*|                                                                             :6_2:Other "the:
********************* / someSL                                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************* \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

******************** \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
******************** / |<*/parent                                                                       :7_2:UnDeeper:
********************* > |<*/recurse                                                                    :7_2:UnDeeper:
********************* / ppp inner                                                                   :7_1:Do:
********************** / expression                                                                :7_1:Do:
*********************** / term p                                                                  :7_1:Do:
************************ / term p/1a:label ends directly above next line                         :7_1:Do:
************************* / $*|                                                                 :7_1:Do:
************************** / someSL                                                            :7_1:Do:
*************************** / pNumAsText                                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number  :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
term p/1a:label ends directly above next line> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=46:
term p/1a:label ends directly above next line> unexpected DO
term p/1a:label ends directly above next line> expecting other text or number

************************ \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected DO Expecting: other text or number :7_1:Do:
************************ / term p/1b:label ends to the left of line below, with EOL              :7_1:Do:
************************* / $*|                                                                 :7_1:Do:
************************** / someSL                                                            :7_1:Do:
*************************** / pNumAsText                                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number  :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
term p/1b:label ends to the left of line below, with EOL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=46:
term p/1b:label ends to the left of line below, with EOL> unexpected DO
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************ \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected DO Expecting: other text or number :7_1:Do:
************************ / term p/1c:label ends to the right of line below                       :7_1:Do:
************************* > |<|                                                                 :7_1:Do:
************************* > |<* starting                                                        :7_1:Do:
************************* / $*|                                                                 :7_1:Do:
************************** / someSL                                                            :7_1:Do:
*************************** / pNumAsText                                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number  :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
term p/1c:label ends to the right of line below> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=46:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting other text or number

************************ \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: other text or number :7_1:Do:
************************ / term p/notLabelTerm                                                   :7_1:Do:
************************* / term p/2:someIndentation expr p                                     :7_1:Do:
************************** / someIndentation                                                   :7_1:Do:
*************************** / myindented-GoDeeper                                             :7_1:Do:
myindented-GoDeeper> IN: DO ( "assess" ( "if it is a Notifiable D <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=46:
myindented-GoDeeper> unexpected DO
myindented-GoDeeper> expecting (

*************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected DO Expecting: ( :7_1:Do:
someIndentation> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=46:
someIndentation> unexpected DO
someIndentation> expecting (

************************** \ !Unconsumed Error: someIndentation: Unexpected DO Expecting: (    :7_1:Do:
term p/2:someIndentation expr p> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=46:
term p/2:someIndentation expr p> unexpected DO
term p/2:someIndentation expr p> expecting (

************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected DO Expecting: ( :7_1:Do:
************************* / term p/3:plain p                                                    :7_1:Do:
************************** / pRelPred                                                          :7_1:Do:
*************************** / slRelPred                                                       :7_1:Do:
**************************** / nested simpleHorn                                             :7_1:Do:
***************************** > |^|                                                         :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slMultiTerm                                               :7_1:Do:
******************************* / someSL                                                  :7_1:Do:
******************************** / pNumAsText                                            :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

******************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

******************************* \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

****************************** \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
nested simpleHorn> IN: DO ( "assess" ( "if it is a Notifiable D <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=46:
nested simpleHorn> unexpected DO
nested simpleHorn> expecting other text or number

**************************** \ !Unconsumed Error: nested simpleHorn: Unexpected DO Expecting: other text or number :7_1:Do:
**************************** / RPConstraint                                                  :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slMultiTerm                                               :7_1:Do:
******************************* / someSL                                                  :7_1:Do:
******************************** / pNumAsText                                            :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

******************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

******************************* \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

****************************** \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
RPConstraint> IN: DO ( "assess" ( "if it is a Notifiable D <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=46:
RPConstraint> unexpected DO
RPConstraint> expecting other text or number

**************************** \ !Unconsumed Error: RPConstraint: Unexpected DO Expecting: other text or number :7_1:Do:
**************************** / RPBoolStructR                                                 :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slMultiTerm                                               :7_1:Do:
******************************* / someSL                                                  :7_1:Do:
******************************** / pNumAsText                                            :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

******************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

******************************* \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

****************************** \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
RPBoolStructR> IN: DO ( "assess" ( "if it is a Notifiable D <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=46:
RPBoolStructR> unexpected DO
RPBoolStructR> expecting other text or number

**************************** \ !Unconsumed Error: RPBoolStructR: Unexpected DO Expecting: other text or number :7_1:Do:
**************************** / RPMT                                                          :7_1:Do:
***************************** / $*|                                                         :7_1:Do:
****************************** / slAKA                                                     :7_1:Do:
******************************* / $*|                                                     :7_1:Do:
******************************** / slAKA base                                            :7_1:Do:
********************************* / slMultiTerm                                         :7_1:Do:
********************************** / someSL                                            :7_1:Do:
*********************************** / pNumAsText                                      :7_1:Do:
pNumAsText> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=46:
pNumAsText> unexpected DO
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :7_1:Do:
someSL> IN: DO ( "assess" ( "if it is a Notifiable D <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=46:
someSL> unexpected DO
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :7_1:Do:
slMultiTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=46:
slMultiTerm> unexpected DO
slMultiTerm> expecting other text or number

********************************* \ !Unconsumed Error: slMultiTerm: Unexpected DO Expecting: other text or number :7_1:Do:
slAKA base> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=46:
slAKA base> unexpected DO
slAKA base> expecting other text or number

******************************** \ !Unconsumed Error: slAKA base: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
slAKA> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=46:
slAKA> unexpected DO
slAKA> expecting other text or number

****************************** \ !Unconsumed Error: slAKA: Unexpected DO Expecting: other text or number :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting other text or number

***************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :7_1:Do:
RPMT> IN: DO ( "assess" ( "if it is a Notifiable D <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=46:
RPMT> unexpected DO
RPMT> expecting other text or number

**************************** \ !Unconsumed Error: RPMT: Unexpected DO Expecting: other text or number :7_1:Do:
slRelPred> IN: DO ( "assess" ( "if it is a Notifiable D <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=46:
slRelPred> unexpected DO
slRelPred> expecting other text or number

*************************** \ !Unconsumed Error: slRelPred: Unexpected DO Expecting: other text or number :7_1:Do:
pRelPred> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=46:
pRelPred> unexpected DO
pRelPred> expecting other text or number

************************** \ !Unconsumed Error: pRelPred: Unexpected DO Expecting: other text or number :7_1:Do:
term p/3:plain p> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=46:
term p/3:plain p> unexpected DO
term p/3:plain p> expecting other text or number

************************* \ !Unconsumed Error: term p/3:plain p: Unexpected DO Expecting: other text or number :7_1:Do:
term p/notLabelTerm> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=46:
term p/notLabelTerm> unexpected DO
term p/notLabelTerm> expecting ( or term

************************ \ !Unconsumed Error: term p/notLabelTerm: Unexpected DO Expecting: ( term :7_1:Do:
term p> IN: DO ( "assess" ( "if it is a Notifiable D <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=46:
term p> unexpected DO
term p> expecting (, other text or number, or term

*********************** \ !Unconsumed Error: term p: Unexpected DO Expecting: ( other text or number term :7_1:Do:
expression> IN: DO ( "assess" ( "if it is a Notifiable D <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=46:
expression> unexpected DO
expression> expecting expression

********************** \ !Unconsumed Error: expression: Unexpected DO Expecting: expression        :7_1:Do:
ppp inner> IN: DO ( "assess" ( "if it is a Notifiable D <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=46:
ppp inner> unexpected DO
ppp inner> expecting expression

********************* \ !Unconsumed Error: ppp inner: Unexpected DO Expecting: expression           :7_1:Do:
********************* / withPrePost                                                                 :7_1:Do:
********************** > |<* starting                                                              :7_1:Do:
********************** / $*|                                                                       :7_1:Do:
*********************** / pre part                                                                :7_1:Do:
pre part> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=46:
pre part> unexpected DO
pre part> expecting ( or Other text

*********************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text      :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting ( or Other text

********************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text             :7_1:Do:
withPrePost> IN: DO ( "assess" ( "if it is a Notifiable D <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=46:
withPrePost> unexpected DO
withPrePost> expecting ( or Other text

********************* \ !Unconsumed Error: withPrePost: Unexpected DO Expecting: ( Other text       :7_1:Do:
********************* / $*|                                                                         :7_1:Do:
********************** / pre part                                                                  :7_1:Do:
pre part> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=46:
pre part> unexpected DO
pre part> expecting ( or Other text

********************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text        :7_1:Do:
$*|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=46:
$*|> unexpected DO
$*|> expecting ( or Other text

********************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text               :7_1:Do:
********************* / |<*/base                                                                       :7_2:UnDeeper:
********************** / ppp inner                                                                    :7_2:UnDeeper:
*********************** / expression                                                                 :7_2:UnDeeper:
************************ / term p                                                                   :7_2:UnDeeper:
************************* / term p/1a:label ends directly above next line                          :7_2:UnDeeper:
************************** / $*|                                                                  :7_2:UnDeeper:
*************************** / someSL                                                             :7_2:UnDeeper:
**************************** / pNumAsText                                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=45:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
************************* / term p/1b:label ends to the left of line below, with EOL               :7_2:UnDeeper:
************************** / $*|                                                                  :7_2:UnDeeper:
*************************** / someSL                                                             :7_2:UnDeeper:
**************************** / pNumAsText                                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=45:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
************************* / term p/1c:label ends to the right of line below                        :7_2:UnDeeper:
************************** > |<|                                                                  :7_2:UnDeeper:
************************** > |<* starting                                                         :7_2:UnDeeper:
************************** / $*|                                                                  :7_2:UnDeeper:
*************************** / someSL                                                             :7_2:UnDeeper:
**************************** / pNumAsText                                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=45:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
************************* / term p/notLabelTerm                                                    :7_2:UnDeeper:
************************** / term p/2:someIndentation expr p                                      :7_2:UnDeeper:
*************************** / someIndentation                                                    :7_2:UnDeeper:
**************************** / myindented-GoDeeper                                              :7_2:UnDeeper:
myindented-GoDeeper> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=45:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

**************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :7_2:UnDeeper:
someIndentation> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=45:
someIndentation> unexpected )
someIndentation> expecting (

*************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (      :7_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=45:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :7_2:UnDeeper:
************************** / term p/3:plain p                                                     :7_2:UnDeeper:
*************************** / pRelPred                                                           :7_2:UnDeeper:
**************************** / slRelPred                                                        :7_2:UnDeeper:
***************************** / nested simpleHorn                                              :7_2:UnDeeper:
****************************** > |^|                                                          :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slMultiTerm                                                :7_2:UnDeeper:
******************************** / someSL                                                   :7_2:UnDeeper:
********************************* / pNumAsText                                             :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
nested simpleHorn> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=45:
nested simpleHorn> unexpected )
nested simpleHorn> expecting other text or number

***************************** \ !Unconsumed Error: nested simpleHorn: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
***************************** / RPConstraint                                                   :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slMultiTerm                                                :7_2:UnDeeper:
******************************** / someSL                                                   :7_2:UnDeeper:
********************************* / pNumAsText                                             :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
RPConstraint> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=45:
RPConstraint> unexpected )
RPConstraint> expecting other text or number

***************************** \ !Unconsumed Error: RPConstraint: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
***************************** / RPBoolStructR                                                  :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slMultiTerm                                                :7_2:UnDeeper:
******************************** / someSL                                                   :7_2:UnDeeper:
********************************* / pNumAsText                                             :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

******************************* \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
RPBoolStructR> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=45:
RPBoolStructR> unexpected )
RPBoolStructR> expecting other text or number

***************************** \ !Unconsumed Error: RPBoolStructR: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
***************************** / RPMT                                                           :7_2:UnDeeper:
****************************** / $*|                                                          :7_2:UnDeeper:
******************************* / slAKA                                                      :7_2:UnDeeper:
******************************** / $*|                                                      :7_2:UnDeeper:
********************************* / slAKA base                                             :7_2:UnDeeper:
********************************** / slMultiTerm                                          :7_2:UnDeeper:
*********************************** / someSL                                             :7_2:UnDeeper:
************************************ / pNumAsText                                       :7_2:UnDeeper:
pNumAsText> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=45:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************ \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :7_2:UnDeeper:
someSL> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=45:
someSL> unexpected )
someSL> expecting other text or number

*********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slMultiTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=45:
slMultiTerm> unexpected )
slMultiTerm> expecting other text or number

********************************** \ !Unconsumed Error: slMultiTerm: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slAKA base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=45:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************* \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slAKA> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=45:
slAKA> unexpected )
slAKA> expecting other text or number

******************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting other text or number

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
RPMT> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=45:
RPMT> unexpected )
RPMT> expecting other text or number

***************************** \ !Unconsumed Error: RPMT: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
slRelPred> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=45:
slRelPred> unexpected )
slRelPred> expecting other text or number

**************************** \ !Unconsumed Error: slRelPred: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
pRelPred> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=45:
pRelPred> unexpected )
pRelPred> expecting other text or number

*************************** \ !Unconsumed Error: pRelPred: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/3:plain p> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=45:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

************************** \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :7_2:UnDeeper:
term p/notLabelTerm> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=45:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :7_2:UnDeeper:
term p> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=45:
term p> unexpected )
term p> expecting (, other text or number, or term

************************ \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :7_2:UnDeeper:
expression> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=45:
expression> unexpected )
expression> expecting expression

*********************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression          :7_2:UnDeeper:
ppp inner> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=45:
ppp inner> unexpected )
ppp inner> expecting expression

********************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression             :7_2:UnDeeper:
********************** / withPrePost                                                                  :7_2:UnDeeper:
*********************** > |<* starting                                                               :7_2:UnDeeper:
*********************** / $*|                                                                        :7_2:UnDeeper:
************************ / pre part                                                                 :7_2:UnDeeper:
pre part> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=45:
pre part> unexpected )
pre part> expecting ( or Other text

************************ \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text        :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting ( or Other text

*********************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text               :7_2:UnDeeper:
withPrePost> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=45:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

********************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text         :7_2:UnDeeper:
********************** / $*|                                                                          :7_2:UnDeeper:
*********************** / pre part                                                                   :7_2:UnDeeper:
pre part> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=45:
pre part> unexpected )
pre part> expecting ( or Other text

*********************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text          :7_2:UnDeeper:
$*|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=45:
$*|> unexpected )
$*|> expecting ( or Other text

********************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text                 :7_2:UnDeeper:
|<*/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=45:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

********************* \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :7_2:UnDeeper:
|<*/parent> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=46:
|<*/parent> unexpected DO
|<*/parent> expecting (, ), Other text, or expression

******************** \ !Unconsumed Error: |<*/parent: Unexpected DO Expecting: ( ( ) Other text expression :7_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "the data breach occurs on or after the  <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "the data breach occurs on or after the  <…>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=46:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

******************* \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: ( ( ( ) Other text expression :7_2:UnDeeper:
******************* / term p/notLabelTerm                                                               :6_2:Other "the:
******************** / term p/2:someIndentation expr p                                                 :6_2:Other "the:
********************* / someIndentation                                                               :6_2:Other "the:
********************** / myindented-GoDeeper                                                         :6_2:Other "the:
myindented-GoDeeper> IN: "the data breach occurs on or after the  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=44:
myindented-GoDeeper> unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"
myindented-GoDeeper> expecting (

********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13" Expecting: ( :6_2:Other "the:
someIndentation> IN: "the data breach occurs on or after the  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=44:
someIndentation> unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"
someIndentation> expecting (

********************* \ !Unconsumed Error: someIndentation: Unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13" Expecting: ( :6_2:Other "the:
term p/2:someIndentation expr p> IN: "the data breach occurs on or after the  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=44:
term p/2:someIndentation expr p> unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"
term p/2:someIndentation expr p> expecting (

******************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13" Expecting: ( :6_2:Other "the:
******************** / term p/3:plain p                                                                :6_2:Other "the:
********************* / pRelPred                                                                      :6_2:Other "the:
********************** / slRelPred                                                                   :6_2:Other "the:
*********************** / nested simpleHorn                                                         :6_2:Other "the:
************************ > |^|                                                                     :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slMultiTerm                                                           :6_2:Other "the:
************************** / someSL                                                              :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************ / |^| deeps                                                                :7_2:UnDeeper:
|^| deeps> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|^| deeps> MATCH (COK): )
|^| deeps> VALUE: (([()],-1),[])

************************ \ |^| deeps has returned ([()],-1)                                      :7_1:Do:
nested simpleHorn> IN: "the data breach occurs on or after the  <…>
nested simpleHorn> MATCH (CERR): "the data breach occurs on or after the  <…>
nested simpleHorn> ERROR:
nested simpleHorn> offset=46:
nested simpleHorn> unexpected DO
nested simpleHorn> expecting ) or MEANS

*********************** \ !Consumed Error: nested simpleHorn: Unexpected DO Expecting: MEANS )    :7_1:Do:
*********************** / RPConstraint                                                              :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slMultiTerm                                                           :6_2:Other "the:
************************** / someSL                                                              :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************ / |>| calling $>>                                                          :7_2:UnDeeper:
************************* / |>>/recurse                                                            :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (              :7_2:UnDeeper:
************************* / |>>/base                                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :7_2:UnDeeper:
|>| calling $>>> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=45:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
RPConstraint> IN: "the data breach occurs on or after the  <…>
RPConstraint> MATCH (CERR): "the data breach occurs on or after the  <…>
RPConstraint> ERROR:
RPConstraint> offset=45:
RPConstraint> unexpected )
RPConstraint> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

*********************** \ !Consumed Error: RPConstraint: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
*********************** / RPBoolStructR                                                             :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slMultiTerm                                                           :6_2:Other "the:
************************** / someSL                                                              :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************ / |>| calling $>>                                                          :7_2:UnDeeper:
************************* / |>>/recurse                                                            :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (              :7_2:UnDeeper:
************************* / |>>/base                                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting <, <=, ==, >, >=, IN, IS, or NOT IN

************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS < <= > >= IN NOT IN == :7_2:UnDeeper:
|>| calling $>>> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>| calling $>>> MATCH (EERR): <EMPTY>
|>| calling $>>> ERROR:
|>| calling $>>> offset=45:
|>| calling $>>> unexpected )
|>| calling $>>> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

************************ \ !Unconsumed Error: |>| calling $>>: Unexpected ) Expecting: IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
RPBoolStructR> IN: "the data breach occurs on or after the  <…>
RPBoolStructR> MATCH (CERR): "the data breach occurs on or after the  <…>
RPBoolStructR> ERROR:
RPBoolStructR> offset=45:
RPBoolStructR> unexpected )
RPBoolStructR> expecting (, <, <=, ==, >, >=, IN, IS, or NOT IN

*********************** \ !Consumed Error: RPBoolStructR: Unexpected ) Expecting: ( IS < <= > >= IN NOT IN == ( :7_2:UnDeeper:
*********************** / RPMT                                                                      :6_2:Other "the:
************************ / $*|                                                                     :6_2:Other "the:
************************* / slAKA                                                                 :6_2:Other "the:
************************** / $*|                                                                 :6_2:Other "the:
*************************** / slAKA base                                                        :6_2:Other "the:
**************************** / slMultiTerm                                                     :6_2:Other "the:
***************************** / someSL                                                        :6_2:Other "the:
someSL> IN: "the data breach occurs on or after the  <…>
someSL> MATCH (COK): "the data breach occurs on or after the  <…>
someSL> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

***************************** \ someSL has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slMultiTerm> IN: "the data breach occurs on or after the  <…>
slMultiTerm> MATCH (COK): "the data breach occurs on or after the  <…>
slMultiTerm> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

**************************** \ slMultiTerm has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slAKA base> IN: "the data breach occurs on or after the  <…>
slAKA base> MATCH (COK): "the data breach occurs on or after the  <…>
slAKA base> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

*************************** \ slAKA base has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************** \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
************************** / |>>/recurse                                                          :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :7_2:UnDeeper:
************************** / |>>/base                                                             :7_2:UnDeeper:
*************************** / slAKA optional akapart                                             :7_2:UnDeeper:
**************************** / |?| optional something                                           :7_2:UnDeeper:
***************************** / |>>/recurse                                                    :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

***************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (      :7_2:UnDeeper:
***************************** / |>>/base                                                       :7_2:UnDeeper:
****************************** / PAKA/akapart                                                 :7_2:UnDeeper:
******************************* / $>|                                                        :7_2:UnDeeper:
******************************** / Aka Token                                                :7_2:UnDeeper:
Aka Token> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=45:
Aka Token> unexpected )
Aka Token> expecting AKA

******************************** \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :7_2:UnDeeper:
$>|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=45:
$>|> unexpected )
$>|> expecting AKA

******************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA        :7_2:UnDeeper:
PAKA/akapart> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=45:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

****************************** \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting AKA

***************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA       :7_2:UnDeeper:
|?| optional something> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

**************************** \ |?| optional something has returned (Nothing,0)                  :7_2:UnDeeper:
slAKA optional akapart> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

*************************** \ slAKA optional akapart has returned (Nothing,0)                    :7_2:UnDeeper:
*************************** > |>>/base got Nothing                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************************** \ |>>/base has returned (Nothing,0)                                    :7_2:UnDeeper:
************************** / |>>/recurse                                                          :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (            :7_2:UnDeeper:
************************** / |>>/base                                                             :7_2:UnDeeper:
*************************** / slAKA optional typically                                           :7_2:UnDeeper:
**************************** / |?| optional something                                           :7_2:UnDeeper:
***************************** / |>>/recurse                                                    :7_2:UnDeeper:
|>>/recurse> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=45:
|>>/recurse> unexpected )
|>>/recurse> expecting (

***************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: (      :7_2:UnDeeper:
***************************** / |>>/base                                                       :7_2:UnDeeper:
****************************** / typically                                                    :7_2:UnDeeper:
******************************* / $>|                                                        :7_2:UnDeeper:
$>|> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=45:
$>|> unexpected )
$>|> expecting TYPICALLY

******************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY  :7_2:UnDeeper:
typically> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=45:
typically> unexpected )
typically> expecting TYPICALLY

****************************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=45:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

***************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :7_2:UnDeeper:
|?| optional something> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

**************************** \ |?| optional something has returned (Nothing,0)                  :7_2:UnDeeper:
slAKA optional typically> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

*************************** \ slAKA optional typically has returned (Nothing,0)                  :7_2:UnDeeper:
*************************** > |>>/base got Nothing                                               :7_2:UnDeeper:
|>>/base> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************************** \ |>>/base has returned (Nothing,0)                                    :7_2:UnDeeper:
************************** > slAKA: proceeding after base and entityalias are retrieved ...       :7_2:UnDeeper:
************************** > pAKA: entityalias = Nothing                                          :7_2:UnDeeper:
slAKA> IN: "the data breach occurs on or after the  <…>
slAKA> MATCH (COK): "the data breach occurs on or after the  <…>
slAKA> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************* \ slAKA has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
$*|> IN: "the data breach occurs on or after the  <…>
$*|> MATCH (COK): "the data breach occurs on or after the  <…>
$*|> VALUE: ((["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

************************ \ $*| has returned (["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
RPMT> IN: "the data breach occurs on or after the  <…>
RPMT> MATCH (COK): "the data breach occurs on or after the  <…>
RPMT> VALUE: ((RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

*********************** \ RPMT has returned (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
slRelPred> IN: "the data breach occurs on or after the  <…>
slRelPred> MATCH (COK): "the data breach occurs on or after the  <…>
slRelPred> VALUE: ((RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0),[])

********************** \ slRelPred has returned (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],0) :7_2:UnDeeper:
********************** / undeepers                                                                    :7_2:UnDeeper:
*********************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers     :7_2:UnDeeper:
*********************** > sameLine: success!                                                         :7_2:UnDeeper:
undeepers> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

********************** \ undeepers has returned ()                                                    :7_2:UnDeeper:
pRelPred> IN: "the data breach occurs on or after the  <…>
pRelPred> MATCH (COK): "the data breach occurs on or after the  <…>
pRelPred> VALUE: (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"],[])

********************* \ pRelPred has returned RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"] :7_2:UnDeeper:
term p/3:plain p> IN: "the data breach occurs on or after the  <…>
term p/3:plain p> MATCH (COK): "the data breach occurs on or after the  <…>
term p/3:plain p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

******************** \ term p/3:plain p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
term p/notLabelTerm> IN: "the data breach occurs on or after the  <…>
term p/notLabelTerm> MATCH (COK): "the data breach occurs on or after the  <…>
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
term p> IN: "the data breach occurs on or after the  <…>
term p> MATCH (COK): "the data breach occurs on or after the  <…>
term p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

****************** \ term p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
****************** / binary(Or)                                                                           :7_2:UnDeeper:
binary(Or)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=45:
binary(Or)> unexpected )
binary(Or)> expecting OR

****************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                            :7_2:UnDeeper:
****************** / binary(And)                                                                          :7_2:UnDeeper:
binary(And)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=45:
binary(And)> unexpected )
binary(And)> expecting AND

****************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                          :7_2:UnDeeper:
****************** / binary(SetLess)                                                                      :7_2:UnDeeper:
binary(SetLess)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=45:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

****************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS                     :7_2:UnDeeper:
****************** / binary(SetPlus)                                                                      :7_2:UnDeeper:
binary(SetPlus)> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=45:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

****************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS                     :7_2:UnDeeper:
expression> IN: "the data breach occurs on or after the  <…>
expression> MATCH (COK): "the data breach occurs on or after the  <…>
expression> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

***************** \ expression has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
ppp inner> IN: "the data breach occurs on or after the  <…>
ppp inner> MATCH (COK): "the data breach occurs on or after the  <…>
ppp inner> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

**************** \ ppp inner has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
manyIndentation/leaf?> IN: "the data breach occurs on or after the  <…>
manyIndentation/leaf?> MATCH (COK): "the data breach occurs on or after the  <…>
manyIndentation/leaf?> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

*************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_2:UnDeeper:
*************** / myindented-UnDeeper                                                                        :7_2:UnDeeper:
myindented-UnDeeper> IN: ) DO ( "assess" ( "if it is a Notifiable <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

*************** \ myindented-UnDeeper has returned UnDeeper                                               :7_1:Do:
someIndentation> IN: ( "the data breach occurs on or after th <…>
someIndentation> MATCH (COK): ( "the data breach occurs on or after th <…>
someIndentation> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

************** \ someIndentation has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
term p/2:someIndentation expr p> IN: ( "the data breach occurs on or after th <…>
term p/2:someIndentation expr p> MATCH (COK): ( "the data breach occurs on or after th <…>
term p/2:someIndentation expr p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

************* \ term p/2:someIndentation expr p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
term p/notLabelTerm> IN: ( "the data breach occurs on or after th <…>
term p/notLabelTerm> MATCH (COK): ( "the data breach occurs on or after th <…>
term p/notLabelTerm> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

************ \ term p/notLabelTerm has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
term p> IN: ( "the data breach occurs on or after th <…>
term p> MATCH (COK): ( "the data breach occurs on or after th <…>
term p> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

*********** \ term p has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
*********** / binary(Or)                                                                                      :7_1:Do:
binary(Or)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=46:
binary(Or)> unexpected DO
binary(Or)> expecting OR

*********** \ !Unconsumed Error: binary(Or): Unexpected DO Expecting: OR                                      :7_1:Do:
*********** / binary(And)                                                                                     :7_1:Do:
binary(And)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=46:
binary(And)> unexpected DO
binary(And)> expecting AND

*********** \ !Unconsumed Error: binary(And): Unexpected DO Expecting: AND                                    :7_1:Do:
*********** / binary(SetLess)                                                                                 :7_1:Do:
binary(SetLess)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=46:
binary(SetLess)> unexpected DO
binary(SetLess)> expecting LESS

*********** \ !Unconsumed Error: binary(SetLess): Unexpected DO Expecting: LESS                               :7_1:Do:
*********** / binary(SetPlus)                                                                                 :7_1:Do:
binary(SetPlus)> IN: DO ( "assess" ( "if it is a Notifiable D <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=46:
binary(SetPlus)> unexpected DO
binary(SetPlus)> expecting PLUS

*********** \ !Unconsumed Error: binary(SetPlus): Unexpected DO Expecting: PLUS                               :7_1:Do:
expression> IN: ( "the data breach occurs on or after th <…>
expression> MATCH (COK): ( "the data breach occurs on or after th <…>
expression> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

********** \ expression has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
ppp inner> IN: ( "the data breach occurs on or after th <…>
ppp inner> MATCH (COK): ( "the data breach occurs on or after th <…>
ppp inner> VALUE: (MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

********* \ ppp inner has returned MyLeaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
pBSR> IN: ( "the data breach occurs on or after th <…>
pBSR> MATCH (COK): ( "the data breach occurs on or after th <…>
pBSR> VALUE: (Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]),[])

******** \ pBSR has returned Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]) :7_1:Do:
preambleBoolStructR [When,If]> IN: WHEN ( "the data breach occurs on or aft <…>
preambleBoolStructR [When,If]> MATCH (COK): WHEN ( "the data breach occurs on or aft <…>
preambleBoolStructR [When,If]> VALUE: ((When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"])),[])

******* \ preambleBoolStructR [When,If] has returned (When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"])) :7_1:Do:
******* / preambleBoolStructR [When,If]                                                                           :7_1:Do:
preambleBoolStructR [When,If]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=46:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

******* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN                      :7_1:Do:
******* / WHERE                                                                                                   :7_1:Do:
WHERE> IN: DO ( "assess" ( "if it is a Notifiable D <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=46:
WHERE> unexpected DO
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                                                :7_1:Do:
******* / preambleParamText:[Having]                                                                              :7_1:Do:
******** / $>|                                                                                                   :7_1:Do:
$>|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=46:
$>|> unexpected DO
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                                               :7_1:Do:
preambleParamText:[Having]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=46:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING                          :7_1:Do:
******* / preambleParamText:[Given]                                                                               :7_1:Do:
******** / $>|                                                                                                   :7_1:Do:
$>|> IN: DO ( "assess" ( "if it is a Notifiable D <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=46:
$>|> unexpected DO
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                                                :7_1:Do:
preambleParamText:[Given]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=46:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN                            :7_1:Do:
******* / preambleBoolStructR [Unless]                                                                            :7_1:Do:
preambleBoolStructR [Unless]> IN: DO ( "assess" ( "if it is a Notifiable D <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=46:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS                        :7_1:Do:
******* / pDoAction/Do                                                                                            :7_1:Do:
pDoAction/Do> IN: DO ( "assess" ( "if it is a Notifiable D <…>
pDoAction/Do> MATCH (COK): DO
pDoAction/Do> VALUE: (Do,[])

******* \ pDoAction/Do has returned Do                                                                             :7_2:GoDeeper:
******* / pDoAction/pAction                                                                                        :7_2:GoDeeper:
******** / pAction calling dBoolStructP                                                                           :7_2:GoDeeper:
********* / dBoolStructP calling exprP                                                                           :7_2:GoDeeper:
********** / expr pParamText                                                                                    :7_2:GoDeeper:
*********** / ppp inner                                                                                        :7_2:GoDeeper:
************ / expression                                                                                     :7_2:GoDeeper:
************* / term p                                                                                       :7_2:GoDeeper:
************** / term p/1a:label ends directly above next line                                              :7_2:GoDeeper:
*************** / $*|                                                                                      :7_2:GoDeeper:
**************** / someSL                                                                                 :7_2:GoDeeper:
***************** / pNumAsText                                                                           :7_2:GoDeeper:
pNumAsText> IN: ( "assess" ( "if it is a Notifiable Data <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=47:
pNumAsText> unexpected (
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                        :7_2:GoDeeper:
someSL> IN: ( "assess" ( "if it is a Notifiable Data <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=47:
someSL> unexpected (
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                :7_2:GoDeeper:
$*|> IN: ( "assess" ( "if it is a Notifiable Data <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=47:
$*|> unexpected (
$*|> expecting other text or number

*************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                     :7_2:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=47:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :7_2:GoDeeper:
************** / term p/1b:label ends to the left of line below, with EOL                                   :7_2:GoDeeper:
*************** / $*|                                                                                      :7_2:GoDeeper:
**************** / someSL                                                                                 :7_2:GoDeeper:
***************** / pNumAsText                                                                           :7_2:GoDeeper:
pNumAsText> IN: ( "assess" ( "if it is a Notifiable Data <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=47:
pNumAsText> unexpected (
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                        :7_2:GoDeeper:
someSL> IN: ( "assess" ( "if it is a Notifiable Data <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=47:
someSL> unexpected (
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                :7_2:GoDeeper:
$*|> IN: ( "assess" ( "if it is a Notifiable Data <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=47:
$*|> unexpected (
$*|> expecting other text or number

*************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                     :7_2:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=47:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :7_2:GoDeeper:
************** / term p/1c:label ends to the right of line below                                            :7_2:GoDeeper:
*************** > |<|                                                                                      :7_2:GoDeeper:
*************** > |<* starting                                                                             :7_2:GoDeeper:
*************** / $*|                                                                                      :7_2:GoDeeper:
**************** / someSL                                                                                 :7_2:GoDeeper:
***************** / pNumAsText                                                                           :7_2:GoDeeper:
pNumAsText> IN: ( "assess" ( "if it is a Notifiable Data <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=47:
pNumAsText> unexpected (
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                        :7_2:GoDeeper:
someSL> IN: ( "assess" ( "if it is a Notifiable Data <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=47:
someSL> unexpected (
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                :7_2:GoDeeper:
$*|> IN: ( "assess" ( "if it is a Notifiable Data <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=47:
$*|> unexpected (
$*|> expecting other text or number

*************** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                     :7_2:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=47:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :7_2:GoDeeper:
************** / term p/notLabelTerm                                                                        :7_2:GoDeeper:
*************** / term p/2:someIndentation expr p                                                          :7_2:GoDeeper:
**************** / someIndentation                                                                        :7_2:GoDeeper:
***************** / myindented-GoDeeper                                                                  :7_2:GoDeeper:
myindented-GoDeeper> IN: ( "assess" ( "if it is a Notifiable Data <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

***************** \ myindented-GoDeeper has returned GoDeeper                                             :7_2:Other "asse:
***************** / manyIndentation/leaf?                                                                 :7_2:Other "asse:
****************** / ppp inner                                                                           :7_2:Other "asse:
******************* / expression                                                                        :7_2:Other "asse:
******************** / term p                                                                          :7_2:Other "asse:
********************* / term p/1a:label ends directly above next line                                 :7_2:Other "asse:
********************** / $*|                                                                         :7_2:Other "asse:
*********************** / someSL                                                                    :7_2:Other "asse:
someSL> IN: "assess" ( "if it is a Notifiable Data B <…>
someSL> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
someSL> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

*********************** \ someSL has returned (["assess","if it is a Notifiable Data Breach"],1)       :8_3:UnDeeper:
*********************** / pNumAsText                                                                   :8_3:UnDeeper:
pNumAsText> IN: ) "by" ( "performing" ( ( "NDB Qualifica <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=51:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number                :8_3:UnDeeper:
$*|> IN: "assess" ( "if it is a Notifiable Data B <…>
$*|> MATCH (CERR): "assess" ( "if it is a Notifiable Data B <…>
$*|> ERROR:
$*|> offset=51:
$*|> unexpected )
$*|> expecting ( or other text or number

********************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number           :8_3:UnDeeper:
term p/1a:label ends directly above next line> IN: "assess" ( "if it is a Notifiable Data B <…>
term p/1a:label ends directly above next line> MATCH (CERR): "assess" ( "if it is a Notifiable Data B <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=51:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

********************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :8_3:UnDeeper:
********************* / term p/1b:label ends to the left of line below, with EOL                      :7_2:Other "asse:
********************** / $*|                                                                         :7_2:Other "asse:
*********************** / someSL                                                                    :7_2:Other "asse:
someSL> IN: "assess" ( "if it is a Notifiable Data B <…>
someSL> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
someSL> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

*********************** \ someSL has returned (["assess","if it is a Notifiable Data Breach"],1)       :8_3:UnDeeper:
$*|> IN: "assess" ( "if it is a Notifiable Data B <…>
$*|> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
$*|> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

********************** \ $*| has returned (["assess","if it is a Notifiable Data Breach"],1)            :8_3:UnDeeper:
********************** / matching EOL                                                                   :8_3:UnDeeper:
matching EOL> IN: ) "by" ( "performing" ( ( "NDB Qualifica <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=51:
matching EOL> unexpected )
matching EOL> expecting EOL

********************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL                   :8_3:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "assess" ( "if it is a Notifiable Data B <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "assess" ( "if it is a Notifiable Data B <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=51:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

********************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :8_3:UnDeeper:
********************* / term p/1c:label ends to the right of line below                               :7_2:Other "asse:
********************** > |<|                                                                         :7_2:Other "asse:
********************** > |<* starting                                                                :7_2:Other "asse:
********************** / $*|                                                                         :7_2:Other "asse:
*********************** / someSL                                                                    :7_2:Other "asse:
someSL> IN: "assess" ( "if it is a Notifiable Data B <…>
someSL> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
someSL> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

*********************** \ someSL has returned (["assess","if it is a Notifiable Data Breach"],1)       :8_3:UnDeeper:
$*|> IN: "assess" ( "if it is a Notifiable Data B <…>
$*|> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
$*|> VALUE: ((["assess","if it is a Notifiable Data Breach"],1),[])

********************** \ $*| has returned (["assess","if it is a Notifiable Data Breach"],1)            :8_3:UnDeeper:
********************** / |<*/parent                                                                     :8_3:UnDeeper:
*********************** > |<*/recurse                                                                  :8_3:UnDeeper:
*********************** / ppp inner                                                                 :8_2:Other "by":
************************ / expression                                                              :8_2:Other "by":
************************* / term p                                                                :8_2:Other "by":
************************** / term p/1a:label ends directly above next line                       :8_2:Other "by":
*************************** / $*|                                                               :8_2:Other "by":
**************************** / someSL                                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

**************************** \ someSL has returned (["by","performing","NDB Qualification"],3)  :9_2:UnDeeper:
**************************** / pNumAsText                                                       :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

**************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number    :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting ( or other text or number

*************************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :9_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1a:label ends directly above next line> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=58:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

************************** \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :9_2:UnDeeper:
************************** / term p/1b:label ends to the left of line below, with EOL            :8_2:Other "by":
*************************** / $*|                                                               :8_2:Other "by":
**************************** / someSL                                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

**************************** \ someSL has returned (["by","performing","NDB Qualification"],3)  :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((["by","performing","NDB Qualification"],3),[])

*************************** \ $*| has returned (["by","performing","NDB Qualification"],3)       :9_2:UnDeeper:
*************************** / matching EOL                                                       :9_2:UnDeeper:
matching EOL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=58:
matching EOL> unexpected )
matching EOL> expecting EOL

*************************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL       :9_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=58:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

************************** \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :9_2:UnDeeper:
************************** / term p/1c:label ends to the right of line below                     :8_2:Other "by":
*************************** > |<|                                                               :8_2:Other "by":
*************************** > |<* starting                                                      :8_2:Other "by":
*************************** / $*|                                                               :8_2:Other "by":
**************************** / someSL                                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

**************************** \ someSL has returned (["by","performing","NDB Qualification"],3)  :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((["by","performing","NDB Qualification"],3),[])

*************************** \ $*| has returned (["by","performing","NDB Qualification"],3)       :9_2:UnDeeper:
*************************** / |<*/parent                                                         :9_2:UnDeeper:
**************************** > |<*/recurse                                                      :9_2:UnDeeper:
**************************** / ppp inner                                                     :9_1:Hence:
***************************** / expression                                                  :9_1:Hence:
****************************** / term p                                                    :9_1:Hence:
******************************* / term p/1a:label ends directly above next line           :9_1:Hence:
******************************** / $*|                                                   :9_1:Hence:
********************************* / someSL                                              :9_1:Hence:
********************************** / pNumAsText                                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/1a:label ends directly above next line> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=62:
term p/1a:label ends directly above next line> unexpected HENCE
term p/1a:label ends directly above next line> expecting other text or number

******************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected HENCE Expecting: other text or number :9_1:Hence:
******************************* / term p/1b:label ends to the left of line below, with EOL :9_1:Hence:
******************************** / $*|                                                   :9_1:Hence:
********************************* / someSL                                              :9_1:Hence:
********************************** / pNumAsText                                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/1b:label ends to the left of line below, with EOL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=62:
term p/1b:label ends to the left of line below, with EOL> unexpected HENCE
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

******************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
******************************* / term p/1c:label ends to the right of line below         :9_1:Hence:
******************************** > |<|                                                   :9_1:Hence:
******************************** > |<* starting                                          :9_1:Hence:
******************************** / $*|                                                   :9_1:Hence:
********************************* / someSL                                              :9_1:Hence:
********************************** / pNumAsText                                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

********************************* \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/1c:label ends to the right of line below> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=62:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting other text or number

******************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: other text or number :9_1:Hence:
******************************* / term p/notLabelTerm                                     :9_1:Hence:
******************************** / term p/2:someIndentation expr p                       :9_1:Hence:
********************************* / someIndentation                                     :9_1:Hence:
********************************** / myindented-GoDeeper                               :9_1:Hence:
myindented-GoDeeper> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=62:
myindented-GoDeeper> unexpected HENCE
myindented-GoDeeper> expecting (

********************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected HENCE Expecting: ( :9_1:Hence:
someIndentation> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=62:
someIndentation> unexpected HENCE
someIndentation> expecting (

********************************* \ !Unconsumed Error: someIndentation: Unexpected HENCE Expecting: ( :9_1:Hence:
term p/2:someIndentation expr p> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=62:
term p/2:someIndentation expr p> unexpected HENCE
term p/2:someIndentation expr p> expecting (

******************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected HENCE Expecting: ( :9_1:Hence:
******************************** / term p/3:plain p                                      :9_1:Hence:
********************************* / pParamText                                          :9_1:Hence:
********************************** / pParamText(flat) first line: pKeyValues           :9_1:Hence:
*********************************** / pKeyValuesAka                                   :9_1:Hence:
************************************ / slAKA                                         :9_1:Hence:
************************************* / $*|                                         :9_1:Hence:
************************************** / slAKA base                                :9_1:Hence:
*************************************** / slKeyValues                             :9_1:Hence:
**************************************** / $*|                                   :9_1:Hence:
***************************************** / someSL                              :9_1:Hence:
****************************************** / pNumAsText                        :9_1:Hence:
pNumAsText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=62:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

****************************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :9_1:Hence:
someSL> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=62:
someSL> unexpected HENCE
someSL> expecting other text or number

***************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

**************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
slKeyValues> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=62:
slKeyValues> unexpected HENCE
slKeyValues> expecting other text or number

*************************************** \ !Unconsumed Error: slKeyValues: Unexpected HENCE Expecting: other text or number :9_1:Hence:
slAKA base> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=62:
slAKA base> unexpected HENCE
slAKA base> expecting other text or number

************************************** \ !Unconsumed Error: slAKA base: Unexpected HENCE Expecting: other text or number :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting other text or number

************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :9_1:Hence:
slAKA> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=62:
slAKA> unexpected HENCE
slAKA> expecting other text or number

************************************ \ !Unconsumed Error: slAKA: Unexpected HENCE Expecting: other text or number :9_1:Hence:
pKeyValuesAka> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=62:
pKeyValuesAka> unexpected HENCE
pKeyValuesAka> expecting other text or number

*********************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected HENCE Expecting: other text or number :9_1:Hence:
pParamText(flat) first line: pKeyValues> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=62:
pParamText(flat) first line: pKeyValues> unexpected HENCE
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected HENCE Expecting: other text or number :9_1:Hence:
pParamText> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=62:
pParamText> unexpected HENCE
pParamText> expecting other text or number

********************************* \ !Unconsumed Error: pParamText: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/3:plain p> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=62:
term p/3:plain p> unexpected HENCE
term p/3:plain p> expecting other text or number

******************************** \ !Unconsumed Error: term p/3:plain p: Unexpected HENCE Expecting: other text or number :9_1:Hence:
term p/notLabelTerm> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=62:
term p/notLabelTerm> unexpected HENCE
term p/notLabelTerm> expecting ( or term

******************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected HENCE Expecting: ( term :9_1:Hence:
term p> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=62:
term p> unexpected HENCE
term p> expecting (, other text or number, or term

****************************** \ !Unconsumed Error: term p: Unexpected HENCE Expecting: ( other text or number term :9_1:Hence:
expression> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=62:
expression> unexpected HENCE
expression> expecting expression

***************************** \ !Unconsumed Error: expression: Unexpected HENCE Expecting: expression :9_1:Hence:
ppp inner> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=62:
ppp inner> unexpected HENCE
ppp inner> expecting expression

**************************** \ !Unconsumed Error: ppp inner: Unexpected HENCE Expecting: expression :9_1:Hence:
**************************** / withPrePost                                                   :9_1:Hence:
***************************** > |<* starting                                                :9_1:Hence:
***************************** / $*|                                                         :9_1:Hence:
****************************** / pre part                                                  :9_1:Hence:
pre part> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=62:
pre part> unexpected HENCE
pre part> expecting ( or Other text

****************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting ( or Other text

***************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
withPrePost> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=62:
withPrePost> unexpected HENCE
withPrePost> expecting ( or Other text

**************************** \ !Unconsumed Error: withPrePost: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
**************************** / $*|                                                           :9_1:Hence:
***************************** / pre part                                                    :9_1:Hence:
pre part> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=62:
pre part> unexpected HENCE
pre part> expecting ( or Other text

***************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
$*|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=62:
$*|> unexpected HENCE
$*|> expecting ( or Other text

**************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :9_1:Hence:
**************************** / |<*/base                                                         :9_2:UnDeeper:
***************************** / ppp inner                                                      :9_2:UnDeeper:
****************************** / expression                                                   :9_2:UnDeeper:
******************************* / term p                                                     :9_2:UnDeeper:
******************************** / term p/1a:label ends directly above next line            :9_2:UnDeeper:
********************************* / $*|                                                    :9_2:UnDeeper:
********************************** / someSL                                               :9_2:UnDeeper:
*********************************** / pNumAsText                                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=58:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

******************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
******************************** / term p/1b:label ends to the left of line below, with EOL :9_2:UnDeeper:
********************************* / $*|                                                    :9_2:UnDeeper:
********************************** / someSL                                               :9_2:UnDeeper:
*********************************** / pNumAsText                                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=58:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

******************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
******************************** / term p/1c:label ends to the right of line below          :9_2:UnDeeper:
********************************* > |<|                                                    :9_2:UnDeeper:
********************************* > |<* starting                                           :9_2:UnDeeper:
********************************* / $*|                                                    :9_2:UnDeeper:
********************************** / someSL                                               :9_2:UnDeeper:
*********************************** / pNumAsText                                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

*********************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

********************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

********************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=58:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

******************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
******************************** / term p/notLabelTerm                                      :9_2:UnDeeper:
********************************* / term p/2:someIndentation expr p                        :9_2:UnDeeper:
********************************** / someIndentation                                      :9_2:UnDeeper:
*********************************** / myindented-GoDeeper                                :9_2:UnDeeper:
myindented-GoDeeper> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=58:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

*********************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :9_2:UnDeeper:
someIndentation> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=58:
someIndentation> unexpected )
someIndentation> expecting (

********************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: ( :9_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=58:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

********************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :9_2:UnDeeper:
********************************* / term p/3:plain p                                       :9_2:UnDeeper:
********************************** / pParamText                                           :9_2:UnDeeper:
*********************************** / pParamText(flat) first line: pKeyValues            :9_2:UnDeeper:
************************************ / pKeyValuesAka                                    :9_2:UnDeeper:
************************************* / slAKA                                          :9_2:UnDeeper:
************************************** / $*|                                          :9_2:UnDeeper:
*************************************** / slAKA base                                 :9_2:UnDeeper:
**************************************** / slKeyValues                              :9_2:UnDeeper:
***************************************** / $*|                                    :9_2:UnDeeper:
****************************************** / someSL                               :9_2:UnDeeper:
******************************************* / pNumAsText                         :9_2:UnDeeper:
pNumAsText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=58:
pNumAsText> unexpected )
pNumAsText> expecting number

******************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_2:UnDeeper:
someSL> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=58:
someSL> unexpected )
someSL> expecting other text or number

****************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

***************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
slKeyValues> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=58:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

**************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
slAKA base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=58:
slAKA base> unexpected )
slAKA base> expecting other text or number

*************************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting other text or number

************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
slAKA> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=58:
slAKA> unexpected )
slAKA> expecting other text or number

************************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
pKeyValuesAka> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=58:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

************************************ \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=58:
pParamText(flat) first line: pKeyValues> unexpected )
pParamText(flat) first line: pKeyValues> expecting other text or number

*********************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
pParamText> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=58:
pParamText> unexpected )
pParamText> expecting other text or number

********************************** \ !Unconsumed Error: pParamText: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/3:plain p> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=58:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

********************************* \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :9_2:UnDeeper:
term p/notLabelTerm> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=58:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

******************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :9_2:UnDeeper:
term p> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=58:
term p> unexpected )
term p> expecting (, other text or number, or term

******************************* \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :9_2:UnDeeper:
expression> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=58:
expression> unexpected )
expression> expecting expression

****************************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression :9_2:UnDeeper:
ppp inner> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=58:
ppp inner> unexpected )
ppp inner> expecting expression

***************************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression :9_2:UnDeeper:
***************************** / withPrePost                                                    :9_2:UnDeeper:
****************************** > |<* starting                                                 :9_2:UnDeeper:
****************************** / $*|                                                          :9_2:UnDeeper:
******************************* / pre part                                                   :9_2:UnDeeper:
pre part> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=58:
pre part> unexpected )
pre part> expecting ( or Other text

******************************* \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting ( or Other text

****************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
withPrePost> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=58:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

***************************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
***************************** / $*|                                                            :9_2:UnDeeper:
****************************** / pre part                                                     :9_2:UnDeeper:
pre part> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=58:
pre part> unexpected )
pre part> expecting ( or Other text

****************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :9_2:UnDeeper:
$*|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=58:
$*|> unexpected )
$*|> expecting ( or Other text

***************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text   :9_2:UnDeeper:
|<*/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=58:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

**************************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :9_2:UnDeeper:
|<*/parent> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=62:
|<*/parent> unexpected HENCE
|<*/parent> expecting (, ), Other text, or expression

*************************** \ !Unconsumed Error: |<*/parent: Unexpected HENCE Expecting: ( ( ) Other text expression :9_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=62:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

************************** \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: ( ( ( ) Other text expression :9_2:UnDeeper:
************************** / term p/notLabelTerm                                                 :8_2:Other "by":
*************************** / term p/2:someIndentation expr p                                   :8_2:Other "by":
**************************** / someIndentation                                                 :8_2:Other "by":
***************************** / myindented-GoDeeper                                           :8_2:Other "by":
myindented-GoDeeper> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=52:
myindented-GoDeeper> unexpected "by"
myindented-GoDeeper> expecting (

***************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "by" Expecting: ( :8_2:Other "by":
someIndentation> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=52:
someIndentation> unexpected "by"
someIndentation> expecting (

**************************** \ !Unconsumed Error: someIndentation: Unexpected "by" Expecting: ( :8_2:Other "by":
term p/2:someIndentation expr p> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=52:
term p/2:someIndentation expr p> unexpected "by"
term p/2:someIndentation expr p> expecting (

*************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "by" Expecting: ( :8_2:Other "by":
*************************** / term p/3:plain p                                                  :8_2:Other "by":
**************************** / pParamText                                                      :8_2:Other "by":
***************************** / pParamText(flat) first line: pKeyValues                       :8_2:Other "by":
****************************** / pKeyValuesAka                                               :8_2:Other "by":
******************************* / slAKA                                                     :8_2:Other "by":
******************************** / $*|                                                     :8_2:Other "by":
********************************* / slAKA base                                            :8_2:Other "by":
********************************** / slKeyValues                                         :8_2:Other "by":
*********************************** / $*|                                               :8_2:Other "by":
************************************ / someSL                                          :8_2:Other "by":
someSL> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
someSL> VALUE: ((["by","performing","NDB Qualification"],3),[])

************************************ \ someSL has returned (["by","performing","NDB Qualification"],3) :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((["by","performing","NDB Qualification"],3),[])

*********************************** \ $*| has returned (["by","performing","NDB Qualification"],3) :9_2:UnDeeper:
*********************************** / |>>/recurse                                        :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
*********************************** / |>>/base                                           :9_2:UnDeeper:
************************************ / |?| optional something                           :9_2:UnDeeper:
************************************* / |>>/recurse                                    :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
************************************* / |>>/base                                       :9_2:UnDeeper:
************************************** / slTypeSig                                    :9_2:UnDeeper:
*************************************** / $>|                                        :9_2:UnDeeper:
$>|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=58:
$>|> unexpected )
$>|> expecting :: or IS

*************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS :: :9_2:UnDeeper:
slTypeSig> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=58:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

************************************** \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS :: :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=58:
|>>/base> unexpected )
|>>/base> expecting :: or IS

************************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS :: :9_2:UnDeeper:
|?| optional something> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

************************************ \ |?| optional something has returned (Nothing,0)  :9_2:UnDeeper:
************************************ > |>>/base got Nothing                             :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

*********************************** \ |>>/base has returned (Nothing,0)                  :9_2:UnDeeper:
slKeyValues> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
slKeyValues> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
slKeyValues> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

********************************** \ slKeyValues has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
slAKA base> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA base> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA base> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

********************************* \ slAKA base has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
$*|> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
$*|> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

******************************** \ $*| has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
******************************** / |>>/recurse                                              :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
******************************** / |>>/base                                                 :9_2:UnDeeper:
********************************* / slAKA optional akapart                                 :9_2:UnDeeper:
********************************** / |?| optional something                               :9_2:UnDeeper:
*********************************** / |>>/recurse                                        :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
*********************************** / |>>/base                                           :9_2:UnDeeper:
************************************ / PAKA/akapart                                     :9_2:UnDeeper:
************************************* / $>|                                            :9_2:UnDeeper:
************************************** / Aka Token                                    :9_2:UnDeeper:
Aka Token> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=58:
Aka Token> unexpected )
Aka Token> expecting AKA

************************************** \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :9_2:UnDeeper:
$>|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=58:
$>|> unexpected )
$>|> expecting AKA

************************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA :9_2:UnDeeper:
PAKA/akapart> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=58:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

************************************ \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=58:
|>>/base> unexpected )
|>>/base> expecting AKA

*********************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA :9_2:UnDeeper:
|?| optional something> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)      :9_2:UnDeeper:
slAKA optional akapart> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional akapart has returned (Nothing,0)        :9_2:UnDeeper:
********************************* > |>>/base got Nothing                                   :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                        :9_2:UnDeeper:
******************************** / |>>/recurse                                              :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
******************************** / |>>/base                                                 :9_2:UnDeeper:
********************************* / slAKA optional typically                               :9_2:UnDeeper:
********************************** / |?| optional something                               :9_2:UnDeeper:
*********************************** / |>>/recurse                                        :9_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=58:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :9_2:UnDeeper:
*********************************** / |>>/base                                           :9_2:UnDeeper:
************************************ / typically                                        :9_2:UnDeeper:
************************************* / $>|                                            :9_2:UnDeeper:
$>|> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=58:
$>|> unexpected )
$>|> expecting TYPICALLY

************************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :9_2:UnDeeper:
typically> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=58:
typically> unexpected )
typically> expecting TYPICALLY

************************************ \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=58:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

*********************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :9_2:UnDeeper:
|?| optional something> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************** \ |?| optional something has returned (Nothing,0)      :9_2:UnDeeper:
slAKA optional typically> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

********************************* \ slAKA optional typically has returned (Nothing,0)      :9_2:UnDeeper:
********************************* > |>>/base got Nothing                                   :9_2:UnDeeper:
|>>/base> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************** \ |>>/base has returned (Nothing,0)                        :9_2:UnDeeper:
******************************** > slAKA: proceeding after base and entityalias are retrieved ... :9_2:UnDeeper:
******************************** > pAKA: entityalias = Nothing                              :9_2:UnDeeper:
slAKA> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
slAKA> VALUE: ((("by" :| ["performing","NDB Qualification"],Nothing),3),[])

******************************* \ slAKA has returned (("by" :| ["performing","NDB Qualification"],Nothing),3) :9_2:UnDeeper:
******************************* / undeepers                                                  :9_2:UnDeeper:
******************************** > sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers :9_2:UnDeeper:
******************************** > sameLine: success!                                             :9_5:UnDeeper:
undeepers> IN: ) ) ) ) HENCE ( "Notification" ) LEST (  <…>
undeepers> MATCH (COK): ) ) )
undeepers> VALUE: ((),[])

******************************* \ undeepers has returned ()                                        :9_5:UnDeeper:
pKeyValuesAka> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
pKeyValuesAka> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
pKeyValuesAka> VALUE: (("by" :| ["performing","NDB Qualification"],Nothing),[])

****************************** \ pKeyValuesAka has returned ("by" :| ["performing","NDB Qualification"],Nothing) :9_5:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText(flat) first line: pKeyValues> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText(flat) first line: pKeyValues> VALUE: (("by" :| ["performing","NDB Qualification"],Nothing),[])

***************************** \ pParamText(flat) first line: pKeyValues has returned ("by" :| ["performing","NDB Qualification"],Nothing) :9_5:UnDeeper:
***************************** / pParamText(flat) subsequent lines: sameMany pKeyValues               :9_5:UnDeeper:
****************************** / manyIndentation/leaf?                                              :9_5:UnDeeper:
******************************* / sameMany                                                         :9_5:UnDeeper:
******************************** / pKeyValuesAka                                                  :9_5:UnDeeper:
********************************* / slAKA                                                        :9_5:UnDeeper:
********************************** / $*|                                                        :9_5:UnDeeper:
*********************************** / slAKA base                                               :9_5:UnDeeper:
************************************ / slKeyValues                                            :9_5:UnDeeper:
************************************* / $*|                                                  :9_5:UnDeeper:
************************************** / someSL                                             :9_5:UnDeeper:
*************************************** / pNumAsText                                       :9_5:UnDeeper:
pNumAsText> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=61:
pNumAsText> unexpected )
pNumAsText> expecting number

*************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :9_5:UnDeeper:
someSL> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=61:
someSL> unexpected )
someSL> expecting other text or number

************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
$*|> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=61:
$*|> unexpected )
$*|> expecting other text or number

************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
slKeyValues> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=61:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

************************************ \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
slAKA base> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=61:
slAKA base> unexpected )
slAKA base> expecting other text or number

*********************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
$*|> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=61:
$*|> unexpected )
$*|> expecting other text or number

********************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
slAKA> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=61:
slAKA> unexpected )
slAKA> expecting other text or number

********************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
pKeyValuesAka> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=61:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

******************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :9_5:UnDeeper:
sameMany> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

******************************* \ sameMany has returned []                                         :9_5:UnDeeper:
manyIndentation/leaf?> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

****************************** \ manyIndentation/leaf? has returned []                              :9_5:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

***************************** \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned [] :9_5:UnDeeper:
pParamText> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
pParamText> VALUE: (("by" :| ["performing","NDB Qualification"],Nothing) :| [],[])

**************************** \ pParamText has returned ("by" :| ["performing","NDB Qualification"],Nothing) :| [] :9_5:UnDeeper:
term p/3:plain p> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/3:plain p> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/3:plain p> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

*************************** \ term p/3:plain p has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
term p/notLabelTerm> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p/notLabelTerm> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
term p/notLabelTerm> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

************************** \ term p/notLabelTerm has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
term p> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
term p> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
term p> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

************************* \ term p has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
************************* / binary(Or)                                                                   :9_5:UnDeeper:
binary(Or)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=61:
binary(Or)> unexpected )
binary(Or)> expecting OR

************************* \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                    :9_5:UnDeeper:
************************* / binary(And)                                                                  :9_5:UnDeeper:
binary(And)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=61:
binary(And)> unexpected )
binary(And)> expecting AND

************************* \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                  :9_5:UnDeeper:
************************* / binary(SetLess)                                                              :9_5:UnDeeper:
binary(SetLess)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=61:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

************************* \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS             :9_5:UnDeeper:
************************* / binary(SetPlus)                                                              :9_5:UnDeeper:
binary(SetPlus)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=61:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

************************* \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS             :9_5:UnDeeper:
expression> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
expression> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
expression> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

************************ \ expression has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
ppp inner> IN: "by" ( "performing" ( ( "NDB Qualificati <…>
ppp inner> MATCH (COK): "by" ( "performing" ( ( "NDB Qualificati <…>
ppp inner> VALUE: (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),[])

*********************** \ ppp inner has returned MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
*********************** > |<*/recurse matched 1 UnDeepers                                                  :9_5:UnDeeper:
|<*/parent> IN: ) "by" ( "performing" ( ( "NDB Qualifica <…>
|<*/parent> MATCH (COK): ) "by" ( "performing" ( ( "NDB Qualifica <…>
|<*/parent> VALUE: ((MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),-1),[])

********************** \ |<*/parent has returned (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []),-1) :9_5:UnDeeper:
********************** / undeepers                                                                          :9_5:UnDeeper:
*********************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers           :9_5:UnDeeper:
*********************** > sameLine: success!                                                               :9_5:UnDeeper:
undeepers> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

********************** \ undeepers has returned ()                                                          :9_5:UnDeeper:
********************** > 1c: got label to the right of next line: ["assess","if it is a Notifiable Data Breach"] :9_5:UnDeeper:
********************** > 1c: got inner: MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| []) :9_5:UnDeeper:
term p/1c:label ends to the right of line below> IN: "assess" ( "if it is a Notifiable Data B <…>
term p/1c:label ends to the right of line below> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
term p/1c:label ends to the right of line below> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

********************* \ term p/1c:label ends to the right of line below has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
term p> IN: "assess" ( "if it is a Notifiable Data B <…>
term p> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
term p> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

******************** \ term p has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
******************** / binary(Or)                                                                             :9_5:UnDeeper:
binary(Or)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=61:
binary(Or)> unexpected )
binary(Or)> expecting OR

******************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                              :9_5:UnDeeper:
******************** / binary(And)                                                                            :9_5:UnDeeper:
binary(And)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=61:
binary(And)> unexpected )
binary(And)> expecting AND

******************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND                            :9_5:UnDeeper:
******************** / binary(SetLess)                                                                        :9_5:UnDeeper:
binary(SetLess)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=61:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

******************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS                       :9_5:UnDeeper:
******************** / binary(SetPlus)                                                                        :9_5:UnDeeper:
binary(SetPlus)> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=61:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

******************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS                       :9_5:UnDeeper:
expression> IN: "assess" ( "if it is a Notifiable Data B <…>
expression> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
expression> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

******************* \ expression has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
ppp inner> IN: "assess" ( "if it is a Notifiable Data B <…>
ppp inner> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
ppp inner> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

****************** \ ppp inner has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
manyIndentation/leaf?> IN: "assess" ( "if it is a Notifiable Data B <…>
manyIndentation/leaf?> MATCH (COK): "assess" ( "if it is a Notifiable Data B <…>
manyIndentation/leaf?> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

***************** \ manyIndentation/leaf? has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_5:UnDeeper:
***************** / myindented-UnDeeper                                                                          :9_5:UnDeeper:
myindented-UnDeeper> IN: ) HENCE ( "Notification" ) LEST ( ( "the <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

***************** \ myindented-UnDeeper has returned UnDeeper                                           :9_1:Hence:
someIndentation> IN: ( "assess" ( "if it is a Notifiable Data <…>
someIndentation> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
someIndentation> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

**************** \ someIndentation has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
term p/2:someIndentation expr p> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/2:someIndentation expr p> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
term p/2:someIndentation expr p> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

*************** \ term p/2:someIndentation expr p has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
term p/notLabelTerm> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p/notLabelTerm> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
term p/notLabelTerm> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

************** \ term p/notLabelTerm has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
term p> IN: ( "assess" ( "if it is a Notifiable Data <…>
term p> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
term p> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

************* \ term p has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
************* / binary(Or)                                                                                  :9_1:Hence:
binary(Or)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=62:
binary(Or)> unexpected HENCE
binary(Or)> expecting OR

************* \ !Unconsumed Error: binary(Or): Unexpected HENCE Expecting: OR                               :9_1:Hence:
************* / binary(And)                                                                                 :9_1:Hence:
binary(And)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=62:
binary(And)> unexpected HENCE
binary(And)> expecting AND

************* \ !Unconsumed Error: binary(And): Unexpected HENCE Expecting: AND                             :9_1:Hence:
************* / binary(SetLess)                                                                             :9_1:Hence:
binary(SetLess)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=62:
binary(SetLess)> unexpected HENCE
binary(SetLess)> expecting LESS

************* \ !Unconsumed Error: binary(SetLess): Unexpected HENCE Expecting: LESS                        :9_1:Hence:
************* / binary(SetPlus)                                                                             :9_1:Hence:
binary(SetPlus)> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=62:
binary(SetPlus)> unexpected HENCE
binary(SetPlus)> expecting PLUS

************* \ !Unconsumed Error: binary(SetPlus): Unexpected HENCE Expecting: PLUS                        :9_1:Hence:
expression> IN: ( "assess" ( "if it is a Notifiable Data <…>
expression> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
expression> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

************ \ expression has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
ppp inner> IN: ( "assess" ( "if it is a Notifiable Data <…>
ppp inner> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
ppp inner> VALUE: (MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])),[])

*********** \ ppp inner has returned MyLabel ["assess","if it is a Notifiable Data Breach"] Nothing (MyLeaf (("by" :| ["performing","NDB Qualification"],Nothing) :| [])) :9_1:Hence:
expr pParamText> IN: ( "assess" ( "if it is a Notifiable Data <…>
expr pParamText> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
expr pParamText> VALUE: (MyLeaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

********** \ expr pParamText has returned MyLeaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
dBoolStructP calling exprP> IN: ( "assess" ( "if it is a Notifiable Data <…>
dBoolStructP calling exprP> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
dBoolStructP calling exprP> VALUE: (Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

********* \ dBoolStructP calling exprP has returned Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
pAction calling dBoolStructP> IN: ( "assess" ( "if it is a Notifiable Data <…>
pAction calling dBoolStructP> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
pAction calling dBoolStructP> VALUE: (Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

******** \ pAction calling dBoolStructP has returned Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
pDoAction/pAction> IN: ( "assess" ( "if it is a Notifiable Data <…>
pDoAction/pAction> MATCH (COK): ( "assess" ( "if it is a Notifiable Data <…>
pDoAction/pAction> VALUE: (Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]),[])

******* \ pDoAction/pAction has returned Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]) :9_1:Hence:
******* / WHERE                                                                                                   :9_1:Hence:
WHERE> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=62:
WHERE> unexpected HENCE
WHERE> expecting WHERE

******* \ !Unconsumed Error: WHERE: Unexpected HENCE Expecting: WHERE                                             :9_1:Hence:
******* / preambleParamText:[Having]                                                                              :9_1:Hence:
******** / $>|                                                                                                   :9_1:Hence:
$>|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=62:
$>|> unexpected HENCE
$>|> expecting HAVING

******** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: HAVING                                            :9_1:Hence:
preambleParamText:[Having]> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=62:
preambleParamText:[Having]> unexpected HENCE
preambleParamText:[Having]> expecting HAVING

******* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected HENCE Expecting: HAVING                       :9_1:Hence:
******* / preambleParamText:[Given]                                                                               :9_1:Hence:
******** / $>|                                                                                                   :9_1:Hence:
$>|> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=62:
$>|> unexpected HENCE
$>|> expecting GIVEN

******** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: GIVEN                                             :9_1:Hence:
preambleParamText:[Given]> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=62:
preambleParamText:[Given]> unexpected HENCE
preambleParamText:[Given]> expecting GIVEN

******* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected HENCE Expecting: GIVEN                         :9_1:Hence:
******* / preambleBoolStructR [Unless]                                                                            :9_1:Hence:
preambleBoolStructR [Unless]> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=62:
preambleBoolStructR [Unless]> unexpected HENCE
preambleBoolStructR [Unless]> expecting UNLESS

******* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected HENCE Expecting: UNLESS                     :9_1:Hence:
regulative permutation with deontic-temporal> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
regulative permutation with deontic-temporal> MATCH (COK): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
regulative permutation with deontic-temporal> VALUE: (RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []},[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

****** \ regulative permutation with deontic-temporal has returned RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []} :9_1:Hence:
permutationsReg> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
permutationsReg> MATCH (COK): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
permutationsReg> VALUE: (RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []},[DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}])

***** \ permutationsReg has returned RuleBody {rbaction = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), rbpbrs = [(When,Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"]))], rbpbrneg = [], rbdeon = DMust, rbtemporal = Just (TemporalConstraint TBefore (Just 30) "days"), rbupon = [(Upon,("becoming aware a data breach may have occurred" :| [],Nothing) :| [])], rbgiven = [], rbhaving = Nothing, rbkeyname = (REvery,Leaf (("Organisation" :| [],Nothing) :| [])), rbwho = Just (Who,Leaf (RPMT ["is","not","a Public Agency"])), rbwhere = []} :9_1:Hence:
***** / pHenceLest-Hence                                                                                            :9_1:Hence:
****** / someIndentation                                                                                            :9_2:GoDeeper:
******* / myindented-GoDeeper                                                                                      :9_2:GoDeeper:
myindented-GoDeeper> IN: ( "Notification" ) LEST ( ( "the PDPC" ( <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******* \ myindented-GoDeeper has returned GoDeeper                                                                 :9_2:Other "Noti:
******* / manyIndentation/leaf?                                                                                     :9_2:Other "Noti:
******** / pRegRule                                                                                                :9_2:Other "Noti:
********* / pRuleLabel                                                                                            :9_2:Other "Noti:
********** / $>|                                                                                                 :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting §

********** \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: §                                     :9_2:Other "Noti:
pRuleLabel> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=64:
pRuleLabel> unexpected "Notification"
pRuleLabel> expecting §

********* \ !Unconsumed Error: pRuleLabel: Unexpected "Notification" Expecting: §                                :9_2:Other "Noti:
********* / pRegRuleSugary                                                                                        :9_2:Other "Noti:
********** / someDeep                                                                                            :9_2:Other "Noti:
*********** / someDeep first part calls base directly                                                           :9_2:Other "Noti:
someDeep first part calls base directly> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep first part calls base directly> MATCH (COK): "Notification"
someDeep first part calls base directly> VALUE: ("Notification",[])

*********** \ someDeep first part calls base directly has returned "Notification"                                :10_2:UnDeeper:
*********** / someDeep second part recurses with someIndentation                                                 :10_2:UnDeeper:
************ / someIndentation                                                                                  :10_2:UnDeeper:
************* / myindented-GoDeeper                                                                            :10_2:UnDeeper:
myindented-GoDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=65:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: (                              :10_2:UnDeeper:
someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=65:
someIndentation> unexpected )
someIndentation> expecting (

************ \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (                                    :10_2:UnDeeper:
someDeep second part recurses with someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=65:
someDeep second part recurses with someIndentation> unexpected )
someDeep second part recurses with someIndentation> expecting (

*********** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected ) Expecting: (   :10_2:UnDeeper:
*********** > someDeep no luck, returning []                                                                     :10_2:UnDeeper:
someDeep> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep> MATCH (COK): "Notification"
someDeep> VALUE: (["Notification"],[])

********** \ someDeep has returned ["Notification"]                                                               :10_2:UnDeeper:
********** / someIndentation                                                                                      :10_2:UnDeeper:
*********** / myindented-GoDeeper                                                                                :10_2:UnDeeper:
myindented-GoDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=65:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

*********** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: (                                  :10_2:UnDeeper:
someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=65:
someIndentation> unexpected )
someIndentation> expecting (

********** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (                                        :10_2:UnDeeper:
pRegRuleSugary> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRegRuleSugary> MATCH (CERR): "Notification"
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=65:
pRegRuleSugary> unexpected )
pRegRuleSugary> expecting (

********* \ !Consumed Error: pRegRuleSugary: Unexpected ) Expecting: ( (                                           :10_2:UnDeeper:
********* / pRegRuleNormal                                                                                        :9_2:Other "Noti:
********** / permutationsReg                                                                                     :9_2:Other "Noti:
*********** / regulative permutation with deontic-temporal                                                      :9_2:Other "Noti:
************ / WHERE                                                                                           :9_2:Other "Noti:
WHERE> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=64:
WHERE> unexpected "Notification"
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected "Notification" Expecting: WHERE                            :9_2:Other "Noti:
************ / preambleParamText:[Having]                                                                      :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: HAVING                           :9_2:Other "Noti:
preambleParamText:[Having]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=64:
preambleParamText:[Having]> unexpected "Notification"
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "Notification" Expecting: HAVING      :9_2:Other "Noti:
************ / preambleParamText:[Given]                                                                       :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: GIVEN                            :9_2:Other "Noti:
preambleParamText:[Given]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=64:
preambleParamText:[Given]> unexpected "Notification"
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "Notification" Expecting: GIVEN        :9_2:Other "Noti:
************ / preambleParamText:[Upon]                                                                        :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: UPON                             :9_2:Other "Noti:
preambleParamText:[Upon]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=64:
preambleParamText:[Upon]> unexpected "Notification"
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "Notification" Expecting: UPON          :9_2:Other "Noti:
************ / preambleBoolStructR [Unless]                                                                    :9_2:Other "Noti:
preambleBoolStructR [Unless]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=64:
preambleBoolStructR [Unless]> unexpected "Notification"
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "Notification" Expecting: UNLESS    :9_2:Other "Noti:
************ / preambleBoolStructR [When,If]                                                                   :9_2:Other "Noti:
preambleBoolStructR [When,If]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=64:
preambleBoolStructR [When,If]> unexpected "Notification"
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "Notification" Expecting: IF WHEN  :9_2:Other "Noti:
************ / pDT                                                                                             :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting MAY, MUST, or SHANT

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: MUST MAY SHANT                   :9_2:Other "Noti:
pDT> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=64:
pDT> unexpected "Notification"
pDT> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDT: Unexpected "Notification" Expecting: MUST MAY SHANT                     :9_2:Other "Noti:
************ / pActor [REvery,RParty,RTokAll]                                                                  :9_2:Other "Noti:
pActor [REvery,RParty,RTokAll]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=64:
pActor [REvery,RParty,RTokAll]> unexpected "Notification"
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected "Notification" Expecting: EVERY PARTY ALL :9_2:Other "Noti:
************ / pDoAction/Do                                                                                    :9_2:Other "Noti:
pDoAction/Do> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=64:
pDoAction/Do> unexpected "Notification"
pDoAction/Do> expecting DO

************ \ !Unconsumed Error: pDoAction/Do: Unexpected "Notification" Expecting: DO                        :9_2:Other "Noti:
regulative permutation with deontic-temporal> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=64:
regulative permutation with deontic-temporal> unexpected "Notification"
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected "Notification" Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :9_2:Other "Noti:
*********** / regulative permutation with deontic-action                                                        :9_2:Other "Noti:
************ / WHERE                                                                                           :9_2:Other "Noti:
WHERE> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=64:
WHERE> unexpected "Notification"
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected "Notification" Expecting: WHERE                            :9_2:Other "Noti:
************ / preambleParamText:[Having]                                                                      :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: HAVING                           :9_2:Other "Noti:
preambleParamText:[Having]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=64:
preambleParamText:[Having]> unexpected "Notification"
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "Notification" Expecting: HAVING      :9_2:Other "Noti:
************ / preambleParamText:[Given]                                                                       :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: GIVEN                            :9_2:Other "Noti:
preambleParamText:[Given]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=64:
preambleParamText:[Given]> unexpected "Notification"
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "Notification" Expecting: GIVEN        :9_2:Other "Noti:
************ / preambleParamText:[Upon]                                                                        :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: UPON                             :9_2:Other "Noti:
preambleParamText:[Upon]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=64:
preambleParamText:[Upon]> unexpected "Notification"
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "Notification" Expecting: UPON          :9_2:Other "Noti:
************ / preambleBoolStructR [Unless]                                                                    :9_2:Other "Noti:
preambleBoolStructR [Unless]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=64:
preambleBoolStructR [Unless]> unexpected "Notification"
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "Notification" Expecting: UNLESS    :9_2:Other "Noti:
************ / preambleBoolStructR [When,If]                                                                   :9_2:Other "Noti:
preambleBoolStructR [When,If]> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=64:
preambleBoolStructR [When,If]> unexpected "Notification"
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "Notification" Expecting: IF WHEN  :9_2:Other "Noti:
************ / pTemporal/eventually                                                                            :9_2:Other "Noti:
pTemporal/eventually> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=64:
pTemporal/eventually> unexpected "Notification"
pTemporal/eventually> expecting EVENTUALLY

************ \ !Unconsumed Error: pTemporal/eventually: Unexpected "Notification" Expecting: EVENTUALLY        :9_2:Other "Noti:
************ / pTemporal/specifically                                                                          :9_2:Other "Noti:
************* / $>|                                                                                           :9_2:Other "Noti:
$>|> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=64:
$>|> unexpected "Notification"
$>|> expecting AFTER, BEFORE, BY, or ON

************* \ !Unconsumed Error: $>|: Unexpected "Notification" Expecting: BEFORE AFTER BY ON               :9_2:Other "Noti:
pTemporal/specifically> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=64:
pTemporal/specifically> unexpected "Notification"
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************ \ !Unconsumed Error: pTemporal/specifically: Unexpected "Notification" Expecting: BEFORE AFTER BY ON :9_2:Other "Noti:
************ / pTemporal/vaguely                                                                               :9_2:Other "Noti:
pTemporal/vaguely> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pTemporal/vaguely> MATCH (COK): "Notification"
pTemporal/vaguely> VALUE: (Just (TemporalConstraint TVague (Just 0) "Notification"),[])

************ \ pTemporal/vaguely has returned Just (TemporalConstraint TVague (Just 0) "Notification")          :10_2:UnDeeper:
************ / WHERE                                                                                            :10_2:UnDeeper:
WHERE> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=65:
WHERE> unexpected )
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected ) Expecting: WHERE                                          :10_2:UnDeeper:
************ / preambleParamText:[Having]                                                                       :10_2:UnDeeper:
************* / $>|                                                                                            :10_2:UnDeeper:
$>|> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=65:
$>|> unexpected )
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: HAVING                                         :10_2:UnDeeper:
preambleParamText:[Having]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=65:
preambleParamText:[Having]> unexpected )
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ) Expecting: HAVING                    :10_2:UnDeeper:
************ / preambleParamText:[Given]                                                                        :10_2:UnDeeper:
************* / $>|                                                                                            :10_2:UnDeeper:
$>|> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=65:
$>|> unexpected )
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: GIVEN                                          :10_2:UnDeeper:
preambleParamText:[Given]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=65:
preambleParamText:[Given]> unexpected )
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ) Expecting: GIVEN                      :10_2:UnDeeper:
************ / preambleParamText:[Upon]                                                                         :10_2:UnDeeper:
************* / $>|                                                                                            :10_2:UnDeeper:
$>|> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=65:
$>|> unexpected )
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: UPON                                           :10_2:UnDeeper:
preambleParamText:[Upon]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=65:
preambleParamText:[Upon]> unexpected )
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ) Expecting: UPON                        :10_2:UnDeeper:
************ / preambleBoolStructR [Unless]                                                                     :10_2:UnDeeper:
preambleBoolStructR [Unless]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=65:
preambleBoolStructR [Unless]> unexpected )
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ) Expecting: UNLESS                  :10_2:UnDeeper:
************ / preambleBoolStructR [When,If]                                                                    :10_2:UnDeeper:
preambleBoolStructR [When,If]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=65:
preambleBoolStructR [When,If]> unexpected )
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ) Expecting: IF WHEN                :10_2:UnDeeper:
************ / pActor [REvery,RParty,RTokAll]                                                                   :10_2:UnDeeper:
pActor [REvery,RParty,RTokAll]> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=65:
pActor [REvery,RParty,RTokAll]> unexpected )
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ) Expecting: EVERY PARTY ALL       :10_2:UnDeeper:
************ / pDA                                                                                              :10_2:UnDeeper:
pDA> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=65:
pDA> unexpected )
pDA> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDA: Unexpected ) Expecting: MUST MAY SHANT                                   :10_2:UnDeeper:
regulative permutation with deontic-action> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
regulative permutation with deontic-action> MATCH (CERR): "Notification"
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=65:
regulative permutation with deontic-action> unexpected )
regulative permutation with deontic-action> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Consumed Error: regulative permutation with deontic-action: Unexpected ) Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_2:UnDeeper:
permutationsReg> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=65:
permutationsReg> unexpected )
permutationsReg> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********** \ !Unconsumed Error: permutationsReg: Unexpected ) Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :9_2:Other "Noti:
pRegRuleNormal> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=65:
pRegRuleNormal> unexpected )
pRegRuleNormal> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********* \ !Unconsumed Error: pRegRuleNormal: Unexpected ) Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :9_2:Other "Noti:
pRegRule> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=65:
pRegRule> unexpected )
pRegRule> expecting (, ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, WHERE, or §

******** \ !Unconsumed Error: pRegRule: Unexpected ) Expecting: § GIVEN HAVING UPON WHERE ( ( EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :9_2:Other "Noti:
******** / someDeep                                                                                                :9_2:Other "Noti:
********* / someDeep first part calls base directly                                                               :9_2:Other "Noti:
someDeep first part calls base directly> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep first part calls base directly> MATCH (COK): "Notification"
someDeep first part calls base directly> VALUE: ("Notification",[])

********* \ someDeep first part calls base directly has returned "Notification"                                    :10_2:UnDeeper:
********* / someDeep second part recurses with someIndentation                                                     :10_2:UnDeeper:
********** / someIndentation                                                                                      :10_2:UnDeeper:
*********** / myindented-GoDeeper                                                                                :10_2:UnDeeper:
myindented-GoDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=65:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

*********** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: (                                  :10_2:UnDeeper:
someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=65:
someIndentation> unexpected )
someIndentation> expecting (

********** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: (                                        :10_2:UnDeeper:
someDeep second part recurses with someIndentation> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=65:
someDeep second part recurses with someIndentation> unexpected )
someDeep second part recurses with someIndentation> expecting (

********* \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected ) Expecting: (       :10_2:UnDeeper:
********* > someDeep no luck, returning []                                                                         :10_2:UnDeeper:
someDeep> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
someDeep> MATCH (COK): "Notification"
someDeep> VALUE: (["Notification"],[])

******** \ someDeep has returned ["Notification"]                                                                   :10_2:UnDeeper:
manyIndentation/leaf?> IN: "Notification" ) LEST ( ( "the PDPC" ( M <…>
manyIndentation/leaf?> MATCH (COK): "Notification"
manyIndentation/leaf?> VALUE: (RuleAlias ["Notification"],[])

******* \ manyIndentation/leaf? has returned RuleAlias ["Notification"]                                              :10_2:UnDeeper:
******* / myindented-UnDeeper                                                                                        :10_2:UnDeeper:
myindented-UnDeeper> IN: ) LEST ( ( "the PDPC" ( MAY DO ( ( "dema <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

******* \ myindented-UnDeeper has returned UnDeeper                                                               :10_1:Lest:
someIndentation> IN: ( "Notification" ) LEST ( ( "the PDPC" ( <…>
someIndentation> MATCH (COK): ( "Notification" )
someIndentation> VALUE: (RuleAlias ["Notification"],[])

****** \ someIndentation has returned RuleAlias ["Notification"]                                                   :10_1:Lest:
pHenceLest-Hence> IN: HENCE ( "Notification" ) LEST ( ( "the P <…>
pHenceLest-Hence> MATCH (COK): HENCE ( "Notification" )
pHenceLest-Hence> VALUE: (RuleAlias ["Notification"],[])

***** \ pHenceLest-Hence has returned RuleAlias ["Notification"]                                                    :10_1:Lest:
***** / pHenceLest-Lest                                                                                             :10_1:Lest:
****** / someIndentation                                                                                            :10_2:GoDeeper:
******* / myindented-GoDeeper                                                                                      :10_2:GoDeeper:
myindented-GoDeeper> IN: ( ( "the PDPC" ( MAY DO ( ( "demand" ( " <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******* \ myindented-GoDeeper has returned GoDeeper                                                                  :10_3:GoDeeper:
******* / manyIndentation/leaf?                                                                                      :10_3:GoDeeper:
******** / pRegRule                                                                                                 :10_3:GoDeeper:
********* / pRuleLabel                                                                                             :10_3:GoDeeper:
********** / $>|                                                                                                  :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting §

********** \ !Unconsumed Error: $>|: Unexpected ( Expecting: §                                                   :10_3:GoDeeper:
pRuleLabel> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=68:
pRuleLabel> unexpected (
pRuleLabel> expecting §

********* \ !Unconsumed Error: pRuleLabel: Unexpected ( Expecting: §                                              :10_3:GoDeeper:
********* / pRegRuleSugary                                                                                         :10_3:GoDeeper:
********** / someDeep                                                                                             :10_3:GoDeeper:
*********** / someDeep first part calls base directly                                                            :10_3:GoDeeper:
someDeep first part calls base directly> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=68:
someDeep first part calls base directly> unexpected (
someDeep first part calls base directly> expecting Other text

*********** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected ( Expecting: Other text     :10_3:GoDeeper:
someDeep> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=68:
someDeep> unexpected (
someDeep> expecting Other text

********** \ !Unconsumed Error: someDeep: Unexpected ( Expecting: Other text                                      :10_3:GoDeeper:
pRegRuleSugary> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRegRuleSugary> MATCH (EERR): <EMPTY>
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=68:
pRegRuleSugary> unexpected (
pRegRuleSugary> expecting Other text

********* \ !Unconsumed Error: pRegRuleSugary: Unexpected ( Expecting: Other text                                  :10_3:GoDeeper:
********* / pRegRuleNormal                                                                                         :10_3:GoDeeper:
********** / permutationsReg                                                                                      :10_3:GoDeeper:
*********** / regulative permutation with deontic-temporal                                                       :10_3:GoDeeper:
************ / WHERE                                                                                            :10_3:GoDeeper:
WHERE> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=68:
WHERE> unexpected (
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                                          :10_3:GoDeeper:
************ / preambleParamText:[Having]                                                                       :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                                         :10_3:GoDeeper:
preambleParamText:[Having]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=68:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING                    :10_3:GoDeeper:
************ / preambleParamText:[Given]                                                                        :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                                          :10_3:GoDeeper:
preambleParamText:[Given]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=68:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN                      :10_3:GoDeeper:
************ / preambleParamText:[Upon]                                                                         :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                                           :10_3:GoDeeper:
preambleParamText:[Upon]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=68:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON                        :10_3:GoDeeper:
************ / preambleBoolStructR [Unless]                                                                     :10_3:GoDeeper:
preambleBoolStructR [Unless]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=68:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS                  :10_3:GoDeeper:
************ / preambleBoolStructR [When,If]                                                                    :10_3:GoDeeper:
preambleBoolStructR [When,If]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=68:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN                :10_3:GoDeeper:
************ / pDT                                                                                              :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting MAY, MUST, or SHANT

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: MUST MAY SHANT                                 :10_3:GoDeeper:
pDT> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=68:
pDT> unexpected (
pDT> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDT: Unexpected ( Expecting: MUST MAY SHANT                                   :10_3:GoDeeper:
************ / pActor [REvery,RParty,RTokAll]                                                                   :10_3:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=68:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL       :10_3:GoDeeper:
************ / pDoAction/Do                                                                                     :10_3:GoDeeper:
pDoAction/Do> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=68:
pDoAction/Do> unexpected (
pDoAction/Do> expecting DO

************ \ !Unconsumed Error: pDoAction/Do: Unexpected ( Expecting: DO                                      :10_3:GoDeeper:
regulative permutation with deontic-temporal> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=68:
regulative permutation with deontic-temporal> unexpected (
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected ( Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :10_3:GoDeeper:
*********** / regulative permutation with deontic-action                                                         :10_3:GoDeeper:
************ / WHERE                                                                                            :10_3:GoDeeper:
WHERE> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=68:
WHERE> unexpected (
WHERE> expecting WHERE

************ \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                                          :10_3:GoDeeper:
************ / preambleParamText:[Having]                                                                       :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting HAVING

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                                         :10_3:GoDeeper:
preambleParamText:[Having]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=68:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

************ \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING                    :10_3:GoDeeper:
************ / preambleParamText:[Given]                                                                        :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting GIVEN

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                                          :10_3:GoDeeper:
preambleParamText:[Given]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=68:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

************ \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN                      :10_3:GoDeeper:
************ / preambleParamText:[Upon]                                                                         :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting UPON

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                                           :10_3:GoDeeper:
preambleParamText:[Upon]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=68:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

************ \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON                        :10_3:GoDeeper:
************ / preambleBoolStructR [Unless]                                                                     :10_3:GoDeeper:
preambleBoolStructR [Unless]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=68:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

************ \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS                  :10_3:GoDeeper:
************ / preambleBoolStructR [When,If]                                                                    :10_3:GoDeeper:
preambleBoolStructR [When,If]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=68:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

************ \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN                :10_3:GoDeeper:
************ / pTemporal/eventually                                                                             :10_3:GoDeeper:
pTemporal/eventually> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=68:
pTemporal/eventually> unexpected (
pTemporal/eventually> expecting EVENTUALLY

************ \ !Unconsumed Error: pTemporal/eventually: Unexpected ( Expecting: EVENTUALLY                      :10_3:GoDeeper:
************ / pTemporal/specifically                                                                           :10_3:GoDeeper:
************* / $>|                                                                                            :10_3:GoDeeper:
$>|> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=68:
$>|> unexpected (
$>|> expecting AFTER, BEFORE, BY, or ON

************* \ !Unconsumed Error: $>|: Unexpected ( Expecting: BEFORE AFTER BY ON                             :10_3:GoDeeper:
pTemporal/specifically> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=68:
pTemporal/specifically> unexpected (
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************ \ !Unconsumed Error: pTemporal/specifically: Unexpected ( Expecting: BEFORE AFTER BY ON            :10_3:GoDeeper:
************ / pTemporal/vaguely                                                                                :10_3:GoDeeper:
pTemporal/vaguely> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=68:
pTemporal/vaguely> unexpected (
pTemporal/vaguely> expecting Other text

************ \ !Unconsumed Error: pTemporal/vaguely: Unexpected ( Expecting: Other text                         :10_3:GoDeeper:
************ / pActor [REvery,RParty,RTokAll]                                                                   :10_3:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=68:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************ \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL       :10_3:GoDeeper:
************ / pDA                                                                                              :10_3:GoDeeper:
pDA> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=68:
pDA> unexpected (
pDA> expecting MAY, MUST, or SHANT

************ \ !Unconsumed Error: pDA: Unexpected ( Expecting: MUST MAY SHANT                                   :10_3:GoDeeper:
regulative permutation with deontic-action> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
regulative permutation with deontic-action> MATCH (EERR): <EMPTY>
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=68:
regulative permutation with deontic-action> unexpected (
regulative permutation with deontic-action> expecting AFTER, ALL, BEFORE, BY, EVENTUALLY, EVERY, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: regulative permutation with deontic-action: Unexpected ( Expecting: BEFORE AFTER BY ON GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT EVENTUALLY UNLESS IF WHEN Other text :10_3:GoDeeper:
permutationsReg> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=68:
permutationsReg> unexpected (
permutationsReg> expecting AFTER, ALL, BEFORE, BY, DO, EVENTUALLY, EVERY, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********** \ !Unconsumed Error: permutationsReg: Unexpected ( Expecting: MUST MAY SHANT BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
pRegRuleNormal> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=68:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting AFTER, ALL, BEFORE, BY, DO, EVENTUALLY, EVERY, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

********* \ !Unconsumed Error: pRegRuleNormal: Unexpected ( Expecting: MUST MAY SHANT BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
pRegRule> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=68:
pRegRule> unexpected (
pRegRule> expecting AFTER, ALL, BEFORE, BREACH, BY, DO, EVENTUALLY, EVERY, FULFILLED, GIVEN, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, WHERE, or §

******** \ !Unconsumed Error: pRegRule: Unexpected ( Expecting: MUST MAY SHANT § BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO FULFILLED BREACH EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
******** / someDeep                                                                                                 :10_3:GoDeeper:
********* / someDeep first part calls base directly                                                                :10_3:GoDeeper:
someDeep first part calls base directly> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=68:
someDeep first part calls base directly> unexpected (
someDeep first part calls base directly> expecting Other text

********* \ !Unconsumed Error: someDeep first part calls base directly: Unexpected ( Expecting: Other text         :10_3:GoDeeper:
someDeep> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=68:
someDeep> unexpected (
someDeep> expecting Other text

******** \ !Unconsumed Error: someDeep: Unexpected ( Expecting: Other text                                          :10_3:GoDeeper:
manyIndentation/leaf?> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=68:
manyIndentation/leaf?> unexpected (
manyIndentation/leaf?> expecting AFTER, ALL, BEFORE, BREACH, BY, DO, EVENTUALLY, EVERY, FULFILLED, GIVEN, GOTO, HAVING, IF, MAY, MUST, ON, Other text, PARTY, SHANT, UNLESS, UPON, WHEN, WHERE, or §

******* \ !Unconsumed Error: manyIndentation/leaf?: Unexpected ( Expecting: MUST MAY SHANT § BEFORE AFTER BY ON GIVEN GIVEN HAVING HAVING UPON UPON WHERE WHERE GOTO EVERY PARTY ALL EVERY PARTY ALL MUST MAY SHANT DO FULFILLED BREACH EVENTUALLY UNLESS UNLESS IF WHEN IF WHEN Other text :10_3:GoDeeper:
******* / manyIndentation/deeper; calling someIndentation                                                            :10_3:GoDeeper:
******** / someIndentation                                                                                          :10_3:GoDeeper:
********* / myindented-GoDeeper                                                                                    :10_3:GoDeeper:
myindented-GoDeeper> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********* \ myindented-GoDeeper has returned GoDeeper                                                               :10_3:Other "the:
********* / manyIndentation/leaf?                                                                                   :10_3:Other "the:
********** / pRegRule                                                                                              :10_3:Other "the:
*********** / pRuleLabel                                                                                          :10_3:Other "the:
************ / $>|                                                                                               :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting §

************ \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: §                                       :10_3:Other "the:
pRuleLabel> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=69:
pRuleLabel> unexpected "the PDPC"
pRuleLabel> expecting §

*********** \ !Unconsumed Error: pRuleLabel: Unexpected "the PDPC" Expecting: §                                  :10_3:Other "the:
*********** / pRegRuleSugary                                                                                      :10_3:Other "the:
************ / someDeep                                                                                          :10_3:Other "the:
************* / someDeep first part calls base directly                                                         :10_3:Other "the:
someDeep first part calls base directly> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep first part calls base directly> MATCH (COK): "the PDPC"
someDeep first part calls base directly> VALUE: ("the PDPC",[])

************* \ someDeep first part calls base directly has returned "the PDPC"                                  :10_4:GoDeeper:
************* / someDeep second part recurses with someIndentation                                               :10_4:GoDeeper:
************** / someIndentation                                                                                :10_4:GoDeeper:
*************** / myindented-GoDeeper                                                                          :10_4:GoDeeper:
myindented-GoDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

*************** \ myindented-GoDeeper has returned GoDeeper                                                     :10_4:May:
*************** / manyIndentation/leaf?                                                                         :10_4:May:
**************** / someDeep                                                                                    :10_4:May:
***************** / someDeep first part calls base directly                                                   :10_4:May:
someDeep first part calls base directly> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=71:
someDeep first part calls base directly> unexpected MAY
someDeep first part calls base directly> expecting Other text

***************** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MAY Expecting: Other text :10_4:May:
someDeep> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=71:
someDeep> unexpected MAY
someDeep> expecting Other text

**************** \ !Unconsumed Error: someDeep: Unexpected MAY Expecting: Other text                           :10_4:May:
manyIndentation/leaf?> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=71:
manyIndentation/leaf?> unexpected MAY
manyIndentation/leaf?> expecting Other text

*************** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MAY Expecting: Other text                :10_4:May:
*************** / manyIndentation/deeper; calling someIndentation                                               :10_4:May:
**************** / someIndentation                                                                             :10_4:May:
***************** / myindented-GoDeeper                                                                       :10_4:May:
myindented-GoDeeper> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=71:
myindented-GoDeeper> unexpected MAY
myindented-GoDeeper> expecting (

***************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MAY Expecting: (                       :10_4:May:
someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting (

**************** \ !Unconsumed Error: someIndentation: Unexpected MAY Expecting: (                             :10_4:May:
manyIndentation/deeper; calling someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=71:
manyIndentation/deeper; calling someIndentation> unexpected MAY
manyIndentation/deeper; calling someIndentation> expecting (

*************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MAY Expecting: ( :10_4:May:
someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting ( or Other text

************** \ !Consumed Error: someIndentation: Unexpected MAY Expecting: ( Other text                        :10_4:May:
someDeep second part recurses with someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=71:
someDeep second part recurses with someIndentation> unexpected MAY
someDeep second part recurses with someIndentation> expecting ( or Other text

************* \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MAY Expecting: ( Other text :10_4:GoDeeper:
************* > someDeep no luck, returning []                                                                   :10_4:GoDeeper:
someDeep> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep> MATCH (COK): "the PDPC"
someDeep> VALUE: (["the PDPC"],[])

************ \ someDeep has returned ["the PDPC"]                                                                 :10_4:GoDeeper:
************ / someIndentation                                                                                    :10_4:GoDeeper:
************* / myindented-GoDeeper                                                                              :10_4:GoDeeper:
myindented-GoDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

************* \ myindented-GoDeeper has returned GoDeeper                                                         :10_4:May:
************* / manyIndentation/leaf?                                                                             :10_4:May:
************** / permutationsReg                                                                                 :10_4:May:
*************** / regulative permutation with deontic-temporal                                                  :10_4:May:
**************** / WHERE                                                                                       :10_4:May:
WHERE> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=71:
WHERE> unexpected MAY
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected MAY Expecting: WHERE                                   :10_4:May:
**************** / preambleParamText:[Having]                                                                  :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=71:
$>|> unexpected MAY
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected MAY Expecting: HAVING                                  :10_4:May:
preambleParamText:[Having]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=71:
preambleParamText:[Having]> unexpected MAY
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MAY Expecting: HAVING             :10_4:May:
**************** / preambleParamText:[Given]                                                                   :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=71:
$>|> unexpected MAY
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected MAY Expecting: GIVEN                                   :10_4:May:
preambleParamText:[Given]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=71:
preambleParamText:[Given]> unexpected MAY
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MAY Expecting: GIVEN               :10_4:May:
**************** / preambleParamText:[Upon]                                                                    :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=71:
$>|> unexpected MAY
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected MAY Expecting: UPON                                    :10_4:May:
preambleParamText:[Upon]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=71:
preambleParamText:[Upon]> unexpected MAY
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MAY Expecting: UPON                 :10_4:May:
**************** / preambleBoolStructR [Unless]                                                                :10_4:May:
preambleBoolStructR [Unless]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=71:
preambleBoolStructR [Unless]> unexpected MAY
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MAY Expecting: UNLESS           :10_4:May:
**************** / preambleBoolStructR [When,If]                                                               :10_4:May:
preambleBoolStructR [When,If]> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=71:
preambleBoolStructR [When,If]> unexpected MAY
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MAY Expecting: IF WHEN         :10_4:May:
**************** / pDT                                                                                         :10_4:May:
***************** / $>|                                                                                       :10_4:May:
$>|> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
$>|> MATCH (COK): MAY
$>|> VALUE: (DMay,[])

***************** \ $>| has returned DMay                                                                     :11_4:Do:
***************** / |>| calling $>>                                                                           :11_4:Do:
****************** / |>>/recurse                                                                             :11_4:Do:
|>>/recurse> IN: DO ( ( "demand" ( "an explanation for yo <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=72:
|>>/recurse> unexpected DO
|>>/recurse> expecting (

****************** \ !Unconsumed Error: |>>/recurse: Unexpected DO Expecting: (                              :11_4:Do:
****************** / |>>/base                                                                                :11_4:Do:
******************* / pTemporal/eventually                                                                  :11_4:Do:
pTemporal/eventually> IN: DO ( ( "demand" ( "an explanation for yo <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=72:
pTemporal/eventually> unexpected DO
pTemporal/eventually> expecting EVENTUALLY

******************* \ !Unconsumed Error: pTemporal/eventually: Unexpected DO Expecting: EVENTUALLY          :11_4:Do:
******************* / pTemporal/specifically                                                                :11_4:Do:
******************** / $>|                                                                                 :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting AFTER, BEFORE, BY, or ON

******************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: BEFORE AFTER BY ON                 :11_4:Do:
pTemporal/specifically> IN: DO ( ( "demand" ( "an explanation for yo <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=72:
pTemporal/specifically> unexpected DO
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

******************* \ !Unconsumed Error: pTemporal/specifically: Unexpected DO Expecting: BEFORE AFTER BY ON :11_4:Do:
******************* / pTemporal/vaguely                                                                     :11_4:Do:
pTemporal/vaguely> IN: DO ( ( "demand" ( "an explanation for yo <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=72:
pTemporal/vaguely> unexpected DO
pTemporal/vaguely> expecting Other text

******************* \ !Unconsumed Error: pTemporal/vaguely: Unexpected DO Expecting: Other text             :11_4:Do:
******************* > |>>/base got Nothing                                                                  :11_4:Do:
|>>/base> IN: DO ( ( "demand" ( "an explanation for yo <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************** \ |>>/base has returned (Nothing,0)                                                       :11_4:Do:
|>| calling $>>> IN: DO ( ( "demand" ( "an explanation for yo <…>
|>| calling $>>> MATCH (EOK): <EMPTY>
|>| calling $>>> VALUE: ((Nothing,0),[])

***************** \ |>| calling $>> has returned (Nothing,0)                                                  :11_4:Do:
***************** / undeepers                                                                                 :11_4:Do:
****************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers                  :11_4:Do:
****************** > sameLine: success!                                                                      :11_4:Do:
undeepers> IN: DO ( ( "demand" ( "an explanation for yo <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

***************** \ undeepers has returned ()                                                                 :11_4:Do:
pDT> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
pDT> MATCH (COK): MAY
pDT> VALUE: ((DMay,Nothing),[])

**************** \ pDT has returned (DMay,Nothing)                                                             :11_4:Do:
**************** / WHERE                                                                                       :11_4:Do:
WHERE> IN: DO ( ( "demand" ( "an explanation for yo <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=72:
WHERE> unexpected DO
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                                    :11_4:Do:
**************** / preambleParamText:[Having]                                                                  :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                                   :11_4:Do:
preambleParamText:[Having]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=72:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING              :11_4:Do:
**************** / preambleParamText:[Given]                                                                   :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                                    :11_4:Do:
preambleParamText:[Given]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=72:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN                :11_4:Do:
**************** / preambleParamText:[Upon]                                                                    :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                                     :11_4:Do:
preambleParamText:[Upon]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=72:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON                  :11_4:Do:
**************** / preambleBoolStructR [Unless]                                                                :11_4:Do:
preambleBoolStructR [Unless]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=72:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS            :11_4:Do:
**************** / preambleBoolStructR [When,If]                                                               :11_4:Do:
preambleBoolStructR [When,If]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=72:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN          :11_4:Do:
**************** / WHERE                                                                                       :11_4:Do:
WHERE> IN: DO ( ( "demand" ( "an explanation for yo <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=72:
WHERE> unexpected DO
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                                    :11_4:Do:
**************** / preambleParamText:[Having]                                                                  :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                                   :11_4:Do:
preambleParamText:[Having]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=72:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING              :11_4:Do:
**************** / preambleParamText:[Given]                                                                   :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                                    :11_4:Do:
preambleParamText:[Given]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=72:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN                :11_4:Do:
**************** / preambleParamText:[Upon]                                                                    :11_4:Do:
***************** / $>|                                                                                       :11_4:Do:
$>|> IN: DO ( ( "demand" ( "an explanation for yo <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=72:
$>|> unexpected DO
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                                     :11_4:Do:
preambleParamText:[Upon]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=72:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON                  :11_4:Do:
**************** / preambleBoolStructR [Unless]                                                                :11_4:Do:
preambleBoolStructR [Unless]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=72:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS            :11_4:Do:
**************** / preambleBoolStructR [When,If]                                                               :11_4:Do:
preambleBoolStructR [When,If]> IN: DO ( ( "demand" ( "an explanation for yo <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=72:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN          :11_4:Do:
**************** / pDoAction/Do                                                                                :11_4:Do:
pDoAction/Do> IN: DO ( ( "demand" ( "an explanation for yo <…>
pDoAction/Do> MATCH (COK): DO
pDoAction/Do> VALUE: (Do,[])

**************** \ pDoAction/Do has returned Do                                                                 :11_5:GoDeeper:
**************** / pDoAction/pAction                                                                            :11_5:GoDeeper:
***************** / pAction calling dBoolStructP                                                               :11_5:GoDeeper:
****************** / dBoolStructP calling exprP                                                               :11_5:GoDeeper:
******************* / expr pParamText                                                                        :11_5:GoDeeper:
******************** / ppp inner                                                                            :11_5:GoDeeper:
********************* / expression                                                                         :11_5:GoDeeper:
********************** / term p                                                                           :11_5:GoDeeper:
*********************** / term p/1a:label ends directly above next line                                  :11_5:GoDeeper:
************************ / $*|                                                                          :11_5:GoDeeper:
************************* / someSL                                                                     :11_5:GoDeeper:
************************** / pNumAsText                                                               :11_5:GoDeeper:
pNumAsText> IN: ( ( "demand" ( "an explanation for your  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=73:
pNumAsText> unexpected (
pNumAsText> expecting number

************************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number            :11_5:GoDeeper:
someSL> IN: ( ( "demand" ( "an explanation for your  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=73:
someSL> unexpected (
someSL> expecting other text or number

************************* \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number    :11_5:GoDeeper:
$*|> IN: ( ( "demand" ( "an explanation for your  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=73:
$*|> unexpected (
$*|> expecting other text or number

************************ \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number         :11_5:GoDeeper:
term p/1a:label ends directly above next line> IN: ( ( "demand" ( "an explanation for your  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=73:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

*********************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :11_5:GoDeeper:
*********************** / term p/1b:label ends to the left of line below, with EOL                       :11_5:GoDeeper:
************************ / $*|                                                                          :11_5:GoDeeper:
************************* / someSL                                                                     :11_5:GoDeeper:
************************** / pNumAsText                                                               :11_5:GoDeeper:
pNumAsText> IN: ( ( "demand" ( "an explanation for your  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=73:
pNumAsText> unexpected (
pNumAsText> expecting number

************************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number            :11_5:GoDeeper:
someSL> IN: ( ( "demand" ( "an explanation for your  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=73:
someSL> unexpected (
someSL> expecting other text or number

************************* \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number    :11_5:GoDeeper:
$*|> IN: ( ( "demand" ( "an explanation for your  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=73:
$*|> unexpected (
$*|> expecting other text or number

************************ \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number         :11_5:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( ( "demand" ( "an explanation for your  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=73:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

*********************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :11_5:GoDeeper:
*********************** / term p/1c:label ends to the right of line below                                :11_5:GoDeeper:
************************ > |<|                                                                          :11_5:GoDeeper:
************************ > |<* starting                                                                 :11_5:GoDeeper:
************************ / $*|                                                                          :11_5:GoDeeper:
************************* / someSL                                                                     :11_5:GoDeeper:
************************** / pNumAsText                                                               :11_5:GoDeeper:
pNumAsText> IN: ( ( "demand" ( "an explanation for your  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=73:
pNumAsText> unexpected (
pNumAsText> expecting number

************************** \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number            :11_5:GoDeeper:
someSL> IN: ( ( "demand" ( "an explanation for your  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=73:
someSL> unexpected (
someSL> expecting other text or number

************************* \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number    :11_5:GoDeeper:
$*|> IN: ( ( "demand" ( "an explanation for your  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=73:
$*|> unexpected (
$*|> expecting other text or number

************************ \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number         :11_5:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( ( "demand" ( "an explanation for your  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=73:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

*********************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :11_5:GoDeeper:
*********************** / term p/notLabelTerm                                                            :11_5:GoDeeper:
************************ / term p/2:someIndentation expr p                                              :11_5:GoDeeper:
************************* / someIndentation                                                            :11_5:GoDeeper:
************************** / myindented-GoDeeper                                                      :11_5:GoDeeper:
myindented-GoDeeper> IN: ( ( "demand" ( "an explanation for your  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

************************** \ myindented-GoDeeper has returned GoDeeper                                  :11_6:GoDeeper:
************************** / manyIndentation/leaf?                                                      :11_6:GoDeeper:
*************************** / ppp inner                                                                :11_6:GoDeeper:
**************************** / expression                                                             :11_6:GoDeeper:
***************************** / term p                                                               :11_6:GoDeeper:
****************************** / term p/1a:label ends directly above next line                      :11_6:GoDeeper:
******************************* / $*|                                                              :11_6:GoDeeper:
******************************** / someSL                                                         :11_6:GoDeeper:
********************************* / pNumAsText                                                   :11_6:GoDeeper:
pNumAsText> IN: ( "demand" ( "an explanation for your in <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=74:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number :11_6:GoDeeper:
someSL> IN: ( "demand" ( "an explanation for your in <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=74:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
$*|> IN: ( "demand" ( "an explanation for your in <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=74:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "demand" ( "an explanation for your in <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=74:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
****************************** / term p/1b:label ends to the left of line below, with EOL           :11_6:GoDeeper:
******************************* / $*|                                                              :11_6:GoDeeper:
******************************** / someSL                                                         :11_6:GoDeeper:
********************************* / pNumAsText                                                   :11_6:GoDeeper:
pNumAsText> IN: ( "demand" ( "an explanation for your in <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=74:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number :11_6:GoDeeper:
someSL> IN: ( "demand" ( "an explanation for your in <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=74:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
$*|> IN: ( "demand" ( "an explanation for your in <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=74:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "demand" ( "an explanation for your in <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=74:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
****************************** / term p/1c:label ends to the right of line below                    :11_6:GoDeeper:
******************************* > |<|                                                              :11_6:GoDeeper:
******************************* > |<* starting                                                     :11_6:GoDeeper:
******************************* / $*|                                                              :11_6:GoDeeper:
******************************** / someSL                                                         :11_6:GoDeeper:
********************************* / pNumAsText                                                   :11_6:GoDeeper:
pNumAsText> IN: ( "demand" ( "an explanation for your in <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=74:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number :11_6:GoDeeper:
someSL> IN: ( "demand" ( "an explanation for your in <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=74:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
$*|> IN: ( "demand" ( "an explanation for your in <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=74:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "demand" ( "an explanation for your in <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=74:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :11_6:GoDeeper:
****************************** / term p/notLabelTerm                                                :11_6:GoDeeper:
******************************* / term p/2:someIndentation expr p                                  :11_6:GoDeeper:
******************************** / someIndentation                                                :11_6:GoDeeper:
********************************* / myindented-GoDeeper                                          :11_6:GoDeeper:
myindented-GoDeeper> IN: ( "demand" ( "an explanation for your in <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********************************* \ myindented-GoDeeper has returned GoDeeper                     :11_6:Other "dem:
********************************* / manyIndentation/leaf?                                         :11_6:Other "dem:
********************************** / ppp inner                                                   :11_6:Other "dem:
*********************************** / expression                                                :11_6:Other "dem:
************************************ / term p                                                  :11_6:Other "dem:
************************************* / term p/1a:label ends directly above next line         :11_6:Other "dem:
************************************** / $*|                                                 :11_6:Other "dem:
*************************************** / someSL                                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
*************************************** / pNumAsText                                       :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

*************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (CERR): "demand" ( "an explanation for your inac <…>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting ( or other text or number

************************************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :12_5:UnDeeper:
term p/1a:label ends directly above next line> IN: "demand" ( "an explanation for your inac <…>
term p/1a:label ends directly above next line> MATCH (CERR): "demand" ( "an explanation for your inac <…>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=78:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

************************************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :12_5:UnDeeper:
************************************* / term p/1b:label ends to the left of line below, with EOL :11_6:Other "dem:
************************************** / $*|                                                 :11_6:Other "dem:
*************************************** / someSL                                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((["demand","an explanation for your inaction"],1),[])

************************************** \ $*| has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
************************************** / matching EOL                                       :12_5:UnDeeper:
matching EOL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=78:
matching EOL> unexpected )
matching EOL> expecting EOL

************************************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL :12_5:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "demand" ( "an explanation for your inac <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "demand" ( "an explanation for your inac <…>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=78:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

************************************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :12_5:UnDeeper:
************************************* / term p/1c:label ends to the right of line below       :11_6:Other "dem:
************************************** > |<|                                                 :11_6:Other "dem:
************************************** > |<* starting                                        :11_6:Other "dem:
************************************** / $*|                                                 :11_6:Other "dem:
*************************************** / someSL                                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((["demand","an explanation for your inaction"],1),[])

************************************** \ $*| has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
************************************** / |<*/parent                                         :12_5:UnDeeper:
*************************************** > |<*/recurse                                      :12_5:UnDeeper:
*************************************** / ppp inner                                     :12_4:Hence:
**************************************** / expression                                  :12_4:Hence:
***************************************** / term p                                    :12_4:Hence:
****************************************** / term p/1a:label ends directly above next line :12_4:Hence:
******************************************* / $*|                                   :12_4:Hence:
******************************************** / someSL                              :12_4:Hence:
********************************************* / pNumAsText                        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

******************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/1a:label ends directly above next line> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=81:
term p/1a:label ends directly above next line> unexpected HENCE
term p/1a:label ends directly above next line> expecting other text or number

****************************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected HENCE Expecting: other text or number :12_4:Hence:
****************************************** / term p/1b:label ends to the left of line below, with EOL :12_4:Hence:
******************************************* / $*|                                   :12_4:Hence:
******************************************** / someSL                              :12_4:Hence:
********************************************* / pNumAsText                        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

******************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/1b:label ends to the left of line below, with EOL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=81:
term p/1b:label ends to the left of line below, with EOL> unexpected HENCE
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
****************************************** / term p/1c:label ends to the right of line below :12_4:Hence:
******************************************* > |<|                                   :12_4:Hence:
******************************************* > |<* starting                          :12_4:Hence:
******************************************* / $*|                                   :12_4:Hence:
******************************************** / someSL                              :12_4:Hence:
********************************************* / pNumAsText                        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

******************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

******************************************* \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/1c:label ends to the right of line below> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=81:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting other text or number

****************************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: other text or number :12_4:Hence:
****************************************** / term p/notLabelTerm                     :12_4:Hence:
******************************************* / term p/2:someIndentation expr p       :12_4:Hence:
******************************************** / someIndentation                     :12_4:Hence:
********************************************* / myindented-GoDeeper               :12_4:Hence:
myindented-GoDeeper> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=81:
myindented-GoDeeper> unexpected HENCE
myindented-GoDeeper> expecting (

********************************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected HENCE Expecting: ( :12_4:Hence:
someIndentation> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=81:
someIndentation> unexpected HENCE
someIndentation> expecting (

******************************************** \ !Unconsumed Error: someIndentation: Unexpected HENCE Expecting: ( :12_4:Hence:
term p/2:someIndentation expr p> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=81:
term p/2:someIndentation expr p> unexpected HENCE
term p/2:someIndentation expr p> expecting (

******************************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected HENCE Expecting: ( :12_4:Hence:
******************************************* / term p/3:plain p                      :12_4:Hence:
******************************************** / pParamText                          :12_4:Hence:
********************************************* / pParamText(flat) first line: pKeyValues :12_4:Hence:
********************************************** / pKeyValuesAka                   :12_4:Hence:
*********************************************** / slAKA                         :12_4:Hence:
************************************************ / $*|                         :12_4:Hence:
************************************************* / slAKA base                :12_4:Hence:
************************************************** / slKeyValues             :12_4:Hence:
*************************************************** / $*|                   :12_4:Hence:
**************************************************** / someSL              :12_4:Hence:
***************************************************** / pNumAsText        :12_4:Hence:
pNumAsText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=81:
pNumAsText> unexpected HENCE
pNumAsText> expecting number

***************************************************** \ !Unconsumed Error: pNumAsText: Unexpected HENCE Expecting: number :12_4:Hence:
someSL> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=81:
someSL> unexpected HENCE
someSL> expecting other text or number

**************************************************** \ !Unconsumed Error: someSL: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

*************************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
slKeyValues> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=81:
slKeyValues> unexpected HENCE
slKeyValues> expecting other text or number

************************************************** \ !Unconsumed Error: slKeyValues: Unexpected HENCE Expecting: other text or number :12_4:Hence:
slAKA base> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=81:
slAKA base> unexpected HENCE
slAKA base> expecting other text or number

************************************************* \ !Unconsumed Error: slAKA base: Unexpected HENCE Expecting: other text or number :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting other text or number

************************************************ \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: other text or number :12_4:Hence:
slAKA> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=81:
slAKA> unexpected HENCE
slAKA> expecting other text or number

*********************************************** \ !Unconsumed Error: slAKA: Unexpected HENCE Expecting: other text or number :12_4:Hence:
pKeyValuesAka> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=81:
pKeyValuesAka> unexpected HENCE
pKeyValuesAka> expecting other text or number

********************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected HENCE Expecting: other text or number :12_4:Hence:
pParamText(flat) first line: pKeyValues> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=81:
pParamText(flat) first line: pKeyValues> unexpected HENCE
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected HENCE Expecting: other text or number :12_4:Hence:
pParamText> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=81:
pParamText> unexpected HENCE
pParamText> expecting other text or number

******************************************** \ !Unconsumed Error: pParamText: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/3:plain p> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=81:
term p/3:plain p> unexpected HENCE
term p/3:plain p> expecting other text or number

******************************************* \ !Unconsumed Error: term p/3:plain p: Unexpected HENCE Expecting: other text or number :12_4:Hence:
term p/notLabelTerm> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=81:
term p/notLabelTerm> unexpected HENCE
term p/notLabelTerm> expecting ( or term

****************************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected HENCE Expecting: ( term :12_4:Hence:
term p> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=81:
term p> unexpected HENCE
term p> expecting (, other text or number, or term

***************************************** \ !Unconsumed Error: term p: Unexpected HENCE Expecting: ( other text or number term :12_4:Hence:
expression> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=81:
expression> unexpected HENCE
expression> expecting expression

**************************************** \ !Unconsumed Error: expression: Unexpected HENCE Expecting: expression :12_4:Hence:
ppp inner> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=81:
ppp inner> unexpected HENCE
ppp inner> expecting expression

*************************************** \ !Unconsumed Error: ppp inner: Unexpected HENCE Expecting: expression :12_4:Hence:
*************************************** / withPrePost                                   :12_4:Hence:
**************************************** > |<* starting                                :12_4:Hence:
**************************************** / $*|                                         :12_4:Hence:
***************************************** / pre part                                  :12_4:Hence:
pre part> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=81:
pre part> unexpected HENCE
pre part> expecting ( or Other text

***************************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting ( or Other text

**************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
withPrePost> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=81:
withPrePost> unexpected HENCE
withPrePost> expecting ( or Other text

*************************************** \ !Unconsumed Error: withPrePost: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
*************************************** / $*|                                           :12_4:Hence:
**************************************** / pre part                                    :12_4:Hence:
pre part> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=81:
pre part> unexpected HENCE
pre part> expecting ( or Other text

**************************************** \ !Unconsumed Error: pre part: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
$*|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=81:
$*|> unexpected HENCE
$*|> expecting ( or Other text

*************************************** \ !Unconsumed Error: $*|: Unexpected HENCE Expecting: ( Other text :12_4:Hence:
*************************************** / |<*/base                                         :12_5:UnDeeper:
**************************************** / ppp inner                                      :12_5:UnDeeper:
***************************************** / expression                                   :12_5:UnDeeper:
****************************************** / term p                                     :12_5:UnDeeper:
******************************************* / term p/1a:label ends directly above next line :12_5:UnDeeper:
******************************************** / $*|                                    :12_5:UnDeeper:
********************************************* / someSL                               :12_5:UnDeeper:
********************************************** / pNumAsText                         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

********************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

******************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=78:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

******************************************* \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
******************************************* / term p/1b:label ends to the left of line below, with EOL :12_5:UnDeeper:
******************************************** / $*|                                    :12_5:UnDeeper:
********************************************* / someSL                               :12_5:UnDeeper:
********************************************** / pNumAsText                         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

********************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

******************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=78:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

******************************************* \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
******************************************* / term p/1c:label ends to the right of line below :12_5:UnDeeper:
******************************************** > |<|                                    :12_5:UnDeeper:
******************************************** > |<* starting                           :12_5:UnDeeper:
******************************************** / $*|                                    :12_5:UnDeeper:
********************************************* / someSL                               :12_5:UnDeeper:
********************************************** / pNumAsText                         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

********************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

******************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=78:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

******************************************* \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
******************************************* / term p/notLabelTerm                      :12_5:UnDeeper:
******************************************** / term p/2:someIndentation expr p        :12_5:UnDeeper:
********************************************* / someIndentation                      :12_5:UnDeeper:
********************************************** / myindented-GoDeeper                :12_5:UnDeeper:
myindented-GoDeeper> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=78:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

********************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :12_5:UnDeeper:
someIndentation> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=78:
someIndentation> unexpected )
someIndentation> expecting (

********************************************* \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: ( :12_5:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=78:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

******************************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :12_5:UnDeeper:
******************************************** / term p/3:plain p                       :12_5:UnDeeper:
********************************************* / pParamText                           :12_5:UnDeeper:
********************************************** / pParamText(flat) first line: pKeyValues :12_5:UnDeeper:
*********************************************** / pKeyValuesAka                    :12_5:UnDeeper:
************************************************ / slAKA                          :12_5:UnDeeper:
************************************************* / $*|                          :12_5:UnDeeper:
************************************************** / slAKA base                 :12_5:UnDeeper:
*************************************************** / slKeyValues              :12_5:UnDeeper:
**************************************************** / $*|                    :12_5:UnDeeper:
***************************************************** / someSL               :12_5:UnDeeper:
****************************************************** / pNumAsText         :12_5:UnDeeper:
pNumAsText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=78:
pNumAsText> unexpected )
pNumAsText> expecting number

****************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_5:UnDeeper:
someSL> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=78:
someSL> unexpected )
someSL> expecting other text or number

***************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

**************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
slKeyValues> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=78:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

*************************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
slAKA base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=78:
slAKA base> unexpected )
slAKA base> expecting other text or number

************************************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting other text or number

************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
slAKA> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=78:
slAKA> unexpected )
slAKA> expecting other text or number

************************************************ \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
pKeyValuesAka> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=78:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

*********************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=78:
pParamText(flat) first line: pKeyValues> unexpected )
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
pParamText> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=78:
pParamText> unexpected )
pParamText> expecting other text or number

********************************************* \ !Unconsumed Error: pParamText: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/3:plain p> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=78:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

******************************************** \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :12_5:UnDeeper:
term p/notLabelTerm> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=78:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

******************************************* \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :12_5:UnDeeper:
term p> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=78:
term p> unexpected )
term p> expecting (, other text or number, or term

****************************************** \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :12_5:UnDeeper:
expression> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=78:
expression> unexpected )
expression> expecting expression

***************************************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression :12_5:UnDeeper:
ppp inner> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=78:
ppp inner> unexpected )
ppp inner> expecting expression

**************************************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression :12_5:UnDeeper:
**************************************** / withPrePost                                    :12_5:UnDeeper:
***************************************** > |<* starting                                 :12_5:UnDeeper:
***************************************** / $*|                                          :12_5:UnDeeper:
****************************************** / pre part                                   :12_5:UnDeeper:
pre part> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=78:
pre part> unexpected )
pre part> expecting ( or Other text

****************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting ( or Other text

***************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
withPrePost> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=78:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

**************************************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
**************************************** / $*|                                            :12_5:UnDeeper:
***************************************** / pre part                                     :12_5:UnDeeper:
pre part> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=78:
pre part> unexpected )
pre part> expecting ( or Other text

***************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
$*|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=78:
$*|> unexpected )
$*|> expecting ( or Other text

**************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :12_5:UnDeeper:
|<*/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=78:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

*************************************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :12_5:UnDeeper:
|<*/parent> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=81:
|<*/parent> unexpected HENCE
|<*/parent> expecting (, ), Other text, or expression

************************************** \ !Unconsumed Error: |<*/parent: Unexpected HENCE Expecting: ( ( ) Other text expression :12_5:UnDeeper:
term p/1c:label ends to the right of line below> IN: "demand" ( "an explanation for your inac <…>
term p/1c:label ends to the right of line below> MATCH (CERR): "demand" ( "an explanation for your inac <…>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=81:
term p/1c:label ends to the right of line below> unexpected HENCE
term p/1c:label ends to the right of line below> expecting (, ), Other text, or expression

************************************* \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected HENCE Expecting: ( ( ( ) Other text expression :12_5:UnDeeper:
************************************* / term p/notLabelTerm                                   :11_6:Other "dem:
************************************** / term p/2:someIndentation expr p                     :11_6:Other "dem:
*************************************** / someIndentation                                   :11_6:Other "dem:
**************************************** / myindented-GoDeeper                             :11_6:Other "dem:
myindented-GoDeeper> IN: "demand" ( "an explanation for your inac <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=75:
myindented-GoDeeper> unexpected "demand"
myindented-GoDeeper> expecting (

**************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "demand" Expecting: ( :11_6:Other "dem:
someIndentation> IN: "demand" ( "an explanation for your inac <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=75:
someIndentation> unexpected "demand"
someIndentation> expecting (

*************************************** \ !Unconsumed Error: someIndentation: Unexpected "demand" Expecting: ( :11_6:Other "dem:
term p/2:someIndentation expr p> IN: "demand" ( "an explanation for your inac <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=75:
term p/2:someIndentation expr p> unexpected "demand"
term p/2:someIndentation expr p> expecting (

************************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "demand" Expecting: ( :11_6:Other "dem:
************************************** / term p/3:plain p                                    :11_6:Other "dem:
*************************************** / pParamText                                        :11_6:Other "dem:
**************************************** / pParamText(flat) first line: pKeyValues         :11_6:Other "dem:
***************************************** / pKeyValuesAka                                 :11_6:Other "dem:
****************************************** / slAKA                                       :11_6:Other "dem:
******************************************* / $*|                                       :11_6:Other "dem:
******************************************** / slAKA base                              :11_6:Other "dem:
********************************************* / slKeyValues                           :11_6:Other "dem:
********************************************** / $*|                                 :11_6:Other "dem:
*********************************************** / someSL                            :11_6:Other "dem:
someSL> IN: "demand" ( "an explanation for your inac <…>
someSL> MATCH (COK): "demand" ( "an explanation for your inac <…>
someSL> VALUE: ((["demand","an explanation for your inaction"],1),[])

*********************************************** \ someSL has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((["demand","an explanation for your inaction"],1),[])

********************************************** \ $*| has returned (["demand","an explanation for your inaction"],1) :12_5:UnDeeper:
********************************************** / |>>/recurse                        :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
********************************************** / |>>/base                           :12_5:UnDeeper:
*********************************************** / |?| optional something           :12_5:UnDeeper:
************************************************ / |>>/recurse                    :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

************************************************ \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
************************************************ / |>>/base                       :12_5:UnDeeper:
************************************************* / slTypeSig                    :12_5:UnDeeper:
************************************************** / $>|                        :12_5:UnDeeper:
$>|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=78:
$>|> unexpected )
$>|> expecting :: or IS

************************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS :: :12_5:UnDeeper:
slTypeSig> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=78:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

************************************************* \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS :: :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=78:
|>>/base> unexpected )
|>>/base> expecting :: or IS

************************************************ \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS :: :12_5:UnDeeper:
|?| optional something> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

*********************************************** \ |?| optional something has returned (Nothing,0) :12_5:UnDeeper:
*********************************************** > |>>/base got Nothing             :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************************************** \ |>>/base has returned (Nothing,0)  :12_5:UnDeeper:
slKeyValues> IN: "demand" ( "an explanation for your inac <…>
slKeyValues> MATCH (COK): "demand" ( "an explanation for your inac <…>
slKeyValues> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

********************************************* \ slKeyValues has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
slAKA base> IN: "demand" ( "an explanation for your inac <…>
slAKA base> MATCH (COK): "demand" ( "an explanation for your inac <…>
slAKA base> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

******************************************** \ slAKA base has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
$*|> IN: "demand" ( "an explanation for your inac <…>
$*|> MATCH (COK): "demand" ( "an explanation for your inac <…>
$*|> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

******************************************* \ $*| has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
******************************************* / |>>/recurse                              :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
******************************************* / |>>/base                                 :12_5:UnDeeper:
******************************************** / slAKA optional akapart                 :12_5:UnDeeper:
********************************************* / |?| optional something               :12_5:UnDeeper:
********************************************** / |>>/recurse                        :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
********************************************** / |>>/base                           :12_5:UnDeeper:
*********************************************** / PAKA/akapart                     :12_5:UnDeeper:
************************************************ / $>|                            :12_5:UnDeeper:
************************************************* / Aka Token                    :12_5:UnDeeper:
Aka Token> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=78:
Aka Token> unexpected )
Aka Token> expecting AKA

************************************************* \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :12_5:UnDeeper:
$>|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=78:
$>|> unexpected )
$>|> expecting AKA

************************************************ \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA :12_5:UnDeeper:
PAKA/akapart> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=78:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

*********************************************** \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=78:
|>>/base> unexpected )
|>>/base> expecting AKA

********************************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA :12_5:UnDeeper:
|?| optional something> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************************* \ |?| optional something has returned (Nothing,0) :12_5:UnDeeper:
slAKA optional akapart> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

******************************************** \ slAKA optional akapart has returned (Nothing,0) :12_5:UnDeeper:
******************************************** > |>>/base got Nothing                   :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************************* \ |>>/base has returned (Nothing,0)        :12_5:UnDeeper:
******************************************* / |>>/recurse                              :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

******************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
******************************************* / |>>/base                                 :12_5:UnDeeper:
******************************************** / slAKA optional typically               :12_5:UnDeeper:
********************************************* / |?| optional something               :12_5:UnDeeper:
********************************************** / |>>/recurse                        :12_5:UnDeeper:
|>>/recurse> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=78:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :12_5:UnDeeper:
********************************************** / |>>/base                           :12_5:UnDeeper:
*********************************************** / typically                        :12_5:UnDeeper:
************************************************ / $>|                            :12_5:UnDeeper:
$>|> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=78:
$>|> unexpected )
$>|> expecting TYPICALLY

************************************************ \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :12_5:UnDeeper:
typically> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=78:
typically> unexpected )
typically> expecting TYPICALLY

*********************************************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=78:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

********************************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :12_5:UnDeeper:
|?| optional something> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************************* \ |?| optional something has returned (Nothing,0) :12_5:UnDeeper:
slAKA optional typically> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

******************************************** \ slAKA optional typically has returned (Nothing,0) :12_5:UnDeeper:
******************************************** > |>>/base got Nothing                   :12_5:UnDeeper:
|>>/base> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

******************************************* \ |>>/base has returned (Nothing,0)        :12_5:UnDeeper:
******************************************* > slAKA: proceeding after base and entityalias are retrieved ... :12_5:UnDeeper:
******************************************* > pAKA: entityalias = Nothing              :12_5:UnDeeper:
slAKA> IN: "demand" ( "an explanation for your inac <…>
slAKA> MATCH (COK): "demand" ( "an explanation for your inac <…>
slAKA> VALUE: ((("demand" :| ["an explanation for your inaction"],Nothing),1),[])

****************************************** \ slAKA has returned (("demand" :| ["an explanation for your inaction"],Nothing),1) :12_5:UnDeeper:
****************************************** / undeepers                                  :12_5:UnDeeper:
******************************************* > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers :12_5:UnDeeper:
******************************************* > sameLine: success!                         :12_6:UnDeeper:
undeepers> IN: ) ) ) HENCE ( "You" ( MUST DO ( "respond <…>
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

****************************************** \ undeepers has returned ()                    :12_6:UnDeeper:
pKeyValuesAka> IN: "demand" ( "an explanation for your inac <…>
pKeyValuesAka> MATCH (COK): "demand" ( "an explanation for your inac <…>
pKeyValuesAka> VALUE: (("demand" :| ["an explanation for your inaction"],Nothing),[])

***************************************** \ pKeyValuesAka has returned ("demand" :| ["an explanation for your inaction"],Nothing) :12_6:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "demand" ( "an explanation for your inac <…>
pParamText(flat) first line: pKeyValues> MATCH (COK): "demand" ( "an explanation for your inac <…>
pParamText(flat) first line: pKeyValues> VALUE: (("demand" :| ["an explanation for your inaction"],Nothing),[])

**************************************** \ pParamText(flat) first line: pKeyValues has returned ("demand" :| ["an explanation for your inaction"],Nothing) :12_6:UnDeeper:
**************************************** / pParamText(flat) subsequent lines: sameMany pKeyValues :12_6:UnDeeper:
***************************************** / manyIndentation/leaf?                          :12_6:UnDeeper:
****************************************** / sameMany                                     :12_6:UnDeeper:
******************************************* / pKeyValuesAka                              :12_6:UnDeeper:
******************************************** / slAKA                                    :12_6:UnDeeper:
********************************************* / $*|                                    :12_6:UnDeeper:
********************************************** / slAKA base                           :12_6:UnDeeper:
*********************************************** / slKeyValues                        :12_6:UnDeeper:
************************************************ / $*|                              :12_6:UnDeeper:
************************************************* / someSL                         :12_6:UnDeeper:
************************************************** / pNumAsText                   :12_6:UnDeeper:
pNumAsText> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=79:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :12_6:UnDeeper:
someSL> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=79:
someSL> unexpected )
someSL> expecting other text or number

************************************************* \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
$*|> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=79:
$*|> unexpected )
$*|> expecting other text or number

************************************************ \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
slKeyValues> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=79:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

*********************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
slAKA base> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=79:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************************** \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
$*|> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=79:
$*|> unexpected )
$*|> expecting other text or number

********************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
slAKA> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=79:
slAKA> unexpected )
slAKA> expecting other text or number

******************************************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
pKeyValuesAka> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=79:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

******************************************* \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :12_6:UnDeeper:
sameMany> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

****************************************** \ sameMany has returned []                     :12_6:UnDeeper:
manyIndentation/leaf?> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

***************************************** \ manyIndentation/leaf? has returned []          :12_6:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

**************************************** \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned [] :12_6:UnDeeper:
pParamText> IN: "demand" ( "an explanation for your inac <…>
pParamText> MATCH (COK): "demand" ( "an explanation for your inac <…>
pParamText> VALUE: (("demand" :| ["an explanation for your inaction"],Nothing) :| [],[])

*************************************** \ pParamText has returned ("demand" :| ["an explanation for your inaction"],Nothing) :| [] :12_6:UnDeeper:
term p/3:plain p> IN: "demand" ( "an explanation for your inac <…>
term p/3:plain p> MATCH (COK): "demand" ( "an explanation for your inac <…>
term p/3:plain p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************************** \ term p/3:plain p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
term p/notLabelTerm> IN: "demand" ( "an explanation for your inac <…>
term p/notLabelTerm> MATCH (COK): "demand" ( "an explanation for your inac <…>
term p/notLabelTerm> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************************* \ term p/notLabelTerm has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
term p> IN: "demand" ( "an explanation for your inac <…>
term p> MATCH (COK): "demand" ( "an explanation for your inac <…>
term p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************************ \ term p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
************************************ / binary(Or)                                               :12_6:UnDeeper:
binary(Or)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=79:
binary(Or)> unexpected )
binary(Or)> expecting OR

************************************ \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :12_6:UnDeeper:
************************************ / binary(And)                                              :12_6:UnDeeper:
binary(And)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=79:
binary(And)> unexpected )
binary(And)> expecting AND

************************************ \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :12_6:UnDeeper:
************************************ / binary(SetLess)                                          :12_6:UnDeeper:
binary(SetLess)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=79:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

************************************ \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :12_6:UnDeeper:
************************************ / binary(SetPlus)                                          :12_6:UnDeeper:
binary(SetPlus)> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=79:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

************************************ \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :12_6:UnDeeper:
expression> IN: "demand" ( "an explanation for your inac <…>
expression> MATCH (COK): "demand" ( "an explanation for your inac <…>
expression> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

*********************************** \ expression has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
ppp inner> IN: "demand" ( "an explanation for your inac <…>
ppp inner> MATCH (COK): "demand" ( "an explanation for your inac <…>
ppp inner> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************************** \ ppp inner has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
manyIndentation/leaf?> IN: "demand" ( "an explanation for your inac <…>
manyIndentation/leaf?> MATCH (COK): "demand" ( "an explanation for your inac <…>
manyIndentation/leaf?> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************************* \ manyIndentation/leaf? has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_6:UnDeeper:
********************************* / myindented-UnDeeper                                            :12_6:UnDeeper:
myindented-UnDeeper> IN: ) ) HENCE ( "You" ( MUST DO ( "respond"  <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

********************************* \ myindented-UnDeeper has returned UnDeeper                        :12_7:UnDeeper:
someIndentation> IN: ( "demand" ( "an explanation for your in <…>
someIndentation> MATCH (COK): ( "demand" ( "an explanation for your in <…>
someIndentation> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************************** \ someIndentation has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
term p/2:someIndentation expr p> IN: ( "demand" ( "an explanation for your in <…>
term p/2:someIndentation expr p> MATCH (COK): ( "demand" ( "an explanation for your in <…>
term p/2:someIndentation expr p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************************* \ term p/2:someIndentation expr p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
term p/notLabelTerm> IN: ( "demand" ( "an explanation for your in <…>
term p/notLabelTerm> MATCH (COK): ( "demand" ( "an explanation for your in <…>
term p/notLabelTerm> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

****************************** \ term p/notLabelTerm has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
term p> IN: ( "demand" ( "an explanation for your in <…>
term p> MATCH (COK): ( "demand" ( "an explanation for your in <…>
term p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

***************************** \ term p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
***************************** / binary(Or)                                                               :12_7:UnDeeper:
binary(Or)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=80:
binary(Or)> unexpected )
binary(Or)> expecting OR

***************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR                :12_7:UnDeeper:
***************************** / binary(And)                                                              :12_7:UnDeeper:
binary(And)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=80:
binary(And)> unexpected )
binary(And)> expecting AND

***************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND              :12_7:UnDeeper:
***************************** / binary(SetLess)                                                          :12_7:UnDeeper:
binary(SetLess)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=80:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

***************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS         :12_7:UnDeeper:
***************************** / binary(SetPlus)                                                          :12_7:UnDeeper:
binary(SetPlus)> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=80:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

***************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS         :12_7:UnDeeper:
expression> IN: ( "demand" ( "an explanation for your in <…>
expression> MATCH (COK): ( "demand" ( "an explanation for your in <…>
expression> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

**************************** \ expression has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
ppp inner> IN: ( "demand" ( "an explanation for your in <…>
ppp inner> MATCH (COK): ( "demand" ( "an explanation for your in <…>
ppp inner> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

*************************** \ ppp inner has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
manyIndentation/leaf?> IN: ( "demand" ( "an explanation for your in <…>
manyIndentation/leaf?> MATCH (COK): ( "demand" ( "an explanation for your in <…>
manyIndentation/leaf?> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************** \ manyIndentation/leaf? has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_7:UnDeeper:
************************** / myindented-UnDeeper                                                            :12_7:UnDeeper:
myindented-UnDeeper> IN: ) HENCE ( "You" ( MUST DO ( "respond" "t <…>
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

************************** \ myindented-UnDeeper has returned UnDeeper                               :12_4:Hence:
someIndentation> IN: ( ( "demand" ( "an explanation for your  <…>
someIndentation> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
someIndentation> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************* \ someIndentation has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
term p/2:someIndentation expr p> IN: ( ( "demand" ( "an explanation for your  <…>
term p/2:someIndentation expr p> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
term p/2:someIndentation expr p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

************************ \ term p/2:someIndentation expr p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
term p/notLabelTerm> IN: ( ( "demand" ( "an explanation for your  <…>
term p/notLabelTerm> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
term p/notLabelTerm> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

*********************** \ term p/notLabelTerm has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
term p> IN: ( ( "demand" ( "an explanation for your  <…>
term p> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
term p> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************** \ term p has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
********************** / binary(Or)                                                                      :12_4:Hence:
binary(Or)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=81:
binary(Or)> unexpected HENCE
binary(Or)> expecting OR

********************** \ !Unconsumed Error: binary(Or): Unexpected HENCE Expecting: OR                   :12_4:Hence:
********************** / binary(And)                                                                     :12_4:Hence:
binary(And)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=81:
binary(And)> unexpected HENCE
binary(And)> expecting AND

********************** \ !Unconsumed Error: binary(And): Unexpected HENCE Expecting: AND                 :12_4:Hence:
********************** / binary(SetLess)                                                                 :12_4:Hence:
binary(SetLess)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=81:
binary(SetLess)> unexpected HENCE
binary(SetLess)> expecting LESS

********************** \ !Unconsumed Error: binary(SetLess): Unexpected HENCE Expecting: LESS            :12_4:Hence:
********************** / binary(SetPlus)                                                                 :12_4:Hence:
binary(SetPlus)> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=81:
binary(SetPlus)> unexpected HENCE
binary(SetPlus)> expecting PLUS

********************** \ !Unconsumed Error: binary(SetPlus): Unexpected HENCE Expecting: PLUS            :12_4:Hence:
expression> IN: ( ( "demand" ( "an explanation for your  <…>
expression> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
expression> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

********************* \ expression has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
ppp inner> IN: ( ( "demand" ( "an explanation for your  <…>
ppp inner> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
ppp inner> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************** \ ppp inner has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
expr pParamText> IN: ( ( "demand" ( "an explanation for your  <…>
expr pParamText> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
expr pParamText> VALUE: (MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

******************* \ expr pParamText has returned MyLeaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
dBoolStructP calling exprP> IN: ( ( "demand" ( "an explanation for your  <…>
dBoolStructP calling exprP> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
dBoolStructP calling exprP> VALUE: (Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

****************** \ dBoolStructP calling exprP has returned Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
pAction calling dBoolStructP> IN: ( ( "demand" ( "an explanation for your  <…>
pAction calling dBoolStructP> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
pAction calling dBoolStructP> VALUE: (Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

***************** \ pAction calling dBoolStructP has returned Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
pDoAction/pAction> IN: ( ( "demand" ( "an explanation for your  <…>
pDoAction/pAction> MATCH (COK): ( ( "demand" ( "an explanation for your  <…>
pDoAction/pAction> VALUE: (Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []),[])

**************** \ pDoAction/pAction has returned Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []) :12_4:Hence:
**************** / WHERE                                                                                       :12_4:Hence:
WHERE> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=81:
WHERE> unexpected HENCE
WHERE> expecting WHERE

**************** \ !Unconsumed Error: WHERE: Unexpected HENCE Expecting: WHERE                                 :12_4:Hence:
**************** / preambleParamText:[Having]                                                                  :12_4:Hence:
***************** / $>|                                                                                       :12_4:Hence:
$>|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=81:
$>|> unexpected HENCE
$>|> expecting HAVING

***************** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: HAVING                                :12_4:Hence:
preambleParamText:[Having]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=81:
preambleParamText:[Having]> unexpected HENCE
preambleParamText:[Having]> expecting HAVING

**************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected HENCE Expecting: HAVING           :12_4:Hence:
**************** / preambleParamText:[Given]                                                                   :12_4:Hence:
***************** / $>|                                                                                       :12_4:Hence:
$>|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=81:
$>|> unexpected HENCE
$>|> expecting GIVEN

***************** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: GIVEN                                 :12_4:Hence:
preambleParamText:[Given]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=81:
preambleParamText:[Given]> unexpected HENCE
preambleParamText:[Given]> expecting GIVEN

**************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected HENCE Expecting: GIVEN             :12_4:Hence:
**************** / preambleParamText:[Upon]                                                                    :12_4:Hence:
***************** / $>|                                                                                       :12_4:Hence:
$>|> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=81:
$>|> unexpected HENCE
$>|> expecting UPON

***************** \ !Unconsumed Error: $>|: Unexpected HENCE Expecting: UPON                                  :12_4:Hence:
preambleParamText:[Upon]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=81:
preambleParamText:[Upon]> unexpected HENCE
preambleParamText:[Upon]> expecting UPON

**************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected HENCE Expecting: UPON               :12_4:Hence:
**************** / preambleBoolStructR [Unless]                                                                :12_4:Hence:
preambleBoolStructR [Unless]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=81:
preambleBoolStructR [Unless]> unexpected HENCE
preambleBoolStructR [Unless]> expecting UNLESS

**************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected HENCE Expecting: UNLESS         :12_4:Hence:
**************** / preambleBoolStructR [When,If]                                                               :12_4:Hence:
preambleBoolStructR [When,If]> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=81:
preambleBoolStructR [When,If]> unexpected HENCE
preambleBoolStructR [When,If]> expecting IF or WHEN

**************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected HENCE Expecting: IF WHEN       :12_4:Hence:
regulative permutation with deontic-temporal> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
regulative permutation with deontic-temporal> MATCH (COK): MAY DO ( ( "demand" ( "an explanation fo <…>
regulative permutation with deontic-temporal> VALUE: (RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []},[])

*************** \ regulative permutation with deontic-temporal has returned RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []} :12_4:Hence:
permutationsReg> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
permutationsReg> MATCH (COK): MAY DO ( ( "demand" ( "an explanation fo <…>
permutationsReg> VALUE: (RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []},[])

************** \ permutationsReg has returned RuleBody {rbaction = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), rbpbrs = [], rbpbrneg = [], rbdeon = DMay, rbtemporal = Nothing, rbupon = [], rbgiven = [], rbhaving = Nothing, rbkeyname = (RParty,Leaf (("the PDPC" :| [],Nothing) :| [])), rbwho = Nothing, rbwhere = []} :12_4:Hence:
************** / pHenceLest-Hence                                                                                :12_4:Hence:
*************** / someIndentation                                                                                :12_5:GoDeeper:
**************** / myindented-GoDeeper                                                                          :12_5:GoDeeper:
myindented-GoDeeper> IN: ( "You" ( MUST DO ( "respond" "to" ( "th <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

**************** \ myindented-GoDeeper has returned GoDeeper                                                     :12_5:Other "You:
**************** / manyIndentation/leaf?                                                                         :12_5:Other "You:
***************** / pRegRule                                                                                    :12_5:Other "You:
****************** / pRuleLabel                                                                                :12_5:Other "You:
******************* / $>|                                                                                     :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting §

******************* \ !Unconsumed Error: $>|: Unexpected "You" Expecting: §                                  :12_5:Other "You:
pRuleLabel> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=83:
pRuleLabel> unexpected "You"
pRuleLabel> expecting §

****************** \ !Unconsumed Error: pRuleLabel: Unexpected "You" Expecting: §                             :12_5:Other "You:
****************** / pRegRuleSugary                                                                            :12_5:Other "You:
******************* / someDeep                                                                                :12_5:Other "You:
******************** / someDeep first part calls base directly                                               :12_5:Other "You:
someDeep first part calls base directly> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep first part calls base directly> MATCH (COK): "You"
someDeep first part calls base directly> VALUE: ("You",[])

******************** \ someDeep first part calls base directly has returned "You"                             :12_6:GoDeeper:
******************** / someDeep second part recurses with someIndentation                                     :12_6:GoDeeper:
********************* / someIndentation                                                                      :12_6:GoDeeper:
********************** / myindented-GoDeeper                                                                :12_6:GoDeeper:
myindented-GoDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********************** \ myindented-GoDeeper has returned GoDeeper                                           :12_6:Must:
********************** / manyIndentation/leaf?                                                               :12_6:Must:
*********************** / someDeep                                                                          :12_6:Must:
************************ / someDeep first part calls base directly                                         :12_6:Must:
someDeep first part calls base directly> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=85:
someDeep first part calls base directly> unexpected MUST
someDeep first part calls base directly> expecting Other text

************************ \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MUST Expecting: Other text :12_6:Must:
someDeep> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=85:
someDeep> unexpected MUST
someDeep> expecting Other text

*********************** \ !Unconsumed Error: someDeep: Unexpected MUST Expecting: Other text                :12_6:Must:
manyIndentation/leaf?> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=85:
manyIndentation/leaf?> unexpected MUST
manyIndentation/leaf?> expecting Other text

********************** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MUST Expecting: Other text     :12_6:Must:
********************** / manyIndentation/deeper; calling someIndentation                                     :12_6:Must:
*********************** / someIndentation                                                                   :12_6:Must:
************************ / myindented-GoDeeper                                                             :12_6:Must:
myindented-GoDeeper> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=85:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

************************ \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: (            :12_6:Must:
someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting (

*********************** \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: (                  :12_6:Must:
manyIndentation/deeper; calling someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=85:
manyIndentation/deeper; calling someIndentation> unexpected MUST
manyIndentation/deeper; calling someIndentation> expecting (

********************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MUST Expecting: ( :12_6:Must:
someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting ( or Other text

********************* \ !Consumed Error: someIndentation: Unexpected MUST Expecting: ( Other text             :12_6:Must:
someDeep second part recurses with someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=85:
someDeep second part recurses with someIndentation> unexpected MUST
someDeep second part recurses with someIndentation> expecting ( or Other text

******************** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MUST Expecting: ( Other text :12_6:GoDeeper:
******************** > someDeep no luck, returning []                                                         :12_6:GoDeeper:
someDeep> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep> MATCH (COK): "You"
someDeep> VALUE: (["You"],[])

******************* \ someDeep has returned ["You"]                                                            :12_6:GoDeeper:
******************* / someIndentation                                                                          :12_6:GoDeeper:
******************** / myindented-GoDeeper                                                                    :12_6:GoDeeper:
myindented-GoDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******************** \ myindented-GoDeeper has returned GoDeeper                                               :12_6:Must:
******************** / manyIndentation/leaf?                                                                   :12_6:Must:
********************* / permutationsReg                                                                       :12_6:Must:
********************** / regulative permutation with deontic-temporal                                        :12_6:Must:
*********************** / WHERE                                                                             :12_6:Must:
WHERE> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=85:
WHERE> unexpected MUST
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                        :12_6:Must:
*********************** / preambleParamText:[Having]                                                        :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                       :12_6:Must:
preambleParamText:[Having]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=85:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING  :12_6:Must:
*********************** / preambleParamText:[Given]                                                         :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                        :12_6:Must:
preambleParamText:[Given]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=85:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN    :12_6:Must:
*********************** / preambleParamText:[Upon]                                                          :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                         :12_6:Must:
preambleParamText:[Upon]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=85:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON      :12_6:Must:
*********************** / preambleBoolStructR [Unless]                                                      :12_6:Must:
preambleBoolStructR [Unless]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=85:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS :12_6:Must:
*********************** / preambleBoolStructR [When,If]                                                     :12_6:Must:
preambleBoolStructR [When,If]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=85:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN :12_6:Must:
*********************** / pDT                                                                               :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (COK): MUST
$>|> VALUE: (DMust,[])

************************ \ $>| has returned DMust                                                          :13_6:Do:
************************ / |>| calling $>>                                                                 :13_6:Do:
************************* / |>>/recurse                                                                   :13_6:Do:
|>>/recurse> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=86:
|>>/recurse> unexpected DO
|>>/recurse> expecting (

************************* \ !Unconsumed Error: |>>/recurse: Unexpected DO Expecting: (                    :13_6:Do:
************************* / |>>/base                                                                      :13_6:Do:
************************** / pTemporal/eventually                                                        :13_6:Do:
pTemporal/eventually> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=86:
pTemporal/eventually> unexpected DO
pTemporal/eventually> expecting EVENTUALLY

************************** \ !Unconsumed Error: pTemporal/eventually: Unexpected DO Expecting: EVENTUALLY :13_6:Do:
************************** / pTemporal/specifically                                                      :13_6:Do:
*************************** / $>|                                                                       :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting AFTER, BEFORE, BY, or ON

*************************** \ !Unconsumed Error: $>|: Unexpected DO Expecting: BEFORE AFTER BY ON       :13_6:Do:
pTemporal/specifically> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=86:
pTemporal/specifically> unexpected DO
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************************** \ !Unconsumed Error: pTemporal/specifically: Unexpected DO Expecting: BEFORE AFTER BY ON :13_6:Do:
************************** / pTemporal/vaguely                                                           :13_6:Do:
pTemporal/vaguely> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=86:
pTemporal/vaguely> unexpected DO
pTemporal/vaguely> expecting Other text

************************** \ !Unconsumed Error: pTemporal/vaguely: Unexpected DO Expecting: Other text   :13_6:Do:
************************** > |>>/base got Nothing                                                        :13_6:Do:
|>>/base> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

************************* \ |>>/base has returned (Nothing,0)                                             :13_6:Do:
|>| calling $>>> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
|>| calling $>>> MATCH (EOK): <EMPTY>
|>| calling $>>> VALUE: ((Nothing,0),[])

************************ \ |>| calling $>> has returned (Nothing,0)                                        :13_6:Do:
************************ / undeepers                                                                       :13_6:Do:
************************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers        :13_6:Do:
************************* > sameLine: success!                                                            :13_6:Do:
undeepers> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************ \ undeepers has returned ()                                                       :13_6:Do:
pDT> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pDT> MATCH (COK): MUST
pDT> VALUE: ((DMust,Nothing),[])

*********************** \ pDT has returned (DMust,Nothing)                                                  :13_6:Do:
*********************** / WHERE                                                                             :13_6:Do:
WHERE> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=86:
WHERE> unexpected DO
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                          :13_6:Do:
*********************** / preambleParamText:[Having]                                                        :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                         :13_6:Do:
preambleParamText:[Having]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=86:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING    :13_6:Do:
*********************** / preambleParamText:[Given]                                                         :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                          :13_6:Do:
preambleParamText:[Given]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=86:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN      :13_6:Do:
*********************** / preambleParamText:[Upon]                                                          :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                           :13_6:Do:
preambleParamText:[Upon]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=86:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON        :13_6:Do:
*********************** / preambleBoolStructR [Unless]                                                      :13_6:Do:
preambleBoolStructR [Unless]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=86:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS  :13_6:Do:
*********************** / preambleBoolStructR [When,If]                                                     :13_6:Do:
preambleBoolStructR [When,If]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=86:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN :13_6:Do:
*********************** / WHERE                                                                             :13_6:Do:
WHERE> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=86:
WHERE> unexpected DO
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected DO Expecting: WHERE                          :13_6:Do:
*********************** / preambleParamText:[Having]                                                        :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: HAVING                         :13_6:Do:
preambleParamText:[Having]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=86:
preambleParamText:[Having]> unexpected DO
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected DO Expecting: HAVING    :13_6:Do:
*********************** / preambleParamText:[Given]                                                         :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: GIVEN                          :13_6:Do:
preambleParamText:[Given]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=86:
preambleParamText:[Given]> unexpected DO
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected DO Expecting: GIVEN      :13_6:Do:
*********************** / preambleParamText:[Upon]                                                          :13_6:Do:
************************ / $>|                                                                             :13_6:Do:
$>|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=86:
$>|> unexpected DO
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected DO Expecting: UPON                           :13_6:Do:
preambleParamText:[Upon]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=86:
preambleParamText:[Upon]> unexpected DO
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected DO Expecting: UPON        :13_6:Do:
*********************** / preambleBoolStructR [Unless]                                                      :13_6:Do:
preambleBoolStructR [Unless]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=86:
preambleBoolStructR [Unless]> unexpected DO
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected DO Expecting: UNLESS  :13_6:Do:
*********************** / preambleBoolStructR [When,If]                                                     :13_6:Do:
preambleBoolStructR [When,If]> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=86:
preambleBoolStructR [When,If]> unexpected DO
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected DO Expecting: IF WHEN :13_6:Do:
*********************** / pDoAction/Do                                                                      :13_6:Do:
pDoAction/Do> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pDoAction/Do> MATCH (COK): DO
pDoAction/Do> VALUE: (Do,[])

*********************** \ pDoAction/Do has returned Do                                                       :13_7:GoDeeper:
*********************** / pDoAction/pAction                                                                  :13_7:GoDeeper:
************************ / pAction calling dBoolStructP                                                     :13_7:GoDeeper:
************************* / dBoolStructP calling exprP                                                     :13_7:GoDeeper:
************************** / expr pParamText                                                              :13_7:GoDeeper:
*************************** / ppp inner                                                                  :13_7:GoDeeper:
**************************** / expression                                                               :13_7:GoDeeper:
***************************** / term p                                                                 :13_7:GoDeeper:
****************************** / term p/1a:label ends directly above next line                        :13_7:GoDeeper:
******************************* / $*|                                                                :13_7:GoDeeper:
******************************** / someSL                                                           :13_7:GoDeeper:
********************************* / pNumAsText                                                     :13_7:GoDeeper:
pNumAsText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=87:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number  :13_7:GoDeeper:
someSL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=87:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
$*|> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=87:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
term p/1a:label ends directly above next line> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=87:
term p/1a:label ends directly above next line> unexpected (
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
****************************** / term p/1b:label ends to the left of line below, with EOL             :13_7:GoDeeper:
******************************* / $*|                                                                :13_7:GoDeeper:
******************************** / someSL                                                           :13_7:GoDeeper:
********************************* / pNumAsText                                                     :13_7:GoDeeper:
pNumAsText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=87:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number  :13_7:GoDeeper:
someSL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=87:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
$*|> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=87:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=87:
term p/1b:label ends to the left of line below, with EOL> unexpected (
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
****************************** / term p/1c:label ends to the right of line below                      :13_7:GoDeeper:
******************************* > |<|                                                                :13_7:GoDeeper:
******************************* > |<* starting                                                       :13_7:GoDeeper:
******************************* / $*|                                                                :13_7:GoDeeper:
******************************** / someSL                                                           :13_7:GoDeeper:
********************************* / pNumAsText                                                     :13_7:GoDeeper:
pNumAsText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=87:
pNumAsText> unexpected (
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number  :13_7:GoDeeper:
someSL> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=87:
someSL> unexpected (
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
$*|> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=87:
$*|> unexpected (
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
term p/1c:label ends to the right of line below> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=87:
term p/1c:label ends to the right of line below> unexpected (
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ( Expecting: other text or number :13_7:GoDeeper:
****************************** / term p/notLabelTerm                                                  :13_7:GoDeeper:
******************************* / term p/2:someIndentation expr p                                    :13_7:GoDeeper:
******************************** / someIndentation                                                  :13_7:GoDeeper:
********************************* / myindented-GoDeeper                                            :13_7:GoDeeper:
myindented-GoDeeper> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

********************************* \ myindented-GoDeeper has returned GoDeeper                       :13_7:Other "res:
********************************* / manyIndentation/leaf?                                           :13_7:Other "res:
********************************** / ppp inner                                                     :13_7:Other "res:
*********************************** / expression                                                  :13_7:Other "res:
************************************ / term p                                                    :13_7:Other "res:
************************************* / term p/1a:label ends directly above next line           :13_7:Other "res:
************************************** / $*|                                                   :13_7:Other "res:
*************************************** / someSL                                              :13_7:Other "res:
someSL> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
someSL> MATCH (COK): "respond"
someSL> VALUE: ((["respond"],0),[])

*************************************** \ someSL has returned (["respond"],0)                 :14_7:Other "to":
$*|> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
$*|> MATCH (COK): "respond"
$*|> VALUE: ((["respond"],0),[])

************************************** \ $*| has returned (["respond"],0)                      :14_7:Other "to":
************************************** / |>| calling $>>                                       :14_7:Other "to":
*************************************** / |>>/recurse                                         :14_7:Other "to":
|>>/recurse> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=89:
|>>/recurse> unexpected "to"
|>>/recurse> expecting (

*************************************** \ !Unconsumed Error: |>>/recurse: Unexpected "to" Expecting: ( :14_7:Other "to":
*************************************** / |>>/base                                            :14_7:Other "to":
**************************************** / ppp inner                                         :14_7:Other "to":
***************************************** / expression                                      :14_7:Other "to":
****************************************** / term p                                        :14_7:Other "to":
******************************************* / term p/1a:label ends directly above next line :14_7:Other "to":
******************************************** / $*|                                       :14_7:Other "to":
********************************************* / someSL                                  :14_7:Other "to":
someSL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
someSL> MATCH (COK): "to" ( "the PDPC"
someSL> VALUE: ((["to","the PDPC"],1),[])

********************************************* \ someSL has returned (["to","the PDPC"],1)  :15_8:UnDeeper:
********************************************* / pNumAsText                                 :15_8:UnDeeper:
pNumAsText> IN: ) "about" ( "your inaction" ) ) ) ) ) )  <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=92:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :15_8:UnDeeper:
$*|> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
$*|> MATCH (CERR): "to" ( "the PDPC"
$*|> ERROR:
$*|> offset=92:
$*|> unexpected )
$*|> expecting ( or other text or number

******************************************** \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :15_8:UnDeeper:
term p/1a:label ends directly above next line> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1a:label ends directly above next line> MATCH (CERR): "to" ( "the PDPC"
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=92:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

******************************************* \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :15_8:UnDeeper:
******************************************* / term p/1b:label ends to the left of line below, with EOL :14_7:Other "to":
******************************************** / $*|                                       :14_7:Other "to":
********************************************* / someSL                                  :14_7:Other "to":
someSL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
someSL> MATCH (COK): "to" ( "the PDPC"
someSL> VALUE: ((["to","the PDPC"],1),[])

********************************************* \ someSL has returned (["to","the PDPC"],1)  :15_8:UnDeeper:
$*|> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
$*|> MATCH (COK): "to" ( "the PDPC"
$*|> VALUE: ((["to","the PDPC"],1),[])

******************************************** \ $*| has returned (["to","the PDPC"],1)       :15_8:UnDeeper:
******************************************** / matching EOL                                 :15_8:UnDeeper:
matching EOL> IN: ) "about" ( "your inaction" ) ) ) ) ) )  <…>
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=92:
matching EOL> unexpected )
matching EOL> expecting EOL

******************************************** \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL :15_8:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "to" ( "the PDPC"
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=92:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

******************************************* \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :15_8:UnDeeper:
******************************************* / term p/1c:label ends to the right of line below :14_7:Other "to":
******************************************** > |<|                                       :14_7:Other "to":
******************************************** > |<* starting                              :14_7:Other "to":
******************************************** / $*|                                       :14_7:Other "to":
********************************************* / someSL                                  :14_7:Other "to":
someSL> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
someSL> MATCH (COK): "to" ( "the PDPC"
someSL> VALUE: ((["to","the PDPC"],1),[])

********************************************* \ someSL has returned (["to","the PDPC"],1)  :15_8:UnDeeper:
$*|> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
$*|> MATCH (COK): "to" ( "the PDPC"
$*|> VALUE: ((["to","the PDPC"],1),[])

******************************************** \ $*| has returned (["to","the PDPC"],1)       :15_8:UnDeeper:
******************************************** / |<*/parent                                   :15_8:UnDeeper:
********************************************* > |<*/recurse                                :15_8:UnDeeper:
********************************************* / ppp inner                               :15_7:Other "abo:
********************************************** / expression                            :15_7:Other "abo:
*********************************************** / term p                              :15_7:Other "abo:
************************************************ / term p/1a:label ends directly above next line :15_7:Other "abo:
************************************************* / $*|                             :15_7:Other "abo:
************************************************** / someSL                        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
************************************************** / pNumAsText           :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (CERR): "about" ( "your inaction"
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting ( or other text or number

************************************************* \ !Consumed Error: $*|: Unexpected ) Expecting: ( other text or number :1_2:UnDeeper:
term p/1a:label ends directly above next line> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/1a:label ends directly above next line> MATCH (CERR): "about" ( "your inaction"
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=96:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting ( or other text or number

************************************************ \ !Consumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: ( other text or number :1_2:UnDeeper:
************************************************ / term p/1b:label ends to the left of line below, with EOL :15_7:Other "abo:
************************************************* / $*|                             :15_7:Other "abo:
************************************************** / someSL                        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((["about","your inaction"],1),[])

************************************************* \ $*| has returned (["about","your inaction"],1) :1_2:UnDeeper:
************************************************* / matching EOL           :1_2:UnDeeper:
matching EOL> IN: ) ) ) ) ) ) )
matching EOL> MATCH (EERR): <EMPTY>
matching EOL> ERROR:
matching EOL> offset=96:
matching EOL> unexpected )
matching EOL> expecting EOL

************************************************* \ !Unconsumed Error: matching EOL: Unexpected ) Expecting: EOL :1_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/1b:label ends to the left of line below, with EOL> MATCH (CERR): "about" ( "your inaction"
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=96:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting ( or EOL

************************************************ \ !Consumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: EOL ( :1_2:UnDeeper:
************************************************ / term p/1c:label ends to the right of line below :15_7:Other "abo:
************************************************* > |<|                             :15_7:Other "abo:
************************************************* > |<* starting                    :15_7:Other "abo:
************************************************* / $*|                             :15_7:Other "abo:
************************************************** / someSL                        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((["about","your inaction"],1),[])

************************************************* \ $*| has returned (["about","your inaction"],1) :1_2:UnDeeper:
************************************************* / |<*/parent             :1_2:UnDeeper:
************************************************** > |<*/recurse          :1_2:UnDeeper:
************************************************** / ppp inner       :EOF:
*************************************************** / expression    :EOF:
**************************************************** / term p      :EOF:
***************************************************** / term p/1a:label ends directly above next line :EOF:
****************************************************** / $*|     :EOF:
******************************************************* / someSL :EOF:
******************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

******************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

******************************************************* \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
term p/1a:label ends directly above next line> IN: <EMPTY>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=103:
term p/1a:label ends directly above next line> unexpected end of input
term p/1a:label ends directly above next line> expecting any token or other text or number

***************************************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected end of input Expecting: any token other text or number :EOF:
***************************************************** / term p/1b:label ends to the left of line below, with EOL :EOF:
****************************************************** / $*|     :EOF:
******************************************************* / someSL :EOF:
******************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

******************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

******************************************************* \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
term p/1b:label ends to the left of line below, with EOL> IN: <EMPTY>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=103:
term p/1b:label ends to the left of line below, with EOL> unexpected end of input
term p/1b:label ends to the left of line below, with EOL> expecting any token or other text or number

***************************************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected end of input Expecting: any token other text or number :EOF:
***************************************************** / term p/1c:label ends to the right of line below :EOF:
****************************************************** > |<|     :EOF:
****************************************************** > |<* starting :EOF:
****************************************************** / $*|     :EOF:
******************************************************* / someSL :EOF:
******************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

******************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

******************************************************* \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
term p/1c:label ends to the right of line below> IN: <EMPTY>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=103:
term p/1c:label ends to the right of line below> unexpected end of input
term p/1c:label ends to the right of line below> expecting any token or other text or number

***************************************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected end of input Expecting: any token other text or number :EOF:
***************************************************** / term p/notLabelTerm :EOF:
****************************************************** / term p/2:someIndentation expr p :EOF:
******************************************************* / someIndentation :EOF:
******************************************************** / myindented-GoDeeper :EOF:
myindented-GoDeeper> IN: <EMPTY>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=103:
myindented-GoDeeper> unexpected end of input
myindented-GoDeeper> expecting (

******************************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected end of input Expecting: ( :EOF:
someIndentation> IN: <EMPTY>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=103:
someIndentation> unexpected end of input
someIndentation> expecting ( or any token

******************************************************* \ !Unconsumed Error: someIndentation: Unexpected end of input Expecting: ( any token :EOF:
term p/2:someIndentation expr p> IN: <EMPTY>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=103:
term p/2:someIndentation expr p> unexpected end of input
term p/2:someIndentation expr p> expecting ( or any token

****************************************************** \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected end of input Expecting: ( any token :EOF:
****************************************************** / term p/3:plain p :EOF:
******************************************************* / pParamText :EOF:
******************************************************** / pParamText(flat) first line: pKeyValues :EOF:
********************************************************* / pKeyValuesAka :EOF:
********************************************************** / slAKA :EOF:
*********************************************************** / $*| :EOF:
************************************************************ / slAKA base :EOF:
************************************************************* / slKeyValues :EOF:
************************************************************** / $*| :EOF:
*************************************************************** / someSL :EOF:
**************************************************************** / pNumAsText :EOF:
pNumAsText> IN: <EMPTY>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=103:
pNumAsText> unexpected end of input
pNumAsText> expecting number

**************************************************************** \ !Unconsumed Error: pNumAsText: Unexpected end of input Expecting: number :EOF:
someSL> IN: <EMPTY>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=103:
someSL> unexpected end of input
someSL> expecting other text or number

*************************************************************** \ !Unconsumed Error: someSL: Unexpected end of input Expecting: other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

************************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
slKeyValues> IN: <EMPTY>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=103:
slKeyValues> unexpected end of input
slKeyValues> expecting any token or other text or number

************************************************************* \ !Unconsumed Error: slKeyValues: Unexpected end of input Expecting: any token other text or number :EOF:
slAKA base> IN: <EMPTY>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=103:
slAKA base> unexpected end of input
slAKA base> expecting any token or other text or number

************************************************************ \ !Unconsumed Error: slAKA base: Unexpected end of input Expecting: any token other text or number :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting any token or other text or number

*********************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: any token other text or number :EOF:
slAKA> IN: <EMPTY>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=103:
slAKA> unexpected end of input
slAKA> expecting any token or other text or number

********************************************************** \ !Unconsumed Error: slAKA: Unexpected end of input Expecting: any token other text or number :EOF:
pKeyValuesAka> IN: <EMPTY>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=103:
pKeyValuesAka> unexpected end of input
pKeyValuesAka> expecting any token or other text or number

********************************************************* \ !Unconsumed Error: pKeyValuesAka: Unexpected end of input Expecting: any token other text or number :EOF:
pParamText(flat) first line: pKeyValues> IN: <EMPTY>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=103:
pParamText(flat) first line: pKeyValues> unexpected end of input
pParamText(flat) first line: pKeyValues> expecting any token or other text or number

******************************************************** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected end of input Expecting: any token other text or number :EOF:
pParamText> IN: <EMPTY>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=103:
pParamText> unexpected end of input
pParamText> expecting any token or other text or number

******************************************************* \ !Unconsumed Error: pParamText: Unexpected end of input Expecting: any token other text or number :EOF:
term p/3:plain p> IN: <EMPTY>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=103:
term p/3:plain p> unexpected end of input
term p/3:plain p> expecting any token or other text or number

****************************************************** \ !Unconsumed Error: term p/3:plain p: Unexpected end of input Expecting: any token other text or number :EOF:
term p/notLabelTerm> IN: <EMPTY>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=103:
term p/notLabelTerm> unexpected end of input
term p/notLabelTerm> expecting (, any token, or term

***************************************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected end of input Expecting: ( any token term :EOF:
term p> IN: <EMPTY>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=103:
term p> unexpected end of input
term p> expecting (, any token, other text or number, or term

**************************************************** \ !Unconsumed Error: term p: Unexpected end of input Expecting: ( any token other text or number term :EOF:
expression> IN: <EMPTY>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=103:
expression> unexpected end of input
expression> expecting expression

*************************************************** \ !Unconsumed Error: expression: Unexpected end of input Expecting: expression :EOF:
ppp inner> IN: <EMPTY>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=103:
ppp inner> unexpected end of input
ppp inner> expecting any token or expression

************************************************** \ !Unconsumed Error: ppp inner: Unexpected end of input Expecting: any token expression :EOF:
************************************************** / withPrePost     :EOF:
*************************************************** > |<* starting  :EOF:
*************************************************** / $*|           :EOF:
**************************************************** / pre part    :EOF:
pre part> IN: <EMPTY>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=103:
pre part> unexpected end of input
pre part> expecting ( or Other text

**************************************************** \ !Unconsumed Error: pre part: Unexpected end of input Expecting: ( Other text :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting (, Other text, or any token

*************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: ( Other text any token :EOF:
withPrePost> IN: <EMPTY>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=103:
withPrePost> unexpected end of input
withPrePost> expecting (, Other text, or any token

************************************************** \ !Unconsumed Error: withPrePost: Unexpected end of input Expecting: ( Other text any token :EOF:
************************************************** / $*|             :EOF:
*************************************************** / pre part      :EOF:
pre part> IN: <EMPTY>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=103:
pre part> unexpected end of input
pre part> expecting ( or Other text

*************************************************** \ !Unconsumed Error: pre part: Unexpected end of input Expecting: ( Other text :EOF:
$*|> IN: <EMPTY>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=103:
$*|> unexpected end of input
$*|> expecting (, Other text, or any token

************************************************** \ !Unconsumed Error: $*|: Unexpected end of input Expecting: ( Other text any token :EOF:
************************************************** / |<*/base             :1_2:UnDeeper:
*************************************************** / ppp inner          :1_2:UnDeeper:
**************************************************** / expression       :1_2:UnDeeper:
***************************************************** / term p         :1_2:UnDeeper:
****************************************************** / term p/1a:label ends directly above next line :1_2:UnDeeper:
******************************************************* / $*|        :1_2:UnDeeper:
******************************************************** / someSL   :1_2:UnDeeper:
********************************************************* / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

******************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

******************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/1a:label ends directly above next line> IN: ) ) ) ) ) ) )
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=96:
term p/1a:label ends directly above next line> unexpected )
term p/1a:label ends directly above next line> expecting other text or number

****************************************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
****************************************************** / term p/1b:label ends to the left of line below, with EOL :1_2:UnDeeper:
******************************************************* / $*|        :1_2:UnDeeper:
******************************************************** / someSL   :1_2:UnDeeper:
********************************************************* / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

******************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

******************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/1b:label ends to the left of line below, with EOL> IN: ) ) ) ) ) ) )
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=96:
term p/1b:label ends to the left of line below, with EOL> unexpected )
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
****************************************************** / term p/1c:label ends to the right of line below :1_2:UnDeeper:
******************************************************* > |<|        :1_2:UnDeeper:
******************************************************* > |<* starting :1_2:UnDeeper:
******************************************************* / $*|        :1_2:UnDeeper:
******************************************************** / someSL   :1_2:UnDeeper:
********************************************************* / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

********************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

******************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

******************************************************* \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: ) ) ) ) ) ) )
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=96:
term p/1c:label ends to the right of line below> unexpected )
term p/1c:label ends to the right of line below> expecting other text or number

****************************************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
****************************************************** / term p/notLabelTerm :1_2:UnDeeper:
******************************************************* / term p/2:someIndentation expr p :1_2:UnDeeper:
******************************************************** / someIndentation :1_2:UnDeeper:
********************************************************* / myindented-GoDeeper :1_2:UnDeeper:
myindented-GoDeeper> IN: ) ) ) ) ) ) )
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=96:
myindented-GoDeeper> unexpected )
myindented-GoDeeper> expecting (

********************************************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected ) Expecting: ( :1_2:UnDeeper:
someIndentation> IN: ) ) ) ) ) ) )
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=96:
someIndentation> unexpected )
someIndentation> expecting (

******************************************************** \ !Unconsumed Error: someIndentation: Unexpected ) Expecting: ( :1_2:UnDeeper:
term p/2:someIndentation expr p> IN: ) ) ) ) ) ) )
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=96:
term p/2:someIndentation expr p> unexpected )
term p/2:someIndentation expr p> expecting (

******************************************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected ) Expecting: ( :1_2:UnDeeper:
******************************************************* / term p/3:plain p :1_2:UnDeeper:
******************************************************** / pParamText :1_2:UnDeeper:
********************************************************* / pParamText(flat) first line: pKeyValues :1_2:UnDeeper:
********************************************************** / pKeyValuesAka :1_2:UnDeeper:
*********************************************************** / slAKA :1_2:UnDeeper:
************************************************************ / $*| :1_2:UnDeeper:
************************************************************* / slAKA base :1_2:UnDeeper:
************************************************************** / slKeyValues :1_2:UnDeeper:
*************************************************************** / $*| :1_2:UnDeeper:
**************************************************************** / someSL :1_2:UnDeeper:
***************************************************************** / pNumAsText :1_2:UnDeeper:
pNumAsText> IN: ) ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=96:
pNumAsText> unexpected )
pNumAsText> expecting number

***************************************************************** \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_2:UnDeeper:
someSL> IN: ) ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=96:
someSL> unexpected )
someSL> expecting other text or number

**************************************************************** \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

*************************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
slKeyValues> IN: ) ) ) ) ) ) )
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=96:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

************************************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
slAKA base> IN: ) ) ) ) ) ) )
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=96:
slAKA base> unexpected )
slAKA base> expecting other text or number

************************************************************* \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting other text or number

************************************************************ \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
slAKA> IN: ) ) ) ) ) ) )
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=96:
slAKA> unexpected )
slAKA> expecting other text or number

*********************************************************** \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
pKeyValuesAka> IN: ) ) ) ) ) ) )
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=96:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

********************************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: ) ) ) ) ) ) )
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=96:
pParamText(flat) first line: pKeyValues> unexpected )
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
pParamText> IN: ) ) ) ) ) ) )
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=96:
pParamText> unexpected )
pParamText> expecting other text or number

******************************************************** \ !Unconsumed Error: pParamText: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/3:plain p> IN: ) ) ) ) ) ) )
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=96:
term p/3:plain p> unexpected )
term p/3:plain p> expecting other text or number

******************************************************* \ !Unconsumed Error: term p/3:plain p: Unexpected ) Expecting: other text or number :1_2:UnDeeper:
term p/notLabelTerm> IN: ) ) ) ) ) ) )
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=96:
term p/notLabelTerm> unexpected )
term p/notLabelTerm> expecting ( or term

****************************************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected ) Expecting: ( term :1_2:UnDeeper:
term p> IN: ) ) ) ) ) ) )
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=96:
term p> unexpected )
term p> expecting (, other text or number, or term

***************************************************** \ !Unconsumed Error: term p: Unexpected ) Expecting: ( other text or number term :1_2:UnDeeper:
expression> IN: ) ) ) ) ) ) )
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=96:
expression> unexpected )
expression> expecting expression

**************************************************** \ !Unconsumed Error: expression: Unexpected ) Expecting: expression :1_2:UnDeeper:
ppp inner> IN: ) ) ) ) ) ) )
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=96:
ppp inner> unexpected )
ppp inner> expecting expression

*************************************************** \ !Unconsumed Error: ppp inner: Unexpected ) Expecting: expression :1_2:UnDeeper:
*************************************************** / withPrePost        :1_2:UnDeeper:
**************************************************** > |<* starting     :1_2:UnDeeper:
**************************************************** / $*|              :1_2:UnDeeper:
***************************************************** / pre part       :1_2:UnDeeper:
pre part> IN: ) ) ) ) ) ) )
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=96:
pre part> unexpected )
pre part> expecting ( or Other text

***************************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting ( or Other text

**************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
withPrePost> IN: ) ) ) ) ) ) )
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=96:
withPrePost> unexpected )
withPrePost> expecting ( or Other text

*************************************************** \ !Unconsumed Error: withPrePost: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
*************************************************** / $*|                :1_2:UnDeeper:
**************************************************** / pre part         :1_2:UnDeeper:
pre part> IN: ) ) ) ) ) ) )
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=96:
pre part> unexpected )
pre part> expecting ( or Other text

**************************************************** \ !Unconsumed Error: pre part: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
$*|> IN: ) ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=96:
$*|> unexpected )
$*|> expecting ( or Other text

*************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: ( Other text :1_2:UnDeeper:
|<*/base> IN: ) ) ) ) ) ) )
|<*/base> MATCH (EERR): <EMPTY>
|<*/base> ERROR:
|<*/base> offset=96:
|<*/base> unexpected )
|<*/base> expecting (, Other text, or expression

************************************************** \ !Unconsumed Error: |<*/base: Unexpected ) Expecting: ( ( Other text expression :1_2:UnDeeper:
|<*/parent> IN: ) ) ) ) ) ) )
|<*/parent> MATCH (EERR): <EMPTY>
|<*/parent> ERROR:
|<*/parent> offset=103:
|<*/parent> unexpected end of input
|<*/parent> expecting (, ), Other text, any token, or expression

************************************************* \ !Unconsumed Error: |<*/parent: Unexpected end of input Expecting: ( ( ) Other text any token expression :1_2:UnDeeper:
term p/1c:label ends to the right of line below> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/1c:label ends to the right of line below> MATCH (CERR): "about" ( "your inaction"
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=103:
term p/1c:label ends to the right of line below> unexpected end of input
term p/1c:label ends to the right of line below> expecting (, ), Other text, any token, or expression

************************************************ \ !Consumed Error: term p/1c:label ends to the right of line below: Unexpected end of input Expecting: ( ( ( ) Other text any token expression :1_2:UnDeeper:
************************************************ / term p/notLabelTerm               :15_7:Other "abo:
************************************************* / term p/2:someIndentation expr p :15_7:Other "abo:
************************************************** / someIndentation               :15_7:Other "abo:
*************************************************** / myindented-GoDeeper         :15_7:Other "abo:
myindented-GoDeeper> IN: "about" ( "your inaction" ) ) ) ) ) ) )
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=93:
myindented-GoDeeper> unexpected "about"
myindented-GoDeeper> expecting (

*************************************************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected "about" Expecting: ( :15_7:Other "abo:
someIndentation> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=93:
someIndentation> unexpected "about"
someIndentation> expecting (

************************************************** \ !Unconsumed Error: someIndentation: Unexpected "about" Expecting: ( :15_7:Other "abo:
term p/2:someIndentation expr p> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=93:
term p/2:someIndentation expr p> unexpected "about"
term p/2:someIndentation expr p> expecting (

************************************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected "about" Expecting: ( :15_7:Other "abo:
************************************************* / term p/3:plain p                :15_7:Other "abo:
************************************************** / pParamText                    :15_7:Other "abo:
*************************************************** / pParamText(flat) first line: pKeyValues :15_7:Other "abo:
**************************************************** / pKeyValuesAka             :15_7:Other "abo:
***************************************************** / slAKA                   :15_7:Other "abo:
****************************************************** / $*|                   :15_7:Other "abo:
******************************************************* / slAKA base          :15_7:Other "abo:
******************************************************** / slKeyValues       :15_7:Other "abo:
********************************************************* / $*|             :15_7:Other "abo:
********************************************************** / someSL        :15_7:Other "abo:
someSL> IN: "about" ( "your inaction" ) ) ) ) ) ) )
someSL> MATCH (COK): "about" ( "your inaction"
someSL> VALUE: ((["about","your inaction"],1),[])

********************************************************** \ someSL has returned (["about","your inaction"],1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((["about","your inaction"],1),[])

********************************************************* \ $*| has returned (["about","your inaction"],1) :1_2:UnDeeper:
********************************************************* / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
********************************************************* / |>>/base :1_2:UnDeeper:
********************************************************** / |?| optional something :1_2:UnDeeper:
*********************************************************** / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

*********************************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
*********************************************************** / |>>/base :1_2:UnDeeper:
************************************************************ / slTypeSig :1_2:UnDeeper:
************************************************************* / $>| :1_2:UnDeeper:
$>|> IN: ) ) ) ) ) ) )
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=96:
$>|> unexpected )
$>|> expecting :: or IS

************************************************************* \ !Unconsumed Error: $>|: Unexpected ) Expecting: IS :: :1_2:UnDeeper:
slTypeSig> IN: ) ) ) ) ) ) )
slTypeSig> MATCH (EERR): <EMPTY>
slTypeSig> ERROR:
slTypeSig> offset=96:
slTypeSig> unexpected )
slTypeSig> expecting :: or IS

************************************************************ \ !Unconsumed Error: slTypeSig: Unexpected ) Expecting: IS :: :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=96:
|>>/base> unexpected )
|>>/base> expecting :: or IS

*********************************************************** \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: IS :: :1_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) ) )
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

********************************************************** \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
********************************************************** > |>>/base got Nothing :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

********************************************************* \ |>>/base has returned (Nothing,0) :1_2:UnDeeper:
slKeyValues> IN: "about" ( "your inaction" ) ) ) ) ) ) )
slKeyValues> MATCH (COK): "about" ( "your inaction"
slKeyValues> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

******************************************************** \ slKeyValues has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
slAKA base> IN: "about" ( "your inaction" ) ) ) ) ) ) )
slAKA base> MATCH (COK): "about" ( "your inaction"
slAKA base> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

******************************************************* \ slAKA base has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
$*|> IN: "about" ( "your inaction" ) ) ) ) ) ) )
$*|> MATCH (COK): "about" ( "your inaction"
$*|> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

****************************************************** \ $*| has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
****************************************************** / |>>/recurse  :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
****************************************************** / |>>/base     :1_2:UnDeeper:
******************************************************* / slAKA optional akapart :1_2:UnDeeper:
******************************************************** / |?| optional something :1_2:UnDeeper:
********************************************************* / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
********************************************************* / |>>/base :1_2:UnDeeper:
********************************************************** / PAKA/akapart :1_2:UnDeeper:
*********************************************************** / $>| :1_2:UnDeeper:
************************************************************ / Aka Token :1_2:UnDeeper:
Aka Token> IN: ) ) ) ) ) ) )
Aka Token> MATCH (EERR): <EMPTY>
Aka Token> ERROR:
Aka Token> offset=96:
Aka Token> unexpected )
Aka Token> expecting AKA

************************************************************ \ !Unconsumed Error: Aka Token: Unexpected ) Expecting: AKA :1_2:UnDeeper:
$>|> IN: ) ) ) ) ) ) )
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=96:
$>|> unexpected )
$>|> expecting AKA

*********************************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: AKA :1_2:UnDeeper:
PAKA/akapart> IN: ) ) ) ) ) ) )
PAKA/akapart> MATCH (EERR): <EMPTY>
PAKA/akapart> ERROR:
PAKA/akapart> offset=96:
PAKA/akapart> unexpected )
PAKA/akapart> expecting AKA

********************************************************** \ !Unconsumed Error: PAKA/akapart: Unexpected ) Expecting: AKA :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=96:
|>>/base> unexpected )
|>>/base> expecting AKA

********************************************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: AKA :1_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) ) )
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

******************************************************** \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
slAKA optional akapart> IN: ) ) ) ) ) ) )
slAKA optional akapart> MATCH (EOK): <EMPTY>
slAKA optional akapart> VALUE: ((Nothing,0),[])

******************************************************* \ slAKA optional akapart has returned (Nothing,0) :1_2:UnDeeper:
******************************************************* > |>>/base got Nothing :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************************************************** \ |>>/base has returned (Nothing,0) :1_2:UnDeeper:
****************************************************** / |>>/recurse  :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

****************************************************** \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
****************************************************** / |>>/base     :1_2:UnDeeper:
******************************************************* / slAKA optional typically :1_2:UnDeeper:
******************************************************** / |?| optional something :1_2:UnDeeper:
********************************************************* / |>>/recurse :1_2:UnDeeper:
|>>/recurse> IN: ) ) ) ) ) ) )
|>>/recurse> MATCH (EERR): <EMPTY>
|>>/recurse> ERROR:
|>>/recurse> offset=96:
|>>/recurse> unexpected )
|>>/recurse> expecting (

********************************************************* \ !Unconsumed Error: |>>/recurse: Unexpected ) Expecting: ( :1_2:UnDeeper:
********************************************************* / |>>/base :1_2:UnDeeper:
********************************************************** / typically :1_2:UnDeeper:
*********************************************************** / $>| :1_2:UnDeeper:
$>|> IN: ) ) ) ) ) ) )
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=96:
$>|> unexpected )
$>|> expecting TYPICALLY

*********************************************************** \ !Unconsumed Error: $>|: Unexpected ) Expecting: TYPICALLY :1_2:UnDeeper:
typically> IN: ) ) ) ) ) ) )
typically> MATCH (EERR): <EMPTY>
typically> ERROR:
typically> offset=96:
typically> unexpected )
typically> expecting TYPICALLY

********************************************************** \ !Unconsumed Error: typically: Unexpected ) Expecting: TYPICALLY :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EERR): <EMPTY>
|>>/base> ERROR:
|>>/base> offset=96:
|>>/base> unexpected )
|>>/base> expecting TYPICALLY

********************************************************* \ !Unconsumed Error: |>>/base: Unexpected ) Expecting: TYPICALLY :1_2:UnDeeper:
|?| optional something> IN: ) ) ) ) ) ) )
|?| optional something> MATCH (EOK): <EMPTY>
|?| optional something> VALUE: ((Nothing,0),[])

******************************************************** \ |?| optional something has returned (Nothing,0) :1_2:UnDeeper:
slAKA optional typically> IN: ) ) ) ) ) ) )
slAKA optional typically> MATCH (EOK): <EMPTY>
slAKA optional typically> VALUE: ((Nothing,0),[])

******************************************************* \ slAKA optional typically has returned (Nothing,0) :1_2:UnDeeper:
******************************************************* > |>>/base got Nothing :1_2:UnDeeper:
|>>/base> IN: ) ) ) ) ) ) )
|>>/base> MATCH (EOK): <EMPTY>
|>>/base> VALUE: ((Nothing,0),[])

****************************************************** \ |>>/base has returned (Nothing,0) :1_2:UnDeeper:
****************************************************** > slAKA: proceeding after base and entityalias are retrieved ... :1_2:UnDeeper:
****************************************************** > pAKA: entityalias = Nothing :1_2:UnDeeper:
slAKA> IN: "about" ( "your inaction" ) ) ) ) ) ) )
slAKA> MATCH (COK): "about" ( "your inaction"
slAKA> VALUE: ((("about" :| ["your inaction"],Nothing),1),[])

***************************************************** \ slAKA has returned (("about" :| ["your inaction"],Nothing),1) :1_2:UnDeeper:
***************************************************** / undeepers      :1_2:UnDeeper:
****************************************************** > sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers :1_2:UnDeeper:
****************************************************** > sameLine: success! :1_3:UnDeeper:
undeepers> IN: ) ) ) ) ) ) )
undeepers> MATCH (COK): )
undeepers> VALUE: ((),[])

***************************************************** \ undeepers has returned () :1_3:UnDeeper:
pKeyValuesAka> IN: "about" ( "your inaction" ) ) ) ) ) ) )
pKeyValuesAka> MATCH (COK): "about" ( "your inaction" )
pKeyValuesAka> VALUE: (("about" :| ["your inaction"],Nothing),[])

**************************************************** \ pKeyValuesAka has returned ("about" :| ["your inaction"],Nothing) :1_3:UnDeeper:
pParamText(flat) first line: pKeyValues> IN: "about" ( "your inaction" ) ) ) ) ) ) )
pParamText(flat) first line: pKeyValues> MATCH (COK): "about" ( "your inaction" )
pParamText(flat) first line: pKeyValues> VALUE: (("about" :| ["your inaction"],Nothing),[])

*************************************************** \ pParamText(flat) first line: pKeyValues has returned ("about" :| ["your inaction"],Nothing) :1_3:UnDeeper:
*************************************************** / pParamText(flat) subsequent lines: sameMany pKeyValues :1_3:UnDeeper:
**************************************************** / manyIndentation/leaf? :1_3:UnDeeper:
***************************************************** / sameMany         :1_3:UnDeeper:
****************************************************** / pKeyValuesAka  :1_3:UnDeeper:
******************************************************* / slAKA        :1_3:UnDeeper:
******************************************************** / $*|        :1_3:UnDeeper:
********************************************************* / slAKA base :1_3:UnDeeper:
********************************************************** / slKeyValues :1_3:UnDeeper:
*********************************************************** / $*|  :1_3:UnDeeper:
************************************************************ / someSL :1_3:UnDeeper:
************************************************************* / pNumAsText :1_3:UnDeeper:
pNumAsText> IN: ) ) ) ) ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=97:
pNumAsText> unexpected )
pNumAsText> expecting number

************************************************************* \ !Unconsumed Error: pNumAsText: Unexpected ) Expecting: number :1_3:UnDeeper:
someSL> IN: ) ) ) ) ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=97:
someSL> unexpected )
someSL> expecting other text or number

************************************************************ \ !Unconsumed Error: someSL: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
$*|> IN: ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=97:
$*|> unexpected )
$*|> expecting other text or number

*********************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
slKeyValues> IN: ) ) ) ) ) )
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=97:
slKeyValues> unexpected )
slKeyValues> expecting other text or number

********************************************************** \ !Unconsumed Error: slKeyValues: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
slAKA base> IN: ) ) ) ) ) )
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=97:
slAKA base> unexpected )
slAKA base> expecting other text or number

********************************************************* \ !Unconsumed Error: slAKA base: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
$*|> IN: ) ) ) ) ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=97:
$*|> unexpected )
$*|> expecting other text or number

******************************************************** \ !Unconsumed Error: $*|: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
slAKA> IN: ) ) ) ) ) )
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=97:
slAKA> unexpected )
slAKA> expecting other text or number

******************************************************* \ !Unconsumed Error: slAKA: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
pKeyValuesAka> IN: ) ) ) ) ) )
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=97:
pKeyValuesAka> unexpected )
pKeyValuesAka> expecting other text or number

****************************************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected ) Expecting: other text or number :1_3:UnDeeper:
sameMany> IN: ) ) ) ) ) )
sameMany> MATCH (EOK): <EMPTY>
sameMany> VALUE: ([],[])

***************************************************** \ sameMany has returned [] :1_3:UnDeeper:
manyIndentation/leaf?> IN: ) ) ) ) ) )
manyIndentation/leaf?> MATCH (EOK): <EMPTY>
manyIndentation/leaf?> VALUE: ([],[])

**************************************************** \ manyIndentation/leaf? has returned [] :1_3:UnDeeper:
pParamText(flat) subsequent lines: sameMany pKeyValues> IN: ) ) ) ) ) )
pParamText(flat) subsequent lines: sameMany pKeyValues> MATCH (EOK): <EMPTY>
pParamText(flat) subsequent lines: sameMany pKeyValues> VALUE: ([],[])

*************************************************** \ pParamText(flat) subsequent lines: sameMany pKeyValues has returned [] :1_3:UnDeeper:
pParamText> IN: "about" ( "your inaction" ) ) ) ) ) ) )
pParamText> MATCH (COK): "about" ( "your inaction" )
pParamText> VALUE: (("about" :| ["your inaction"],Nothing) :| [],[])

************************************************** \ pParamText has returned ("about" :| ["your inaction"],Nothing) :| [] :1_3:UnDeeper:
term p/3:plain p> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/3:plain p> MATCH (COK): "about" ( "your inaction" )
term p/3:plain p> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

************************************************* \ term p/3:plain p has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
term p/notLabelTerm> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p/notLabelTerm> MATCH (COK): "about" ( "your inaction" )
term p/notLabelTerm> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

************************************************ \ term p/notLabelTerm has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
term p> IN: "about" ( "your inaction" ) ) ) ) ) ) )
term p> MATCH (COK): "about" ( "your inaction" )
term p> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

*********************************************** \ term p has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
*********************************************** / binary(Or)                   :1_3:UnDeeper:
binary(Or)> IN: ) ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=97:
binary(Or)> unexpected )
binary(Or)> expecting OR

*********************************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :1_3:UnDeeper:
*********************************************** / binary(And)                  :1_3:UnDeeper:
binary(And)> IN: ) ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=97:
binary(And)> unexpected )
binary(And)> expecting AND

*********************************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :1_3:UnDeeper:
*********************************************** / binary(SetLess)              :1_3:UnDeeper:
binary(SetLess)> IN: ) ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=97:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

*********************************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :1_3:UnDeeper:
*********************************************** / binary(SetPlus)              :1_3:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=97:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

*********************************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :1_3:UnDeeper:
expression> IN: "about" ( "your inaction" ) ) ) ) ) ) )
expression> MATCH (COK): "about" ( "your inaction" )
expression> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

********************************************** \ expression has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
ppp inner> IN: "about" ( "your inaction" ) ) ) ) ) ) )
ppp inner> MATCH (COK): "about" ( "your inaction" )
ppp inner> VALUE: (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),[])

********************************************* \ ppp inner has returned MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
********************************************* > |<*/recurse matched 1 UnDeepers  :1_3:UnDeeper:
|<*/parent> IN: ) "about" ( "your inaction" ) ) ) ) ) )  <…>
|<*/parent> MATCH (COK): ) "about" ( "your inaction" )
|<*/parent> VALUE: ((MyLeaf (("about" :| ["your inaction"],Nothing) :| []),-1),[])

******************************************** \ |<*/parent has returned (MyLeaf (("about" :| ["your inaction"],Nothing) :| []),-1) :1_3:UnDeeper:
******************************************** / undeepers                          :1_3:UnDeeper:
********************************************* > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :1_3:UnDeeper:
********************************************* > sameLine: success!               :1_3:UnDeeper:
undeepers> IN: ) ) ) ) ) )
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

******************************************** \ undeepers has returned ()          :1_3:UnDeeper:
******************************************** > 1c: got label to the right of next line: ["to","the PDPC"] :1_3:UnDeeper:
******************************************** > 1c: got inner: MyLeaf (("about" :| ["your inaction"],Nothing) :| []) :1_3:UnDeeper:
term p/1c:label ends to the right of line below> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1c:label ends to the right of line below> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
term p/1c:label ends to the right of line below> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

******************************************* \ term p/1c:label ends to the right of line below has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
term p> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
term p> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
term p> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

****************************************** \ term p has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
****************************************** / binary(Or)                             :1_3:UnDeeper:
binary(Or)> IN: ) ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=97:
binary(Or)> unexpected )
binary(Or)> expecting OR

****************************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :1_3:UnDeeper:
****************************************** / binary(And)                            :1_3:UnDeeper:
binary(And)> IN: ) ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=97:
binary(And)> unexpected )
binary(And)> expecting AND

****************************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :1_3:UnDeeper:
****************************************** / binary(SetLess)                        :1_3:UnDeeper:
binary(SetLess)> IN: ) ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=97:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

****************************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :1_3:UnDeeper:
****************************************** / binary(SetPlus)                        :1_3:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=97:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

****************************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :1_3:UnDeeper:
expression> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
expression> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
expression> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

***************************************** \ expression has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
ppp inner> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
ppp inner> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
ppp inner> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),[])

**************************************** \ ppp inner has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
**************************************** > |>>/base got MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
|>>/base> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
|>>/base> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
|>>/base> VALUE: ((MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0),[])

*************************************** \ |>>/base has returned (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0) :1_3:UnDeeper:
|>| calling $>>> IN: "to" ( "the PDPC" ) "about" ( "your inac <…>
|>| calling $>>> MATCH (COK): "to" ( "the PDPC" ) "about" ( "your inac <…>
|>| calling $>>> VALUE: ((MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0),[])

************************************** \ |>| calling $>> has returned (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])),0) :1_3:UnDeeper:
************************************** / undeepers                                      :1_3:UnDeeper:
*************************************** > sameLine/undeepers: reached end of line; now need to clear 0 UnDeepers :1_3:UnDeeper:
*************************************** > sameLine: success!                           :1_3:UnDeeper:
undeepers> IN: ) ) ) ) ) )
undeepers> MATCH (EOK): <EMPTY>
undeepers> VALUE: ((),[])

************************************** \ undeepers has returned ()                      :1_3:UnDeeper:
************************************** > 1a: got label, then inner immediately below: ["respond"] :1_3:UnDeeper:
************************************** > 1a: got inner: MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| [])) :1_3:UnDeeper:
term p/1a:label ends directly above next line> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
term p/1a:label ends directly above next line> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
term p/1a:label ends directly above next line> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

************************************* \ term p/1a:label ends directly above next line has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
term p> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
term p> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
term p> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

************************************ \ term p has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
************************************ / binary(Or)                                         :1_3:UnDeeper:
binary(Or)> IN: ) ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=97:
binary(Or)> unexpected )
binary(Or)> expecting OR

************************************ \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR :1_3:UnDeeper:
************************************ / binary(And)                                        :1_3:UnDeeper:
binary(And)> IN: ) ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=97:
binary(And)> unexpected )
binary(And)> expecting AND

************************************ \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND :1_3:UnDeeper:
************************************ / binary(SetLess)                                    :1_3:UnDeeper:
binary(SetLess)> IN: ) ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=97:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

************************************ \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS :1_3:UnDeeper:
************************************ / binary(SetPlus)                                    :1_3:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=97:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

************************************ \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS :1_3:UnDeeper:
expression> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
expression> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
expression> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

*********************************** \ expression has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
ppp inner> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
ppp inner> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
ppp inner> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

********************************** \ ppp inner has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
manyIndentation/leaf?> IN: "respond" "to" ( "the PDPC" ) "about" (  <…>
manyIndentation/leaf?> MATCH (COK): "respond" "to" ( "the PDPC" ) "about" (  <…>
manyIndentation/leaf?> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

********************************* \ manyIndentation/leaf? has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_3:UnDeeper:
********************************* / myindented-UnDeeper                                      :1_3:UnDeeper:
myindented-UnDeeper> IN: ) ) ) ) ) )
myindented-UnDeeper> MATCH (COK): )
myindented-UnDeeper> VALUE: (UnDeeper,[])

********************************* \ myindented-UnDeeper has returned UnDeeper                  :1_4:UnDeeper:
someIndentation> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
someIndentation> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
someIndentation> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

******************************** \ someIndentation has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
term p/2:someIndentation expr p> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/2:someIndentation expr p> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/2:someIndentation expr p> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

******************************* \ term p/2:someIndentation expr p has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
term p/notLabelTerm> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/notLabelTerm> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p/notLabelTerm> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

****************************** \ term p/notLabelTerm has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
term p> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
term p> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

***************************** \ term p has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
***************************** / binary(Or)                                                         :1_4:UnDeeper:
binary(Or)> IN: ) ) ) ) )
binary(Or)> MATCH (EERR): <EMPTY>
binary(Or)> ERROR:
binary(Or)> offset=98:
binary(Or)> unexpected )
binary(Or)> expecting OR

***************************** \ !Unconsumed Error: binary(Or): Unexpected ) Expecting: OR          :1_4:UnDeeper:
***************************** / binary(And)                                                        :1_4:UnDeeper:
binary(And)> IN: ) ) ) ) )
binary(And)> MATCH (EERR): <EMPTY>
binary(And)> ERROR:
binary(And)> offset=98:
binary(And)> unexpected )
binary(And)> expecting AND

***************************** \ !Unconsumed Error: binary(And): Unexpected ) Expecting: AND        :1_4:UnDeeper:
***************************** / binary(SetLess)                                                    :1_4:UnDeeper:
binary(SetLess)> IN: ) ) ) ) )
binary(SetLess)> MATCH (EERR): <EMPTY>
binary(SetLess)> ERROR:
binary(SetLess)> offset=98:
binary(SetLess)> unexpected )
binary(SetLess)> expecting LESS

***************************** \ !Unconsumed Error: binary(SetLess): Unexpected ) Expecting: LESS   :1_4:UnDeeper:
***************************** / binary(SetPlus)                                                    :1_4:UnDeeper:
binary(SetPlus)> IN: ) ) ) ) )
binary(SetPlus)> MATCH (EERR): <EMPTY>
binary(SetPlus)> ERROR:
binary(SetPlus)> offset=98:
binary(SetPlus)> unexpected )
binary(SetPlus)> expecting PLUS

***************************** \ !Unconsumed Error: binary(SetPlus): Unexpected ) Expecting: PLUS   :1_4:UnDeeper:
expression> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
expression> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
expression> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

**************************** \ expression has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
ppp inner> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
ppp inner> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
ppp inner> VALUE: (MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))),[])

*************************** \ ppp inner has returned MyLabel ["respond"] Nothing (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("about" :| ["your inaction"],Nothing) :| []))) :1_4:UnDeeper:
expr pParamText> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
expr pParamText> MATCH (COK): ( "respond" "to" ( "the PDPC" ) "about"  <…>
expr pParamText> VALUE: (MyLabel ["to","the PDPC"] Nothing (MyLeaf (("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)])),[])

************************** \ expr pParamText has returned MyLabel ["to","the PDPC"] Nothing (MyLeaf (("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)])) :1_4:UnDeeper:
dBoolStructP calling exprP> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
dBoolStructP calling exprP> MATCH (CERR): ( "respond" "to" ( "the PDPC" ) "about"  <…>
dBoolStructP calling exprP> ERROR:
dBoolStructP calling exprP> offset=98:
dBoolStructP calling exprP> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

************************* \ !Consumed Error: dBoolStructP calling exprP: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
pAction calling dBoolStructP> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pAction calling dBoolStructP> MATCH (CERR): ( "respond" "to" ( "the PDPC" ) "about"  <…>
pAction calling dBoolStructP> ERROR:
pAction calling dBoolStructP> offset=98:
pAction calling dBoolStructP> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

************************ \ !Consumed Error: pAction calling dBoolStructP: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
pDoAction/pAction> IN: ( "respond" "to" ( "the PDPC" ) "about"  <…>
pDoAction/pAction> MATCH (CERR): ( "respond" "to" ( "the PDPC" ) "about"  <…>
pDoAction/pAction> ERROR:
pDoAction/pAction> offset=98:
pDoAction/pAction> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

*********************** \ !Consumed Error: pDoAction/pAction: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
regulative permutation with deontic-temporal> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
regulative permutation with deontic-temporal> MATCH (CERR): MUST DO ( "respond" "to" ( "the PDPC" )  <…>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=98:
regulative permutation with deontic-temporal> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

********************** \ !Consumed Error: regulative permutation with deontic-temporal: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :1_4:UnDeeper:
********************** / regulative permutation with deontic-action                                          :12_6:Must:
*********************** / WHERE                                                                             :12_6:Must:
WHERE> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=85:
WHERE> unexpected MUST
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                        :12_6:Must:
*********************** / preambleParamText:[Having]                                                        :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                       :12_6:Must:
preambleParamText:[Having]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=85:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING  :12_6:Must:
*********************** / preambleParamText:[Given]                                                         :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                        :12_6:Must:
preambleParamText:[Given]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=85:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN    :12_6:Must:
*********************** / preambleParamText:[Upon]                                                          :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                         :12_6:Must:
preambleParamText:[Upon]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=85:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON      :12_6:Must:
*********************** / preambleBoolStructR [Unless]                                                      :12_6:Must:
preambleBoolStructR [Unless]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=85:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS :12_6:Must:
*********************** / preambleBoolStructR [When,If]                                                     :12_6:Must:
preambleBoolStructR [When,If]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=85:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN :12_6:Must:
*********************** / pTemporal/eventually                                                              :12_6:Must:
pTemporal/eventually> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=85:
pTemporal/eventually> unexpected MUST
pTemporal/eventually> expecting EVENTUALLY

*********************** \ !Unconsumed Error: pTemporal/eventually: Unexpected MUST Expecting: EVENTUALLY    :12_6:Must:
*********************** / pTemporal/specifically                                                            :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting AFTER, BEFORE, BY, or ON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: BEFORE AFTER BY ON           :12_6:Must:
pTemporal/specifically> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=85:
pTemporal/specifically> unexpected MUST
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

*********************** \ !Unconsumed Error: pTemporal/specifically: Unexpected MUST Expecting: BEFORE AFTER BY ON :12_6:Must:
*********************** / pTemporal/vaguely                                                                 :12_6:Must:
pTemporal/vaguely> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=85:
pTemporal/vaguely> unexpected MUST
pTemporal/vaguely> expecting Other text

*********************** \ !Unconsumed Error: pTemporal/vaguely: Unexpected MUST Expecting: Other text       :12_6:Must:
*********************** / WHERE                                                                             :12_6:Must:
WHERE> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=85:
WHERE> unexpected MUST
WHERE> expecting WHERE

*********************** \ !Unconsumed Error: WHERE: Unexpected MUST Expecting: WHERE                        :12_6:Must:
*********************** / preambleParamText:[Having]                                                        :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting HAVING

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: HAVING                       :12_6:Must:
preambleParamText:[Having]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=85:
preambleParamText:[Having]> unexpected MUST
preambleParamText:[Having]> expecting HAVING

*********************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected MUST Expecting: HAVING  :12_6:Must:
*********************** / preambleParamText:[Given]                                                         :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting GIVEN

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: GIVEN                        :12_6:Must:
preambleParamText:[Given]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=85:
preambleParamText:[Given]> unexpected MUST
preambleParamText:[Given]> expecting GIVEN

*********************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected MUST Expecting: GIVEN    :12_6:Must:
*********************** / preambleParamText:[Upon]                                                          :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting UPON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: UPON                         :12_6:Must:
preambleParamText:[Upon]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=85:
preambleParamText:[Upon]> unexpected MUST
preambleParamText:[Upon]> expecting UPON

*********************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected MUST Expecting: UPON      :12_6:Must:
*********************** / preambleBoolStructR [Unless]                                                      :12_6:Must:
preambleBoolStructR [Unless]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=85:
preambleBoolStructR [Unless]> unexpected MUST
preambleBoolStructR [Unless]> expecting UNLESS

*********************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected MUST Expecting: UNLESS :12_6:Must:
*********************** / preambleBoolStructR [When,If]                                                     :12_6:Must:
preambleBoolStructR [When,If]> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=85:
preambleBoolStructR [When,If]> unexpected MUST
preambleBoolStructR [When,If]> expecting IF or WHEN

*********************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected MUST Expecting: IF WHEN :12_6:Must:
*********************** / pTemporal/eventually                                                              :12_6:Must:
pTemporal/eventually> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=85:
pTemporal/eventually> unexpected MUST
pTemporal/eventually> expecting EVENTUALLY

*********************** \ !Unconsumed Error: pTemporal/eventually: Unexpected MUST Expecting: EVENTUALLY    :12_6:Must:
*********************** / pTemporal/specifically                                                            :12_6:Must:
************************ / $>|                                                                             :12_6:Must:
$>|> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=85:
$>|> unexpected MUST
$>|> expecting AFTER, BEFORE, BY, or ON

************************ \ !Unconsumed Error: $>|: Unexpected MUST Expecting: BEFORE AFTER BY ON           :12_6:Must:
pTemporal/specifically> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=85:
pTemporal/specifically> unexpected MUST
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

*********************** \ !Unconsumed Error: pTemporal/specifically: Unexpected MUST Expecting: BEFORE AFTER BY ON :12_6:Must:
*********************** / pTemporal/vaguely                                                                 :12_6:Must:
pTemporal/vaguely> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pTemporal/vaguely> MATCH (EERR): <EMPTY>
pTemporal/vaguely> ERROR:
pTemporal/vaguely> offset=85:
pTemporal/vaguely> unexpected MUST
pTemporal/vaguely> expecting Other text

*********************** \ !Unconsumed Error: pTemporal/vaguely: Unexpected MUST Expecting: Other text       :12_6:Must:
*********************** / pDA                                                                               :12_6:Must:
************************ / pAction calling dBoolStructP                                                    :13_6:Do:
************************* / dBoolStructP calling exprP                                                    :13_6:Do:
************************** / expr pParamText                                                             :13_6:Do:
*************************** / ppp inner                                                                 :13_6:Do:
**************************** / expression                                                              :13_6:Do:
***************************** / term p                                                                :13_6:Do:
****************************** / term p/1a:label ends directly above next line                       :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1a:label ends directly above next line> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=86:
term p/1a:label ends directly above next line> unexpected DO
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1b:label ends to the left of line below, with EOL            :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1b:label ends to the left of line below, with EOL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=86:
term p/1b:label ends to the left of line below, with EOL> unexpected DO
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1c:label ends to the right of line below                     :13_6:Do:
******************************* > |<|                                                               :13_6:Do:
******************************* > |<* starting                                                      :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1c:label ends to the right of line below> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=86:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/notLabelTerm                                                 :13_6:Do:
******************************* / term p/2:someIndentation expr p                                   :13_6:Do:
******************************** / someIndentation                                                 :13_6:Do:
********************************* / myindented-GoDeeper                                           :13_6:Do:
myindented-GoDeeper> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=86:
myindented-GoDeeper> unexpected DO
myindented-GoDeeper> expecting (

********************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected DO Expecting: ( :13_6:Do:
someIndentation> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=86:
someIndentation> unexpected DO
someIndentation> expecting (

******************************** \ !Unconsumed Error: someIndentation: Unexpected DO Expecting: (  :13_6:Do:
term p/2:someIndentation expr p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=86:
term p/2:someIndentation expr p> unexpected DO
term p/2:someIndentation expr p> expecting (

******************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected DO Expecting: ( :13_6:Do:
******************************* / term p/3:plain p                                                  :13_6:Do:
******************************** / pParamText                                                      :13_6:Do:
********************************* / pParamText(flat) first line: pKeyValues                       :13_6:Do:
********************************** / pKeyValuesAka                                               :13_6:Do:
*********************************** / slAKA                                                     :13_6:Do:
************************************ / $*|                                                     :13_6:Do:
************************************* / slAKA base                                            :13_6:Do:
************************************** / slKeyValues                                         :13_6:Do:
*************************************** / $*|                                               :13_6:Do:
**************************************** / someSL                                          :13_6:Do:
***************************************** / pNumAsText                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

***************************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

**************************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

*************************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=86:
slKeyValues> unexpected DO
slKeyValues> expecting other text or number

************************************** \ !Unconsumed Error: slKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA base> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=86:
slAKA base> unexpected DO
slAKA base> expecting other text or number

************************************* \ !Unconsumed Error: slAKA base: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

************************************ \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=86:
slAKA> unexpected DO
slAKA> expecting other text or number

*********************************** \ !Unconsumed Error: slAKA: Unexpected DO Expecting: other text or number :13_6:Do:
pKeyValuesAka> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=86:
pKeyValuesAka> unexpected DO
pKeyValuesAka> expecting other text or number

********************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText(flat) first line: pKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=86:
pParamText(flat) first line: pKeyValues> unexpected DO
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=86:
pParamText> unexpected DO
pParamText> expecting other text or number

******************************** \ !Unconsumed Error: pParamText: Unexpected DO Expecting: other text or number :13_6:Do:
term p/3:plain p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=86:
term p/3:plain p> unexpected DO
term p/3:plain p> expecting other text or number

******************************* \ !Unconsumed Error: term p/3:plain p: Unexpected DO Expecting: other text or number :13_6:Do:
term p/notLabelTerm> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=86:
term p/notLabelTerm> unexpected DO
term p/notLabelTerm> expecting ( or term

****************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected DO Expecting: ( term :13_6:Do:
term p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=86:
term p> unexpected DO
term p> expecting (, other text or number, or term

***************************** \ !Unconsumed Error: term p: Unexpected DO Expecting: ( other text or number term :13_6:Do:
expression> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=86:
expression> unexpected DO
expression> expecting expression

**************************** \ !Unconsumed Error: expression: Unexpected DO Expecting: expression      :13_6:Do:
ppp inner> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=86:
ppp inner> unexpected DO
ppp inner> expecting expression

*************************** \ !Unconsumed Error: ppp inner: Unexpected DO Expecting: expression         :13_6:Do:
*************************** / withPrePost                                                               :13_6:Do:
**************************** > |<* starting                                                            :13_6:Do:
**************************** / $*|                                                                     :13_6:Do:
***************************** / pre part                                                              :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

***************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text    :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

**************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text           :13_6:Do:
withPrePost> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=86:
withPrePost> unexpected DO
withPrePost> expecting ( or Other text

*************************** \ !Unconsumed Error: withPrePost: Unexpected DO Expecting: ( Other text     :13_6:Do:
*************************** / $*|                                                                       :13_6:Do:
**************************** / pre part                                                                :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

**************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text      :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

*************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text             :13_6:Do:
expr pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expr pParamText> MATCH (EERR): <EMPTY>
expr pParamText> ERROR:
expr pParamText> offset=86:
expr pParamText> unexpected DO
expr pParamText> expecting (, Other text, or expression

************************** \ !Unconsumed Error: expr pParamText: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
dBoolStructP calling exprP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
dBoolStructP calling exprP> MATCH (EERR): <EMPTY>
dBoolStructP calling exprP> ERROR:
dBoolStructP calling exprP> offset=86:
dBoolStructP calling exprP> unexpected DO
dBoolStructP calling exprP> expecting (, Other text, or expression

************************* \ !Unconsumed Error: dBoolStructP calling exprP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pAction calling dBoolStructP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pAction calling dBoolStructP> MATCH (EERR): <EMPTY>
pAction calling dBoolStructP> ERROR:
pAction calling dBoolStructP> offset=86:
pAction calling dBoolStructP> unexpected DO
pAction calling dBoolStructP> expecting (, Other text, or expression

************************ \ !Unconsumed Error: pAction calling dBoolStructP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pDA> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pDA> MATCH (CERR): MUST
pDA> ERROR:
pDA> offset=86:
pDA> unexpected DO
pDA> expecting (, Other text, or expression

*********************** \ !Consumed Error: pDA: Unexpected DO Expecting: ( ( Other text expression          :13_6:Do:
*********************** / pDA                                                                               :12_6:Must:
************************ / pAction calling dBoolStructP                                                    :13_6:Do:
************************* / dBoolStructP calling exprP                                                    :13_6:Do:
************************** / expr pParamText                                                             :13_6:Do:
*************************** / ppp inner                                                                 :13_6:Do:
**************************** / expression                                                              :13_6:Do:
***************************** / term p                                                                :13_6:Do:
****************************** / term p/1a:label ends directly above next line                       :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1a:label ends directly above next line> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1a:label ends directly above next line> MATCH (EERR): <EMPTY>
term p/1a:label ends directly above next line> ERROR:
term p/1a:label ends directly above next line> offset=86:
term p/1a:label ends directly above next line> unexpected DO
term p/1a:label ends directly above next line> expecting other text or number

****************************** \ !Unconsumed Error: term p/1a:label ends directly above next line: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1b:label ends to the left of line below, with EOL            :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1b:label ends to the left of line below, with EOL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1b:label ends to the left of line below, with EOL> MATCH (EERR): <EMPTY>
term p/1b:label ends to the left of line below, with EOL> ERROR:
term p/1b:label ends to the left of line below, with EOL> offset=86:
term p/1b:label ends to the left of line below, with EOL> unexpected DO
term p/1b:label ends to the left of line below, with EOL> expecting other text or number

****************************** \ !Unconsumed Error: term p/1b:label ends to the left of line below, with EOL: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/1c:label ends to the right of line below                     :13_6:Do:
******************************* > |<|                                                               :13_6:Do:
******************************* > |<* starting                                                      :13_6:Do:
******************************* / $*|                                                               :13_6:Do:
******************************** / someSL                                                          :13_6:Do:
********************************* / pNumAsText                                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

********************************* \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

******************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

******************************* \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
term p/1c:label ends to the right of line below> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/1c:label ends to the right of line below> MATCH (EERR): <EMPTY>
term p/1c:label ends to the right of line below> ERROR:
term p/1c:label ends to the right of line below> offset=86:
term p/1c:label ends to the right of line below> unexpected DO
term p/1c:label ends to the right of line below> expecting other text or number

****************************** \ !Unconsumed Error: term p/1c:label ends to the right of line below: Unexpected DO Expecting: other text or number :13_6:Do:
****************************** / term p/notLabelTerm                                                 :13_6:Do:
******************************* / term p/2:someIndentation expr p                                   :13_6:Do:
******************************** / someIndentation                                                 :13_6:Do:
********************************* / myindented-GoDeeper                                           :13_6:Do:
myindented-GoDeeper> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=86:
myindented-GoDeeper> unexpected DO
myindented-GoDeeper> expecting (

********************************* \ !Unconsumed Error: myindented-GoDeeper: Unexpected DO Expecting: ( :13_6:Do:
someIndentation> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=86:
someIndentation> unexpected DO
someIndentation> expecting (

******************************** \ !Unconsumed Error: someIndentation: Unexpected DO Expecting: (  :13_6:Do:
term p/2:someIndentation expr p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/2:someIndentation expr p> MATCH (EERR): <EMPTY>
term p/2:someIndentation expr p> ERROR:
term p/2:someIndentation expr p> offset=86:
term p/2:someIndentation expr p> unexpected DO
term p/2:someIndentation expr p> expecting (

******************************* \ !Unconsumed Error: term p/2:someIndentation expr p: Unexpected DO Expecting: ( :13_6:Do:
******************************* / term p/3:plain p                                                  :13_6:Do:
******************************** / pParamText                                                      :13_6:Do:
********************************* / pParamText(flat) first line: pKeyValues                       :13_6:Do:
********************************** / pKeyValuesAka                                               :13_6:Do:
*********************************** / slAKA                                                     :13_6:Do:
************************************ / $*|                                                     :13_6:Do:
************************************* / slAKA base                                            :13_6:Do:
************************************** / slKeyValues                                         :13_6:Do:
*************************************** / $*|                                               :13_6:Do:
**************************************** / someSL                                          :13_6:Do:
***************************************** / pNumAsText                                    :13_6:Do:
pNumAsText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=86:
pNumAsText> unexpected DO
pNumAsText> expecting number

***************************************** \ !Unconsumed Error: pNumAsText: Unexpected DO Expecting: number :13_6:Do:
someSL> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=86:
someSL> unexpected DO
someSL> expecting other text or number

**************************************** \ !Unconsumed Error: someSL: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

*************************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=86:
slKeyValues> unexpected DO
slKeyValues> expecting other text or number

************************************** \ !Unconsumed Error: slKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA base> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=86:
slAKA base> unexpected DO
slAKA base> expecting other text or number

************************************* \ !Unconsumed Error: slAKA base: Unexpected DO Expecting: other text or number :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting other text or number

************************************ \ !Unconsumed Error: $*|: Unexpected DO Expecting: other text or number :13_6:Do:
slAKA> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=86:
slAKA> unexpected DO
slAKA> expecting other text or number

*********************************** \ !Unconsumed Error: slAKA: Unexpected DO Expecting: other text or number :13_6:Do:
pKeyValuesAka> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=86:
pKeyValuesAka> unexpected DO
pKeyValuesAka> expecting other text or number

********************************** \ !Unconsumed Error: pKeyValuesAka: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText(flat) first line: pKeyValues> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=86:
pParamText(flat) first line: pKeyValues> unexpected DO
pParamText(flat) first line: pKeyValues> expecting other text or number

********************************* \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected DO Expecting: other text or number :13_6:Do:
pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=86:
pParamText> unexpected DO
pParamText> expecting other text or number

******************************** \ !Unconsumed Error: pParamText: Unexpected DO Expecting: other text or number :13_6:Do:
term p/3:plain p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/3:plain p> MATCH (EERR): <EMPTY>
term p/3:plain p> ERROR:
term p/3:plain p> offset=86:
term p/3:plain p> unexpected DO
term p/3:plain p> expecting other text or number

******************************* \ !Unconsumed Error: term p/3:plain p: Unexpected DO Expecting: other text or number :13_6:Do:
term p/notLabelTerm> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p/notLabelTerm> MATCH (EERR): <EMPTY>
term p/notLabelTerm> ERROR:
term p/notLabelTerm> offset=86:
term p/notLabelTerm> unexpected DO
term p/notLabelTerm> expecting ( or term

****************************** \ !Unconsumed Error: term p/notLabelTerm: Unexpected DO Expecting: ( term :13_6:Do:
term p> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
term p> MATCH (EERR): <EMPTY>
term p> ERROR:
term p> offset=86:
term p> unexpected DO
term p> expecting (, other text or number, or term

***************************** \ !Unconsumed Error: term p: Unexpected DO Expecting: ( other text or number term :13_6:Do:
expression> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expression> MATCH (EERR): <EMPTY>
expression> ERROR:
expression> offset=86:
expression> unexpected DO
expression> expecting expression

**************************** \ !Unconsumed Error: expression: Unexpected DO Expecting: expression      :13_6:Do:
ppp inner> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
ppp inner> MATCH (EERR): <EMPTY>
ppp inner> ERROR:
ppp inner> offset=86:
ppp inner> unexpected DO
ppp inner> expecting expression

*************************** \ !Unconsumed Error: ppp inner: Unexpected DO Expecting: expression         :13_6:Do:
*************************** / withPrePost                                                               :13_6:Do:
**************************** > |<* starting                                                            :13_6:Do:
**************************** / $*|                                                                     :13_6:Do:
***************************** / pre part                                                              :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

***************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text    :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

**************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text           :13_6:Do:
withPrePost> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
withPrePost> MATCH (EERR): <EMPTY>
withPrePost> ERROR:
withPrePost> offset=86:
withPrePost> unexpected DO
withPrePost> expecting ( or Other text

*************************** \ !Unconsumed Error: withPrePost: Unexpected DO Expecting: ( Other text     :13_6:Do:
*************************** / $*|                                                                       :13_6:Do:
**************************** / pre part                                                                :13_6:Do:
pre part> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pre part> MATCH (EERR): <EMPTY>
pre part> ERROR:
pre part> offset=86:
pre part> unexpected DO
pre part> expecting ( or Other text

**************************** \ !Unconsumed Error: pre part: Unexpected DO Expecting: ( Other text      :13_6:Do:
$*|> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=86:
$*|> unexpected DO
$*|> expecting ( or Other text

*************************** \ !Unconsumed Error: $*|: Unexpected DO Expecting: ( Other text             :13_6:Do:
expr pParamText> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
expr pParamText> MATCH (EERR): <EMPTY>
expr pParamText> ERROR:
expr pParamText> offset=86:
expr pParamText> unexpected DO
expr pParamText> expecting (, Other text, or expression

************************** \ !Unconsumed Error: expr pParamText: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
dBoolStructP calling exprP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
dBoolStructP calling exprP> MATCH (EERR): <EMPTY>
dBoolStructP calling exprP> ERROR:
dBoolStructP calling exprP> offset=86:
dBoolStructP calling exprP> unexpected DO
dBoolStructP calling exprP> expecting (, Other text, or expression

************************* \ !Unconsumed Error: dBoolStructP calling exprP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pAction calling dBoolStructP> IN: DO ( "respond" "to" ( "the PDPC" ) "abou <…>
pAction calling dBoolStructP> MATCH (EERR): <EMPTY>
pAction calling dBoolStructP> ERROR:
pAction calling dBoolStructP> offset=86:
pAction calling dBoolStructP> unexpected DO
pAction calling dBoolStructP> expecting (, Other text, or expression

************************ \ !Unconsumed Error: pAction calling dBoolStructP: Unexpected DO Expecting: ( ( Other text expression :13_6:Do:
pDA> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
pDA> MATCH (CERR): MUST
pDA> ERROR:
pDA> offset=86:
pDA> unexpected DO
pDA> expecting (, Other text, or expression

*********************** \ !Consumed Error: pDA: Unexpected DO Expecting: ( ( Other text expression          :13_6:Do:
regulative permutation with deontic-action> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
regulative permutation with deontic-action> MATCH (EERR): <EMPTY>
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=86:
regulative permutation with deontic-action> unexpected DO
regulative permutation with deontic-action> expecting (, Other text, or expression

********************** \ !Unconsumed Error: regulative permutation with deontic-action: Unexpected DO Expecting: ( ( Other text expression :12_6:Must:
permutationsReg> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=98:
permutationsReg> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

********************* \ !Unconsumed Error: permutationsReg: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
manyIndentation/leaf?> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=98:
manyIndentation/leaf?> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

******************** \ !Unconsumed Error: manyIndentation/leaf?: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
******************** / manyIndentation/deeper; calling someIndentation                                         :12_6:Must:
********************* / someIndentation                                                                       :12_6:Must:
********************** / myindented-GoDeeper                                                                 :12_6:Must:
myindented-GoDeeper> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=85:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: (                :12_6:Must:
someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting (

********************* \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: (                      :12_6:Must:
manyIndentation/deeper; calling someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=85:
manyIndentation/deeper; calling someIndentation> unexpected MUST
manyIndentation/deeper; calling someIndentation> expecting (

******************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MUST Expecting: ( :12_6:Must:
someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=98:
someIndentation> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

******************* \ !Consumed Error: someIndentation: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
pRegRuleSugary> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRegRuleSugary> MATCH (CERR): "You" (
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=98:
pRegRuleSugary> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

****************** \ !Consumed Error: pRegRuleSugary: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_6:Must:
****************** / pRegRuleNormal                                                                            :12_5:Other "You:
******************* / permutationsReg                                                                         :12_5:Other "You:
******************** / regulative permutation with deontic-temporal                                          :12_5:Other "You:
********************* / WHERE                                                                               :12_5:Other "You:
WHERE> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=83:
WHERE> unexpected "You"
WHERE> expecting WHERE

********************* \ !Unconsumed Error: WHERE: Unexpected "You" Expecting: WHERE                         :12_5:Other "You:
********************* / preambleParamText:[Having]                                                          :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting HAVING

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: HAVING                        :12_5:Other "You:
preambleParamText:[Having]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=83:
preambleParamText:[Having]> unexpected "You"
preambleParamText:[Having]> expecting HAVING

********************* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "You" Expecting: HAVING   :12_5:Other "You:
********************* / preambleParamText:[Given]                                                           :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting GIVEN

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: GIVEN                         :12_5:Other "You:
preambleParamText:[Given]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=83:
preambleParamText:[Given]> unexpected "You"
preambleParamText:[Given]> expecting GIVEN

********************* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "You" Expecting: GIVEN     :12_5:Other "You:
********************* / preambleParamText:[Upon]                                                            :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting UPON

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: UPON                          :12_5:Other "You:
preambleParamText:[Upon]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=83:
preambleParamText:[Upon]> unexpected "You"
preambleParamText:[Upon]> expecting UPON

********************* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "You" Expecting: UPON       :12_5:Other "You:
********************* / preambleBoolStructR [Unless]                                                        :12_5:Other "You:
preambleBoolStructR [Unless]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=83:
preambleBoolStructR [Unless]> unexpected "You"
preambleBoolStructR [Unless]> expecting UNLESS

********************* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "You" Expecting: UNLESS :12_5:Other "You:
********************* / preambleBoolStructR [When,If]                                                       :12_5:Other "You:
preambleBoolStructR [When,If]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=83:
preambleBoolStructR [When,If]> unexpected "You"
preambleBoolStructR [When,If]> expecting IF or WHEN

********************* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "You" Expecting: IF WHEN :12_5:Other "You:
********************* / pDT                                                                                 :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting MAY, MUST, or SHANT

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: MUST MAY SHANT                :12_5:Other "You:
pDT> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=83:
pDT> unexpected "You"
pDT> expecting MAY, MUST, or SHANT

********************* \ !Unconsumed Error: pDT: Unexpected "You" Expecting: MUST MAY SHANT                  :12_5:Other "You:
********************* / pActor [REvery,RParty,RTokAll]                                                      :12_5:Other "You:
pActor [REvery,RParty,RTokAll]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=83:
pActor [REvery,RParty,RTokAll]> unexpected "You"
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

********************* \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected "You" Expecting: EVERY PARTY ALL :12_5:Other "You:
********************* / pDoAction/Do                                                                        :12_5:Other "You:
pDoAction/Do> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=83:
pDoAction/Do> unexpected "You"
pDoAction/Do> expecting DO

********************* \ !Unconsumed Error: pDoAction/Do: Unexpected "You" Expecting: DO                     :12_5:Other "You:
regulative permutation with deontic-temporal> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=83:
regulative permutation with deontic-temporal> unexpected "You"
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

******************** \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected "You" Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :12_5:Other "You:
******************** / regulative permutation with deontic-action                                            :12_5:Other "You:
********************* / WHERE                                                                               :12_5:Other "You:
WHERE> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=83:
WHERE> unexpected "You"
WHERE> expecting WHERE

********************* \ !Unconsumed Error: WHERE: Unexpected "You" Expecting: WHERE                         :12_5:Other "You:
********************* / preambleParamText:[Having]                                                          :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting HAVING

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: HAVING                        :12_5:Other "You:
preambleParamText:[Having]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=83:
preambleParamText:[Having]> unexpected "You"
preambleParamText:[Having]> expecting HAVING

********************* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "You" Expecting: HAVING   :12_5:Other "You:
********************* / preambleParamText:[Given]                                                           :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting GIVEN

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: GIVEN                         :12_5:Other "You:
preambleParamText:[Given]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=83:
preambleParamText:[Given]> unexpected "You"
preambleParamText:[Given]> expecting GIVEN

********************* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "You" Expecting: GIVEN     :12_5:Other "You:
********************* / preambleParamText:[Upon]                                                            :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting UPON

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: UPON                          :12_5:Other "You:
preambleParamText:[Upon]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=83:
preambleParamText:[Upon]> unexpected "You"
preambleParamText:[Upon]> expecting UPON

********************* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "You" Expecting: UPON       :12_5:Other "You:
********************* / preambleBoolStructR [Unless]                                                        :12_5:Other "You:
preambleBoolStructR [Unless]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=83:
preambleBoolStructR [Unless]> unexpected "You"
preambleBoolStructR [Unless]> expecting UNLESS

********************* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "You" Expecting: UNLESS :12_5:Other "You:
********************* / preambleBoolStructR [When,If]                                                       :12_5:Other "You:
preambleBoolStructR [When,If]> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=83:
preambleBoolStructR [When,If]> unexpected "You"
preambleBoolStructR [When,If]> expecting IF or WHEN

********************* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "You" Expecting: IF WHEN :12_5:Other "You:
********************* / pTemporal/eventually                                                                :12_5:Other "You:
pTemporal/eventually> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=83:
pTemporal/eventually> unexpected "You"
pTemporal/eventually> expecting EVENTUALLY

********************* \ !Unconsumed Error: pTemporal/eventually: Unexpected "You" Expecting: EVENTUALLY     :12_5:Other "You:
********************* / pTemporal/specifically                                                              :12_5:Other "You:
********************** / $>|                                                                               :12_5:Other "You:
$>|> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=83:
$>|> unexpected "You"
$>|> expecting AFTER, BEFORE, BY, or ON

********************** \ !Unconsumed Error: $>|: Unexpected "You" Expecting: BEFORE AFTER BY ON            :12_5:Other "You:
pTemporal/specifically> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=83:
pTemporal/specifically> unexpected "You"
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

********************* \ !Unconsumed Error: pTemporal/specifically: Unexpected "You" Expecting: BEFORE AFTER BY ON :12_5:Other "You:
********************* / pTemporal/vaguely                                                                   :12_5:Other "You:
pTemporal/vaguely> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pTemporal/vaguely> MATCH (COK): "You"
pTemporal/vaguely> VALUE: (Just (TemporalConstraint TVague (Just 0) "You"),[])

********************* \ pTemporal/vaguely has returned Just (TemporalConstraint TVague (Just 0) "You")       :12_6:GoDeeper:
********************* / WHERE                                                                                :12_6:GoDeeper:
WHERE> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=84:
WHERE> unexpected (
WHERE> expecting WHERE

********************* \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                              :12_6:GoDeeper:
********************* / preambleParamText:[Having]                                                           :12_6:GoDeeper:
********************** / $>|                                                                                :12_6:GoDeeper:
$>|> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=84:
$>|> unexpected (
$>|> expecting HAVING

********************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                             :12_6:GoDeeper:
preambleParamText:[Having]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=84:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

********************* \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING        :12_6:GoDeeper:
********************* / preambleParamText:[Given]                                                            :12_6:GoDeeper:
********************** / $>|                                                                                :12_6:GoDeeper:
$>|> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=84:
$>|> unexpected (
$>|> expecting GIVEN

********************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                              :12_6:GoDeeper:
preambleParamText:[Given]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=84:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

********************* \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN          :12_6:GoDeeper:
********************* / preambleParamText:[Upon]                                                             :12_6:GoDeeper:
********************** / $>|                                                                                :12_6:GoDeeper:
$>|> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=84:
$>|> unexpected (
$>|> expecting UPON

********************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                               :12_6:GoDeeper:
preambleParamText:[Upon]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=84:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

********************* \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON            :12_6:GoDeeper:
********************* / preambleBoolStructR [Unless]                                                         :12_6:GoDeeper:
preambleBoolStructR [Unless]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=84:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

********************* \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS      :12_6:GoDeeper:
********************* / preambleBoolStructR [When,If]                                                        :12_6:GoDeeper:
preambleBoolStructR [When,If]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=84:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

********************* \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN    :12_6:GoDeeper:
********************* / pActor [REvery,RParty,RTokAll]                                                       :12_6:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=84:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

********************* \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL :12_6:GoDeeper:
********************* / pDA                                                                                  :12_6:GoDeeper:
pDA> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=84:
pDA> unexpected (
pDA> expecting MAY, MUST, or SHANT

********************* \ !Unconsumed Error: pDA: Unexpected ( Expecting: MUST MAY SHANT                       :12_6:GoDeeper:
regulative permutation with deontic-action> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
regulative permutation with deontic-action> MATCH (CERR): "You"
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=84:
regulative permutation with deontic-action> unexpected (
regulative permutation with deontic-action> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

******************** \ !Consumed Error: regulative permutation with deontic-action: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :12_6:GoDeeper:
permutationsReg> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=84:
permutationsReg> unexpected (
permutationsReg> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

******************* \ !Unconsumed Error: permutationsReg: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :12_5:Other "You:
pRegRuleNormal> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=84:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

****************** \ !Unconsumed Error: pRegRuleNormal: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :12_5:Other "You:
pRegRule> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=98:
pRegRule> Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)]

***************** \ !Unconsumed Error: pRegRule: Fail: Label ["to","the PDPC"] cannot be applied to a leaf: ("respond" :| [],Nothing) :| [("about" :| ["your inaction"],Nothing)] :12_5:Other "You:
***************** / someDeep                                                                                    :12_5:Other "You:
****************** / someDeep first part calls base directly                                                   :12_5:Other "You:
someDeep first part calls base directly> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep first part calls base directly> MATCH (COK): "You"
someDeep first part calls base directly> VALUE: ("You",[])

****************** \ someDeep first part calls base directly has returned "You"                                 :12_6:GoDeeper:
****************** / someDeep second part recurses with someIndentation                                         :12_6:GoDeeper:
******************* / someIndentation                                                                          :12_6:GoDeeper:
******************** / myindented-GoDeeper                                                                    :12_6:GoDeeper:
myindented-GoDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

******************** \ myindented-GoDeeper has returned GoDeeper                                               :12_6:Must:
******************** / manyIndentation/leaf?                                                                   :12_6:Must:
********************* / someDeep                                                                              :12_6:Must:
********************** / someDeep first part calls base directly                                             :12_6:Must:
someDeep first part calls base directly> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=85:
someDeep first part calls base directly> unexpected MUST
someDeep first part calls base directly> expecting Other text

********************** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MUST Expecting: Other text :12_6:Must:
someDeep> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=85:
someDeep> unexpected MUST
someDeep> expecting Other text

********************* \ !Unconsumed Error: someDeep: Unexpected MUST Expecting: Other text                    :12_6:Must:
manyIndentation/leaf?> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=85:
manyIndentation/leaf?> unexpected MUST
manyIndentation/leaf?> expecting Other text

******************** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MUST Expecting: Other text         :12_6:Must:
******************** / manyIndentation/deeper; calling someIndentation                                         :12_6:Must:
********************* / someIndentation                                                                       :12_6:Must:
********************** / myindented-GoDeeper                                                                 :12_6:Must:
myindented-GoDeeper> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=85:
myindented-GoDeeper> unexpected MUST
myindented-GoDeeper> expecting (

********************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MUST Expecting: (                :12_6:Must:
someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting (

********************* \ !Unconsumed Error: someIndentation: Unexpected MUST Expecting: (                      :12_6:Must:
manyIndentation/deeper; calling someIndentation> IN: MUST DO ( "respond" "to" ( "the PDPC" )  <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=85:
manyIndentation/deeper; calling someIndentation> unexpected MUST
manyIndentation/deeper; calling someIndentation> expecting (

******************** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MUST Expecting: ( :12_6:Must:
someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=85:
someIndentation> unexpected MUST
someIndentation> expecting ( or Other text

******************* \ !Consumed Error: someIndentation: Unexpected MUST Expecting: ( Other text                 :12_6:Must:
someDeep second part recurses with someIndentation> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=85:
someDeep second part recurses with someIndentation> unexpected MUST
someDeep second part recurses with someIndentation> expecting ( or Other text

****************** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MUST Expecting: ( Other text :12_6:GoDeeper:
****************** > someDeep no luck, returning []                                                             :12_6:GoDeeper:
someDeep> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
someDeep> MATCH (COK): "You"
someDeep> VALUE: (["You"],[])

***************** \ someDeep has returned ["You"]                                                                :12_6:GoDeeper:
manyIndentation/leaf?> IN: "You" ( MUST DO ( "respond" "to" ( "the  <…>
manyIndentation/leaf?> MATCH (COK): "You"
manyIndentation/leaf?> VALUE: (RuleAlias ["You"],[])

**************** \ manyIndentation/leaf? has returned RuleAlias ["You"]                                           :12_6:GoDeeper:
**************** / myindented-UnDeeper                                                                            :12_6:GoDeeper:
myindented-UnDeeper> IN: ( MUST DO ( "respond" "to" ( "the PDPC"  <…>
myindented-UnDeeper> MATCH (EERR): <EMPTY>
myindented-UnDeeper> ERROR:
myindented-UnDeeper> offset=84:
myindented-UnDeeper> unexpected (
myindented-UnDeeper> expecting )

**************** \ !Unconsumed Error: myindented-UnDeeper: Unexpected ( Expecting: )                              :12_6:GoDeeper:
someIndentation> IN: ( "You" ( MUST DO ( "respond" "to" ( "th <…>
someIndentation> MATCH (CERR): ( "You"
someIndentation> ERROR:
someIndentation> offset=84:
someIndentation> unexpected (
someIndentation> expecting )

*************** \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                      :12_6:GoDeeper:
pHenceLest-Hence> IN: HENCE ( "You" ( MUST DO ( "respond" "to" <…>
pHenceLest-Hence> MATCH (CERR): HENCE ( "You"
pHenceLest-Hence> ERROR:
pHenceLest-Hence> offset=84:
pHenceLest-Hence> unexpected (
pHenceLest-Hence> expecting )

************** \ !Consumed Error: pHenceLest-Hence: Unexpected ( Expecting: )                                       :12_6:GoDeeper:
manyIndentation/leaf?> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=84:
manyIndentation/leaf?> unexpected (
manyIndentation/leaf?> expecting )

************* \ !Unconsumed Error: manyIndentation/leaf?: Unexpected ( Expecting: )                               :10_4:May:
************* / manyIndentation/deeper; calling someIndentation                                                   :10_4:May:
************** / someIndentation                                                                                 :10_4:May:
*************** / myindented-GoDeeper                                                                           :10_4:May:
myindented-GoDeeper> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=71:
myindented-GoDeeper> unexpected MAY
myindented-GoDeeper> expecting (

*************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MAY Expecting: (                           :10_4:May:
someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting (

************** \ !Unconsumed Error: someIndentation: Unexpected MAY Expecting: (                                 :10_4:May:
manyIndentation/deeper; calling someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=71:
manyIndentation/deeper; calling someIndentation> unexpected MAY
manyIndentation/deeper; calling someIndentation> expecting (

************* \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MAY Expecting: (   :10_4:May:
someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=84:
someIndentation> unexpected (
someIndentation> expecting )

************ \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                         :10_4:May:
pRegRuleSugary> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRegRuleSugary> MATCH (CERR): "the PDPC" (
pRegRuleSugary> ERROR:
pRegRuleSugary> offset=84:
pRegRuleSugary> unexpected (
pRegRuleSugary> expecting )

*********** \ !Consumed Error: pRegRuleSugary: Unexpected ( Expecting: )                                            :10_4:May:
*********** / pRegRuleNormal                                                                                      :10_3:Other "the:
************ / permutationsReg                                                                                   :10_3:Other "the:
************* / regulative permutation with deontic-temporal                                                    :10_3:Other "the:
************** / WHERE                                                                                         :10_3:Other "the:
WHERE> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=69:
WHERE> unexpected "the PDPC"
WHERE> expecting WHERE

************** \ !Unconsumed Error: WHERE: Unexpected "the PDPC" Expecting: WHERE                              :10_3:Other "the:
************** / preambleParamText:[Having]                                                                    :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting HAVING

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: HAVING                             :10_3:Other "the:
preambleParamText:[Having]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=69:
preambleParamText:[Having]> unexpected "the PDPC"
preambleParamText:[Having]> expecting HAVING

************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "the PDPC" Expecting: HAVING        :10_3:Other "the:
************** / preambleParamText:[Given]                                                                     :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting GIVEN

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: GIVEN                              :10_3:Other "the:
preambleParamText:[Given]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=69:
preambleParamText:[Given]> unexpected "the PDPC"
preambleParamText:[Given]> expecting GIVEN

************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "the PDPC" Expecting: GIVEN          :10_3:Other "the:
************** / preambleParamText:[Upon]                                                                      :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting UPON

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: UPON                               :10_3:Other "the:
preambleParamText:[Upon]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=69:
preambleParamText:[Upon]> unexpected "the PDPC"
preambleParamText:[Upon]> expecting UPON

************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "the PDPC" Expecting: UPON            :10_3:Other "the:
************** / preambleBoolStructR [Unless]                                                                  :10_3:Other "the:
preambleBoolStructR [Unless]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=69:
preambleBoolStructR [Unless]> unexpected "the PDPC"
preambleBoolStructR [Unless]> expecting UNLESS

************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "the PDPC" Expecting: UNLESS      :10_3:Other "the:
************** / preambleBoolStructR [When,If]                                                                 :10_3:Other "the:
preambleBoolStructR [When,If]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=69:
preambleBoolStructR [When,If]> unexpected "the PDPC"
preambleBoolStructR [When,If]> expecting IF or WHEN

************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "the PDPC" Expecting: IF WHEN    :10_3:Other "the:
************** / pDT                                                                                           :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting MAY, MUST, or SHANT

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: MUST MAY SHANT                     :10_3:Other "the:
pDT> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pDT> MATCH (EERR): <EMPTY>
pDT> ERROR:
pDT> offset=69:
pDT> unexpected "the PDPC"
pDT> expecting MAY, MUST, or SHANT

************** \ !Unconsumed Error: pDT: Unexpected "the PDPC" Expecting: MUST MAY SHANT                       :10_3:Other "the:
************** / pActor [REvery,RParty,RTokAll]                                                                :10_3:Other "the:
pActor [REvery,RParty,RTokAll]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=69:
pActor [REvery,RParty,RTokAll]> unexpected "the PDPC"
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************** \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected "the PDPC" Expecting: EVERY PARTY ALL :10_3:Other "the:
************** / pDoAction/Do                                                                                  :10_3:Other "the:
pDoAction/Do> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pDoAction/Do> MATCH (EERR): <EMPTY>
pDoAction/Do> ERROR:
pDoAction/Do> offset=69:
pDoAction/Do> unexpected "the PDPC"
pDoAction/Do> expecting DO

************** \ !Unconsumed Error: pDoAction/Do: Unexpected "the PDPC" Expecting: DO                          :10_3:Other "the:
regulative permutation with deontic-temporal> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
regulative permutation with deontic-temporal> MATCH (EERR): <EMPTY>
regulative permutation with deontic-temporal> ERROR:
regulative permutation with deontic-temporal> offset=69:
regulative permutation with deontic-temporal> unexpected "the PDPC"
regulative permutation with deontic-temporal> expecting ALL, DO, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

************* \ !Unconsumed Error: regulative permutation with deontic-temporal: Unexpected "the PDPC" Expecting: MUST MAY SHANT GIVEN HAVING UPON WHERE EVERY PARTY ALL DO UNLESS IF WHEN :10_3:Other "the:
************* / regulative permutation with deontic-action                                                      :10_3:Other "the:
************** / WHERE                                                                                         :10_3:Other "the:
WHERE> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=69:
WHERE> unexpected "the PDPC"
WHERE> expecting WHERE

************** \ !Unconsumed Error: WHERE: Unexpected "the PDPC" Expecting: WHERE                              :10_3:Other "the:
************** / preambleParamText:[Having]                                                                    :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting HAVING

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: HAVING                             :10_3:Other "the:
preambleParamText:[Having]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=69:
preambleParamText:[Having]> unexpected "the PDPC"
preambleParamText:[Having]> expecting HAVING

************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected "the PDPC" Expecting: HAVING        :10_3:Other "the:
************** / preambleParamText:[Given]                                                                     :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting GIVEN

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: GIVEN                              :10_3:Other "the:
preambleParamText:[Given]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=69:
preambleParamText:[Given]> unexpected "the PDPC"
preambleParamText:[Given]> expecting GIVEN

************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected "the PDPC" Expecting: GIVEN          :10_3:Other "the:
************** / preambleParamText:[Upon]                                                                      :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting UPON

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: UPON                               :10_3:Other "the:
preambleParamText:[Upon]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=69:
preambleParamText:[Upon]> unexpected "the PDPC"
preambleParamText:[Upon]> expecting UPON

************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected "the PDPC" Expecting: UPON            :10_3:Other "the:
************** / preambleBoolStructR [Unless]                                                                  :10_3:Other "the:
preambleBoolStructR [Unless]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=69:
preambleBoolStructR [Unless]> unexpected "the PDPC"
preambleBoolStructR [Unless]> expecting UNLESS

************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected "the PDPC" Expecting: UNLESS      :10_3:Other "the:
************** / preambleBoolStructR [When,If]                                                                 :10_3:Other "the:
preambleBoolStructR [When,If]> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=69:
preambleBoolStructR [When,If]> unexpected "the PDPC"
preambleBoolStructR [When,If]> expecting IF or WHEN

************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected "the PDPC" Expecting: IF WHEN    :10_3:Other "the:
************** / pTemporal/eventually                                                                          :10_3:Other "the:
pTemporal/eventually> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pTemporal/eventually> MATCH (EERR): <EMPTY>
pTemporal/eventually> ERROR:
pTemporal/eventually> offset=69:
pTemporal/eventually> unexpected "the PDPC"
pTemporal/eventually> expecting EVENTUALLY

************** \ !Unconsumed Error: pTemporal/eventually: Unexpected "the PDPC" Expecting: EVENTUALLY          :10_3:Other "the:
************** / pTemporal/specifically                                                                        :10_3:Other "the:
*************** / $>|                                                                                         :10_3:Other "the:
$>|> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=69:
$>|> unexpected "the PDPC"
$>|> expecting AFTER, BEFORE, BY, or ON

*************** \ !Unconsumed Error: $>|: Unexpected "the PDPC" Expecting: BEFORE AFTER BY ON                 :10_3:Other "the:
pTemporal/specifically> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pTemporal/specifically> MATCH (EERR): <EMPTY>
pTemporal/specifically> ERROR:
pTemporal/specifically> offset=69:
pTemporal/specifically> unexpected "the PDPC"
pTemporal/specifically> expecting AFTER, BEFORE, BY, or ON

************** \ !Unconsumed Error: pTemporal/specifically: Unexpected "the PDPC" Expecting: BEFORE AFTER BY ON :10_3:Other "the:
************** / pTemporal/vaguely                                                                             :10_3:Other "the:
pTemporal/vaguely> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pTemporal/vaguely> MATCH (COK): "the PDPC"
pTemporal/vaguely> VALUE: (Just (TemporalConstraint TVague (Just 0) "the PDPC"),[])

************** \ pTemporal/vaguely has returned Just (TemporalConstraint TVague (Just 0) "the PDPC")            :10_4:GoDeeper:
************** / WHERE                                                                                          :10_4:GoDeeper:
WHERE> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
WHERE> MATCH (EERR): <EMPTY>
WHERE> ERROR:
WHERE> offset=70:
WHERE> unexpected (
WHERE> expecting WHERE

************** \ !Unconsumed Error: WHERE: Unexpected ( Expecting: WHERE                                        :10_4:GoDeeper:
************** / preambleParamText:[Having]                                                                     :10_4:GoDeeper:
*************** / $>|                                                                                          :10_4:GoDeeper:
$>|> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=70:
$>|> unexpected (
$>|> expecting HAVING

*************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: HAVING                                       :10_4:GoDeeper:
preambleParamText:[Having]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleParamText:[Having]> MATCH (EERR): <EMPTY>
preambleParamText:[Having]> ERROR:
preambleParamText:[Having]> offset=70:
preambleParamText:[Having]> unexpected (
preambleParamText:[Having]> expecting HAVING

************** \ !Unconsumed Error: preambleParamText:[Having]: Unexpected ( Expecting: HAVING                  :10_4:GoDeeper:
************** / preambleParamText:[Given]                                                                      :10_4:GoDeeper:
*************** / $>|                                                                                          :10_4:GoDeeper:
$>|> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=70:
$>|> unexpected (
$>|> expecting GIVEN

*************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: GIVEN                                        :10_4:GoDeeper:
preambleParamText:[Given]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=70:
preambleParamText:[Given]> unexpected (
preambleParamText:[Given]> expecting GIVEN

************** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected ( Expecting: GIVEN                    :10_4:GoDeeper:
************** / preambleParamText:[Upon]                                                                       :10_4:GoDeeper:
*************** / $>|                                                                                          :10_4:GoDeeper:
$>|> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=70:
$>|> unexpected (
$>|> expecting UPON

*************** \ !Unconsumed Error: $>|: Unexpected ( Expecting: UPON                                         :10_4:GoDeeper:
preambleParamText:[Upon]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=70:
preambleParamText:[Upon]> unexpected (
preambleParamText:[Upon]> expecting UPON

************** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected ( Expecting: UPON                      :10_4:GoDeeper:
************** / preambleBoolStructR [Unless]                                                                   :10_4:GoDeeper:
preambleBoolStructR [Unless]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleBoolStructR [Unless]> MATCH (EERR): <EMPTY>
preambleBoolStructR [Unless]> ERROR:
preambleBoolStructR [Unless]> offset=70:
preambleBoolStructR [Unless]> unexpected (
preambleBoolStructR [Unless]> expecting UNLESS

************** \ !Unconsumed Error: preambleBoolStructR [Unless]: Unexpected ( Expecting: UNLESS                :10_4:GoDeeper:
************** / preambleBoolStructR [When,If]                                                                  :10_4:GoDeeper:
preambleBoolStructR [When,If]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
preambleBoolStructR [When,If]> MATCH (EERR): <EMPTY>
preambleBoolStructR [When,If]> ERROR:
preambleBoolStructR [When,If]> offset=70:
preambleBoolStructR [When,If]> unexpected (
preambleBoolStructR [When,If]> expecting IF or WHEN

************** \ !Unconsumed Error: preambleBoolStructR [When,If]: Unexpected ( Expecting: IF WHEN              :10_4:GoDeeper:
************** / pActor [REvery,RParty,RTokAll]                                                                 :10_4:GoDeeper:
pActor [REvery,RParty,RTokAll]> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
pActor [REvery,RParty,RTokAll]> MATCH (EERR): <EMPTY>
pActor [REvery,RParty,RTokAll]> ERROR:
pActor [REvery,RParty,RTokAll]> offset=70:
pActor [REvery,RParty,RTokAll]> unexpected (
pActor [REvery,RParty,RTokAll]> expecting ALL, EVERY, or PARTY

************** \ !Unconsumed Error: pActor [REvery,RParty,RTokAll]: Unexpected ( Expecting: EVERY PARTY ALL     :10_4:GoDeeper:
************** / pDA                                                                                            :10_4:GoDeeper:
pDA> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
pDA> MATCH (EERR): <EMPTY>
pDA> ERROR:
pDA> offset=70:
pDA> unexpected (
pDA> expecting MAY, MUST, or SHANT

************** \ !Unconsumed Error: pDA: Unexpected ( Expecting: MUST MAY SHANT                                 :10_4:GoDeeper:
regulative permutation with deontic-action> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
regulative permutation with deontic-action> MATCH (CERR): "the PDPC"
regulative permutation with deontic-action> ERROR:
regulative permutation with deontic-action> offset=70:
regulative permutation with deontic-action> unexpected (
regulative permutation with deontic-action> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

************* \ !Consumed Error: regulative permutation with deontic-action: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_4:GoDeeper:
permutationsReg> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
permutationsReg> MATCH (EERR): <EMPTY>
permutationsReg> ERROR:
permutationsReg> offset=70:
permutationsReg> unexpected (
permutationsReg> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

************ \ !Unconsumed Error: permutationsReg: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_3:Other "the:
pRegRuleNormal> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRegRuleNormal> MATCH (EERR): <EMPTY>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=70:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting ALL, EVERY, GIVEN, HAVING, IF, MAY, MUST, PARTY, SHANT, UNLESS, UPON, WHEN, or WHERE

*********** \ !Unconsumed Error: pRegRuleNormal: Unexpected ( Expecting: GIVEN HAVING UPON WHERE EVERY PARTY ALL MUST MAY SHANT UNLESS IF WHEN :10_3:Other "the:
pRegRule> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=84:
pRegRule> unexpected (
pRegRule> expecting ) or §

********** \ !Unconsumed Error: pRegRule: Unexpected ( Expecting: § )                                             :10_3:Other "the:
********** / someDeep                                                                                              :10_3:Other "the:
*********** / someDeep first part calls base directly                                                             :10_3:Other "the:
someDeep first part calls base directly> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep first part calls base directly> MATCH (COK): "the PDPC"
someDeep first part calls base directly> VALUE: ("the PDPC",[])

*********** \ someDeep first part calls base directly has returned "the PDPC"                                      :10_4:GoDeeper:
*********** / someDeep second part recurses with someIndentation                                                   :10_4:GoDeeper:
************ / someIndentation                                                                                    :10_4:GoDeeper:
************* / myindented-GoDeeper                                                                              :10_4:GoDeeper:
myindented-GoDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-GoDeeper> MATCH (COK): (
myindented-GoDeeper> VALUE: (GoDeeper,[])

************* \ myindented-GoDeeper has returned GoDeeper                                                         :10_4:May:
************* / manyIndentation/leaf?                                                                             :10_4:May:
************** / someDeep                                                                                        :10_4:May:
*************** / someDeep first part calls base directly                                                       :10_4:May:
someDeep first part calls base directly> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep first part calls base directly> MATCH (EERR): <EMPTY>
someDeep first part calls base directly> ERROR:
someDeep first part calls base directly> offset=71:
someDeep first part calls base directly> unexpected MAY
someDeep first part calls base directly> expecting Other text

*************** \ !Unconsumed Error: someDeep first part calls base directly: Unexpected MAY Expecting: Other text :10_4:May:
someDeep> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someDeep> MATCH (EERR): <EMPTY>
someDeep> ERROR:
someDeep> offset=71:
someDeep> unexpected MAY
someDeep> expecting Other text

************** \ !Unconsumed Error: someDeep: Unexpected MAY Expecting: Other text                               :10_4:May:
manyIndentation/leaf?> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=71:
manyIndentation/leaf?> unexpected MAY
manyIndentation/leaf?> expecting Other text

************* \ !Unconsumed Error: manyIndentation/leaf?: Unexpected MAY Expecting: Other text                    :10_4:May:
************* / manyIndentation/deeper; calling someIndentation                                                   :10_4:May:
************** / someIndentation                                                                                 :10_4:May:
*************** / myindented-GoDeeper                                                                           :10_4:May:
myindented-GoDeeper> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=71:
myindented-GoDeeper> unexpected MAY
myindented-GoDeeper> expecting (

*************** \ !Unconsumed Error: myindented-GoDeeper: Unexpected MAY Expecting: (                           :10_4:May:
someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting (

************** \ !Unconsumed Error: someIndentation: Unexpected MAY Expecting: (                                 :10_4:May:
manyIndentation/deeper; calling someIndentation> IN: MAY DO ( ( "demand" ( "an explanation fo <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=71:
manyIndentation/deeper; calling someIndentation> unexpected MAY
manyIndentation/deeper; calling someIndentation> expecting (

************* \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected MAY Expecting: (   :10_4:May:
someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=71:
someIndentation> unexpected MAY
someIndentation> expecting ( or Other text

************ \ !Consumed Error: someIndentation: Unexpected MAY Expecting: ( Other text                            :10_4:May:
someDeep second part recurses with someIndentation> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
someDeep second part recurses with someIndentation> MATCH (EERR): <EMPTY>
someDeep second part recurses with someIndentation> ERROR:
someDeep second part recurses with someIndentation> offset=71:
someDeep second part recurses with someIndentation> unexpected MAY
someDeep second part recurses with someIndentation> expecting ( or Other text

*********** \ !Unconsumed Error: someDeep second part recurses with someIndentation: Unexpected MAY Expecting: ( Other text :10_4:GoDeeper:
*********** > someDeep no luck, returning []                                                                       :10_4:GoDeeper:
someDeep> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
someDeep> MATCH (COK): "the PDPC"
someDeep> VALUE: (["the PDPC"],[])

********** \ someDeep has returned ["the PDPC"]                                                                     :10_4:GoDeeper:
manyIndentation/leaf?> IN: "the PDPC" ( MAY DO ( ( "demand" ( "an e <…>
manyIndentation/leaf?> MATCH (COK): "the PDPC"
manyIndentation/leaf?> VALUE: (RuleAlias ["the PDPC"],[])

********* \ manyIndentation/leaf? has returned RuleAlias ["the PDPC"]                                                :10_4:GoDeeper:
********* / myindented-UnDeeper                                                                                      :10_4:GoDeeper:
myindented-UnDeeper> IN: ( MAY DO ( ( "demand" ( "an explanation  <…>
myindented-UnDeeper> MATCH (EERR): <EMPTY>
myindented-UnDeeper> ERROR:
myindented-UnDeeper> offset=70:
myindented-UnDeeper> unexpected (
myindented-UnDeeper> expecting )

********* \ !Unconsumed Error: myindented-UnDeeper: Unexpected ( Expecting: )                                        :10_4:GoDeeper:
someIndentation> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
someIndentation> MATCH (CERR): ( "the PDPC"
someIndentation> ERROR:
someIndentation> offset=70:
someIndentation> unexpected (
someIndentation> expecting )

******** \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                                :10_4:GoDeeper:
manyIndentation/deeper; calling someIndentation> IN: ( "the PDPC" ( MAY DO ( ( "demand" ( "an <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=70:
manyIndentation/deeper; calling someIndentation> unexpected (
manyIndentation/deeper; calling someIndentation> expecting )

******* \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected ( Expecting: )              :10_3:GoDeeper:
someIndentation> IN: ( ( "the PDPC" ( MAY DO ( ( "demand" ( " <…>
someIndentation> MATCH (CERR): (
someIndentation> ERROR:
someIndentation> offset=70:
someIndentation> unexpected (
someIndentation> expecting )

****** \ !Consumed Error: someIndentation: Unexpected ( Expecting: )                                                  :10_3:GoDeeper:
pHenceLest-Lest> IN: LEST ( ( "the PDPC" ( MAY DO ( ( "demand <…>
pHenceLest-Lest> MATCH (CERR): LEST (
pHenceLest-Lest> ERROR:
pHenceLest-Lest> offset=70:
pHenceLest-Lest> unexpected (
pHenceLest-Lest> expecting )

***** \ !Consumed Error: pHenceLest-Lest: Unexpected ( Expecting: )                                                    :10_3:GoDeeper:
pRegRuleNormal> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRegRuleNormal> MATCH (CERR): EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRegRuleNormal> ERROR:
pRegRuleNormal> offset=70:
pRegRuleNormal> unexpected (
pRegRuleNormal> expecting )

**** \ !Consumed Error: pRegRuleNormal: Unexpected ( Expecting: )                                                       :10_3:GoDeeper:
pRegRule> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRegRule> MATCH (EERR): <EMPTY>
pRegRule> ERROR:
pRegRule> offset=70:
pRegRule> unexpected (
pRegRule> expecting ) or §

*** \ !Unconsumed Error: pRegRule: Unexpected ( Expecting: § )                                                       :2_1:Every:
*** / pTypeDefinition                                                                                                 :2_1:Every:
**** / pRuleLabel                                                                                                    :2_1:Every:
***** / $>|                                                                                                         :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting §

***** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: §                                                      :2_1:Every:
pRuleLabel> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=4:
pRuleLabel> unexpected EVERY
pRuleLabel> expecting §

**** \ !Unconsumed Error: pRuleLabel: Unexpected EVERY Expecting: §                                                 :2_1:Every:
**** / pHornlike/uponLimb                                                                                            :2_1:Every:
***** / preambleParamText:[Upon]                                                                                    :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                                  :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

***** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                               :2_1:Every:
pHornlike/uponLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/uponLimb> MATCH (EERR): <EMPTY>
pHornlike/uponLimb> ERROR:
pHornlike/uponLimb> offset=4:
pHornlike/uponLimb> unexpected EVERY
pHornlike/uponLimb> expecting UPON

**** \ !Unconsumed Error: pHornlike/uponLimb: Unexpected EVERY Expecting: UPON                                       :2_1:Every:
**** / pHornlike/givenLimb                                                                                           :2_1:Every:
***** / preambleParamText:[Given]                                                                                   :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                                 :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

***** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                             :2_1:Every:
pHornlike/givenLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/givenLimb> MATCH (EERR): <EMPTY>
pHornlike/givenLimb> ERROR:
pHornlike/givenLimb> offset=4:
pHornlike/givenLimb> unexpected EVERY
pHornlike/givenLimb> expecting GIVEN

**** \ !Unconsumed Error: pHornlike/givenLimb: Unexpected EVERY Expecting: GIVEN                                     :2_1:Every:
pTypeDefinition> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pTypeDefinition> MATCH (EERR): <EMPTY>
pTypeDefinition> ERROR:
pTypeDefinition> offset=4:
pTypeDefinition> unexpected EVERY
pTypeDefinition> expecting DEFINE, GIVEN, UPON, or §

*** \ !Unconsumed Error: pTypeDefinition: Unexpected EVERY Expecting: § GIVEN UPON DEFINE                            :2_1:Every:
*** / pConstitutiveRule                                                                                               :2_1:Every:
**** / pRuleLabel                                                                                                    :2_1:Every:
***** / $>|                                                                                                         :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting §

***** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: §                                                      :2_1:Every:
pRuleLabel> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=4:
pRuleLabel> unexpected EVERY
pRuleLabel> expecting §

**** \ !Unconsumed Error: pRuleLabel: Unexpected EVERY Expecting: §                                                 :2_1:Every:
**** / calling myindented pNameParens                                                                                :2_1:Every:
***** / manyIndentation/leaf?                                                                                       :2_1:Every:
****** / pMultiTermAka                                                                                             :2_1:Every:
******* / pAKA                                                                                                    :2_1:Every:
******** / slAKA                                                                                                 :2_1:Every:
********* / $*|                                                                                                 :2_1:Every:
********** / slAKA base                                                                                        :2_1:Every:
*********** / slMultiTerm                                                                                     :2_1:Every:
************ / someSL                                                                                        :2_1:Every:
************* / pNumAsText                                                                                  :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************* \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                           :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************ \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*********** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number                :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

********** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

********* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                            :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

******** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                            :2_1:Every:
pAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pAKA> MATCH (EERR): <EMPTY>
pAKA> ERROR:
pAKA> offset=4:
pAKA> unexpected EVERY
pAKA> expecting other text or number

******* \ !Unconsumed Error: pAKA: Unexpected EVERY Expecting: other text or number                               :2_1:Every:
pMultiTermAka> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pMultiTermAka> MATCH (EERR): <EMPTY>
pMultiTermAka> ERROR:
pMultiTermAka> offset=4:
pMultiTermAka> unexpected EVERY
pMultiTermAka> expecting other text or number

****** \ !Unconsumed Error: pMultiTermAka: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

***** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
***** / manyIndentation/deeper; calling someIndentation                                                             :2_1:Every:
****** / someIndentation                                                                                           :2_1:Every:
******* / myindented-GoDeeper                                                                                     :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******* \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                   :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

****** \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                         :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

***** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (           :2_1:Every:
calling myindented pNameParens> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
calling myindented pNameParens> MATCH (EERR): <EMPTY>
calling myindented pNameParens> ERROR:
calling myindented pNameParens> offset=4:
calling myindented pNameParens> unexpected EVERY
calling myindented pNameParens> expecting ( or other text or number

**** \ !Unconsumed Error: calling myindented pNameParens: Unexpected EVERY Expecting: ( other text or number         :2_1:Every:
pConstitutiveRule> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pConstitutiveRule> MATCH (EERR): <EMPTY>
pConstitutiveRule> ERROR:
pConstitutiveRule> offset=4:
pConstitutiveRule> unexpected EVERY
pConstitutiveRule> expecting (, other text or number, or §

*** \ !Unconsumed Error: pConstitutiveRule: Unexpected EVERY Expecting: § ( other text or number                     :2_1:Every:
*** / pScenarioRule                                                                                                   :2_1:Every:
pScenarioRule> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pScenarioRule> MATCH (EERR): <EMPTY>
pScenarioRule> ERROR:
pScenarioRule> offset=4:
pScenarioRule> unexpected EVERY
pScenarioRule> expecting SCENARIO

*** \ !Unconsumed Error: pScenarioRule: Unexpected EVERY Expecting: SCENARIO                                          :2_1:Every:
*** / pHornlike                                                                                                       :2_1:Every:
**** / pSrcRef                                                                                                       :2_1:Every:
***** / pRuleLabel                                                                                                  :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting §

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: §                                                    :2_1:Every:
pRuleLabel> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=4:
pRuleLabel> unexpected EVERY
pRuleLabel> expecting §

***** \ !Unconsumed Error: pRuleLabel: Unexpected EVERY Expecting: §                                               :2_1:Every:
pSrcRef> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pSrcRef> MATCH (EOK): <EMPTY>
pSrcRef> VALUE: ((Nothing,Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 2, version = Nothing})),[])

**** \ pSrcRef has returned (Nothing,Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 2, version = Nothing})) :2_1:Every:
**** / pHornlike / permute                                                                                           :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/uponLimb                                                                                          :2_1:Every:
****** / preambleParamText:[Upon]                                                                                  :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                                :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

****** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                             :2_1:Every:
pHornlike/uponLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/uponLimb> MATCH (EERR): <EMPTY>
pHornlike/uponLimb> ERROR:
pHornlike/uponLimb> offset=4:
pHornlike/uponLimb> unexpected EVERY
pHornlike/uponLimb> expecting UPON

***** \ !Unconsumed Error: pHornlike/uponLimb: Unexpected EVERY Expecting: UPON                                     :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/givenLimb                                                                                         :2_1:Every:
****** / preambleParamText:[Given]                                                                                 :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                               :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

****** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                           :2_1:Every:
pHornlike/givenLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/givenLimb> MATCH (EERR): <EMPTY>
pHornlike/givenLimb> ERROR:
pHornlike/givenLimb> offset=4:
pHornlike/givenLimb> unexpected EVERY
pHornlike/givenLimb> expecting GIVEN

***** \ !Unconsumed Error: pHornlike/givenLimb: Unexpected EVERY Expecting: GIVEN                                   :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/givenLimb                                                                                         :2_1:Every:
****** / preambleParamText:[Given]                                                                                 :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting GIVEN

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: GIVEN                                               :2_1:Every:
preambleParamText:[Given]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Given]> MATCH (EERR): <EMPTY>
preambleParamText:[Given]> ERROR:
preambleParamText:[Given]> offset=4:
preambleParamText:[Given]> unexpected EVERY
preambleParamText:[Given]> expecting GIVEN

****** \ !Unconsumed Error: preambleParamText:[Given]: Unexpected EVERY Expecting: GIVEN                           :2_1:Every:
pHornlike/givenLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/givenLimb> MATCH (EERR): <EMPTY>
pHornlike/givenLimb> ERROR:
pHornlike/givenLimb> offset=4:
pHornlike/givenLimb> unexpected EVERY
pHornlike/givenLimb> expecting GIVEN

***** \ !Unconsumed Error: pHornlike/givenLimb: Unexpected EVERY Expecting: GIVEN                                   :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/uponLimb                                                                                          :2_1:Every:
****** / preambleParamText:[Upon]                                                                                  :2_1:Every:
******* / $>|                                                                                                     :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting UPON

******* \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: UPON                                                :2_1:Every:
preambleParamText:[Upon]> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
preambleParamText:[Upon]> MATCH (EERR): <EMPTY>
preambleParamText:[Upon]> ERROR:
preambleParamText:[Upon]> offset=4:
preambleParamText:[Upon]> unexpected EVERY
preambleParamText:[Upon]> expecting UPON

****** \ !Unconsumed Error: preambleParamText:[Upon]: Unexpected EVERY Expecting: UPON                             :2_1:Every:
pHornlike/uponLimb> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/uponLimb> MATCH (EERR): <EMPTY>
pHornlike/uponLimb> ERROR:
pHornlike/uponLimb> offset=4:
pHornlike/uponLimb> unexpected EVERY
pHornlike/uponLimb> expecting UPON

***** \ !Unconsumed Error: pHornlike/uponLimb: Unexpected EVERY Expecting: UPON                                     :2_1:Every:
***** / whenCase                                                                                                    :2_1:Every:
****** / whenMeansIf                                                                                               :2_1:Every:
whenMeansIf> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenMeansIf> MATCH (EERR): <EMPTY>
whenMeansIf> ERROR:
whenMeansIf> offset=4:
whenMeansIf> unexpected EVERY
whenMeansIf> expecting IF, MEANS, or WHEN

****** \ !Unconsumed Error: whenMeansIf: Unexpected EVERY Expecting: IF WHEN MEANS                                 :2_1:Every:
****** / Otherwise                                                                                                 :2_1:Every:
Otherwise> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
Otherwise> MATCH (EERR): <EMPTY>
Otherwise> ERROR:
Otherwise> offset=4:
Otherwise> unexpected EVERY
Otherwise> expecting OTHERWISE

****** \ !Unconsumed Error: Otherwise: Unexpected EVERY Expecting: OTHERWISE                                       :2_1:Every:
whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
whenCase> MATCH (EERR): <EMPTY>
whenCase> ERROR:
whenCase> offset=4:
whenCase> unexpected EVERY
whenCase> expecting IF, MEANS, OTHERWISE, or WHEN

***** \ !Unconsumed Error: whenCase: Unexpected EVERY Expecting: OTHERWISE IF WHEN MEANS                            :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
***** / pHornlike/ambitious                                                                                         :2_1:Every:
****** / $>|                                                                                                       :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting DECIDE or DEFINE

****** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: DEFINE DECIDE                                         :2_1:Every:
pHornlike/ambitious> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/ambitious> MATCH (EERR): <EMPTY>
pHornlike/ambitious> ERROR:
pHornlike/ambitious> offset=4:
pHornlike/ambitious> unexpected EVERY
pHornlike/ambitious> expecting DECIDE or DEFINE

***** \ !Unconsumed Error: pHornlike/ambitious: Unexpected EVERY Expecting: DEFINE DECIDE                           :2_1:Every:
***** / pHornlike/someStructure                                                                                     :2_1:Every:
****** / manyIndentation/leaf?                                                                                     :2_1:Every:
******* / relPredNextlineWhen                                                                                     :2_1:Every:
******** / pRelPred optIndentedTuple whenCase                                                                    :2_1:Every:
********* / optIndentedTuple                                                                                    :2_1:Every:
********** / optIndented                                                                                       :2_1:Every:
*********** / pRelPred                                                                                        :2_1:Every:
************ / slRelPred                                                                                     :2_1:Every:
************* / nested simpleHorn                                                                           :2_1:Every:
************** > |^|                                                                                       :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

************* \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number      :2_1:Every:
************* / RPConstraint                                                                                :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

************* \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number           :2_1:Every:
************* / RPBoolStructR                                                                               :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

************* \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number          :2_1:Every:
************* / RPMT                                                                                        :2_1:Every:
************** / $*|                                                                                       :2_1:Every:
*************** / slAKA                                                                                   :2_1:Every:
**************** / $*|                                                                                   :2_1:Every:
***************** / slAKA base                                                                          :2_1:Every:
****************** / slMultiTerm                                                                       :2_1:Every:
******************* / someSL                                                                          :2_1:Every:
******************** / pNumAsText                                                                    :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

******************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number             :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

******************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number     :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

****************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number  :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

***************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number     :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

**************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number              :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

*************** \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

************* \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

************ \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                :2_1:Every:
pRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred> MATCH (EERR): <EMPTY>
pRelPred> ERROR:
pRelPred> offset=4:
pRelPred> unexpected EVERY
pRelPred> expecting other text or number

*********** \ !Unconsumed Error: pRelPred: Unexpected EVERY Expecting: other text or number                   :2_1:Every:
optIndented> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndented> MATCH (EERR): <EMPTY>
optIndented> ERROR:
optIndented> offset=4:
optIndented> unexpected EVERY
optIndented> expecting other text or number

********** \ !Unconsumed Error: optIndented: Unexpected EVERY Expecting: other text or number                  :2_1:Every:
optIndentedTuple> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
optIndentedTuple> MATCH (EERR): <EMPTY>
optIndentedTuple> ERROR:
optIndentedTuple> offset=4:
optIndentedTuple> unexpected EVERY
optIndentedTuple> expecting other text or number

********* \ !Unconsumed Error: optIndentedTuple: Unexpected EVERY Expecting: other text or number               :2_1:Every:
pRelPred optIndentedTuple whenCase> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRelPred optIndentedTuple whenCase> MATCH (EERR): <EMPTY>
pRelPred optIndentedTuple whenCase> ERROR:
pRelPred optIndentedTuple whenCase> offset=4:
pRelPred optIndentedTuple whenCase> unexpected EVERY
pRelPred optIndentedTuple whenCase> expecting other text or number

******** \ !Unconsumed Error: pRelPred optIndentedTuple whenCase: Unexpected EVERY Expecting: other text or number :2_1:Every:
relPredNextlineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredNextlineWhen> MATCH (EERR): <EMPTY>
relPredNextlineWhen> ERROR:
relPredNextlineWhen> offset=4:
relPredNextlineWhen> unexpected EVERY
relPredNextlineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredNextlineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
******* / relPredSamelineWhen                                                                                     :2_1:Every:
******** / $*|                                                                                                   :2_1:Every:
********* / slRelPred                                                                                           :2_1:Every:
********** / nested simpleHorn                                                                                 :2_1:Every:
*********** > |^|                                                                                             :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
nested simpleHorn> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
nested simpleHorn> MATCH (EERR): <EMPTY>
nested simpleHorn> ERROR:
nested simpleHorn> offset=4:
nested simpleHorn> unexpected EVERY
nested simpleHorn> expecting other text or number

********** \ !Unconsumed Error: nested simpleHorn: Unexpected EVERY Expecting: other text or number            :2_1:Every:
********** / RPConstraint                                                                                      :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPConstraint> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPConstraint> MATCH (EERR): <EMPTY>
RPConstraint> ERROR:
RPConstraint> offset=4:
RPConstraint> unexpected EVERY
RPConstraint> expecting other text or number

********** \ !Unconsumed Error: RPConstraint: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
********** / RPBoolStructR                                                                                     :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slMultiTerm                                                                                   :2_1:Every:
************* / someSL                                                                                      :2_1:Every:
************** / pNumAsText                                                                                :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                         :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

************* \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number                 :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

************ \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number              :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPBoolStructR> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPBoolStructR> MATCH (EERR): <EMPTY>
RPBoolStructR> ERROR:
RPBoolStructR> offset=4:
RPBoolStructR> unexpected EVERY
RPBoolStructR> expecting other text or number

********** \ !Unconsumed Error: RPBoolStructR: Unexpected EVERY Expecting: other text or number                :2_1:Every:
********** / RPMT                                                                                              :2_1:Every:
*********** / $*|                                                                                             :2_1:Every:
************ / slAKA                                                                                         :2_1:Every:
************* / $*|                                                                                         :2_1:Every:
************** / slAKA base                                                                                :2_1:Every:
*************** / slMultiTerm                                                                             :2_1:Every:
**************** / someSL                                                                                :2_1:Every:
***************** / pNumAsText                                                                          :2_1:Every:
pNumAsText> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=4:
pNumAsText> unexpected EVERY
pNumAsText> expecting number

***************** \ !Unconsumed Error: pNumAsText: Unexpected EVERY Expecting: number                   :2_1:Every:
someSL> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=4:
someSL> unexpected EVERY
someSL> expecting other text or number

**************** \ !Unconsumed Error: someSL: Unexpected EVERY Expecting: other text or number           :2_1:Every:
slMultiTerm> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slMultiTerm> MATCH (EERR): <EMPTY>
slMultiTerm> ERROR:
slMultiTerm> offset=4:
slMultiTerm> unexpected EVERY
slMultiTerm> expecting other text or number

*************** \ !Unconsumed Error: slMultiTerm: Unexpected EVERY Expecting: other text or number        :2_1:Every:
slAKA base> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=4:
slAKA base> unexpected EVERY
slAKA base> expecting other text or number

************** \ !Unconsumed Error: slAKA base: Unexpected EVERY Expecting: other text or number           :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

************* \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
slAKA> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=4:
slAKA> unexpected EVERY
slAKA> expecting other text or number

************ \ !Unconsumed Error: slAKA: Unexpected EVERY Expecting: other text or number                    :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                        :2_1:Every:
RPMT> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
RPMT> MATCH (EERR): <EMPTY>
RPMT> ERROR:
RPMT> offset=4:
RPMT> unexpected EVERY
RPMT> expecting other text or number

********** \ !Unconsumed Error: RPMT: Unexpected EVERY Expecting: other text or number                         :2_1:Every:
slRelPred> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
slRelPred> MATCH (EERR): <EMPTY>
slRelPred> ERROR:
slRelPred> offset=4:
slRelPred> unexpected EVERY
slRelPred> expecting other text or number

********* \ !Unconsumed Error: slRelPred: Unexpected EVERY Expecting: other text or number                      :2_1:Every:
$*|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=4:
$*|> unexpected EVERY
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected EVERY Expecting: other text or number                              :2_1:Every:
relPredSamelineWhen> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
relPredSamelineWhen> MATCH (EERR): <EMPTY>
relPredSamelineWhen> ERROR:
relPredSamelineWhen> offset=4:
relPredSamelineWhen> unexpected EVERY
relPredSamelineWhen> expecting other text or number

******* \ !Unconsumed Error: relPredSamelineWhen: Unexpected EVERY Expecting: other text or number                :2_1:Every:
manyIndentation/leaf?> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/leaf?> MATCH (EERR): <EMPTY>
manyIndentation/leaf?> ERROR:
manyIndentation/leaf?> offset=4:
manyIndentation/leaf?> unexpected EVERY
manyIndentation/leaf?> expecting other text or number

****** \ !Unconsumed Error: manyIndentation/leaf?: Unexpected EVERY Expecting: other text or number                :2_1:Every:
****** / manyIndentation/deeper; calling someIndentation                                                           :2_1:Every:
******* / someIndentation                                                                                         :2_1:Every:
******** / myindented-GoDeeper                                                                                   :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

******** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                 :2_1:Every:
someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
someIndentation> MATCH (EERR): <EMPTY>
someIndentation> ERROR:
someIndentation> offset=4:
someIndentation> unexpected EVERY
someIndentation> expecting (

******* \ !Unconsumed Error: someIndentation: Unexpected EVERY Expecting: (                                       :2_1:Every:
manyIndentation/deeper; calling someIndentation> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
manyIndentation/deeper; calling someIndentation> MATCH (EERR): <EMPTY>
manyIndentation/deeper; calling someIndentation> ERROR:
manyIndentation/deeper; calling someIndentation> offset=4:
manyIndentation/deeper; calling someIndentation> unexpected EVERY
manyIndentation/deeper; calling someIndentation> expecting (

****** \ !Unconsumed Error: manyIndentation/deeper; calling someIndentation: Unexpected EVERY Expecting: (         :2_1:Every:
pHornlike/someStructure> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike/someStructure> MATCH (EERR): <EMPTY>
pHornlike/someStructure> ERROR:
pHornlike/someStructure> offset=4:
pHornlike/someStructure> unexpected EVERY
pHornlike/someStructure> expecting (, DECIDE, DEFINE, or other text or number

***** \ !Unconsumed Error: pHornlike/someStructure: Unexpected EVERY Expecting: ( DEFINE DECIDE other text or number :2_1:Every:
pHornlike / permute> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike / permute> MATCH (EERR): <EMPTY>
pHornlike / permute> ERROR:
pHornlike / permute> offset=4:
pHornlike / permute> unexpected EVERY
pHornlike / permute> expecting (, DECIDE, DEFINE, GIVEN, IF, MEANS, OTHERWISE, UPON, WHEN, or other text or number

**** \ !Unconsumed Error: pHornlike / permute: Unexpected EVERY Expecting: DEFINE DECIDE GIVEN UPON OTHERWISE ( DEFINE DECIDE IF WHEN MEANS other text or number :2_1:Every:
pHornlike> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pHornlike> MATCH (EERR): <EMPTY>
pHornlike> ERROR:
pHornlike> offset=4:
pHornlike> unexpected EVERY
pHornlike> expecting (, DECIDE, DEFINE, GIVEN, IF, MEANS, OTHERWISE, UPON, WHEN, other text or number, or §

*** \ !Unconsumed Error: pHornlike: Unexpected EVERY Expecting: DEFINE DECIDE § GIVEN UPON OTHERWISE ( DEFINE DECIDE IF WHEN MEANS other text or number :2_1:Every:
*** / pRuleLabel                                                                                                      :2_1:Every:
**** / $>|                                                                                                           :2_1:Every:
$>|> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
$>|> MATCH (EERR): <EMPTY>
$>|> ERROR:
$>|> offset=4:
$>|> unexpected EVERY
$>|> expecting §

**** \ !Unconsumed Error: $>|: Unexpected EVERY Expecting: §                                                        :2_1:Every:
pRuleLabel> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRuleLabel> MATCH (EERR): <EMPTY>
pRuleLabel> ERROR:
pRuleLabel> offset=4:
pRuleLabel> unexpected EVERY
pRuleLabel> expecting §

*** \ !Unconsumed Error: pRuleLabel: Unexpected EVERY Expecting: §                                                   :2_1:Every:
*** / pRule: unwrapping indentation and recursing                                                                     :2_1:Every:
**** / myindented-GoDeeper                                                                                           :2_1:Every:
myindented-GoDeeper> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
myindented-GoDeeper> MATCH (EERR): <EMPTY>
myindented-GoDeeper> ERROR:
myindented-GoDeeper> offset=4:
myindented-GoDeeper> unexpected EVERY
myindented-GoDeeper> expecting (

**** \ !Unconsumed Error: myindented-GoDeeper: Unexpected EVERY Expecting: (                                         :2_1:Every:
pRule: unwrapping indentation and recursing> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRule: unwrapping indentation and recursing> MATCH (EERR): <EMPTY>
pRule: unwrapping indentation and recursing> ERROR:
pRule: unwrapping indentation and recursing> offset=4:
pRule: unwrapping indentation and recursing> unexpected EVERY
pRule: unwrapping indentation and recursing> expecting (

*** \ !Unconsumed Error: pRule: unwrapping indentation and recursing: Unexpected EVERY Expecting: (                   :2_1:Every:
pRule> IN: EVERY ( "Organisation" ( ( ( AKA ( "You" <…>
pRule> MATCH (EERR): <EMPTY>
pRule> ERROR:
pRule> offset=70:
pRule> unexpected (
pRule> expecting EOL or regulative rule

** \ !Unconsumed Error: pRule: Unexpected ( Expecting: EOL regulative rule                                             :2_1:Every:
Loading env

Parser tests
  PDPA
Loaded env
    pdpadbno-1 FAILED [1]

Failures:

  test/Spec.hs:834:7: 
  1) Parser tests, PDPA, pdpadbno-1
       expected: [[Regulative {subj = Leaf (("Organisation" :| [],Nothing) :| []), rkeyword = REvery, who = Just (Leaf (RPMT ["is","not","a Public Agency"])), cond = Just (Leaf (RPMT ["the data breach occurs on or after the date of commencement of PDP(A)A 2020 \167\&13"])), deontic = DMust, action = Leaf (("assess" :| ["if it is a Notifiable Data Breach"],Nothing) :| [("by" :| ["performing","NDB Qualification"],Nothing)]), temporal = Just (TemporalConstraint TBefore (Just 30) "days"), hence = Just (RuleAlias ["Notification"]), lest = Just (Regulative {subj = Leaf (("the PDPC" :| [],Nothing) :| []), rkeyword = RParty, who = Nothing, cond = Nothing, deontic = DMay, action = Leaf (("demand" :| ["an explanation for your inaction"],Nothing) :| []), temporal = Nothing, hence = Just (Regulative {subj = Leaf (("You" :| [],Nothing) :| []), rkeyword = RParty, who = Nothing, cond = Nothing, deontic = DMust, action = Leaf (("respond" :| [],Nothing) :| [("to" :| ["the PDPC"],Nothing),("about" :| ["your inaction"],Nothing)]), temporal = Nothing, hence = Nothing, lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Nothing, upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []}), lest = Nothing, rlabel = Nothing, lsource = Nothing, srcref = Nothing, upon = Nothing, given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []}), rlabel = Just ("\167",2,"Assess"), lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 1, version = Nothing}), upon = Just (("becoming aware a data breach may have occurred" :| [],Nothing) :| []), given = Nothing, having = Nothing, wwhere = [], defaults = [], symtab = []},DefNameAlias {name = ["You"], detail = ["Organisation"], nlhint = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 2, srccol = 3, version = Nothing})}]]
       but parsing failed with error:
       2:1:
       unexpected EVERY
       expecting EOL, end of input, or standalone rule section heading
       
       §§        Assess                                                                                                                                                                      
       ✳ EVERY   Organisation                                                                                AKA                 You                                                         
       WHO       is                                    not                                 a Public Agency                                                                                   
       MUST      WITHIN                                30                                  days                                                                                              
       UPON      becoming aware a data breach may                                                                                                                                            
                 have occurred                                                                                                                                                               
       WHEN      the data breach occurs on or after                                                                                                                                          
                 the date of commencement of PDP(A)A                                                                                                                                         
                 2020 §13                                                                                                                                                                    
       ->        assess                                if it is a Notifiable Data Breach                                                                                                     
                 by                                    performing                                            NDB Qualification                                                               
       HENCE     Notification                                                                                                                                                                
       LEST                                            the PDPC                            MAY                                                                                               
                                                                                           ->                                    demand   an explanation for your inaction                   
                                                                                           HENCE             You                 MUST                                                        
                                                                                                                                 ->       respond                                            
                                                                                                                                          to                                 the PDPC        
                                                                                                                                          about                              your inaction   
       
       
       Stream:
       §§ ( "Assess" ) "✳" EVERY
           ( "Organisation"
               (
                   (
                       ( AKA ( "You" ) )
                   )
               )
           ) WHO
           ( "is"
               ( "not" ( "a Public Agency" ) )
           ) MUST
           ( BEFORE
               ( 30 ( "days" ) )
           ) UPON ( "becoming aware a data breach may have occurred" ) WHEN ( "the data breach occurs on or after the date of commencement of PDP(A)A 2020 §13" ) DO
           ( "assess" ( "if it is a Notifiable Data Breach" ) "by"
               ( "performing" ( ( "NDB Qualification" ) ) )
           ) HENCE ( "Notification" ) LEST
           (
               ( "the PDPC"
                   ( MAY DO
                       (
                           ( "demand" ( "an explanation for your inaction" ) )
                       ) HENCE
                       ( "You"
                           ( MUST DO
                               ( "respond" "to" ( "the PDPC" ) "about" ( "your inaction" ) )
                           )
                       )
                   )
               )
           )

  To rerun use: --match "/Parser tests/PDPA/pdpadbno-1/"

Randomized with seed 391605926

Finished in 1.0185 seconds
1 example, 1 failure

natural4> Test suite natural4-test failed
Test suite failure for package natural4-0.1.0.0
    natural4-test:  exited with: ExitFailure 1
Logs printed to console

