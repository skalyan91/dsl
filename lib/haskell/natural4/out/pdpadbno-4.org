* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

natural4-0.1.0.0: unregistering (local file changes: .stack-work/dist/x86_64-osx/Cabal-3.2.1.0/build/autogen/Paths_natural4.hs .stack-work/dist/x86_64...)
natural4> build (lib + exe + test)
Preprocessing library for natural4-0.1.0.0..
Building library for natural4-0.1.0.0..
Preprocessing test suite 'natural4-test' for natural4-0.1.0.0..
Building test suite 'natural4-test' for natural4-0.1.0.0..
Preprocessing executable 'natural4-exe' for natural4-0.1.0.0..
Building executable 'natural4-exe' for natural4-0.1.0.0..
natural4> copy/register
Installing library in /Users/mengwong/src/smucclaw/dsl/lib/haskell/natural4/.stack-work/install/x86_64-osx/aa24c8ca7646297a692b785b0a377da57d32d7f1f92db2e93dab9777c00bb570/8.10.7/lib/x86_64-osx-ghc-8.10.7/natural4-0.1.0.0-2LAQaIydZmK6hpUoVTUvPg
Installing executable natural4-exe in /Users/mengwong/src/smucclaw/dsl/lib/haskell/natural4/.stack-work/install/x86_64-osx/aa24c8ca7646297a692b785b0a377da57d32d7f1f92db2e93dab9777c00bb570/8.10.7/bin
Registering library for natural4-0.1.0.0..
natural4> test (suite: natural4-test, args: --match /PDPA/pdpadbno-4/)

Passed:
""

Passed:
"d"

Passed:
"\1062756"

Passed:
"Ap\1038076"

Passed:
"\f\180529"

Passed:
"8w^"

Passed:
"=\31347"

Passed:
"zY\1078004\194689"

Passed:
"3\128279Ye2}2]"

Passed:
"\EOT\153472\996913"

Passed:
"*f\38587Gt>\SYN"

Passed:
"]\29310\DC2"

Passed:
"\198226imfr\1082106\1050400\EOT]\vyG"

Passed:
"BD\1089042`HN\183408o"

Passed:
"x\DC3\126267-r\1080017\59630LNb"

Passed:
"}\43970yS\1543"

Passed:
"\47967"

Passed:
"\SI\994281\f\GS25)W9D"

Passed:
"\ETB\1073134uK#\1087417\STXH4"

Passed:
"l\NAK\149850\fC8\83319}\SOHC\1009095\42009D}ph:s\1036018"

Passed:
"E"

Passed:
"(\1049778B~Y\1065370E/"

Passed:
"\1051728rv\94399G"

Passed:
"\NUL`\rB)\1113885\&1\1023625\66209\1080324#^>\333\t 0Ld1A&B"

Passed:
"D\DLE5\"\n\ESC:x'\1072429\144399{\139169\1106303\CAN\f"

Passed:
""

Passed:
"\990839\EOT~\DLEu]rN@t\USG"

Passed:
"\97015y"

Passed:
"#\SO\998696\DELe\49099\&0X%\1012415\183063}\125241Zs\v\1068579-"

Passed:
"\135485\1059805\163399\&5ZtP\154417\129612^\NUL\1069266\1095368H\a\RS"

Passed:
"J\1040179!\SUB\62803_@g"

Passed:
"4~:?K\ACK\GS"

Passed:
"{8!\US*?\EM*\RS@\127098m\1026025?s\a\RSAE\1054948\ETX\\l@\92436G\FS\CANd\\`"

Passed:
"X\52550\1052298P\t\1103586!T\1066966*9Y\177013\\\160102r!B\83505\ACKd\38808D"

Passed:
"\1106157\1010598\54943Aj\16241K_\ETB"

Passed:
"XT\DC1\NAK\149035S$U\992301\&6h?\157032l"

Passed:
"Q*"

Passed:
""

Passed:
"/\194699\1108753\SI\991198\SUB\992594e\164914M\160157\99630|Eam%\132586Ia\ENQN9m\SO31ZQ\1041841\ETB0'Jl"

Passed:
"\1025681C\GS\DLE[s.\1034241\1061118g"

Passed:
"O1!?{E\1081495\178270\&3C\1092275`x>xe\DC3'&\SOH\59622r+Tb\997003J\ENQ\1032907?\989325\1046174,\151514[\42283"

Passed:
"!\184684M\t"

Passed:
"E\ETBOT"

Passed:
"9\FSz\1093509&aE}w:v1l1\nG\SO\SO}\1097564;\DC44\DC4x\1020510<H\1037218\FSjrY\ENQ\ENQ\1028570\SO"

Passed:
"\\w%r\DC2\EMEy\SUBZ\n\b\190053\988132\201039H\\\r\"\1005775\ETX\1108337\194920t\ENQfyH\ESC\171814g\1069267l+{\165830 5[(\n\"\SOH"

Passed:
"N"

Passed:
"%\SOj`\SYN\1086141\73874\95064]\SOH\1015146>%\DC3\DC3\a\134090V7Owm#\NUL\tQ0\DLE\RS"

Passed:
"\STX$\187657\171376\1024301uPx)\r\CAN\41392\45671n]\136790\SO"

Passed:
"\100420\182004h\161869\197908\&4T\43672)\SYNo\137237J\165270\ENQavD\178683\26732\160344\35484_*\SI\9609\990958\EOT[*.\101032\93841^j\1030725\47771\&9\190979"

Passed:
"\DLE\154104\1052782)#asq\1006429\&5\US\US\1014201"

Passed:
"\f\1029368\993971\61822v%\DC2\993238\166005eI\NAK\100378\1111110\15045c\SUB\1069859Q\CANn\SOZP]\142230\ETB*\1072626\SI\198214{\171849\SO3A\DC1N\ETXj\FS\182059;~Y!\1081914\EMTF"

Passed:
"/LL\ACK0\1055573W\1100376W\SOH\1068463i\SUB\45979\STXKpQ\40332Z<\1040090\&3I\19054|-m\EOTVH4\b.U}\STX"

Passed:
"\46081\41908M\47122\&8_\NAK\SUB[bEm\71955{\SO\NULM\1006633<Y^\9469\1028839w[\13459))b'&$KG\ENQ)\DC4\EM9\DLE\1057586\&1%e\180442\EOTrB\55164"

Passed:
"L\ACK"

Passed:
"\12765.\SOH\ACKD\1093318\&6"

Passed:
"p\SIoi\CAN\b \DLE!c\DC36a\CANA\1089445o#?\1041792Dk\1059991\b\983860\10387:<kL<\986905\1054699\24048\DC3#(\128825N`\DC2\62454"

Passed:
"tai\139359\176228s\SYNO'J$t(\DEL9\SYNX\190496fk\NAK\SIi\1045429B\ACKZu\200772\1083525\b&\a[p%\198455m0\1098049E\ACKc]j\1045766o"

Passed:
"S\1109151\1109616;2O\150130\1081218\DEL>\n\94481IZ61\v\165434BN\1061598\SUBT\1054383q\rr\1026121\ACK\STXl\CAN\26662\1023908\f\"q>\t|7\DC3AI\61454\ETB$\40121\1085326\1100828\SI|\59589\43360\DC4\1052604"

Passed:
"\DC1\186377#vnjl\CAN\aNa[\DC1\n\101510Jo\bX\1063774\&1\t\173230\v\RS\\8NV9N]\r\1085327\DEL\191123Gl"

Passed:
"0\1111385G"

Passed:
"7\DC2\DC2\NAK\1060184@lO*'\1036808='\26342\DEL.E]k\126479\1000333\4769g\132454.\b\1104054\t"

Passed:
"=L2b\SOx\1108984\1080182RW\SYN\FS\1076544V4\1046708Z\SYN\34789\42813\DLE\ETX"

Passed:
"\a6\67755"

Passed:
"f\156556\999394C"

Passed:
"{\150411cq\1059868ORP\1004705)fqe\1102153\1104249\170691\1057136Cn*YeJ%\1006163H"

Passed:
"\1051034\51510F%Q}\v0R\CAN\1047530\993790\fk,aw\CAN\EM_\SI\1086360T)#=;sdC@\63376\1078979!\STXUT\SYN\ESC{b\r)\1059293\SIO*b6Vd\USK\1025370\DLE\985561bsB\SUB\r\DLEl\60575\154354"

Passed:
"CZ\t4\1044718A/\144295ndM\49539\&1\995583\33811\67240\125059\SOHqXO\997765.\134121T\195027Q\ACK\ACKh\v;_\STX`{uW{"

Passed:
"\54787\46283XH/Z.\1076981%2!\45248\DC1\ENQ:!\134587\58362\\\DEL\DELZ*;^x\DC3v!!\1076124\154024$0\DC2\23708\aOQ0].\DC16>m\15863^q\1090888"

Passed:
"\SOLl(Pw:\DC2\151829q%P\1048727+\ESCJ\1053295CT\RS)\174093"

Passed:
"pb1g\rn\NAK\b\1019194\1054959\996829S\RS\1020825\186342;H\1086919E1"

Passed:
"\1028133K,\1076996@|\1090184\1098911\138190aBD\1032792Y\67263\DC3\1101041h"

Passed:
"D\45259\1070919Ah\12792\10722Y\33796y"

Passed:
"X!\1014589\32027]M\144268\133124)d\DC3Tk\1034438Q\1570gtV\185321"

Passed:
"`\EMl\37194#\1101387}W\DC3,\83339m\US\RS\153923]\990183+V\SI\DELN/\SYNa#\NAK\SUBt\GS\CANJ\1034828S\ETBM\1090757\&0"

Passed:
"z\143742-\t6\ENQ#l\98126xcd\110976p(\1026095G\1035996\54541N\NAKZ^>e\1038982\25817NSjB }4jx\1113868\47483\FS\98968\200950\189980o"

Passed:
"\ACK\1039137\b\DEL<\62405\&8\190416\1068994N\rpU\t\1104648$\149352d]9x\1082374ebQ\38111!x=\1069133\1053879\EM\nZ\985941s\63296z6\156000o\ENQ"

Passed:
"-kIH<~~h\ENQ\150631W;A}\FS<~D@\SO`\1043990=j7\6419"

Passed:
"Z\f<\1092995\26742\1022037\1032818\&8Ht\1090772\33812\&2e\1089654\&0\ETX\\\995680W\SOHVet\174510\SI7A\10336\172360\DC1\SYN#\DC2\DLE8\156104\1015234\1015182f^\67225R+)A<%'}T\61661\143490*\34130\SYN\STX\t\200156\1025812\&6_\v?:E`%1/\1088714\&4\DC2\ACKQ\DC3"

Passed:
"\17586\US\35779\ENQEg\DC2*B w;o096k'\SOH\1104460\ESCf2\"\US}dHA649\100908vA\EM!e4\CANc~AI\SI>l\NAK=\NAK\1022745i\DC4j"

Passed:
"\172432\b/\164851V\GS>10S\RS\vCz\SYN\989267O#B|("

Passed:
"\40808\5148ys\1039080\DEL~\996201XMe\139244\DC2MI\1087065,|G+\1066804oN\165039\STX>xvr\40432\50931v\1060510\1102594z&V\NUL Z\120455H4\14890\&8~\STX3\NULO\1041260'"

Passed:
"\133817\b\917621\996985d\186411J67.r\CAN\1034253\183659\ESC/^:v^"

Passed:
"[*+\995932\178409Lg$\ETXW\69992\126603Ph\SYNk\DEL:\r\EOTk\13887\169683 o\t+\156227i8w"

Passed:
"-U9\996868\SUB\ETX\6205O\1043107\DC16\1105949CZ \r!\NAK^\147448\n\DC3\186066\140732@>3\1000844\"\EM|\ETXD\ETB\11760*\1013558X\NAK>%\985911\&6\1073758((\1102885"

Passed:
"mm\986498rZFt\987244\NAKg*\DLE\n\1081426n\19496H\1106287'T\33982\SUB\47123\175861\ETX-\GS\EOT\RS&\1046289"

Passed:
"\1049600VGg+\26989\&4\SYN3+v\167341llUT\SOH2\37332xH\19407\&4\18170\ESC\1071187Kn\1110695"

Passed:
"uo\1112257$\60024^V\6430-?}G\156609\f\EM\1026833XJ:8o:\ACK\988518\b>\ETX\"D\124991\GS[&z-A6\16799q.\1505{\ETB\59959IM#A\58935-K\1069849-S\v_\1000425\\"

Passed:
"\149079\29526"

Passed:
"\STX\SYN\RSy\37371(\ETXzXPu\DLE+\162167\ACK#\151653O}#+Cc\1109065\1017013\10948H$w\1075478\ACKKA<\ENQ2>\1105356N8\198777\161472JKi\166284\\G\162128\1009881w"

Passed:
"\1110411\10832\1060095h7\166637\ACK\46523\1104008\1100949"

Passed:
"\ESC\28874|eR\ESC\1022536\&1"

Passed:
"\1096394\140971\SO?\DC4\1030230W]\1033791d4\1110821?\1028890(\160312\1006178\SOGzc\DLE\ETB`D\ENQ c$;\1059979Y\1006623|\1062621s\1072644SH\"\EOTSA"

Passed:
"\ACK\1042505\141628#\DC3!\187785uxfYfD=\1037358"

Passed:
"\168980sr&\EOTZ6\184402\1022038N\995130\SYN4\121143Cg`Ry\GS=sy\1101369\rKk\SUB\RS\118888U\DC2N\1058955\166677\23687?\160288DB@0=\SOH?\194695\&2T<eD\DLE%B::\143177\"tB)i\FSTObmJ"

Passed:
"A#y\vb\1029104\1590\"Z\9928\&5_]\180613?y/t\DC3\22492M?hCFw\DC39`\EOT\1022748\45338<d\ACK\1037869`@ede\1039183\f\1007008\GS+\DELmM\DC1\SYN\1098229k\ETX\DC2d;\SILI\DC3\1081803"

Passed:
"\174633\EM4S\t\b\28275@I\1111980Y\1003028D\199888\26041l@F\EOT~\SUBuF%"

Passed:
"s\129189\RS\1034571p[\1069170~\ETB\SO\1081417g;\1055676\ACK\178512XnJ<\DLE,\1023428\984230t7\CAN\STX\ESC^c\30248\177908z4"

Passed:
"\US\194872a\1006075\&3H\1100744p\62983ZD\SYN\"\SOHNJ\tg\SO\DC1\1070140>h\NUL\n\1026992\1014241\DC4\DC2("

Passed:
"&G^=\1065619|~\992376t\169709\\\v\n#\DC2\DC1\58113hPs%O\\\thrA\1032607;1(\38088H\fW\1078365qT\999508\1052747\\\171443"

Passed:
"QtY\32626E\152686~*\n\1001390\30444r\61438\DEL5 \1017167\b\156281pC5$\3731?y\DC1k\133494\"\bq\DC3\aH\134340/M\1037806\140388\29525B\ESC\194721.`\NUL\DC1F,\GS\1036011\1003355\190689d!A\a\";4\1087499o\988266h\172953?\1039276h\DLEM\197665\&8"

+++ OK, passed 100 tests.
* Tokens
Lib preprocessor: inserting EOL between Other "the data breach relates to" and Other "the individual\8217s"
[RuleMarker 1 "\167",GoDeeper,Other "NDB Qualification",UnDeeper,Define,GoDeeper,Other "a Data Breach",UnDeeper,Is,GoDeeper,GoDeeper,Other "a Notifiable Data Breach",GoDeeper,GoDeeper,GoDeeper,GoDeeper,Aka,GoDeeper,Other "NDB",UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,If,GoDeeper,GoDeeper,Other "a data breach",GoDeeper,GoDeeper,GoDeeper,Other "occurred",UnDeeper,UnDeeper,UnDeeper,Is,GoDeeper,Other "any",GoDeeper,Other "unauthorised",GoDeeper,GoDeeper,GoDeeper,GoDeeper,Other "access",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "use",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "disclosure",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "copying",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "modification",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "disposal",UnDeeper,UnDeeper,UnDeeper,UnDeeper,Other "of personal data",UnDeeper,UnDeeper,Or,GoDeeper,Other "loss of storage medium on which personal data is stored in circumstances where the unauthorised",GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,Other "access",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "use",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "disclosure",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "copying",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "modification",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "disposal",UnDeeper,UnDeeper,UnDeeper,Other "of the personal data is likely to occur",UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,Unless,GoDeeper,GoDeeper,Other "the data breach occurred only within an organisation",UnDeeper,UnDeeper,And,GoDeeper,GoDeeper,Other "it results in, or is likely to result in, significant harm to an affected individual",If,GoDeeper,GoDeeper,Other "the data breach is in relation to any prescribed personal data or class of personal data relating to the individual",If,GoDeeper,GoDeeper,Other "the data breach relates to",EOL,GoDeeper,GoDeeper,GoDeeper,GoDeeper,Other "the individual\8217s",GoDeeper,GoDeeper,Other "full name",UnDeeper,UnDeeper,Other ",",GoDeeper,GoDeeper,Other "alias",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "identification number",UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,And,GoDeeper,GoDeeper,Other "any of the prescribed personal data or classes of personal data relating to the individual",Other "set out in",GoDeeper,Other "Part 1 of the Schedule",UnDeeper,Other "subject to",GoDeeper,Other "Part 2 of the Schedule",UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "in other prescribed circumstances.",Means,GoDeeper,Other "all of",GoDeeper,Other "the following personal data relating to an individual\8217s account with an organisation:",Other "the individual\8217s account identifier",Includes,GoDeeper,GoDeeper,Other "an account",GoDeeper,GoDeeper,Other "name",UnDeeper,UnDeeper,UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,GoDeeper,GoDeeper,Other "number",UnDeeper,UnDeeper,UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "a number assigned to any account the individual has with an organisation that is a bank or finance company.",UnDeeper,UnDeeper,UnDeeper,UnDeeper,And,GoDeeper,GoDeeper,Other "any",GoDeeper,GoDeeper,Other "password",Other "security code",Other "access code",Other "response to a security question",Other "biometric data",UnDeeper,UnDeeper,Or,GoDeeper,GoDeeper,Other "other data",GoDeeper,GoDeeper,Other "that is",GoDeeper,GoDeeper,GoDeeper,GoDeeper,GoDeeper,Other "used",UnDeeper,UnDeeper,Other "or",GoDeeper,GoDeeper,Other "required",UnDeeper,UnDeeper,UnDeeper,UnDeeper,Other "to",GoDeeper,Other "allow",GoDeeper,GoDeeper,GoDeeper,Other "access to",UnDeeper,UnDeeper,Other "or",GoDeeper,GoDeeper,Other "use of",UnDeeper,UnDeeper,UnDeeper,UnDeeper,Other "the individual\8217s account.",UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper,UnDeeper]
* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / pRule                                                                                                             :1_1:RuleMarker:
*** / pRegRule                                                                                                        :1_1:RuleMarker:
**** / pRuleLabel                                                                                                    :1_1:RuleMarker:
***** / $>|                                                                                                         :1_1:RuleMarker:
***** \ $>| has returned RuleMarker 1 "\167"                                                                         :1_2:GoDeeper:
***** / |>| calling $>>                                                                                              :1_2:GoDeeper:
****** / $>>                                                                                                        :1_2:GoDeeper:
******* / $>>/recurse                                                                                              :1_2:GoDeeper:
******** / $>>                                                                                                     :1_2:Other "NDB:
********* / $>>/recurse                                                                                           :1_2:Other "NDB:
********* / $>>/base                                                                                              :1_2:Other "NDB:
********** / $>>/base got "NDB Qualification"                                                                     :2_2:UnDeeper:
********* \ $>>/base has returned ("NDB Qualification",0)                                                          :2_2:UnDeeper:
******** \ $>> has returned ("NDB Qualification",0)                                                                 :2_2:UnDeeper:
******* \ $>>/recurse has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
****** \ $>> has returned ("NDB Qualification",1)                                                                     :2_2:UnDeeper:
***** \ |>| calling $>> has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
***** / |>| calling $>>                                                                                                :2_2:UnDeeper:
****** / $>>                                                                                                          :2_2:UnDeeper:
******* / $>>/recurse                                                                                                :2_2:UnDeeper:
******* / $>>/base                                                                                                   :2_2:UnDeeper:
******** / $>>/base got Nothing                                                                                     :2_2:UnDeeper:
******* \ $>>/base has returned (Nothing,0)                                                                          :2_2:UnDeeper:
****** \ $>> has returned (Nothing,0)                                                                                 :2_2:UnDeeper:
***** \ |>| calling $>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
***** / undeepers                                                                                                      :2_2:UnDeeper:
****** / sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                       :2_2:UnDeeper:
****** / sameLine: success!                                                                                        :2_1:Define:
***** \ undeepers has returned ()                                                                                   :2_1:Define:
**** \ pRuleLabel has returned ("\167",1,"NDB Qualification")                                                        :2_1:Define:
**** / pRegRuleSugary                                                                                                :2_1:Define:
***** / someDeep                                                                                                    :2_1:Define:
****** / someDeep first part calls base directly                                                                   :2_1:Define:
**** / pRegRuleNormal                                                                                                :2_1:Define:
***** / permutationsReg                                                                                             :2_1:Define:
****** / regulative permutation with deontic-temporal                                                              :2_1:Define:
******* / WHERE                                                                                                   :2_1:Define:
******* / preambleParamText:[Having]                                                                              :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / preambleParamText:[Given]                                                                               :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / preambleParamText:[Upon]                                                                                :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / preambleBoolStructR [Unless]                                                                            :2_1:Define:
******* / preambleBoolStructR [When,If]                                                                           :2_1:Define:
******* / pDT                                                                                                     :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / pActor [Every,Party,TokAll]                                                                             :2_1:Define:
******* / pDoAction/Do                                                                                            :2_1:Define:
****** / regulative permutation with deontic-action                                                                :2_1:Define:
******* / WHERE                                                                                                   :2_1:Define:
******* / preambleParamText:[Having]                                                                              :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / preambleParamText:[Given]                                                                               :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / preambleParamText:[Upon]                                                                                :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / preambleBoolStructR [Unless]                                                                            :2_1:Define:
******* / preambleBoolStructR [When,If]                                                                           :2_1:Define:
******* / pTemporal/eventually                                                                                    :2_1:Define:
******* / pTemporal/specifically                                                                                  :2_1:Define:
******** / $>|                                                                                                   :2_1:Define:
******* / pTemporal/vaguely                                                                                       :2_1:Define:
******* / pActor [Every,Party,TokAll]                                                                             :2_1:Define:
******* / pDA                                                                                                     :2_1:Define:
*** / pTypeDefinition                                                                                                 :1_1:RuleMarker:
**** / pRuleLabel                                                                                                    :1_1:RuleMarker:
***** / $>|                                                                                                         :1_1:RuleMarker:
***** \ $>| has returned RuleMarker 1 "\167"                                                                         :1_2:GoDeeper:
***** / |>| calling $>>                                                                                              :1_2:GoDeeper:
****** / $>>                                                                                                        :1_2:GoDeeper:
******* / $>>/recurse                                                                                              :1_2:GoDeeper:
******** / $>>                                                                                                     :1_2:Other "NDB:
********* / $>>/recurse                                                                                           :1_2:Other "NDB:
********* / $>>/base                                                                                              :1_2:Other "NDB:
********** / $>>/base got "NDB Qualification"                                                                     :2_2:UnDeeper:
********* \ $>>/base has returned ("NDB Qualification",0)                                                          :2_2:UnDeeper:
******** \ $>> has returned ("NDB Qualification",0)                                                                 :2_2:UnDeeper:
******* \ $>>/recurse has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
****** \ $>> has returned ("NDB Qualification",1)                                                                     :2_2:UnDeeper:
***** \ |>| calling $>> has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
***** / |>| calling $>>                                                                                                :2_2:UnDeeper:
****** / $>>                                                                                                          :2_2:UnDeeper:
******* / $>>/recurse                                                                                                :2_2:UnDeeper:
******* / $>>/base                                                                                                   :2_2:UnDeeper:
******** / $>>/base got Nothing                                                                                     :2_2:UnDeeper:
******* \ $>>/base has returned (Nothing,0)                                                                          :2_2:UnDeeper:
****** \ $>> has returned (Nothing,0)                                                                                 :2_2:UnDeeper:
***** \ |>| calling $>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
***** / undeepers                                                                                                      :2_2:UnDeeper:
****** / sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                       :2_2:UnDeeper:
****** / sameLine: success!                                                                                        :2_1:Define:
***** \ undeepers has returned ()                                                                                   :2_1:Define:
**** \ pRuleLabel has returned ("\167",1,"NDB Qualification")                                                        :2_1:Define:
**** / pHornlike/uponLimb                                                                                            :2_1:Define:
***** / preambleParamText:[Upon]                                                                                    :2_1:Define:
****** / $>|                                                                                                       :2_1:Define:
**** / pHornlike/givenLimb                                                                                           :2_1:Define:
***** / preambleParamText:[Given]                                                                                   :2_1:Define:
****** / $>|                                                                                                       :2_1:Define:
**** / $>|                                                                                                            :2_2:GoDeeper:
***** / pMultiTermAka                                                                                                :2_2:GoDeeper:
****** / pAKA                                                                                                       :2_2:GoDeeper:
******* / slAKA                                                                                                    :2_2:GoDeeper:
******** / $*|                                                                                                    :2_2:GoDeeper:
********* / slAKA base                                                                                           :2_2:GoDeeper:
********** / slMultiTerm                                                                                        :2_2:GoDeeper:
*********** / |:| some                                                                                         :2_2:GoDeeper:
************ / |:| base parser                                                                                :2_2:GoDeeper:
************* / pNumAsText                                                                                   :2_2:GoDeeper:
*** / pConstitutiveRule                                                                                               :1_1:RuleMarker:
**** / pRuleLabel                                                                                                    :1_1:RuleMarker:
***** / $>|                                                                                                         :1_1:RuleMarker:
***** \ $>| has returned RuleMarker 1 "\167"                                                                         :1_2:GoDeeper:
***** / |>| calling $>>                                                                                              :1_2:GoDeeper:
****** / $>>                                                                                                        :1_2:GoDeeper:
******* / $>>/recurse                                                                                              :1_2:GoDeeper:
******** / $>>                                                                                                     :1_2:Other "NDB:
********* / $>>/recurse                                                                                           :1_2:Other "NDB:
********* / $>>/base                                                                                              :1_2:Other "NDB:
********** / $>>/base got "NDB Qualification"                                                                     :2_2:UnDeeper:
********* \ $>>/base has returned ("NDB Qualification",0)                                                          :2_2:UnDeeper:
******** \ $>> has returned ("NDB Qualification",0)                                                                 :2_2:UnDeeper:
******* \ $>>/recurse has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
****** \ $>> has returned ("NDB Qualification",1)                                                                     :2_2:UnDeeper:
***** \ |>| calling $>> has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
***** / |>| calling $>>                                                                                                :2_2:UnDeeper:
****** / $>>                                                                                                          :2_2:UnDeeper:
******* / $>>/recurse                                                                                                :2_2:UnDeeper:
******* / $>>/base                                                                                                   :2_2:UnDeeper:
******** / $>>/base got Nothing                                                                                     :2_2:UnDeeper:
******* \ $>>/base has returned (Nothing,0)                                                                          :2_2:UnDeeper:
****** \ $>> has returned (Nothing,0)                                                                                 :2_2:UnDeeper:
***** \ |>| calling $>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
***** / undeepers                                                                                                      :2_2:UnDeeper:
****** / sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                       :2_2:UnDeeper:
****** / sameLine: success!                                                                                        :2_1:Define:
***** \ undeepers has returned ()                                                                                   :2_1:Define:
**** \ pRuleLabel has returned ("\167",1,"NDB Qualification")                                                        :2_1:Define:
**** / calling myindented pNameParens                                                                                :2_1:Define:
***** / manyIndentation/leaf?                                                                                       :2_1:Define:
****** / pMultiTermAka                                                                                             :2_1:Define:
******* / pAKA                                                                                                    :2_1:Define:
******** / slAKA                                                                                                 :2_1:Define:
********* / $*|                                                                                                 :2_1:Define:
********** / slAKA base                                                                                        :2_1:Define:
*********** / slMultiTerm                                                                                     :2_1:Define:
************ / |:| some                                                                                      :2_1:Define:
************* / |:| base parser                                                                             :2_1:Define:
************** / pNumAsText                                                                                :2_1:Define:
***** / manyIndentation/deeper; calling someIndentation                                                             :2_1:Define:
****** / someIndentation                                                                                           :2_1:Define:
******* / myindented: consuming GoDeeper                                                                          :2_1:Define:
*** / pScenarioRule                                                                                                   :1_1:RuleMarker:
**** / pRuleLabel                                                                                                    :1_1:RuleMarker:
***** / $>|                                                                                                         :1_1:RuleMarker:
***** \ $>| has returned RuleMarker 1 "\167"                                                                         :1_2:GoDeeper:
***** / |>| calling $>>                                                                                              :1_2:GoDeeper:
****** / $>>                                                                                                        :1_2:GoDeeper:
******* / $>>/recurse                                                                                              :1_2:GoDeeper:
******** / $>>                                                                                                     :1_2:Other "NDB:
********* / $>>/recurse                                                                                           :1_2:Other "NDB:
********* / $>>/base                                                                                              :1_2:Other "NDB:
********** / $>>/base got "NDB Qualification"                                                                     :2_2:UnDeeper:
********* \ $>>/base has returned ("NDB Qualification",0)                                                          :2_2:UnDeeper:
******** \ $>> has returned ("NDB Qualification",0)                                                                 :2_2:UnDeeper:
******* \ $>>/recurse has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
****** \ $>> has returned ("NDB Qualification",1)                                                                     :2_2:UnDeeper:
***** \ |>| calling $>> has returned ("NDB Qualification",1)                                                           :2_2:UnDeeper:
***** / |>| calling $>>                                                                                                :2_2:UnDeeper:
****** / $>>                                                                                                          :2_2:UnDeeper:
******* / $>>/recurse                                                                                                :2_2:UnDeeper:
******* / $>>/base                                                                                                   :2_2:UnDeeper:
******** / $>>/base got Nothing                                                                                     :2_2:UnDeeper:
******* \ $>>/base has returned (Nothing,0)                                                                          :2_2:UnDeeper:
****** \ $>> has returned (Nothing,0)                                                                                 :2_2:UnDeeper:
***** \ |>| calling $>> has returned (Nothing,0)                                                                       :2_2:UnDeeper:
***** / undeepers                                                                                                      :2_2:UnDeeper:
****** / sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                       :2_2:UnDeeper:
****** / sameLine: success!                                                                                        :2_1:Define:
***** \ undeepers has returned ()                                                                                   :2_1:Define:
**** \ pRuleLabel has returned ("\167",1,"NDB Qualification")                                                        :2_1:Define:
**** / pExpect                                                                                                       :2_1:Define:
*** / pHornlike                                                                                                       :1_1:RuleMarker:
**** / pSrcRef                                                                                                       :1_1:RuleMarker:
***** / pRuleLabel                                                                                                  :1_1:RuleMarker:
****** / $>|                                                                                                       :1_1:RuleMarker:
****** \ $>| has returned RuleMarker 1 "\167"                                                                       :1_2:GoDeeper:
****** / |>| calling $>>                                                                                            :1_2:GoDeeper:
******* / $>>                                                                                                      :1_2:GoDeeper:
******** / $>>/recurse                                                                                            :1_2:GoDeeper:
********* / $>>                                                                                                   :1_2:Other "NDB:
********** / $>>/recurse                                                                                         :1_2:Other "NDB:
********** / $>>/base                                                                                            :1_2:Other "NDB:
*********** / $>>/base got "NDB Qualification"                                                                   :2_2:UnDeeper:
********** \ $>>/base has returned ("NDB Qualification",0)                                                        :2_2:UnDeeper:
********* \ $>> has returned ("NDB Qualification",0)                                                               :2_2:UnDeeper:
******** \ $>>/recurse has returned ("NDB Qualification",1)                                                         :2_2:UnDeeper:
******* \ $>> has returned ("NDB Qualification",1)                                                                   :2_2:UnDeeper:
****** \ |>| calling $>> has returned ("NDB Qualification",1)                                                         :2_2:UnDeeper:
****** / |>| calling $>>                                                                                              :2_2:UnDeeper:
******* / $>>                                                                                                        :2_2:UnDeeper:
******** / $>>/recurse                                                                                              :2_2:UnDeeper:
******** / $>>/base                                                                                                 :2_2:UnDeeper:
********* / $>>/base got Nothing                                                                                   :2_2:UnDeeper:
******** \ $>>/base has returned (Nothing,0)                                                                        :2_2:UnDeeper:
******* \ $>> has returned (Nothing,0)                                                                               :2_2:UnDeeper:
****** \ |>| calling $>> has returned (Nothing,0)                                                                     :2_2:UnDeeper:
****** / undeepers                                                                                                    :2_2:UnDeeper:
******* / sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                     :2_2:UnDeeper:
******* / sameLine: success!                                                                                      :2_1:Define:
****** \ undeepers has returned ()                                                                                 :2_1:Define:
***** \ pRuleLabel has returned ("\167",1,"NDB Qualification")                                                      :2_1:Define:
**** \ pSrcRef has returned (Just ("\167",1,"NDB Qualification"),Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 2, version = Nothing})) :2_1:Define:
**** / pHornlike / permute                                                                                           :2_1:Define:
***** / whenCase                                                                                                    :2_1:Define:
****** / whenMeansIf                                                                                               :2_1:Define:
****** / Otherwise                                                                                                 :2_1:Define:
***** / pHornlike/uponLimb                                                                                          :2_1:Define:
****** / preambleParamText:[Upon]                                                                                  :2_1:Define:
******* / $>|                                                                                                     :2_1:Define:
***** / whenCase                                                                                                    :2_1:Define:
****** / whenMeansIf                                                                                               :2_1:Define:
****** / Otherwise                                                                                                 :2_1:Define:
***** / pHornlike/givenLimb                                                                                         :2_1:Define:
****** / preambleParamText:[Given]                                                                                 :2_1:Define:
******* / $>|                                                                                                     :2_1:Define:
***** / whenCase                                                                                                    :2_1:Define:
****** / whenMeansIf                                                                                               :2_1:Define:
****** / Otherwise                                                                                                 :2_1:Define:
***** / pHornlike/ambitious                                                                                         :2_1:Define:
****** / $>|                                                                                                       :2_1:Define:
****** \ $>| has returned Define                                                                                    :2_2:GoDeeper:
****** / |>>                                                                                                        :2_2:GoDeeper:
******* / |>>/recurse                                                                                              :2_2:GoDeeper:
******** / |>>                                                                                                     :2_2:Other "a Da:
********* / |>>/recurse                                                                                           :2_2:Other "a Da:
********* / |>>/base                                                                                              :2_2:Other "a Da:
********** / slMultiTerm                                                                                         :2_2:Other "a Da:
*********** / |:| some                                                                                          :2_2:Other "a Da:
************ / |:| base parser                                                                                 :2_2:Other "a Da:
************ \ |:| base parser has returned ("a Data Breach",0)                                                 :3_2:UnDeeper:
************ / |:| deeper                                                                                       :3_2:UnDeeper:
************* / |:| some GoDeeper                                                                              :3_2:UnDeeper:
************ / |:| noMore                                                                                       :3_2:UnDeeper:
************ \ |:| noMore has returned ([],0)                                                                   :3_2:UnDeeper:
*********** \ |:| some has returned (["a Data Breach"],0)                                                        :3_2:UnDeeper:
********** \ slMultiTerm has returned (["a Data Breach"],0)                                                       :3_2:UnDeeper:
********** / |>>/base got ["a Data Breach"]                                                                       :3_2:UnDeeper:
********* \ |>>/base has returned (["a Data Breach"],0)                                                            :3_2:UnDeeper:
******** \ |>> has returned (["a Data Breach"],0)                                                                   :3_2:UnDeeper:
******* \ |>>/recurse has returned (["a Data Breach"],1)                                                             :3_2:UnDeeper:
****** \ |>> has returned (["a Data Breach"],1)                                                                       :3_2:UnDeeper:
****** / undeepers                                                                                                    :3_2:UnDeeper:
******* / sameLine/undeepers: reached end of line; now need to clear 1 UnDeepers                                     :3_2:UnDeeper:
******* / sameLine: success!                                                                                      :3_1:Is:
****** \ undeepers has returned ()                                                                                 :3_1:Is:
****** / $>|                                                                                                       :3_1:Is:
****** \ $>| has returned Is                                                                                        :3_2:GoDeeper:
****** / |>| calling $>>                                                                                            :3_2:GoDeeper:
******* / $>>                                                                                                      :3_2:GoDeeper:
******** / $>>/recurse                                                                                            :3_2:GoDeeper:
********* / $>>                                                                                                    :3_3:GoDeeper:
********** / $>>/recurse                                                                                          :3_3:GoDeeper:
*********** / $>>                                                                                                 :3_3:Other "a No:
************ / $>>/recurse                                                                                       :3_3:Other "a No:
************ / $>>/base                                                                                          :3_3:Other "a No:
************* / pMultiTermAka                                                                                   :3_3:Other "a No:
************** / pAKA                                                                                          :3_3:Other "a No:
*************** / slAKA                                                                                       :3_3:Other "a No:
**************** / $*|                                                                                       :3_3:Other "a No:
***************** / slAKA base                                                                              :3_3:Other "a No:
****************** / slMultiTerm                                                                           :3_3:Other "a No:
******************* / |:| some                                                                            :3_3:Other "a No:
******************** / |:| base parser                                                                   :3_3:Other "a No:
******************** \ |:| base parser has returned ("a Notifiable Data Breach",0)                        :3_4:GoDeeper:
******************** / |:| deeper                                                                         :3_4:GoDeeper:
********************* / |:| some GoDeeper                                                                :3_4:GoDeeper:
********************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper,GoDeeper]                    :3_7:Aka:
********************* / |:| some                                                                                :3_7:Aka:
********************** / |:| base parser                                                                       :3_7:Aka:
*********************** / pNumAsText                                                                          :3_7:Aka:
******************** / |:| noMore                                                                         :3_4:GoDeeper:
******************** \ |:| noMore has returned ([],0)                                                     :3_4:GoDeeper:
******************* \ |:| some has returned (["a Notifiable Data Breach"],0)                               :3_4:GoDeeper:
****************** \ slMultiTerm has returned (["a Notifiable Data Breach"],0)                              :3_4:GoDeeper:
***************** \ slAKA base has returned (["a Notifiable Data Breach"],0)                                 :3_4:GoDeeper:
**************** \ $*| has returned (["a Notifiable Data Breach"],0)                                          :3_4:GoDeeper:
**************** / |>>                                                                                        :3_4:GoDeeper:
***************** / |>>/recurse                                                                              :3_4:GoDeeper:
****************** / |>>                                                                                      :3_5:GoDeeper:
******************* / |>>/recurse                                                                            :3_5:GoDeeper:
******************** / |>>                                                                                    :3_6:GoDeeper:
********************* / |>>/recurse                                                                          :3_6:GoDeeper:
********************** / |>>                                                                                  :3_7:GoDeeper:
*********************** / |>>/recurse                                                                        :3_7:GoDeeper:
************************ / |>>                                                                               :3_7:Aka:
************************* / |>>/recurse                                                                     :3_7:Aka:
************************* / |>>/base                                                                        :3_7:Aka:
************************** / slAKA optional akapart                                                        :3_7:Aka:
*************************** / |?| optional something                                                      :3_7:Aka:
**************************** / |>>                                                                       :3_7:Aka:
***************************** / |>>/recurse                                                             :3_7:Aka:
***************************** / |>>/base                                                                :3_7:Aka:
****************************** / PAKA/akapart                                                          :3_7:Aka:
******************************* / $>|                                                                 :3_7:Aka:
******************************** / Aka Token                                                         :3_7:Aka:
******************************** \ Aka Token has returned Aka                                         :3_8:GoDeeper:
******************************* \ $>| has returned Aka                                                 :3_8:GoDeeper:
******************************* / |>>                                                                  :3_8:GoDeeper:
******************************** / |>>/recurse                                                        :3_8:GoDeeper:
********************************* / |>>                                                               :3_8:Other "NDB":
********************************** / |>>/recurse                                                     :3_8:Other "NDB":
********************************** / |>>/base                                                        :3_8:Other "NDB":
*********************************** / |:| some                                                      :3_8:Other "NDB":
************************************ / |:| base parser                                             :3_8:Other "NDB":
************************************ \ |:| base parser has returned ("NDB",0)           :6_2:UnDeeper:
************************************ / |:| deeper                                       :6_2:UnDeeper:
************************************* / |:| some GoDeeper                              :6_2:UnDeeper:
************************************ / |:| noMore                                       :6_2:UnDeeper:
************************************ \ |:| noMore has returned ([],0)                   :6_2:UnDeeper:
*********************************** \ |:| some has returned (["NDB"],0)                  :6_2:UnDeeper:
*********************************** / |>>/base got ["NDB"]                               :6_2:UnDeeper:
********************************** \ |>>/base has returned (["NDB"],0)                    :6_2:UnDeeper:
********************************* \ |>> has returned (["NDB"],0)                           :6_2:UnDeeper:
******************************** \ |>>/recurse has returned (["NDB"],1)                     :6_2:UnDeeper:
******************************* \ |>> has returned (["NDB"],1)                               :6_2:UnDeeper:
****************************** \ PAKA/akapart has returned (["NDB"],1)                        :6_2:UnDeeper:
****************************** / |>>/base got ["NDB"]                                         :6_2:UnDeeper:
***************************** \ |>>/base has returned (["NDB"],1)                              :6_2:UnDeeper:
**************************** \ |>> has returned (["NDB"],1)                                     :6_2:UnDeeper:
*************************** \ |?| optional something has returned (Just ["NDB"],1)               :6_2:UnDeeper:
************************** \ slAKA optional akapart has returned (Just ["NDB"],1)                 :6_2:UnDeeper:
************************** / |>>/base got Just ["NDB"]                                            :6_2:UnDeeper:
************************* \ |>>/base has returned (Just ["NDB"],1)                                 :6_2:UnDeeper:
************************ \ |>> has returned (Just ["NDB"],1)                                        :6_2:UnDeeper:
*********************** \ |>>/recurse has returned (Just ["NDB"],2)                                  :6_2:UnDeeper:
********************** \ |>> has returned (Just ["NDB"],2)                                            :6_2:UnDeeper:
********************* \ |>>/recurse has returned (Just ["NDB"],3)                                      :6_2:UnDeeper:
******************** \ |>> has returned (Just ["NDB"],3)                                                :6_2:UnDeeper:
******************* \ |>>/recurse has returned (Just ["NDB"],4)                                          :6_2:UnDeeper:
****************** \ |>> has returned (Just ["NDB"],4)                                                    :6_2:UnDeeper:
***************** \ |>>/recurse has returned (Just ["NDB"],5)                                              :6_2:UnDeeper:
**************** \ |>> has returned (Just ["NDB"],5)                                                        :6_2:UnDeeper:
**************** / |>>                                                                                      :6_2:UnDeeper:
***************** / |>>/recurse                                                                            :6_2:UnDeeper:
***************** / |>>/base                                                                               :6_2:UnDeeper:
****************** / slAKA optional typically                                                             :6_2:UnDeeper:
******************* / |?| optional something                                                             :6_2:UnDeeper:
******************** / |>>                                                                              :6_2:UnDeeper:
********************* / |>>/recurse                                                                    :6_2:UnDeeper:
********************* / |>>/base                                                                       :6_2:UnDeeper:
********************** / typically                                                                    :6_2:UnDeeper:
*********************** / $>|                                                                        :6_2:UnDeeper:
******************* \ |?| optional something has returned (Nothing,0)                                    :6_2:UnDeeper:
****************** \ slAKA optional typically has returned (Nothing,0)                                    :6_2:UnDeeper:
****************** / |>>/base got Nothing                                                                 :6_2:UnDeeper:
***************** \ |>>/base has returned (Nothing,0)                                                      :6_2:UnDeeper:
**************** \ |>> has returned (Nothing,0)                                                             :6_2:UnDeeper:
**************** / slAKA: proceeding after base and entityalias are retrieved ...                           :6_2:UnDeeper:
**************** / pAKA: entityalias = Just ["NDB"]                                                         :6_2:UnDeeper:
*************** \ slAKA has returned (["a Notifiable Data Breach"],5)                                        :6_2:UnDeeper:
*************** / undeepers                                                                                  :6_2:UnDeeper:
**************** / sameLine/undeepers: reached end of line; now need to clear 5 UnDeepers                   :6_2:UnDeeper:
**************** / sameLine: success!                                                                                 :6_7:UnDeeper:
*************** \ undeepers has returned ()                                                                            :6_7:UnDeeper:
************** \ pAKA has returned ["a Notifiable Data Breach"]                                                         :6_7:UnDeeper:
************* \ pMultiTermAka has returned ["a Notifiable Data Breach"]                                                  :6_7:UnDeeper:
************* / $>>/base got ["a Notifiable Data Breach"]                                                                :6_7:UnDeeper:
************ \ $>>/base has returned (["a Notifiable Data Breach"],0)                                                     :6_7:UnDeeper:
*********** \ $>> has returned (["a Notifiable Data Breach"],0)                                                            :6_7:UnDeeper:
********** \ $>>/recurse has returned (["a Notifiable Data Breach"],1)                                                      :6_7:UnDeeper:
********* \ $>> has returned (["a Notifiable Data Breach"],1)                                                                :6_7:UnDeeper:
******** \ $>>/recurse has returned (["a Notifiable Data Breach"],2)                                                          :6_7:UnDeeper:
******* \ $>> has returned (["a Notifiable Data Breach"],2)                                                                    :6_7:UnDeeper:
****** \ |>| calling $>> has returned (["a Notifiable Data Breach"],2)                                                          :6_7:UnDeeper:
****** / undeepers                                                                                                              :6_7:UnDeeper:
******* / sameLine/undeepers: reached end of line; now need to clear 2 UnDeepers                                               :6_7:UnDeeper:
******* / sameLine: success!                                                                                      :6_1:If:
****** \ undeepers has returned ()                                                                                 :6_1:If:
****** / pHornlike / someStructure / clauses permute                                                               :6_1:If:
******* / IF pBSR                                                                                                  :6_2:GoDeeper:
******** / pBSR                                                                                                   :6_2:GoDeeper:
********* / ppp inner                                                                                            :6_2:GoDeeper:
********** / term p                                                                                             :6_2:GoDeeper:
*********** / term p/1a:label directly above                                                                   :6_2:GoDeeper:
************ / $*|                                                                                            :6_2:GoDeeper:
************* / |:| some                                                                                     :6_2:GoDeeper:
************** / |:| base parser                                                                            :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
*********** / term p/b:label to the left of line below, with EOL                                               :6_2:GoDeeper:
************ / |:| some                                                                                       :6_2:GoDeeper:
************* / |:| base parser                                                                              :6_2:GoDeeper:
************** / pNumAsText                                                                                 :6_2:GoDeeper:
*********** / term p/notLabelTerm                                                                              :6_2:GoDeeper:
************ / term p/2:someIndentation expr p                                                                :6_2:GoDeeper:
************* / someIndentation                                                                              :6_2:GoDeeper:
************** / myindented: consuming GoDeeper                                                             :6_2:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                         :6_3:GoDeeper:
************** / manyIndentation/leaf?                                                                        :6_3:GoDeeper:
*************** / term p                                                                                     :6_3:GoDeeper:
**************** / term p/1a:label directly above                                                           :6_3:GoDeeper:
***************** / $*|                                                                                    :6_3:GoDeeper:
****************** / |:| some                                                                             :6_3:GoDeeper:
******************* / |:| base parser                                                                    :6_3:GoDeeper:
******************** / pNumAsText                                                                       :6_3:GoDeeper:
**************** / term p/b:label to the left of line below, with EOL                                       :6_3:GoDeeper:
***************** / |:| some                                                                               :6_3:GoDeeper:
****************** / |:| base parser                                                                      :6_3:GoDeeper:
******************* / pNumAsText                                                                         :6_3:GoDeeper:
**************** / term p/notLabelTerm                                                                      :6_3:GoDeeper:
***************** / term p/2:someIndentation expr p                                                        :6_3:GoDeeper:
****************** / someIndentation                                                                      :6_3:GoDeeper:
******************* / myindented: consuming GoDeeper                                                     :6_3:GoDeeper:
******************* \ myindented: consuming GoDeeper has returned GoDeeper                                :6_3:Other "a da:
******************* / manyIndentation/leaf?                                                               :6_3:Other "a da:
******************** / term p                                                                            :6_3:Other "a da:
********************* / term p/1a:label directly above                                                  :6_3:Other "a da:
********************** / $*|                                                                           :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
*********************** / pNumAsText                                                                     :7_4:UnDeeper:
********************* / term p/b:label to the left of line below, with EOL                              :6_3:Other "a da:
********************** / |:| some                                                                      :6_3:Other "a da:
*********************** / |:| base parser                                                             :6_3:Other "a da:
*********************** \ |:| base parser has returned ("a data breach",0)                             :6_4:GoDeeper:
*********************** / |:| deeper                                                                   :6_4:GoDeeper:
************************ / |:| some GoDeeper                                                          :6_4:GoDeeper:
************************ \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :6_6:Other "occu:
************************ / |:| some                                                                        :6_6:Other "occu:
************************* / |:| base parser                                                               :6_6:Other "occu:
************************* \ |:| base parser has returned ("occurred",0)                                :7_4:UnDeeper:
************************* / |:| deeper                                                                 :7_4:UnDeeper:
************************** / |:| some GoDeeper                                                        :7_4:UnDeeper:
************************* / |:| noMore                                                                 :7_4:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                             :7_4:UnDeeper:
************************ \ |:| some has returned (["occurred"],0)                                       :7_4:UnDeeper:
*********************** \ |:| deeper has returned (["occurred"],3)                                       :7_4:UnDeeper:
********************** \ |:| some has returned (["a data breach","occurred"],3)                           :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************** / matching EOL                                                                  :7_3:Is:
********************* / term p/notLabelTerm                                                             :6_3:Other "a da:
********************** / term p/2:someIndentation expr p                                               :6_3:Other "a da:
*********************** / someIndentation                                                             :6_3:Other "a da:
************************ / myindented: consuming GoDeeper                                            :6_3:Other "a da:
********************** / term p/3:plain p                                                              :6_3:Other "a da:
*********************** / pRelPred                                                                    :6_3:Other "a da:
************************ / slRelPred                                                                 :6_3:Other "a da:
************************* / RPConstraint                                                            :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************* / RPBoolStructR                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************* / RPMT                                                                    :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA                                                               :6_3:Other "a da:
**************************** / $*|                                                               :6_3:Other "a da:
***************************** / slAKA base                                                      :6_3:Other "a da:
****************************** / slInlineDefMT                                                 :6_3:Other "a da:
******************************* / $*|                                                         :6_3:Other "a da:
******************************** / slMultiTerm                                               :6_3:Other "a da:
********************************* / |:| some                                                :6_3:Other "a da:
********************************** / |:| base parser                                       :6_3:Other "a da:
********************************** \ |:| base parser has returned ("a data breach",0)       :6_4:GoDeeper:
********************************** / |:| deeper                                             :6_4:GoDeeper:
*********************************** / |:| some GoDeeper                                    :6_4:GoDeeper:
*********************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :6_6:Other "occu:
*********************************** / |:| some                                                  :6_6:Other "occu:
************************************ / |:| base parser                                         :6_6:Other "occu:
************************************ \ |:| base parser has returned ("occurred",0)          :7_4:UnDeeper:
************************************ / |:| deeper                                           :7_4:UnDeeper:
************************************* / |:| some GoDeeper                                  :7_4:UnDeeper:
************************************ / |:| noMore                                           :7_4:UnDeeper:
************************************ \ |:| noMore has returned ([],0)                       :7_4:UnDeeper:
*********************************** \ |:| some has returned (["occurred"],0)                 :7_4:UnDeeper:
********************************** \ |:| deeper has returned (["occurred"],3)                 :7_4:UnDeeper:
********************************* \ |:| some has returned (["a data breach","occurred"],3)     :7_4:UnDeeper:
******************************** \ slMultiTerm has returned (["a data breach","occurred"],3)    :7_4:UnDeeper:
******************************* \ $*| has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
******************************* / |>| calling $>>                                                :7_4:UnDeeper:
******************************** / $>>                                                          :7_4:UnDeeper:
********************************* / $>>/recurse                                                :7_4:UnDeeper:
********************************* / $>>/base                                                   :7_4:UnDeeper:
******************************* / slMultiTerm                                                 :6_3:Other "a da:
******************************** / |:| some                                                  :6_3:Other "a da:
********************************* / |:| base parser                                         :6_3:Other "a da:
********************************* \ |:| base parser has returned ("a data breach",0)         :6_4:GoDeeper:
********************************* / |:| deeper                                               :6_4:GoDeeper:
********************************** / |:| some GoDeeper                                      :6_4:GoDeeper:
********************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :6_6:Other "occu:
********************************** / |:| some                                                    :6_6:Other "occu:
*********************************** / |:| base parser                                           :6_6:Other "occu:
*********************************** \ |:| base parser has returned ("occurred",0)            :7_4:UnDeeper:
*********************************** / |:| deeper                                             :7_4:UnDeeper:
************************************ / |:| some GoDeeper                                    :7_4:UnDeeper:
*********************************** / |:| noMore                                             :7_4:UnDeeper:
*********************************** \ |:| noMore has returned ([],0)                         :7_4:UnDeeper:
********************************** \ |:| some has returned (["occurred"],0)                   :7_4:UnDeeper:
********************************* \ |:| deeper has returned (["occurred"],3)                   :7_4:UnDeeper:
******************************** \ |:| some has returned (["a data breach","occurred"],3)       :7_4:UnDeeper:
******************************* \ slMultiTerm has returned (["a data breach","occurred"],3)      :7_4:UnDeeper:
****************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)      :7_4:UnDeeper:
***************************** \ slAKA base has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
**************************** \ $*| has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
**************************** / |>>                                                                  :7_4:UnDeeper:
***************************** / |>>/recurse                                                        :7_4:UnDeeper:
***************************** / |>>/base                                                           :7_4:UnDeeper:
****************************** / slAKA optional akapart                                           :7_4:UnDeeper:
******************************* / |?| optional something                                         :7_4:UnDeeper:
******************************** / |>>                                                          :7_4:UnDeeper:
********************************* / |>>/recurse                                                :7_4:UnDeeper:
********************************* / |>>/base                                                   :7_4:UnDeeper:
********************************** / PAKA/akapart                                             :7_4:UnDeeper:
*********************************** / $>|                                                    :7_4:UnDeeper:
************************************ / Aka Token                                            :7_4:UnDeeper:
******************************* \ |?| optional something has returned (Nothing,0)                :7_4:UnDeeper:
****************************** \ slAKA optional akapart has returned (Nothing,0)                  :7_4:UnDeeper:
****************************** / |>>/base got Nothing                                             :7_4:UnDeeper:
***************************** \ |>>/base has returned (Nothing,0)                                  :7_4:UnDeeper:
**************************** \ |>> has returned (Nothing,0)                                         :7_4:UnDeeper:
**************************** / |>>                                                                  :7_4:UnDeeper:
***************************** / |>>/recurse                                                        :7_4:UnDeeper:
***************************** / |>>/base                                                           :7_4:UnDeeper:
****************************** / slAKA optional typically                                         :7_4:UnDeeper:
******************************* / |?| optional something                                         :7_4:UnDeeper:
******************************** / |>>                                                          :7_4:UnDeeper:
********************************* / |>>/recurse                                                :7_4:UnDeeper:
********************************* / |>>/base                                                   :7_4:UnDeeper:
********************************** / typically                                                :7_4:UnDeeper:
*********************************** / $>|                                                    :7_4:UnDeeper:
******************************* \ |?| optional something has returned (Nothing,0)                :7_4:UnDeeper:
****************************** \ slAKA optional typically has returned (Nothing,0)                :7_4:UnDeeper:
****************************** / |>>/base got Nothing                                             :7_4:UnDeeper:
***************************** \ |>>/base has returned (Nothing,0)                                  :7_4:UnDeeper:
**************************** \ |>> has returned (Nothing,0)                                         :7_4:UnDeeper:
**************************** / slAKA: proceeding after base and entityalias are retrieved ...       :7_4:UnDeeper:
**************************** / pAKA: entityalias = Nothing                                          :7_4:UnDeeper:
*************************** \ slAKA has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************* \ RPMT has returned (RPMT ["a data breach","occurred"],3)                    :7_4:UnDeeper:
************************ \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************ / undeepers                                                                    :7_4:UnDeeper:
************************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers     :7_4:UnDeeper:
************************* / sameLine: success!                                                      :7_3:Is:
************************ \ undeepers has returned ()                                                 :7_3:Is:
*********************** \ pRelPred has returned RPMT ["a data breach","occurred"]                     :7_3:Is:
********************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])      :7_3:Is:
********************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])     :7_3:Is:
******************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                    :7_3:Is:
******************** / binary(Or)                                                                        :7_3:Is:
******************** / binary(And)                                                                       :7_3:Is:
******************** / binary(SetLess)                                                                   :7_3:Is:
******************** / binary(SetPlus)                                                                   :7_3:Is:
******************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])       :7_3:Is:
******************* / myindented: consuming UnDeeper                                                      :7_3:Is:
***************** / term p/3:plain p                                                                       :6_3:GoDeeper:
****************** / pRelPred                                                                             :6_3:GoDeeper:
******************* / slRelPred                                                                          :6_3:GoDeeper:
******************** / RPConstraint                                                                     :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slMultiTerm                                                                  :6_3:GoDeeper:
*********************** / |:| some                                                                   :6_3:GoDeeper:
************************ / |:| base parser                                                          :6_3:GoDeeper:
************************* / pNumAsText                                                             :6_3:GoDeeper:
******************** / RPBoolStructR                                                                    :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slMultiTerm                                                                  :6_3:GoDeeper:
*********************** / |:| some                                                                   :6_3:GoDeeper:
************************ / |:| base parser                                                          :6_3:GoDeeper:
************************* / pNumAsText                                                             :6_3:GoDeeper:
******************** / RPMT                                                                             :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA                                                                        :6_3:GoDeeper:
*********************** / $*|                                                                        :6_3:GoDeeper:
************************ / slAKA base                                                               :6_3:GoDeeper:
************************* / slInlineDefMT                                                          :6_3:GoDeeper:
************************** / $*|                                                                  :6_3:GoDeeper:
*************************** / slMultiTerm                                                        :6_3:GoDeeper:
**************************** / |:| some                                                         :6_3:GoDeeper:
***************************** / |:| base parser                                                :6_3:GoDeeper:
****************************** / pNumAsText                                                   :6_3:GoDeeper:
************************** / slMultiTerm                                                          :6_3:GoDeeper:
*************************** / |:| some                                                           :6_3:GoDeeper:
**************************** / |:| base parser                                                  :6_3:GoDeeper:
***************************** / pNumAsText                                                     :6_3:GoDeeper:
************** / manyIndentation/deeper; calling someIndentation                                              :6_3:GoDeeper:
*************** / someIndentation                                                                            :6_3:GoDeeper:
**************** / myindented: consuming GoDeeper                                                           :6_3:GoDeeper:
**************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :6_3:Other "a da:
**************** / manyIndentation/leaf?                                                                     :6_3:Other "a da:
***************** / term p                                                                                  :6_3:Other "a da:
****************** / term p/1a:label directly above                                                        :6_3:Other "a da:
******************* / $*|                                                                                 :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / pNumAsText                                                                           :7_4:UnDeeper:
****************** / term p/b:label to the left of line below, with EOL                                    :6_3:Other "a da:
******************* / |:| some                                                                            :6_3:Other "a da:
******************** / |:| base parser                                                                   :6_3:Other "a da:
******************** \ |:| base parser has returned ("a data breach",0)                                   :6_4:GoDeeper:
******************** / |:| deeper                                                                         :6_4:GoDeeper:
********************* / |:| some GoDeeper                                                                :6_4:GoDeeper:
********************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                           :6_6:Other "occu:
********************* / |:| some                                                                              :6_6:Other "occu:
********************** / |:| base parser                                                                     :6_6:Other "occu:
********************** \ |:| base parser has returned ("occurred",0)                                      :7_4:UnDeeper:
********************** / |:| deeper                                                                       :7_4:UnDeeper:
*********************** / |:| some GoDeeper                                                              :7_4:UnDeeper:
********************** / |:| noMore                                                                       :7_4:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                                   :7_4:UnDeeper:
********************* \ |:| some has returned (["occurred"],0)                                             :7_4:UnDeeper:
******************** \ |:| deeper has returned (["occurred"],3)                                             :7_4:UnDeeper:
******************* \ |:| some has returned (["a data breach","occurred"],3)                                 :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
******************* / matching EOL                                                                        :7_3:Is:
****************** / term p/notLabelTerm                                                                   :6_3:Other "a da:
******************* / term p/2:someIndentation expr p                                                     :6_3:Other "a da:
******************** / someIndentation                                                                   :6_3:Other "a da:
********************* / myindented: consuming GoDeeper                                                  :6_3:Other "a da:
******************* / term p/3:plain p                                                                    :6_3:Other "a da:
******************** / pRelPred                                                                          :6_3:Other "a da:
********************* / slRelPred                                                                       :6_3:Other "a da:
********************** / RPConstraint                                                                  :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slMultiTerm                                                               :6_3:Other "a da:
************************* / |:| some                                                                :6_3:Other "a da:
************************** / |:| base parser                                                       :6_3:Other "a da:
************************** \ |:| base parser has returned ("a data breach",0)                       :6_4:GoDeeper:
************************** / |:| deeper                                                             :6_4:GoDeeper:
*************************** / |:| some GoDeeper                                                    :6_4:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :6_6:Other "occu:
*************************** / |:| some                                                                  :6_6:Other "occu:
**************************** / |:| base parser                                                         :6_6:Other "occu:
**************************** \ |:| base parser has returned ("occurred",0)                          :7_4:UnDeeper:
**************************** / |:| deeper                                                           :7_4:UnDeeper:
***************************** / |:| some GoDeeper                                                  :7_4:UnDeeper:
**************************** / |:| noMore                                                           :7_4:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                       :7_4:UnDeeper:
*************************** \ |:| some has returned (["occurred"],0)                                 :7_4:UnDeeper:
************************** \ |:| deeper has returned (["occurred"],3)                                 :7_4:UnDeeper:
************************* \ |:| some has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
************************ \ slMultiTerm has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>| calling $>>                                                                :7_4:UnDeeper:
************************ / $>>                                                                          :7_4:UnDeeper:
************************* / $>>/recurse                                                                :7_4:UnDeeper:
************************* / $>>/base                                                                   :7_4:UnDeeper:
********************** / RPBoolStructR                                                                 :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slMultiTerm                                                               :6_3:Other "a da:
************************* / |:| some                                                                :6_3:Other "a da:
************************** / |:| base parser                                                       :6_3:Other "a da:
************************** \ |:| base parser has returned ("a data breach",0)                       :6_4:GoDeeper:
************************** / |:| deeper                                                             :6_4:GoDeeper:
*************************** / |:| some GoDeeper                                                    :6_4:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :6_6:Other "occu:
*************************** / |:| some                                                                  :6_6:Other "occu:
**************************** / |:| base parser                                                         :6_6:Other "occu:
**************************** \ |:| base parser has returned ("occurred",0)                          :7_4:UnDeeper:
**************************** / |:| deeper                                                           :7_4:UnDeeper:
***************************** / |:| some GoDeeper                                                  :7_4:UnDeeper:
**************************** / |:| noMore                                                           :7_4:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                       :7_4:UnDeeper:
*************************** \ |:| some has returned (["occurred"],0)                                 :7_4:UnDeeper:
************************** \ |:| deeper has returned (["occurred"],3)                                 :7_4:UnDeeper:
************************* \ |:| some has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
************************ \ slMultiTerm has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>| calling $>>                                                                :7_4:UnDeeper:
************************ / $>>                                                                          :7_4:UnDeeper:
************************* / $>>/recurse                                                                :7_4:UnDeeper:
************************* / $>>/base                                                                   :7_4:UnDeeper:
********************** / RPMT                                                                          :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA                                                                     :6_3:Other "a da:
************************* / $*|                                                                     :6_3:Other "a da:
************************** / slAKA base                                                            :6_3:Other "a da:
*************************** / slInlineDefMT                                                       :6_3:Other "a da:
**************************** / $*|                                                               :6_3:Other "a da:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ $*| has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
**************************** / |>| calling $>>                                                      :7_4:UnDeeper:
***************************** / $>>                                                                :7_4:UnDeeper:
****************************** / $>>/recurse                                                      :7_4:UnDeeper:
****************************** / $>>/base                                                         :7_4:UnDeeper:
**************************** / slMultiTerm                                                       :6_3:Other "a da:
***************************** / |:| some                                                        :6_3:Other "a da:
****************************** / |:| base parser                                               :6_3:Other "a da:
****************************** \ |:| base parser has returned ("a data breach",0)               :6_4:GoDeeper:
****************************** / |:| deeper                                                     :6_4:GoDeeper:
******************************* / |:| some GoDeeper                                            :6_4:GoDeeper:
******************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]       :6_6:Other "occu:
******************************* / |:| some                                                          :6_6:Other "occu:
******************************** / |:| base parser                                                 :6_6:Other "occu:
******************************** \ |:| base parser has returned ("occurred",0)                  :7_4:UnDeeper:
******************************** / |:| deeper                                                   :7_4:UnDeeper:
********************************* / |:| some GoDeeper                                          :7_4:UnDeeper:
******************************** / |:| noMore                                                   :7_4:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                               :7_4:UnDeeper:
******************************* \ |:| some has returned (["occurred"],0)                         :7_4:UnDeeper:
****************************** \ |:| deeper has returned (["occurred"],3)                         :7_4:UnDeeper:
***************************** \ |:| some has returned (["a data breach","occurred"],3)             :7_4:UnDeeper:
**************************** \ slMultiTerm has returned (["a data breach","occurred"],3)            :7_4:UnDeeper:
*************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)            :7_4:UnDeeper:
************************** \ slAKA base has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************* \ $*| has returned (["a data breach","occurred"],3)                          :7_4:UnDeeper:
************************* / |>>                                                                        :7_4:UnDeeper:
************************** / |>>/recurse                                                              :7_4:UnDeeper:
************************** / |>>/base                                                                 :7_4:UnDeeper:
*************************** / slAKA optional akapart                                                 :7_4:UnDeeper:
**************************** / |?| optional something                                               :7_4:UnDeeper:
***************************** / |>>                                                                :7_4:UnDeeper:
****************************** / |>>/recurse                                                      :7_4:UnDeeper:
****************************** / |>>/base                                                         :7_4:UnDeeper:
******************************* / PAKA/akapart                                                   :7_4:UnDeeper:
******************************** / $>|                                                          :7_4:UnDeeper:
********************************* / Aka Token                                                  :7_4:UnDeeper:
**************************** \ |?| optional something has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** \ slAKA optional akapart has returned (Nothing,0)                        :7_4:UnDeeper:
*************************** / |>>/base got Nothing                                                   :7_4:UnDeeper:
************************** \ |>>/base has returned (Nothing,0)                                        :7_4:UnDeeper:
************************* \ |>> has returned (Nothing,0)                                               :7_4:UnDeeper:
************************* / |>>                                                                        :7_4:UnDeeper:
************************** / |>>/recurse                                                              :7_4:UnDeeper:
************************** / |>>/base                                                                 :7_4:UnDeeper:
*************************** / slAKA optional typically                                               :7_4:UnDeeper:
**************************** / |?| optional something                                               :7_4:UnDeeper:
***************************** / |>>                                                                :7_4:UnDeeper:
****************************** / |>>/recurse                                                      :7_4:UnDeeper:
****************************** / |>>/base                                                         :7_4:UnDeeper:
******************************* / typically                                                      :7_4:UnDeeper:
******************************** / $>|                                                          :7_4:UnDeeper:
**************************** \ |?| optional something has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** \ slAKA optional typically has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** / |>>/base got Nothing                                                   :7_4:UnDeeper:
************************** \ |>>/base has returned (Nothing,0)                                        :7_4:UnDeeper:
************************* \ |>> has returned (Nothing,0)                                               :7_4:UnDeeper:
************************* / slAKA: proceeding after base and entityalias are retrieved ...             :7_4:UnDeeper:
************************* / pAKA: entityalias = Nothing                                                :7_4:UnDeeper:
************************ \ slAKA has returned (["a data breach","occurred"],3)                          :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                          :7_4:UnDeeper:
********************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                       :7_4:UnDeeper:
********************* / undeepers                                                                          :7_4:UnDeeper:
********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers           :7_4:UnDeeper:
********************** / sameLine: success!                                                            :7_3:Is:
********************* \ undeepers has returned ()                                                       :7_3:Is:
******************** \ pRelPred has returned RPMT ["a data breach","occurred"]                           :7_3:Is:
******************* \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])            :7_3:Is:
****************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                          :7_3:Is:
***************** / binary(Or)                                                                              :7_3:Is:
***************** / binary(And)                                                                             :7_3:Is:
***************** / binary(SetLess)                                                                         :7_3:Is:
***************** / binary(SetPlus)                                                                         :7_3:Is:
**************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])             :7_3:Is:
**************** / myindented: consuming UnDeeper                                                            :7_3:Is:
************ / term p/3:plain p                                                                               :6_2:GoDeeper:
************* / pRelPred                                                                                     :6_2:GoDeeper:
************** / slRelPred                                                                                  :6_2:GoDeeper:
*************** / RPConstraint                                                                             :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slMultiTerm                                                                          :6_2:GoDeeper:
****************** / |:| some                                                                           :6_2:GoDeeper:
******************* / |:| base parser                                                                  :6_2:GoDeeper:
******************** / pNumAsText                                                                     :6_2:GoDeeper:
*************** / RPBoolStructR                                                                            :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slMultiTerm                                                                          :6_2:GoDeeper:
****************** / |:| some                                                                           :6_2:GoDeeper:
******************* / |:| base parser                                                                  :6_2:GoDeeper:
******************** / pNumAsText                                                                     :6_2:GoDeeper:
*************** / RPMT                                                                                     :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA                                                                                :6_2:GoDeeper:
****************** / $*|                                                                                :6_2:GoDeeper:
******************* / slAKA base                                                                       :6_2:GoDeeper:
******************** / slInlineDefMT                                                                  :6_2:GoDeeper:
********************* / $*|                                                                          :6_2:GoDeeper:
********************** / slMultiTerm                                                                :6_2:GoDeeper:
*********************** / |:| some                                                                 :6_2:GoDeeper:
************************ / |:| base parser                                                        :6_2:GoDeeper:
************************* / pNumAsText                                                           :6_2:GoDeeper:
********************* / slMultiTerm                                                                  :6_2:GoDeeper:
********************** / |:| some                                                                   :6_2:GoDeeper:
*********************** / |:| base parser                                                          :6_2:GoDeeper:
************************ / pNumAsText                                                             :6_2:GoDeeper:
********* / withPrePost                                                                                          :6_2:GoDeeper:
********** / |<* starting                                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / pre part                                                                                         :6_2:GoDeeper:
************ / aboveNextLineKeyword                                                                             :6_3:GoDeeper:
************* / expectUnDeepers                                                                                :6_3:GoDeeper:
************** / pNumAsText                                                                                   :6_3:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                        :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                 :6_3:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                :6_3:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                              :6_3:GoDeeper:
************* / $*|                                                                                            :6_3:GoDeeper:
************* \ $*| has returned ((),0)                                                                        :6_3:GoDeeper:
************* / ->| success                                                                                     :6_3:Other "a da:
************* / |>>                                                                                             :6_3:Other "a da:
************** / |>>/recurse                                                                                   :6_3:Other "a da:
************** / |>>/base                                                                                      :6_3:Other "a da:
*************** / slMultiTerm                                                                                 :6_3:Other "a da:
**************** / |:| some                                                                                  :6_3:Other "a da:
***************** / |:| base parser                                                                         :6_3:Other "a da:
***************** \ |:| base parser has returned ("a data breach",0)                                         :6_4:GoDeeper:
***************** / |:| deeper                                                                               :6_4:GoDeeper:
****************** / |:| some GoDeeper                                                                      :6_4:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |:| deeper has returned (["occurred"],3)                                                   :7_4:UnDeeper:
**************** \ |:| some has returned (["a data breach","occurred"],3)                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["a data breach","occurred"],3)                                      :7_4:UnDeeper:
*************** / |>>/base got ["a data breach","occurred"]                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ |>> has returned (["a data breach","occurred"],3)                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 4                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                    :6_3:GoDeeper:
************ / aboveNextLineKeyword                                                                              :6_3:Other "a da:
************* / expectUnDeepers                                                                                 :6_3:Other "a da:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["a data breach","GD","GD","GD","occurred"]                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                  :6_3:Other "a da:
************* / aNLK: determined undp_count = 3                                                                 :6_3:Other "a da:
************* / ->| trying to consume 1 GoDeepers                                                               :6_3:Other "a da:
************* / $*|                                                                                             :6_3:Other "a da:
************* \ $*| has returned ((),0)                                                                         :6_3:Other "a da:
************ / /*= lookAhead failed, delegating to plain /+=                                                     :6_3:Other "a da:
************ / aboveNextLineKeyword                                                                               :6_4:GoDeeper:
************* / expectUnDeepers                                                                                  :6_4:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","GD","occurred"]                                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                   :6_4:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                  :6_4:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                :6_4:GoDeeper:
************* / $*|                                                                                              :6_4:GoDeeper:
************* \ $*| has returned ((),0)                                                                          :6_4:GoDeeper:
************* / ->| success                                                                                        :6_5:GoDeeper:
************* / |>>                                                                                                :6_5:GoDeeper:
************** / |>>/recurse                                                                                      :6_5:GoDeeper:
*************** / |>>                                                                                              :6_6:GoDeeper:
**************** / |>>/recurse                                                                                    :6_6:GoDeeper:
***************** / |>>                                                                                           :6_6:Other "occu:
****************** / |>>/recurse                                                                                 :6_6:Other "occu:
****************** / |>>/base                                                                                    :6_6:Other "occu:
******************* / slMultiTerm                                                                               :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ slMultiTerm has returned (["occurred"],0)                                              :7_4:UnDeeper:
******************* / |>>/base got ["occurred"]                                                              :7_4:UnDeeper:
****************** \ |>>/base has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |>> has returned (["occurred"],0)                                                          :7_4:UnDeeper:
**************** \ |>>/recurse has returned (["occurred"],1)                                                    :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],1)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],2)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],2)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 3                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                      :6_4:GoDeeper:
************ / aboveNextLineKeyword                                                                                 :6_5:GoDeeper:
************* / expectUnDeepers                                                                                    :6_5:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","occurred"]                                                                  :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :6_5:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                    :6_5:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :6_5:GoDeeper:
************* / $*|                                                                                                :6_5:GoDeeper:
************* \ $*| has returned ((),0)                                                                            :6_5:GoDeeper:
************* / ->| success                                                                                          :6_6:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 2                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :6_5:GoDeeper:
************ / aboveNextLineKeyword                                                                                   :6_6:GoDeeper:
************* / expectUnDeepers                                                                                      :6_6:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","occurred"]                                                                       :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                       :6_6:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                      :6_6:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                    :6_6:GoDeeper:
************* / $*|                                                                                                  :6_6:GoDeeper:
************* \ $*| has returned ((),0)                                                                              :6_6:GoDeeper:
************* / ->| success                                                                                           :6_6:Other "occu:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 1                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                          :6_6:GoDeeper:
************ / aboveNextLineKeyword                                                                                    :6_6:Other "occu:
************* / expectUnDeepers                                                                                       :6_6:Other "occu:
************** / ignoring ["occurred"]                                                                            :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                        :6_6:Other "occu:
************* / aNLK: determined undp_count = 3                                                                       :6_6:Other "occu:
************* / ->| trying to consume 1 GoDeepers                                                                     :6_6:Other "occu:
************* / $*|                                                                                                   :6_6:Other "occu:
************* \ $*| has returned ((),0)                                                                               :6_6:Other "occu:
************ / /*= lookAhead failed, delegating to plain /+=                                                           :6_6:Other "occu:
************ / aboveNextLineKeyword                                                                                 :7_4:UnDeeper:
************* / expectUnDeepers                                                                                    :7_4:UnDeeper:
************** / ignoring []                                                                                      :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :7_4:UnDeeper:
************* / aNLK: determined undp_count = 3                                                                    :7_4:UnDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :7_4:UnDeeper:
************* / $*|                                                                                                :7_4:UnDeeper:
************* \ $*| has returned ((),0)                                                                            :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :7_4:UnDeeper:
********* / withPreOnly                                                                                          :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / pre part                                                                                         :6_2:GoDeeper:
************ / aboveNextLineKeyword                                                                             :6_3:GoDeeper:
************* / expectUnDeepers                                                                                :6_3:GoDeeper:
************** / pNumAsText                                                                                   :6_3:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                        :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                 :6_3:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                :6_3:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                              :6_3:GoDeeper:
************* / $*|                                                                                            :6_3:GoDeeper:
************* \ $*| has returned ((),0)                                                                        :6_3:GoDeeper:
************* / ->| success                                                                                     :6_3:Other "a da:
************* / |>>                                                                                             :6_3:Other "a da:
************** / |>>/recurse                                                                                   :6_3:Other "a da:
************** / |>>/base                                                                                      :6_3:Other "a da:
*************** / slMultiTerm                                                                                 :6_3:Other "a da:
**************** / |:| some                                                                                  :6_3:Other "a da:
***************** / |:| base parser                                                                         :6_3:Other "a da:
***************** \ |:| base parser has returned ("a data breach",0)                                         :6_4:GoDeeper:
***************** / |:| deeper                                                                               :6_4:GoDeeper:
****************** / |:| some GoDeeper                                                                      :6_4:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |:| deeper has returned (["occurred"],3)                                                   :7_4:UnDeeper:
**************** \ |:| some has returned (["a data breach","occurred"],3)                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["a data breach","occurred"],3)                                      :7_4:UnDeeper:
*************** / |>>/base got ["a data breach","occurred"]                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ |>> has returned (["a data breach","occurred"],3)                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 4                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                    :6_3:GoDeeper:
************ / aboveNextLineKeyword                                                                              :6_3:Other "a da:
************* / expectUnDeepers                                                                                 :6_3:Other "a da:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["a data breach","GD","GD","GD","occurred"]                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                  :6_3:Other "a da:
************* / aNLK: determined undp_count = 3                                                                 :6_3:Other "a da:
************* / ->| trying to consume 1 GoDeepers                                                               :6_3:Other "a da:
************* / $*|                                                                                             :6_3:Other "a da:
************* \ $*| has returned ((),0)                                                                         :6_3:Other "a da:
************ / /*= lookAhead failed, delegating to plain /+=                                                     :6_3:Other "a da:
************ / aboveNextLineKeyword                                                                               :6_4:GoDeeper:
************* / expectUnDeepers                                                                                  :6_4:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","GD","occurred"]                                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                   :6_4:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                  :6_4:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                :6_4:GoDeeper:
************* / $*|                                                                                              :6_4:GoDeeper:
************* \ $*| has returned ((),0)                                                                          :6_4:GoDeeper:
************* / ->| success                                                                                        :6_5:GoDeeper:
************* / |>>                                                                                                :6_5:GoDeeper:
************** / |>>/recurse                                                                                      :6_5:GoDeeper:
*************** / |>>                                                                                              :6_6:GoDeeper:
**************** / |>>/recurse                                                                                    :6_6:GoDeeper:
***************** / |>>                                                                                           :6_6:Other "occu:
****************** / |>>/recurse                                                                                 :6_6:Other "occu:
****************** / |>>/base                                                                                    :6_6:Other "occu:
******************* / slMultiTerm                                                                               :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ slMultiTerm has returned (["occurred"],0)                                              :7_4:UnDeeper:
******************* / |>>/base got ["occurred"]                                                              :7_4:UnDeeper:
****************** \ |>>/base has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |>> has returned (["occurred"],0)                                                          :7_4:UnDeeper:
**************** \ |>>/recurse has returned (["occurred"],1)                                                    :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],1)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],2)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],2)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 3                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                      :6_4:GoDeeper:
************ / aboveNextLineKeyword                                                                                 :6_5:GoDeeper:
************* / expectUnDeepers                                                                                    :6_5:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","occurred"]                                                                  :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :6_5:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                    :6_5:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :6_5:GoDeeper:
************* / $*|                                                                                                :6_5:GoDeeper:
************* \ $*| has returned ((),0)                                                                            :6_5:GoDeeper:
************* / ->| success                                                                                          :6_6:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 2                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :6_5:GoDeeper:
************ / aboveNextLineKeyword                                                                                   :6_6:GoDeeper:
************* / expectUnDeepers                                                                                      :6_6:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","occurred"]                                                                       :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                       :6_6:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                      :6_6:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                    :6_6:GoDeeper:
************* / $*|                                                                                                  :6_6:GoDeeper:
************* \ $*| has returned ((),0)                                                                              :6_6:GoDeeper:
************* / ->| success                                                                                           :6_6:Other "occu:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 1                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                          :6_6:GoDeeper:
************ / aboveNextLineKeyword                                                                                    :6_6:Other "occu:
************* / expectUnDeepers                                                                                       :6_6:Other "occu:
************** / ignoring ["occurred"]                                                                            :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                        :6_6:Other "occu:
************* / aNLK: determined undp_count = 3                                                                       :6_6:Other "occu:
************* / ->| trying to consume 1 GoDeepers                                                                     :6_6:Other "occu:
************* / $*|                                                                                                   :6_6:Other "occu:
************* \ $*| has returned ((),0)                                                                               :6_6:Other "occu:
************ / /*= lookAhead failed, delegating to plain /+=                                                           :6_6:Other "occu:
************ / aboveNextLineKeyword                                                                                 :7_4:UnDeeper:
************* / expectUnDeepers                                                                                    :7_4:UnDeeper:
************** / ignoring []                                                                                      :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :7_4:UnDeeper:
************* / aNLK: determined undp_count = 3                                                                    :7_4:UnDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :7_4:UnDeeper:
************* / $*|                                                                                                :7_4:UnDeeper:
************* \ $*| has returned ((),0)                                                                            :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :7_4:UnDeeper:
****** \ pHornlike / someStructure / clauses permute has returned (Nothing,Nothing,Nothing,Nothing)                :6_1:If:
****** / ambitious: got back ifLimb     Nothing                                                                    :6_1:If:
****** / ambitious: got back unlessLimb Nothing                                                                    :6_1:If:
****** / ambitious: got back andLimb    Nothing                                                                    :6_1:If:
****** / ambitious: got back orLimb     Nothing                                                                    :6_1:If:
***** \ pHornlike/ambitious has returned (Just Define,["a Data Breach"],[HC2 {hHead = RPConstraint ["a Data Breach"] RPis ["a Notifiable Data Breach"], hBody = Just (Leaf (RPMT ["always"]))}]) :6_1:If:
***** / whenCase                                                                                                    :6_1:If:
****** / whenMeansIf                                                                                               :6_1:If:
****** \ whenMeansIf has returned If                                                                                :6_2:GoDeeper:
****** / pBSR                                                                                                       :6_2:GoDeeper:
******* / ppp inner                                                                                                :6_2:GoDeeper:
******** / term p                                                                                                 :6_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / |:| some                                                                                         :6_2:GoDeeper:
************ / |:| base parser                                                                                :6_2:GoDeeper:
************* / pNumAsText                                                                                   :6_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :6_2:GoDeeper:
********** / |:| some                                                                                           :6_2:GoDeeper:
*********** / |:| base parser                                                                                  :6_2:GoDeeper:
************ / pNumAsText                                                                                     :6_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :6_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :6_2:GoDeeper:
*********** / someIndentation                                                                                  :6_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :6_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                             :6_3:GoDeeper:
************ / manyIndentation/leaf?                                                                            :6_3:GoDeeper:
************* / term p                                                                                         :6_3:GoDeeper:
************** / term p/1a:label directly above                                                               :6_3:GoDeeper:
*************** / $*|                                                                                        :6_3:GoDeeper:
**************** / |:| some                                                                                 :6_3:GoDeeper:
***************** / |:| base parser                                                                        :6_3:GoDeeper:
****************** / pNumAsText                                                                           :6_3:GoDeeper:
************** / term p/b:label to the left of line below, with EOL                                           :6_3:GoDeeper:
*************** / |:| some                                                                                   :6_3:GoDeeper:
**************** / |:| base parser                                                                          :6_3:GoDeeper:
***************** / pNumAsText                                                                             :6_3:GoDeeper:
************** / term p/notLabelTerm                                                                          :6_3:GoDeeper:
*************** / term p/2:someIndentation expr p                                                            :6_3:GoDeeper:
**************** / someIndentation                                                                          :6_3:GoDeeper:
***************** / myindented: consuming GoDeeper                                                         :6_3:GoDeeper:
***************** \ myindented: consuming GoDeeper has returned GoDeeper                                    :6_3:Other "a da:
***************** / manyIndentation/leaf?                                                                   :6_3:Other "a da:
****************** / term p                                                                                :6_3:Other "a da:
******************* / term p/1a:label directly above                                                      :6_3:Other "a da:
******************** / $*|                                                                               :6_3:Other "a da:
********************* / |:| some                                                                        :6_3:Other "a da:
********************** / |:| base parser                                                               :6_3:Other "a da:
********************** \ |:| base parser has returned ("a data breach",0)                               :6_4:GoDeeper:
********************** / |:| deeper                                                                     :6_4:GoDeeper:
*********************** / |:| some GoDeeper                                                            :6_4:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                       :6_6:Other "occu:
*********************** / |:| some                                                                          :6_6:Other "occu:
************************ / |:| base parser                                                                 :6_6:Other "occu:
************************ \ |:| base parser has returned ("occurred",0)                                  :7_4:UnDeeper:
************************ / |:| deeper                                                                   :7_4:UnDeeper:
************************* / |:| some GoDeeper                                                          :7_4:UnDeeper:
************************ / |:| noMore                                                                   :7_4:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                               :7_4:UnDeeper:
*********************** \ |:| some has returned (["occurred"],0)                                         :7_4:UnDeeper:
********************** \ |:| deeper has returned (["occurred"],3)                                         :7_4:UnDeeper:
********************* \ |:| some has returned (["a data breach","occurred"],3)                             :7_4:UnDeeper:
********************* / pNumAsText                                                                         :7_4:UnDeeper:
******************* / term p/b:label to the left of line below, with EOL                                  :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / undeepers                                                                            :7_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers             :7_4:UnDeeper:
********************* / sameLine: success!                                                              :7_3:Is:
******************** \ undeepers has returned ()                                                         :7_3:Is:
******************** / matching EOL                                                                      :7_3:Is:
******************* / term p/notLabelTerm                                                                 :6_3:Other "a da:
******************** / term p/2:someIndentation expr p                                                   :6_3:Other "a da:
********************* / someIndentation                                                                 :6_3:Other "a da:
********************** / myindented: consuming GoDeeper                                                :6_3:Other "a da:
******************** / term p/3:plain p                                                                  :6_3:Other "a da:
********************* / pRelPred                                                                        :6_3:Other "a da:
********************** / slRelPred                                                                     :6_3:Other "a da:
*********************** / RPConstraint                                                                :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPBoolStructR                                                               :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPMT                                                                        :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slAKA                                                                   :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA base                                                          :6_3:Other "a da:
**************************** / slInlineDefMT                                                     :6_3:Other "a da:
***************************** / $*|                                                             :6_3:Other "a da:
****************************** / slMultiTerm                                                   :6_3:Other "a da:
******************************* / |:| some                                                    :6_3:Other "a da:
******************************** / |:| base parser                                           :6_3:Other "a da:
******************************** \ |:| base parser has returned ("a data breach",0)           :6_4:GoDeeper:
******************************** / |:| deeper                                                 :6_4:GoDeeper:
********************************* / |:| some GoDeeper                                        :6_4:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]   :6_6:Other "occu:
********************************* / |:| some                                                      :6_6:Other "occu:
********************************** / |:| base parser                                             :6_6:Other "occu:
********************************** \ |:| base parser has returned ("occurred",0)              :7_4:UnDeeper:
********************************** / |:| deeper                                               :7_4:UnDeeper:
*********************************** / |:| some GoDeeper                                      :7_4:UnDeeper:
********************************** / |:| noMore                                               :7_4:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                           :7_4:UnDeeper:
********************************* \ |:| some has returned (["occurred"],0)                     :7_4:UnDeeper:
******************************** \ |:| deeper has returned (["occurred"],3)                     :7_4:UnDeeper:
******************************* \ |:| some has returned (["a data breach","occurred"],3)         :7_4:UnDeeper:
****************************** \ slMultiTerm has returned (["a data breach","occurred"],3)        :7_4:UnDeeper:
***************************** \ $*| has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
***************************** / |>| calling $>>                                                    :7_4:UnDeeper:
****************************** / $>>                                                              :7_4:UnDeeper:
******************************* / $>>/recurse                                                    :7_4:UnDeeper:
******************************* / $>>/base                                                       :7_4:UnDeeper:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
*************************** \ slAKA base has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional akapart                                               :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / PAKA/akapart                                                 :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
********************************** / Aka Token                                                :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional akapart has returned (Nothing,0)                      :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional typically                                             :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / typically                                                    :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional typically has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / slAKA: proceeding after base and entityalias are retrieved ...           :7_4:UnDeeper:
************************** / pAKA: entityalias = Nothing                                              :7_4:UnDeeper:
************************* \ slAKA has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
*********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************** \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                     :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************* \ pRelPred has returned RPMT ["a data breach","occurred"]                         :7_3:Is:
******************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])          :7_3:Is:
******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])         :7_3:Is:
****************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                        :7_3:Is:
****************** / binary(Or)                                                                            :7_3:Is:
****************** / binary(And)                                                                           :7_3:Is:
****************** / binary(SetLess)                                                                       :7_3:Is:
****************** / binary(SetPlus)                                                                       :7_3:Is:
***************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** / myindented: consuming UnDeeper                                                          :7_3:Is:
*************** / term p/3:plain p                                                                           :6_3:GoDeeper:
**************** / pRelPred                                                                                 :6_3:GoDeeper:
***************** / slRelPred                                                                              :6_3:GoDeeper:
****************** / RPConstraint                                                                         :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPBoolStructR                                                                        :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPMT                                                                                 :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slAKA                                                                            :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA base                                                                   :6_3:GoDeeper:
*********************** / slInlineDefMT                                                              :6_3:GoDeeper:
************************ / $*|                                                                      :6_3:GoDeeper:
************************* / slMultiTerm                                                            :6_3:GoDeeper:
************************** / |:| some                                                             :6_3:GoDeeper:
*************************** / |:| base parser                                                    :6_3:GoDeeper:
**************************** / pNumAsText                                                       :6_3:GoDeeper:
************************ / slMultiTerm                                                              :6_3:GoDeeper:
************************* / |:| some                                                               :6_3:GoDeeper:
************************** / |:| base parser                                                      :6_3:GoDeeper:
*************************** / pNumAsText                                                         :6_3:GoDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                  :6_3:GoDeeper:
************* / someIndentation                                                                                :6_3:GoDeeper:
************** / myindented: consuming GoDeeper                                                               :6_3:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                          :6_3:Other "a da:
************** / manyIndentation/leaf?                                                                         :6_3:Other "a da:
*************** / term p                                                                                      :6_3:Other "a da:
**************** / term p/1a:label directly above                                                            :6_3:Other "a da:
***************** / $*|                                                                                     :6_3:Other "a da:
****************** / |:| some                                                                              :6_3:Other "a da:
******************* / |:| base parser                                                                     :6_3:Other "a da:
******************* \ |:| base parser has returned ("a data breach",0)                                     :6_4:GoDeeper:
******************* / |:| deeper                                                                           :6_4:GoDeeper:
******************** / |:| some GoDeeper                                                                  :6_4:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                             :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ |:| deeper has returned (["occurred"],3)                                               :7_4:UnDeeper:
****************** \ |:| some has returned (["a data breach","occurred"],3)                                   :7_4:UnDeeper:
****************** / pNumAsText                                                                               :7_4:UnDeeper:
**************** / term p/b:label to the left of line below, with EOL                                        :6_3:Other "a da:
***************** / |:| some                                                                                :6_3:Other "a da:
****************** / |:| base parser                                                                       :6_3:Other "a da:
****************** \ |:| base parser has returned ("a data breach",0)                                       :6_4:GoDeeper:
****************** / |:| deeper                                                                             :6_4:GoDeeper:
******************* / |:| some GoDeeper                                                                    :6_4:GoDeeper:
******************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :6_6:Other "occu:
******************* / |:| some                                                                                  :6_6:Other "occu:
******************** / |:| base parser                                                                         :6_6:Other "occu:
******************** \ |:| base parser has returned ("occurred",0)                                          :7_4:UnDeeper:
******************** / |:| deeper                                                                           :7_4:UnDeeper:
********************* / |:| some GoDeeper                                                                  :7_4:UnDeeper:
******************** / |:| noMore                                                                           :7_4:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                       :7_4:UnDeeper:
******************* \ |:| some has returned (["occurred"],0)                                                 :7_4:UnDeeper:
****************** \ |:| deeper has returned (["occurred"],3)                                                 :7_4:UnDeeper:
***************** \ |:| some has returned (["a data breach","occurred"],3)                                     :7_4:UnDeeper:
***************** / undeepers                                                                                  :7_4:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                   :7_4:UnDeeper:
****************** / sameLine: success!                                                                    :7_3:Is:
***************** \ undeepers has returned ()                                                               :7_3:Is:
***************** / matching EOL                                                                            :7_3:Is:
**************** / term p/notLabelTerm                                                                       :6_3:Other "a da:
***************** / term p/2:someIndentation expr p                                                         :6_3:Other "a da:
****************** / someIndentation                                                                       :6_3:Other "a da:
******************* / myindented: consuming GoDeeper                                                      :6_3:Other "a da:
***************** / term p/3:plain p                                                                        :6_3:Other "a da:
****************** / pRelPred                                                                              :6_3:Other "a da:
******************* / slRelPred                                                                           :6_3:Other "a da:
******************** / RPConstraint                                                                      :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPBoolStructR                                                                     :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPMT                                                                              :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slAKA                                                                         :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA base                                                                :6_3:Other "a da:
************************* / slInlineDefMT                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************** / slMultiTerm                                                           :6_3:Other "a da:
*************************** / |:| some                                                            :6_3:Other "a da:
**************************** / |:| base parser                                                   :6_3:Other "a da:
**************************** \ |:| base parser has returned ("a data breach",0)                   :6_4:GoDeeper:
**************************** / |:| deeper                                                         :6_4:GoDeeper:
***************************** / |:| some GoDeeper                                                :6_4:GoDeeper:
***************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]           :6_6:Other "occu:
***************************** / |:| some                                                              :6_6:Other "occu:
****************************** / |:| base parser                                                     :6_6:Other "occu:
****************************** \ |:| base parser has returned ("occurred",0)                      :7_4:UnDeeper:
****************************** / |:| deeper                                                       :7_4:UnDeeper:
******************************* / |:| some GoDeeper                                              :7_4:UnDeeper:
****************************** / |:| noMore                                                       :7_4:UnDeeper:
****************************** \ |:| noMore has returned ([],0)                                   :7_4:UnDeeper:
***************************** \ |:| some has returned (["occurred"],0)                             :7_4:UnDeeper:
**************************** \ |:| deeper has returned (["occurred"],3)                             :7_4:UnDeeper:
*************************** \ |:| some has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************** \ slMultiTerm has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************* \ slInlineDefMT has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************ \ slAKA base has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional akapart                                                     :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / PAKA/akapart                                                       :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
******************************* / Aka Token                                                      :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional akapart has returned (Nothing,0)                            :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional typically                                                   :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / typically                                                          :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional typically has returned (Nothing,0)                          :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / slAKA: proceeding after base and entityalias are retrieved ...                 :7_4:UnDeeper:
*********************** / pAKA: entityalias = Nothing                                                    :7_4:UnDeeper:
********************** \ slAKA has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
******************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                              :7_4:UnDeeper:
******************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                           :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
****************** \ pRelPred has returned RPMT ["a data breach","occurred"]                               :7_3:Is:
***************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])                :7_3:Is:
**************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])               :7_3:Is:
*************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                              :7_3:Is:
*************** / binary(Or)                                                                                  :7_3:Is:
*************** / binary(And)                                                                                 :7_3:Is:
*************** / binary(SetLess)                                                                             :7_3:Is:
*************** / binary(SetPlus)                                                                             :7_3:Is:
************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])                 :7_3:Is:
************** / myindented: consuming UnDeeper                                                                :7_3:Is:
********** / term p/3:plain p                                                                                   :6_2:GoDeeper:
*********** / pRelPred                                                                                         :6_2:GoDeeper:
************ / slRelPred                                                                                      :6_2:GoDeeper:
************* / RPConstraint                                                                                 :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPBoolStructR                                                                                :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPMT                                                                                         :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slAKA                                                                                    :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA base                                                                           :6_2:GoDeeper:
****************** / slInlineDefMT                                                                      :6_2:GoDeeper:
******************* / $*|                                                                              :6_2:GoDeeper:
******************** / slMultiTerm                                                                    :6_2:GoDeeper:
********************* / |:| some                                                                     :6_2:GoDeeper:
********************** / |:| base parser                                                            :6_2:GoDeeper:
*********************** / pNumAsText                                                               :6_2:GoDeeper:
******************* / slMultiTerm                                                                      :6_2:GoDeeper:
******************** / |:| some                                                                       :6_2:GoDeeper:
********************* / |:| base parser                                                              :6_2:GoDeeper:
********************** / pNumAsText                                                                 :6_2:GoDeeper:
******* / withPrePost                                                                                              :6_2:GoDeeper:
******** / |<* starting                                                                                           :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
******* / withPreOnly                                                                                              :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
****** / Otherwise                                                                                                 :6_1:If:
**** \ pHornlike / permute has returned ((Just Define,["a Data Breach"],[HC2 {hHead = RPConstraint ["a Data Breach"] RPis ["a Notifiable Data Breach"], hBody = Just (Leaf (RPMT ["always"]))}]),Nothing,Nothing,Nothing) :6_1:If:
*** \ pHornlike has returned Hornlike {name = ["a Data Breach"], keyword = Define, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPConstraint ["a Data Breach"] RPis ["a Notifiable Data Breach"], hBody = Just (Leaf (RPMT ["always"]))}], rlabel = Just ("\167",1,"NDB Qualification"), lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 2, version = Nothing}), defaults = [], symtab = []} :6_1:If:
** \ pRule has returned Hornlike {name = ["a Data Breach"], keyword = Define, given = Nothing, upon = Nothing, clauses = [HC2 {hHead = RPConstraint ["a Data Breach"] RPis ["a Notifiable Data Breach"], hBody = Just (Leaf (RPMT ["always"]))}], rlabel = Just ("\167",1,"NDB Qualification"), lsource = Nothing, srcref = Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 1, version = Nothing}), defaults = [], symtab = []} :6_1:If:
** / pRule                                                                                                             :6_1:If:
*** / pRegRule                                                                                                        :6_1:If:
**** / pRuleLabel                                                                                                    :6_1:If:
***** / $>|                                                                                                         :6_1:If:
**** / pRegRuleSugary                                                                                                :6_1:If:
***** / someDeep                                                                                                    :6_1:If:
****** / someDeep first part calls base directly                                                                   :6_1:If:
**** / pRegRuleNormal                                                                                                :6_1:If:
***** / permutationsReg                                                                                             :6_1:If:
****** / regulative permutation with deontic-temporal                                                              :6_1:If:
******* / WHERE                                                                                                   :6_1:If:
******* / preambleParamText:[Having]                                                                              :6_1:If:
******** / $>|                                                                                                   :6_1:If:
******* / preambleParamText:[Given]                                                                               :6_1:If:
******** / $>|                                                                                                   :6_1:If:
******* / preambleParamText:[Upon]                                                                                :6_1:If:
******** / $>|                                                                                                   :6_1:If:
******* / preambleBoolStructR [Unless]                                                                            :6_1:If:
******* / preambleBoolStructR [When,If]                                                                           :6_1:If:
******** / pBSR                                                                                                   :6_2:GoDeeper:
********* / ppp inner                                                                                            :6_2:GoDeeper:
********** / term p                                                                                             :6_2:GoDeeper:
*********** / term p/1a:label directly above                                                                   :6_2:GoDeeper:
************ / $*|                                                                                            :6_2:GoDeeper:
************* / |:| some                                                                                     :6_2:GoDeeper:
************** / |:| base parser                                                                            :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
*********** / term p/b:label to the left of line below, with EOL                                               :6_2:GoDeeper:
************ / |:| some                                                                                       :6_2:GoDeeper:
************* / |:| base parser                                                                              :6_2:GoDeeper:
************** / pNumAsText                                                                                 :6_2:GoDeeper:
*********** / term p/notLabelTerm                                                                              :6_2:GoDeeper:
************ / term p/2:someIndentation expr p                                                                :6_2:GoDeeper:
************* / someIndentation                                                                              :6_2:GoDeeper:
************** / myindented: consuming GoDeeper                                                             :6_2:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                         :6_3:GoDeeper:
************** / manyIndentation/leaf?                                                                        :6_3:GoDeeper:
*************** / term p                                                                                     :6_3:GoDeeper:
**************** / term p/1a:label directly above                                                           :6_3:GoDeeper:
***************** / $*|                                                                                    :6_3:GoDeeper:
****************** / |:| some                                                                             :6_3:GoDeeper:
******************* / |:| base parser                                                                    :6_3:GoDeeper:
******************** / pNumAsText                                                                       :6_3:GoDeeper:
**************** / term p/b:label to the left of line below, with EOL                                       :6_3:GoDeeper:
***************** / |:| some                                                                               :6_3:GoDeeper:
****************** / |:| base parser                                                                      :6_3:GoDeeper:
******************* / pNumAsText                                                                         :6_3:GoDeeper:
**************** / term p/notLabelTerm                                                                      :6_3:GoDeeper:
***************** / term p/2:someIndentation expr p                                                        :6_3:GoDeeper:
****************** / someIndentation                                                                      :6_3:GoDeeper:
******************* / myindented: consuming GoDeeper                                                     :6_3:GoDeeper:
******************* \ myindented: consuming GoDeeper has returned GoDeeper                                :6_3:Other "a da:
******************* / manyIndentation/leaf?                                                               :6_3:Other "a da:
******************** / term p                                                                            :6_3:Other "a da:
********************* / term p/1a:label directly above                                                  :6_3:Other "a da:
********************** / $*|                                                                           :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
*********************** / pNumAsText                                                                     :7_4:UnDeeper:
********************* / term p/b:label to the left of line below, with EOL                              :6_3:Other "a da:
********************** / |:| some                                                                      :6_3:Other "a da:
*********************** / |:| base parser                                                             :6_3:Other "a da:
*********************** \ |:| base parser has returned ("a data breach",0)                             :6_4:GoDeeper:
*********************** / |:| deeper                                                                   :6_4:GoDeeper:
************************ / |:| some GoDeeper                                                          :6_4:GoDeeper:
************************ \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :6_6:Other "occu:
************************ / |:| some                                                                        :6_6:Other "occu:
************************* / |:| base parser                                                               :6_6:Other "occu:
************************* \ |:| base parser has returned ("occurred",0)                                :7_4:UnDeeper:
************************* / |:| deeper                                                                 :7_4:UnDeeper:
************************** / |:| some GoDeeper                                                        :7_4:UnDeeper:
************************* / |:| noMore                                                                 :7_4:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                             :7_4:UnDeeper:
************************ \ |:| some has returned (["occurred"],0)                                       :7_4:UnDeeper:
*********************** \ |:| deeper has returned (["occurred"],3)                                       :7_4:UnDeeper:
********************** \ |:| some has returned (["a data breach","occurred"],3)                           :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************** / matching EOL                                                                  :7_3:Is:
********************* / term p/notLabelTerm                                                             :6_3:Other "a da:
********************** / term p/2:someIndentation expr p                                               :6_3:Other "a da:
*********************** / someIndentation                                                             :6_3:Other "a da:
************************ / myindented: consuming GoDeeper                                            :6_3:Other "a da:
********************** / term p/3:plain p                                                              :6_3:Other "a da:
*********************** / pRelPred                                                                    :6_3:Other "a da:
************************ / slRelPred                                                                 :6_3:Other "a da:
************************* / RPConstraint                                                            :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************* / RPBoolStructR                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************* / RPMT                                                                    :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA                                                               :6_3:Other "a da:
**************************** / $*|                                                               :6_3:Other "a da:
***************************** / slAKA base                                                      :6_3:Other "a da:
****************************** / slInlineDefMT                                                 :6_3:Other "a da:
******************************* / $*|                                                         :6_3:Other "a da:
******************************** / slMultiTerm                                               :6_3:Other "a da:
********************************* / |:| some                                                :6_3:Other "a da:
********************************** / |:| base parser                                       :6_3:Other "a da:
********************************** \ |:| base parser has returned ("a data breach",0)       :6_4:GoDeeper:
********************************** / |:| deeper                                             :6_4:GoDeeper:
*********************************** / |:| some GoDeeper                                    :6_4:GoDeeper:
*********************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :6_6:Other "occu:
*********************************** / |:| some                                                  :6_6:Other "occu:
************************************ / |:| base parser                                         :6_6:Other "occu:
************************************ \ |:| base parser has returned ("occurred",0)          :7_4:UnDeeper:
************************************ / |:| deeper                                           :7_4:UnDeeper:
************************************* / |:| some GoDeeper                                  :7_4:UnDeeper:
************************************ / |:| noMore                                           :7_4:UnDeeper:
************************************ \ |:| noMore has returned ([],0)                       :7_4:UnDeeper:
*********************************** \ |:| some has returned (["occurred"],0)                 :7_4:UnDeeper:
********************************** \ |:| deeper has returned (["occurred"],3)                 :7_4:UnDeeper:
********************************* \ |:| some has returned (["a data breach","occurred"],3)     :7_4:UnDeeper:
******************************** \ slMultiTerm has returned (["a data breach","occurred"],3)    :7_4:UnDeeper:
******************************* \ $*| has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
******************************* / |>| calling $>>                                                :7_4:UnDeeper:
******************************** / $>>                                                          :7_4:UnDeeper:
********************************* / $>>/recurse                                                :7_4:UnDeeper:
********************************* / $>>/base                                                   :7_4:UnDeeper:
******************************* / slMultiTerm                                                 :6_3:Other "a da:
******************************** / |:| some                                                  :6_3:Other "a da:
********************************* / |:| base parser                                         :6_3:Other "a da:
********************************* \ |:| base parser has returned ("a data breach",0)         :6_4:GoDeeper:
********************************* / |:| deeper                                               :6_4:GoDeeper:
********************************** / |:| some GoDeeper                                      :6_4:GoDeeper:
********************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :6_6:Other "occu:
********************************** / |:| some                                                    :6_6:Other "occu:
*********************************** / |:| base parser                                           :6_6:Other "occu:
*********************************** \ |:| base parser has returned ("occurred",0)            :7_4:UnDeeper:
*********************************** / |:| deeper                                             :7_4:UnDeeper:
************************************ / |:| some GoDeeper                                    :7_4:UnDeeper:
*********************************** / |:| noMore                                             :7_4:UnDeeper:
*********************************** \ |:| noMore has returned ([],0)                         :7_4:UnDeeper:
********************************** \ |:| some has returned (["occurred"],0)                   :7_4:UnDeeper:
********************************* \ |:| deeper has returned (["occurred"],3)                   :7_4:UnDeeper:
******************************** \ |:| some has returned (["a data breach","occurred"],3)       :7_4:UnDeeper:
******************************* \ slMultiTerm has returned (["a data breach","occurred"],3)      :7_4:UnDeeper:
****************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)      :7_4:UnDeeper:
***************************** \ slAKA base has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
**************************** \ $*| has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
**************************** / |>>                                                                  :7_4:UnDeeper:
***************************** / |>>/recurse                                                        :7_4:UnDeeper:
***************************** / |>>/base                                                           :7_4:UnDeeper:
****************************** / slAKA optional akapart                                           :7_4:UnDeeper:
******************************* / |?| optional something                                         :7_4:UnDeeper:
******************************** / |>>                                                          :7_4:UnDeeper:
********************************* / |>>/recurse                                                :7_4:UnDeeper:
********************************* / |>>/base                                                   :7_4:UnDeeper:
********************************** / PAKA/akapart                                             :7_4:UnDeeper:
*********************************** / $>|                                                    :7_4:UnDeeper:
************************************ / Aka Token                                            :7_4:UnDeeper:
******************************* \ |?| optional something has returned (Nothing,0)                :7_4:UnDeeper:
****************************** \ slAKA optional akapart has returned (Nothing,0)                  :7_4:UnDeeper:
****************************** / |>>/base got Nothing                                             :7_4:UnDeeper:
***************************** \ |>>/base has returned (Nothing,0)                                  :7_4:UnDeeper:
**************************** \ |>> has returned (Nothing,0)                                         :7_4:UnDeeper:
**************************** / |>>                                                                  :7_4:UnDeeper:
***************************** / |>>/recurse                                                        :7_4:UnDeeper:
***************************** / |>>/base                                                           :7_4:UnDeeper:
****************************** / slAKA optional typically                                         :7_4:UnDeeper:
******************************* / |?| optional something                                         :7_4:UnDeeper:
******************************** / |>>                                                          :7_4:UnDeeper:
********************************* / |>>/recurse                                                :7_4:UnDeeper:
********************************* / |>>/base                                                   :7_4:UnDeeper:
********************************** / typically                                                :7_4:UnDeeper:
*********************************** / $>|                                                    :7_4:UnDeeper:
******************************* \ |?| optional something has returned (Nothing,0)                :7_4:UnDeeper:
****************************** \ slAKA optional typically has returned (Nothing,0)                :7_4:UnDeeper:
****************************** / |>>/base got Nothing                                             :7_4:UnDeeper:
***************************** \ |>>/base has returned (Nothing,0)                                  :7_4:UnDeeper:
**************************** \ |>> has returned (Nothing,0)                                         :7_4:UnDeeper:
**************************** / slAKA: proceeding after base and entityalias are retrieved ...       :7_4:UnDeeper:
**************************** / pAKA: entityalias = Nothing                                          :7_4:UnDeeper:
*************************** \ slAKA has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************* \ RPMT has returned (RPMT ["a data breach","occurred"],3)                    :7_4:UnDeeper:
************************ \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************ / undeepers                                                                    :7_4:UnDeeper:
************************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers     :7_4:UnDeeper:
************************* / sameLine: success!                                                      :7_3:Is:
************************ \ undeepers has returned ()                                                 :7_3:Is:
*********************** \ pRelPred has returned RPMT ["a data breach","occurred"]                     :7_3:Is:
********************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])      :7_3:Is:
********************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])     :7_3:Is:
******************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                    :7_3:Is:
******************** / binary(Or)                                                                        :7_3:Is:
******************** / binary(And)                                                                       :7_3:Is:
******************** / binary(SetLess)                                                                   :7_3:Is:
******************** / binary(SetPlus)                                                                   :7_3:Is:
******************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])       :7_3:Is:
******************* / myindented: consuming UnDeeper                                                      :7_3:Is:
***************** / term p/3:plain p                                                                       :6_3:GoDeeper:
****************** / pRelPred                                                                             :6_3:GoDeeper:
******************* / slRelPred                                                                          :6_3:GoDeeper:
******************** / RPConstraint                                                                     :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slMultiTerm                                                                  :6_3:GoDeeper:
*********************** / |:| some                                                                   :6_3:GoDeeper:
************************ / |:| base parser                                                          :6_3:GoDeeper:
************************* / pNumAsText                                                             :6_3:GoDeeper:
******************** / RPBoolStructR                                                                    :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slMultiTerm                                                                  :6_3:GoDeeper:
*********************** / |:| some                                                                   :6_3:GoDeeper:
************************ / |:| base parser                                                          :6_3:GoDeeper:
************************* / pNumAsText                                                             :6_3:GoDeeper:
******************** / RPMT                                                                             :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA                                                                        :6_3:GoDeeper:
*********************** / $*|                                                                        :6_3:GoDeeper:
************************ / slAKA base                                                               :6_3:GoDeeper:
************************* / slInlineDefMT                                                          :6_3:GoDeeper:
************************** / $*|                                                                  :6_3:GoDeeper:
*************************** / slMultiTerm                                                        :6_3:GoDeeper:
**************************** / |:| some                                                         :6_3:GoDeeper:
***************************** / |:| base parser                                                :6_3:GoDeeper:
****************************** / pNumAsText                                                   :6_3:GoDeeper:
************************** / slMultiTerm                                                          :6_3:GoDeeper:
*************************** / |:| some                                                           :6_3:GoDeeper:
**************************** / |:| base parser                                                  :6_3:GoDeeper:
***************************** / pNumAsText                                                     :6_3:GoDeeper:
************** / manyIndentation/deeper; calling someIndentation                                              :6_3:GoDeeper:
*************** / someIndentation                                                                            :6_3:GoDeeper:
**************** / myindented: consuming GoDeeper                                                           :6_3:GoDeeper:
**************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :6_3:Other "a da:
**************** / manyIndentation/leaf?                                                                     :6_3:Other "a da:
***************** / term p                                                                                  :6_3:Other "a da:
****************** / term p/1a:label directly above                                                        :6_3:Other "a da:
******************* / $*|                                                                                 :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / pNumAsText                                                                           :7_4:UnDeeper:
****************** / term p/b:label to the left of line below, with EOL                                    :6_3:Other "a da:
******************* / |:| some                                                                            :6_3:Other "a da:
******************** / |:| base parser                                                                   :6_3:Other "a da:
******************** \ |:| base parser has returned ("a data breach",0)                                   :6_4:GoDeeper:
******************** / |:| deeper                                                                         :6_4:GoDeeper:
********************* / |:| some GoDeeper                                                                :6_4:GoDeeper:
********************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                           :6_6:Other "occu:
********************* / |:| some                                                                              :6_6:Other "occu:
********************** / |:| base parser                                                                     :6_6:Other "occu:
********************** \ |:| base parser has returned ("occurred",0)                                      :7_4:UnDeeper:
********************** / |:| deeper                                                                       :7_4:UnDeeper:
*********************** / |:| some GoDeeper                                                              :7_4:UnDeeper:
********************** / |:| noMore                                                                       :7_4:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                                   :7_4:UnDeeper:
********************* \ |:| some has returned (["occurred"],0)                                             :7_4:UnDeeper:
******************** \ |:| deeper has returned (["occurred"],3)                                             :7_4:UnDeeper:
******************* \ |:| some has returned (["a data breach","occurred"],3)                                 :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
******************* / matching EOL                                                                        :7_3:Is:
****************** / term p/notLabelTerm                                                                   :6_3:Other "a da:
******************* / term p/2:someIndentation expr p                                                     :6_3:Other "a da:
******************** / someIndentation                                                                   :6_3:Other "a da:
********************* / myindented: consuming GoDeeper                                                  :6_3:Other "a da:
******************* / term p/3:plain p                                                                    :6_3:Other "a da:
******************** / pRelPred                                                                          :6_3:Other "a da:
********************* / slRelPred                                                                       :6_3:Other "a da:
********************** / RPConstraint                                                                  :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slMultiTerm                                                               :6_3:Other "a da:
************************* / |:| some                                                                :6_3:Other "a da:
************************** / |:| base parser                                                       :6_3:Other "a da:
************************** \ |:| base parser has returned ("a data breach",0)                       :6_4:GoDeeper:
************************** / |:| deeper                                                             :6_4:GoDeeper:
*************************** / |:| some GoDeeper                                                    :6_4:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :6_6:Other "occu:
*************************** / |:| some                                                                  :6_6:Other "occu:
**************************** / |:| base parser                                                         :6_6:Other "occu:
**************************** \ |:| base parser has returned ("occurred",0)                          :7_4:UnDeeper:
**************************** / |:| deeper                                                           :7_4:UnDeeper:
***************************** / |:| some GoDeeper                                                  :7_4:UnDeeper:
**************************** / |:| noMore                                                           :7_4:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                       :7_4:UnDeeper:
*************************** \ |:| some has returned (["occurred"],0)                                 :7_4:UnDeeper:
************************** \ |:| deeper has returned (["occurred"],3)                                 :7_4:UnDeeper:
************************* \ |:| some has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
************************ \ slMultiTerm has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>| calling $>>                                                                :7_4:UnDeeper:
************************ / $>>                                                                          :7_4:UnDeeper:
************************* / $>>/recurse                                                                :7_4:UnDeeper:
************************* / $>>/base                                                                   :7_4:UnDeeper:
********************** / RPBoolStructR                                                                 :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slMultiTerm                                                               :6_3:Other "a da:
************************* / |:| some                                                                :6_3:Other "a da:
************************** / |:| base parser                                                       :6_3:Other "a da:
************************** \ |:| base parser has returned ("a data breach",0)                       :6_4:GoDeeper:
************************** / |:| deeper                                                             :6_4:GoDeeper:
*************************** / |:| some GoDeeper                                                    :6_4:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :6_6:Other "occu:
*************************** / |:| some                                                                  :6_6:Other "occu:
**************************** / |:| base parser                                                         :6_6:Other "occu:
**************************** \ |:| base parser has returned ("occurred",0)                          :7_4:UnDeeper:
**************************** / |:| deeper                                                           :7_4:UnDeeper:
***************************** / |:| some GoDeeper                                                  :7_4:UnDeeper:
**************************** / |:| noMore                                                           :7_4:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                       :7_4:UnDeeper:
*************************** \ |:| some has returned (["occurred"],0)                                 :7_4:UnDeeper:
************************** \ |:| deeper has returned (["occurred"],3)                                 :7_4:UnDeeper:
************************* \ |:| some has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
************************ \ slMultiTerm has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>| calling $>>                                                                :7_4:UnDeeper:
************************ / $>>                                                                          :7_4:UnDeeper:
************************* / $>>/recurse                                                                :7_4:UnDeeper:
************************* / $>>/base                                                                   :7_4:UnDeeper:
********************** / RPMT                                                                          :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA                                                                     :6_3:Other "a da:
************************* / $*|                                                                     :6_3:Other "a da:
************************** / slAKA base                                                            :6_3:Other "a da:
*************************** / slInlineDefMT                                                       :6_3:Other "a da:
**************************** / $*|                                                               :6_3:Other "a da:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ $*| has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
**************************** / |>| calling $>>                                                      :7_4:UnDeeper:
***************************** / $>>                                                                :7_4:UnDeeper:
****************************** / $>>/recurse                                                      :7_4:UnDeeper:
****************************** / $>>/base                                                         :7_4:UnDeeper:
**************************** / slMultiTerm                                                       :6_3:Other "a da:
***************************** / |:| some                                                        :6_3:Other "a da:
****************************** / |:| base parser                                               :6_3:Other "a da:
****************************** \ |:| base parser has returned ("a data breach",0)               :6_4:GoDeeper:
****************************** / |:| deeper                                                     :6_4:GoDeeper:
******************************* / |:| some GoDeeper                                            :6_4:GoDeeper:
******************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]       :6_6:Other "occu:
******************************* / |:| some                                                          :6_6:Other "occu:
******************************** / |:| base parser                                                 :6_6:Other "occu:
******************************** \ |:| base parser has returned ("occurred",0)                  :7_4:UnDeeper:
******************************** / |:| deeper                                                   :7_4:UnDeeper:
********************************* / |:| some GoDeeper                                          :7_4:UnDeeper:
******************************** / |:| noMore                                                   :7_4:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                               :7_4:UnDeeper:
******************************* \ |:| some has returned (["occurred"],0)                         :7_4:UnDeeper:
****************************** \ |:| deeper has returned (["occurred"],3)                         :7_4:UnDeeper:
***************************** \ |:| some has returned (["a data breach","occurred"],3)             :7_4:UnDeeper:
**************************** \ slMultiTerm has returned (["a data breach","occurred"],3)            :7_4:UnDeeper:
*************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)            :7_4:UnDeeper:
************************** \ slAKA base has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************* \ $*| has returned (["a data breach","occurred"],3)                          :7_4:UnDeeper:
************************* / |>>                                                                        :7_4:UnDeeper:
************************** / |>>/recurse                                                              :7_4:UnDeeper:
************************** / |>>/base                                                                 :7_4:UnDeeper:
*************************** / slAKA optional akapart                                                 :7_4:UnDeeper:
**************************** / |?| optional something                                               :7_4:UnDeeper:
***************************** / |>>                                                                :7_4:UnDeeper:
****************************** / |>>/recurse                                                      :7_4:UnDeeper:
****************************** / |>>/base                                                         :7_4:UnDeeper:
******************************* / PAKA/akapart                                                   :7_4:UnDeeper:
******************************** / $>|                                                          :7_4:UnDeeper:
********************************* / Aka Token                                                  :7_4:UnDeeper:
**************************** \ |?| optional something has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** \ slAKA optional akapart has returned (Nothing,0)                        :7_4:UnDeeper:
*************************** / |>>/base got Nothing                                                   :7_4:UnDeeper:
************************** \ |>>/base has returned (Nothing,0)                                        :7_4:UnDeeper:
************************* \ |>> has returned (Nothing,0)                                               :7_4:UnDeeper:
************************* / |>>                                                                        :7_4:UnDeeper:
************************** / |>>/recurse                                                              :7_4:UnDeeper:
************************** / |>>/base                                                                 :7_4:UnDeeper:
*************************** / slAKA optional typically                                               :7_4:UnDeeper:
**************************** / |?| optional something                                               :7_4:UnDeeper:
***************************** / |>>                                                                :7_4:UnDeeper:
****************************** / |>>/recurse                                                      :7_4:UnDeeper:
****************************** / |>>/base                                                         :7_4:UnDeeper:
******************************* / typically                                                      :7_4:UnDeeper:
******************************** / $>|                                                          :7_4:UnDeeper:
**************************** \ |?| optional something has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** \ slAKA optional typically has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** / |>>/base got Nothing                                                   :7_4:UnDeeper:
************************** \ |>>/base has returned (Nothing,0)                                        :7_4:UnDeeper:
************************* \ |>> has returned (Nothing,0)                                               :7_4:UnDeeper:
************************* / slAKA: proceeding after base and entityalias are retrieved ...             :7_4:UnDeeper:
************************* / pAKA: entityalias = Nothing                                                :7_4:UnDeeper:
************************ \ slAKA has returned (["a data breach","occurred"],3)                          :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                          :7_4:UnDeeper:
********************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                       :7_4:UnDeeper:
********************* / undeepers                                                                          :7_4:UnDeeper:
********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers           :7_4:UnDeeper:
********************** / sameLine: success!                                                            :7_3:Is:
********************* \ undeepers has returned ()                                                       :7_3:Is:
******************** \ pRelPred has returned RPMT ["a data breach","occurred"]                           :7_3:Is:
******************* \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])            :7_3:Is:
****************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                          :7_3:Is:
***************** / binary(Or)                                                                              :7_3:Is:
***************** / binary(And)                                                                             :7_3:Is:
***************** / binary(SetLess)                                                                         :7_3:Is:
***************** / binary(SetPlus)                                                                         :7_3:Is:
**************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])             :7_3:Is:
**************** / myindented: consuming UnDeeper                                                            :7_3:Is:
************ / term p/3:plain p                                                                               :6_2:GoDeeper:
************* / pRelPred                                                                                     :6_2:GoDeeper:
************** / slRelPred                                                                                  :6_2:GoDeeper:
*************** / RPConstraint                                                                             :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slMultiTerm                                                                          :6_2:GoDeeper:
****************** / |:| some                                                                           :6_2:GoDeeper:
******************* / |:| base parser                                                                  :6_2:GoDeeper:
******************** / pNumAsText                                                                     :6_2:GoDeeper:
*************** / RPBoolStructR                                                                            :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slMultiTerm                                                                          :6_2:GoDeeper:
****************** / |:| some                                                                           :6_2:GoDeeper:
******************* / |:| base parser                                                                  :6_2:GoDeeper:
******************** / pNumAsText                                                                     :6_2:GoDeeper:
*************** / RPMT                                                                                     :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA                                                                                :6_2:GoDeeper:
****************** / $*|                                                                                :6_2:GoDeeper:
******************* / slAKA base                                                                       :6_2:GoDeeper:
******************** / slInlineDefMT                                                                  :6_2:GoDeeper:
********************* / $*|                                                                          :6_2:GoDeeper:
********************** / slMultiTerm                                                                :6_2:GoDeeper:
*********************** / |:| some                                                                 :6_2:GoDeeper:
************************ / |:| base parser                                                        :6_2:GoDeeper:
************************* / pNumAsText                                                           :6_2:GoDeeper:
********************* / slMultiTerm                                                                  :6_2:GoDeeper:
********************** / |:| some                                                                   :6_2:GoDeeper:
*********************** / |:| base parser                                                          :6_2:GoDeeper:
************************ / pNumAsText                                                             :6_2:GoDeeper:
********* / withPrePost                                                                                          :6_2:GoDeeper:
********** / |<* starting                                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / pre part                                                                                         :6_2:GoDeeper:
************ / aboveNextLineKeyword                                                                             :6_3:GoDeeper:
************* / expectUnDeepers                                                                                :6_3:GoDeeper:
************** / pNumAsText                                                                                   :6_3:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                        :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                 :6_3:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                :6_3:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                              :6_3:GoDeeper:
************* / $*|                                                                                            :6_3:GoDeeper:
************* \ $*| has returned ((),0)                                                                        :6_3:GoDeeper:
************* / ->| success                                                                                     :6_3:Other "a da:
************* / |>>                                                                                             :6_3:Other "a da:
************** / |>>/recurse                                                                                   :6_3:Other "a da:
************** / |>>/base                                                                                      :6_3:Other "a da:
*************** / slMultiTerm                                                                                 :6_3:Other "a da:
**************** / |:| some                                                                                  :6_3:Other "a da:
***************** / |:| base parser                                                                         :6_3:Other "a da:
***************** \ |:| base parser has returned ("a data breach",0)                                         :6_4:GoDeeper:
***************** / |:| deeper                                                                               :6_4:GoDeeper:
****************** / |:| some GoDeeper                                                                      :6_4:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |:| deeper has returned (["occurred"],3)                                                   :7_4:UnDeeper:
**************** \ |:| some has returned (["a data breach","occurred"],3)                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["a data breach","occurred"],3)                                      :7_4:UnDeeper:
*************** / |>>/base got ["a data breach","occurred"]                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ |>> has returned (["a data breach","occurred"],3)                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 4                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                    :6_3:GoDeeper:
************ / aboveNextLineKeyword                                                                              :6_3:Other "a da:
************* / expectUnDeepers                                                                                 :6_3:Other "a da:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["a data breach","GD","GD","GD","occurred"]                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                  :6_3:Other "a da:
************* / aNLK: determined undp_count = 3                                                                 :6_3:Other "a da:
************* / ->| trying to consume 1 GoDeepers                                                               :6_3:Other "a da:
************* / $*|                                                                                             :6_3:Other "a da:
************* \ $*| has returned ((),0)                                                                         :6_3:Other "a da:
************ / /*= lookAhead failed, delegating to plain /+=                                                     :6_3:Other "a da:
************ / aboveNextLineKeyword                                                                               :6_4:GoDeeper:
************* / expectUnDeepers                                                                                  :6_4:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","GD","occurred"]                                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                   :6_4:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                  :6_4:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                :6_4:GoDeeper:
************* / $*|                                                                                              :6_4:GoDeeper:
************* \ $*| has returned ((),0)                                                                          :6_4:GoDeeper:
************* / ->| success                                                                                        :6_5:GoDeeper:
************* / |>>                                                                                                :6_5:GoDeeper:
************** / |>>/recurse                                                                                      :6_5:GoDeeper:
*************** / |>>                                                                                              :6_6:GoDeeper:
**************** / |>>/recurse                                                                                    :6_6:GoDeeper:
***************** / |>>                                                                                           :6_6:Other "occu:
****************** / |>>/recurse                                                                                 :6_6:Other "occu:
****************** / |>>/base                                                                                    :6_6:Other "occu:
******************* / slMultiTerm                                                                               :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ slMultiTerm has returned (["occurred"],0)                                              :7_4:UnDeeper:
******************* / |>>/base got ["occurred"]                                                              :7_4:UnDeeper:
****************** \ |>>/base has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |>> has returned (["occurred"],0)                                                          :7_4:UnDeeper:
**************** \ |>>/recurse has returned (["occurred"],1)                                                    :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],1)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],2)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],2)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 3                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                      :6_4:GoDeeper:
************ / aboveNextLineKeyword                                                                                 :6_5:GoDeeper:
************* / expectUnDeepers                                                                                    :6_5:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","occurred"]                                                                  :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :6_5:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                    :6_5:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :6_5:GoDeeper:
************* / $*|                                                                                                :6_5:GoDeeper:
************* \ $*| has returned ((),0)                                                                            :6_5:GoDeeper:
************* / ->| success                                                                                          :6_6:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 2                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :6_5:GoDeeper:
************ / aboveNextLineKeyword                                                                                   :6_6:GoDeeper:
************* / expectUnDeepers                                                                                      :6_6:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","occurred"]                                                                       :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                       :6_6:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                      :6_6:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                    :6_6:GoDeeper:
************* / $*|                                                                                                  :6_6:GoDeeper:
************* \ $*| has returned ((),0)                                                                              :6_6:GoDeeper:
************* / ->| success                                                                                           :6_6:Other "occu:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 1                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                          :6_6:GoDeeper:
************ / aboveNextLineKeyword                                                                                    :6_6:Other "occu:
************* / expectUnDeepers                                                                                       :6_6:Other "occu:
************** / ignoring ["occurred"]                                                                            :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                        :6_6:Other "occu:
************* / aNLK: determined undp_count = 3                                                                       :6_6:Other "occu:
************* / ->| trying to consume 1 GoDeepers                                                                     :6_6:Other "occu:
************* / $*|                                                                                                   :6_6:Other "occu:
************* \ $*| has returned ((),0)                                                                               :6_6:Other "occu:
************ / /*= lookAhead failed, delegating to plain /+=                                                           :6_6:Other "occu:
************ / aboveNextLineKeyword                                                                                 :7_4:UnDeeper:
************* / expectUnDeepers                                                                                    :7_4:UnDeeper:
************** / ignoring []                                                                                      :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :7_4:UnDeeper:
************* / aNLK: determined undp_count = 3                                                                    :7_4:UnDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :7_4:UnDeeper:
************* / $*|                                                                                                :7_4:UnDeeper:
************* \ $*| has returned ((),0)                                                                            :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :7_4:UnDeeper:
********* / withPreOnly                                                                                          :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / pre part                                                                                         :6_2:GoDeeper:
************ / aboveNextLineKeyword                                                                             :6_3:GoDeeper:
************* / expectUnDeepers                                                                                :6_3:GoDeeper:
************** / pNumAsText                                                                                   :6_3:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                        :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                 :6_3:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                :6_3:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                              :6_3:GoDeeper:
************* / $*|                                                                                            :6_3:GoDeeper:
************* \ $*| has returned ((),0)                                                                        :6_3:GoDeeper:
************* / ->| success                                                                                     :6_3:Other "a da:
************* / |>>                                                                                             :6_3:Other "a da:
************** / |>>/recurse                                                                                   :6_3:Other "a da:
************** / |>>/base                                                                                      :6_3:Other "a da:
*************** / slMultiTerm                                                                                 :6_3:Other "a da:
**************** / |:| some                                                                                  :6_3:Other "a da:
***************** / |:| base parser                                                                         :6_3:Other "a da:
***************** \ |:| base parser has returned ("a data breach",0)                                         :6_4:GoDeeper:
***************** / |:| deeper                                                                               :6_4:GoDeeper:
****************** / |:| some GoDeeper                                                                      :6_4:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |:| deeper has returned (["occurred"],3)                                                   :7_4:UnDeeper:
**************** \ |:| some has returned (["a data breach","occurred"],3)                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["a data breach","occurred"],3)                                      :7_4:UnDeeper:
*************** / |>>/base got ["a data breach","occurred"]                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ |>> has returned (["a data breach","occurred"],3)                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 4                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                    :6_3:GoDeeper:
************ / aboveNextLineKeyword                                                                              :6_3:Other "a da:
************* / expectUnDeepers                                                                                 :6_3:Other "a da:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["a data breach","GD","GD","GD","occurred"]                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                  :6_3:Other "a da:
************* / aNLK: determined undp_count = 3                                                                 :6_3:Other "a da:
************* / ->| trying to consume 1 GoDeepers                                                               :6_3:Other "a da:
************* / $*|                                                                                             :6_3:Other "a da:
************* \ $*| has returned ((),0)                                                                         :6_3:Other "a da:
************ / /*= lookAhead failed, delegating to plain /+=                                                     :6_3:Other "a da:
************ / aboveNextLineKeyword                                                                               :6_4:GoDeeper:
************* / expectUnDeepers                                                                                  :6_4:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","GD","occurred"]                                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                   :6_4:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                  :6_4:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                :6_4:GoDeeper:
************* / $*|                                                                                              :6_4:GoDeeper:
************* \ $*| has returned ((),0)                                                                          :6_4:GoDeeper:
************* / ->| success                                                                                        :6_5:GoDeeper:
************* / |>>                                                                                                :6_5:GoDeeper:
************** / |>>/recurse                                                                                      :6_5:GoDeeper:
*************** / |>>                                                                                              :6_6:GoDeeper:
**************** / |>>/recurse                                                                                    :6_6:GoDeeper:
***************** / |>>                                                                                           :6_6:Other "occu:
****************** / |>>/recurse                                                                                 :6_6:Other "occu:
****************** / |>>/base                                                                                    :6_6:Other "occu:
******************* / slMultiTerm                                                                               :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ slMultiTerm has returned (["occurred"],0)                                              :7_4:UnDeeper:
******************* / |>>/base got ["occurred"]                                                              :7_4:UnDeeper:
****************** \ |>>/base has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |>> has returned (["occurred"],0)                                                          :7_4:UnDeeper:
**************** \ |>>/recurse has returned (["occurred"],1)                                                    :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],1)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],2)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],2)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 3                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                      :6_4:GoDeeper:
************ / aboveNextLineKeyword                                                                                 :6_5:GoDeeper:
************* / expectUnDeepers                                                                                    :6_5:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","occurred"]                                                                  :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :6_5:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                    :6_5:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :6_5:GoDeeper:
************* / $*|                                                                                                :6_5:GoDeeper:
************* \ $*| has returned ((),0)                                                                            :6_5:GoDeeper:
************* / ->| success                                                                                          :6_6:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 2                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :6_5:GoDeeper:
************ / aboveNextLineKeyword                                                                                   :6_6:GoDeeper:
************* / expectUnDeepers                                                                                      :6_6:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","occurred"]                                                                       :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                       :6_6:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                      :6_6:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                    :6_6:GoDeeper:
************* / $*|                                                                                                  :6_6:GoDeeper:
************* \ $*| has returned ((),0)                                                                              :6_6:GoDeeper:
************* / ->| success                                                                                           :6_6:Other "occu:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 1                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                          :6_6:GoDeeper:
************ / aboveNextLineKeyword                                                                                    :6_6:Other "occu:
************* / expectUnDeepers                                                                                       :6_6:Other "occu:
************** / ignoring ["occurred"]                                                                            :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                        :6_6:Other "occu:
************* / aNLK: determined undp_count = 3                                                                       :6_6:Other "occu:
************* / ->| trying to consume 1 GoDeepers                                                                     :6_6:Other "occu:
************* / $*|                                                                                                   :6_6:Other "occu:
************* \ $*| has returned ((),0)                                                                               :6_6:Other "occu:
************ / /*= lookAhead failed, delegating to plain /+=                                                           :6_6:Other "occu:
************ / aboveNextLineKeyword                                                                                 :7_4:UnDeeper:
************* / expectUnDeepers                                                                                    :7_4:UnDeeper:
************** / ignoring []                                                                                      :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :7_4:UnDeeper:
************* / aNLK: determined undp_count = 3                                                                    :7_4:UnDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :7_4:UnDeeper:
************* / $*|                                                                                                :7_4:UnDeeper:
************* \ $*| has returned ((),0)                                                                            :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :7_4:UnDeeper:
****** / regulative permutation with deontic-action                                                                :6_1:If:
******* / WHERE                                                                                                   :6_1:If:
******* / preambleParamText:[Having]                                                                              :6_1:If:
******** / $>|                                                                                                   :6_1:If:
******* / preambleParamText:[Given]                                                                               :6_1:If:
******** / $>|                                                                                                   :6_1:If:
******* / preambleParamText:[Upon]                                                                                :6_1:If:
******** / $>|                                                                                                   :6_1:If:
******* / preambleBoolStructR [Unless]                                                                            :6_1:If:
******* / preambleBoolStructR [When,If]                                                                           :6_1:If:
******** / pBSR                                                                                                   :6_2:GoDeeper:
********* / ppp inner                                                                                            :6_2:GoDeeper:
********** / term p                                                                                             :6_2:GoDeeper:
*********** / term p/1a:label directly above                                                                   :6_2:GoDeeper:
************ / $*|                                                                                            :6_2:GoDeeper:
************* / |:| some                                                                                     :6_2:GoDeeper:
************** / |:| base parser                                                                            :6_2:GoDeeper:
*************** / pNumAsText                                                                               :6_2:GoDeeper:
*********** / term p/b:label to the left of line below, with EOL                                               :6_2:GoDeeper:
************ / |:| some                                                                                       :6_2:GoDeeper:
************* / |:| base parser                                                                              :6_2:GoDeeper:
************** / pNumAsText                                                                                 :6_2:GoDeeper:
*********** / term p/notLabelTerm                                                                              :6_2:GoDeeper:
************ / term p/2:someIndentation expr p                                                                :6_2:GoDeeper:
************* / someIndentation                                                                              :6_2:GoDeeper:
************** / myindented: consuming GoDeeper                                                             :6_2:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                         :6_3:GoDeeper:
************** / manyIndentation/leaf?                                                                        :6_3:GoDeeper:
*************** / term p                                                                                     :6_3:GoDeeper:
**************** / term p/1a:label directly above                                                           :6_3:GoDeeper:
***************** / $*|                                                                                    :6_3:GoDeeper:
****************** / |:| some                                                                             :6_3:GoDeeper:
******************* / |:| base parser                                                                    :6_3:GoDeeper:
******************** / pNumAsText                                                                       :6_3:GoDeeper:
**************** / term p/b:label to the left of line below, with EOL                                       :6_3:GoDeeper:
***************** / |:| some                                                                               :6_3:GoDeeper:
****************** / |:| base parser                                                                      :6_3:GoDeeper:
******************* / pNumAsText                                                                         :6_3:GoDeeper:
**************** / term p/notLabelTerm                                                                      :6_3:GoDeeper:
***************** / term p/2:someIndentation expr p                                                        :6_3:GoDeeper:
****************** / someIndentation                                                                      :6_3:GoDeeper:
******************* / myindented: consuming GoDeeper                                                     :6_3:GoDeeper:
******************* \ myindented: consuming GoDeeper has returned GoDeeper                                :6_3:Other "a da:
******************* / manyIndentation/leaf?                                                               :6_3:Other "a da:
******************** / term p                                                                            :6_3:Other "a da:
********************* / term p/1a:label directly above                                                  :6_3:Other "a da:
********************** / $*|                                                                           :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
*********************** / pNumAsText                                                                     :7_4:UnDeeper:
********************* / term p/b:label to the left of line below, with EOL                              :6_3:Other "a da:
********************** / |:| some                                                                      :6_3:Other "a da:
*********************** / |:| base parser                                                             :6_3:Other "a da:
*********************** \ |:| base parser has returned ("a data breach",0)                             :6_4:GoDeeper:
*********************** / |:| deeper                                                                   :6_4:GoDeeper:
************************ / |:| some GoDeeper                                                          :6_4:GoDeeper:
************************ \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                     :6_6:Other "occu:
************************ / |:| some                                                                        :6_6:Other "occu:
************************* / |:| base parser                                                               :6_6:Other "occu:
************************* \ |:| base parser has returned ("occurred",0)                                :7_4:UnDeeper:
************************* / |:| deeper                                                                 :7_4:UnDeeper:
************************** / |:| some GoDeeper                                                        :7_4:UnDeeper:
************************* / |:| noMore                                                                 :7_4:UnDeeper:
************************* \ |:| noMore has returned ([],0)                                             :7_4:UnDeeper:
************************ \ |:| some has returned (["occurred"],0)                                       :7_4:UnDeeper:
*********************** \ |:| deeper has returned (["occurred"],3)                                       :7_4:UnDeeper:
********************** \ |:| some has returned (["a data breach","occurred"],3)                           :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************** / matching EOL                                                                  :7_3:Is:
********************* / term p/notLabelTerm                                                             :6_3:Other "a da:
********************** / term p/2:someIndentation expr p                                               :6_3:Other "a da:
*********************** / someIndentation                                                             :6_3:Other "a da:
************************ / myindented: consuming GoDeeper                                            :6_3:Other "a da:
********************** / term p/3:plain p                                                              :6_3:Other "a da:
*********************** / pRelPred                                                                    :6_3:Other "a da:
************************ / slRelPred                                                                 :6_3:Other "a da:
************************* / RPConstraint                                                            :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************* / RPBoolStructR                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************* / RPMT                                                                    :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA                                                               :6_3:Other "a da:
**************************** / $*|                                                               :6_3:Other "a da:
***************************** / slAKA base                                                      :6_3:Other "a da:
****************************** / slInlineDefMT                                                 :6_3:Other "a da:
******************************* / $*|                                                         :6_3:Other "a da:
******************************** / slMultiTerm                                               :6_3:Other "a da:
********************************* / |:| some                                                :6_3:Other "a da:
********************************** / |:| base parser                                       :6_3:Other "a da:
********************************** \ |:| base parser has returned ("a data breach",0)       :6_4:GoDeeper:
********************************** / |:| deeper                                             :6_4:GoDeeper:
*********************************** / |:| some GoDeeper                                    :6_4:GoDeeper:
*********************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :6_6:Other "occu:
*********************************** / |:| some                                                  :6_6:Other "occu:
************************************ / |:| base parser                                         :6_6:Other "occu:
************************************ \ |:| base parser has returned ("occurred",0)          :7_4:UnDeeper:
************************************ / |:| deeper                                           :7_4:UnDeeper:
************************************* / |:| some GoDeeper                                  :7_4:UnDeeper:
************************************ / |:| noMore                                           :7_4:UnDeeper:
************************************ \ |:| noMore has returned ([],0)                       :7_4:UnDeeper:
*********************************** \ |:| some has returned (["occurred"],0)                 :7_4:UnDeeper:
********************************** \ |:| deeper has returned (["occurred"],3)                 :7_4:UnDeeper:
********************************* \ |:| some has returned (["a data breach","occurred"],3)     :7_4:UnDeeper:
******************************** \ slMultiTerm has returned (["a data breach","occurred"],3)    :7_4:UnDeeper:
******************************* \ $*| has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
******************************* / |>| calling $>>                                                :7_4:UnDeeper:
******************************** / $>>                                                          :7_4:UnDeeper:
********************************* / $>>/recurse                                                :7_4:UnDeeper:
********************************* / $>>/base                                                   :7_4:UnDeeper:
******************************* / slMultiTerm                                                 :6_3:Other "a da:
******************************** / |:| some                                                  :6_3:Other "a da:
********************************* / |:| base parser                                         :6_3:Other "a da:
********************************* \ |:| base parser has returned ("a data breach",0)         :6_4:GoDeeper:
********************************* / |:| deeper                                               :6_4:GoDeeper:
********************************** / |:| some GoDeeper                                      :6_4:GoDeeper:
********************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper] :6_6:Other "occu:
********************************** / |:| some                                                    :6_6:Other "occu:
*********************************** / |:| base parser                                           :6_6:Other "occu:
*********************************** \ |:| base parser has returned ("occurred",0)            :7_4:UnDeeper:
*********************************** / |:| deeper                                             :7_4:UnDeeper:
************************************ / |:| some GoDeeper                                    :7_4:UnDeeper:
*********************************** / |:| noMore                                             :7_4:UnDeeper:
*********************************** \ |:| noMore has returned ([],0)                         :7_4:UnDeeper:
********************************** \ |:| some has returned (["occurred"],0)                   :7_4:UnDeeper:
********************************* \ |:| deeper has returned (["occurred"],3)                   :7_4:UnDeeper:
******************************** \ |:| some has returned (["a data breach","occurred"],3)       :7_4:UnDeeper:
******************************* \ slMultiTerm has returned (["a data breach","occurred"],3)      :7_4:UnDeeper:
****************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)      :7_4:UnDeeper:
***************************** \ slAKA base has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
**************************** \ $*| has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
**************************** / |>>                                                                  :7_4:UnDeeper:
***************************** / |>>/recurse                                                        :7_4:UnDeeper:
***************************** / |>>/base                                                           :7_4:UnDeeper:
****************************** / slAKA optional akapart                                           :7_4:UnDeeper:
******************************* / |?| optional something                                         :7_4:UnDeeper:
******************************** / |>>                                                          :7_4:UnDeeper:
********************************* / |>>/recurse                                                :7_4:UnDeeper:
********************************* / |>>/base                                                   :7_4:UnDeeper:
********************************** / PAKA/akapart                                             :7_4:UnDeeper:
*********************************** / $>|                                                    :7_4:UnDeeper:
************************************ / Aka Token                                            :7_4:UnDeeper:
******************************* \ |?| optional something has returned (Nothing,0)                :7_4:UnDeeper:
****************************** \ slAKA optional akapart has returned (Nothing,0)                  :7_4:UnDeeper:
****************************** / |>>/base got Nothing                                             :7_4:UnDeeper:
***************************** \ |>>/base has returned (Nothing,0)                                  :7_4:UnDeeper:
**************************** \ |>> has returned (Nothing,0)                                         :7_4:UnDeeper:
**************************** / |>>                                                                  :7_4:UnDeeper:
***************************** / |>>/recurse                                                        :7_4:UnDeeper:
***************************** / |>>/base                                                           :7_4:UnDeeper:
****************************** / slAKA optional typically                                         :7_4:UnDeeper:
******************************* / |?| optional something                                         :7_4:UnDeeper:
******************************** / |>>                                                          :7_4:UnDeeper:
********************************* / |>>/recurse                                                :7_4:UnDeeper:
********************************* / |>>/base                                                   :7_4:UnDeeper:
********************************** / typically                                                :7_4:UnDeeper:
*********************************** / $>|                                                    :7_4:UnDeeper:
******************************* \ |?| optional something has returned (Nothing,0)                :7_4:UnDeeper:
****************************** \ slAKA optional typically has returned (Nothing,0)                :7_4:UnDeeper:
****************************** / |>>/base got Nothing                                             :7_4:UnDeeper:
***************************** \ |>>/base has returned (Nothing,0)                                  :7_4:UnDeeper:
**************************** \ |>> has returned (Nothing,0)                                         :7_4:UnDeeper:
**************************** / slAKA: proceeding after base and entityalias are retrieved ...       :7_4:UnDeeper:
**************************** / pAKA: entityalias = Nothing                                          :7_4:UnDeeper:
*************************** \ slAKA has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************* \ RPMT has returned (RPMT ["a data breach","occurred"],3)                    :7_4:UnDeeper:
************************ \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************ / undeepers                                                                    :7_4:UnDeeper:
************************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers     :7_4:UnDeeper:
************************* / sameLine: success!                                                      :7_3:Is:
************************ \ undeepers has returned ()                                                 :7_3:Is:
*********************** \ pRelPred has returned RPMT ["a data breach","occurred"]                     :7_3:Is:
********************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])      :7_3:Is:
********************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])     :7_3:Is:
******************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                    :7_3:Is:
******************** / binary(Or)                                                                        :7_3:Is:
******************** / binary(And)                                                                       :7_3:Is:
******************** / binary(SetLess)                                                                   :7_3:Is:
******************** / binary(SetPlus)                                                                   :7_3:Is:
******************* \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])       :7_3:Is:
******************* / myindented: consuming UnDeeper                                                      :7_3:Is:
***************** / term p/3:plain p                                                                       :6_3:GoDeeper:
****************** / pRelPred                                                                             :6_3:GoDeeper:
******************* / slRelPred                                                                          :6_3:GoDeeper:
******************** / RPConstraint                                                                     :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slMultiTerm                                                                  :6_3:GoDeeper:
*********************** / |:| some                                                                   :6_3:GoDeeper:
************************ / |:| base parser                                                          :6_3:GoDeeper:
************************* / pNumAsText                                                             :6_3:GoDeeper:
******************** / RPBoolStructR                                                                    :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slMultiTerm                                                                  :6_3:GoDeeper:
*********************** / |:| some                                                                   :6_3:GoDeeper:
************************ / |:| base parser                                                          :6_3:GoDeeper:
************************* / pNumAsText                                                             :6_3:GoDeeper:
******************** / RPMT                                                                             :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA                                                                        :6_3:GoDeeper:
*********************** / $*|                                                                        :6_3:GoDeeper:
************************ / slAKA base                                                               :6_3:GoDeeper:
************************* / slInlineDefMT                                                          :6_3:GoDeeper:
************************** / $*|                                                                  :6_3:GoDeeper:
*************************** / slMultiTerm                                                        :6_3:GoDeeper:
**************************** / |:| some                                                         :6_3:GoDeeper:
***************************** / |:| base parser                                                :6_3:GoDeeper:
****************************** / pNumAsText                                                   :6_3:GoDeeper:
************************** / slMultiTerm                                                          :6_3:GoDeeper:
*************************** / |:| some                                                           :6_3:GoDeeper:
**************************** / |:| base parser                                                  :6_3:GoDeeper:
***************************** / pNumAsText                                                     :6_3:GoDeeper:
************** / manyIndentation/deeper; calling someIndentation                                              :6_3:GoDeeper:
*************** / someIndentation                                                                            :6_3:GoDeeper:
**************** / myindented: consuming GoDeeper                                                           :6_3:GoDeeper:
**************** \ myindented: consuming GoDeeper has returned GoDeeper                                      :6_3:Other "a da:
**************** / manyIndentation/leaf?                                                                     :6_3:Other "a da:
***************** / term p                                                                                  :6_3:Other "a da:
****************** / term p/1a:label directly above                                                        :6_3:Other "a da:
******************* / $*|                                                                                 :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / pNumAsText                                                                           :7_4:UnDeeper:
****************** / term p/b:label to the left of line below, with EOL                                    :6_3:Other "a da:
******************* / |:| some                                                                            :6_3:Other "a da:
******************** / |:| base parser                                                                   :6_3:Other "a da:
******************** \ |:| base parser has returned ("a data breach",0)                                   :6_4:GoDeeper:
******************** / |:| deeper                                                                         :6_4:GoDeeper:
********************* / |:| some GoDeeper                                                                :6_4:GoDeeper:
********************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                           :6_6:Other "occu:
********************* / |:| some                                                                              :6_6:Other "occu:
********************** / |:| base parser                                                                     :6_6:Other "occu:
********************** \ |:| base parser has returned ("occurred",0)                                      :7_4:UnDeeper:
********************** / |:| deeper                                                                       :7_4:UnDeeper:
*********************** / |:| some GoDeeper                                                              :7_4:UnDeeper:
********************** / |:| noMore                                                                       :7_4:UnDeeper:
********************** \ |:| noMore has returned ([],0)                                                   :7_4:UnDeeper:
********************* \ |:| some has returned (["occurred"],0)                                             :7_4:UnDeeper:
******************** \ |:| deeper has returned (["occurred"],3)                                             :7_4:UnDeeper:
******************* \ |:| some has returned (["a data breach","occurred"],3)                                 :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
******************* / matching EOL                                                                        :7_3:Is:
****************** / term p/notLabelTerm                                                                   :6_3:Other "a da:
******************* / term p/2:someIndentation expr p                                                     :6_3:Other "a da:
******************** / someIndentation                                                                   :6_3:Other "a da:
********************* / myindented: consuming GoDeeper                                                  :6_3:Other "a da:
******************* / term p/3:plain p                                                                    :6_3:Other "a da:
******************** / pRelPred                                                                          :6_3:Other "a da:
********************* / slRelPred                                                                       :6_3:Other "a da:
********************** / RPConstraint                                                                  :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slMultiTerm                                                               :6_3:Other "a da:
************************* / |:| some                                                                :6_3:Other "a da:
************************** / |:| base parser                                                       :6_3:Other "a da:
************************** \ |:| base parser has returned ("a data breach",0)                       :6_4:GoDeeper:
************************** / |:| deeper                                                             :6_4:GoDeeper:
*************************** / |:| some GoDeeper                                                    :6_4:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :6_6:Other "occu:
*************************** / |:| some                                                                  :6_6:Other "occu:
**************************** / |:| base parser                                                         :6_6:Other "occu:
**************************** \ |:| base parser has returned ("occurred",0)                          :7_4:UnDeeper:
**************************** / |:| deeper                                                           :7_4:UnDeeper:
***************************** / |:| some GoDeeper                                                  :7_4:UnDeeper:
**************************** / |:| noMore                                                           :7_4:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                       :7_4:UnDeeper:
*************************** \ |:| some has returned (["occurred"],0)                                 :7_4:UnDeeper:
************************** \ |:| deeper has returned (["occurred"],3)                                 :7_4:UnDeeper:
************************* \ |:| some has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
************************ \ slMultiTerm has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>| calling $>>                                                                :7_4:UnDeeper:
************************ / $>>                                                                          :7_4:UnDeeper:
************************* / $>>/recurse                                                                :7_4:UnDeeper:
************************* / $>>/base                                                                   :7_4:UnDeeper:
********************** / RPBoolStructR                                                                 :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slMultiTerm                                                               :6_3:Other "a da:
************************* / |:| some                                                                :6_3:Other "a da:
************************** / |:| base parser                                                       :6_3:Other "a da:
************************** \ |:| base parser has returned ("a data breach",0)                       :6_4:GoDeeper:
************************** / |:| deeper                                                             :6_4:GoDeeper:
*************************** / |:| some GoDeeper                                                    :6_4:GoDeeper:
*************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]               :6_6:Other "occu:
*************************** / |:| some                                                                  :6_6:Other "occu:
**************************** / |:| base parser                                                         :6_6:Other "occu:
**************************** \ |:| base parser has returned ("occurred",0)                          :7_4:UnDeeper:
**************************** / |:| deeper                                                           :7_4:UnDeeper:
***************************** / |:| some GoDeeper                                                  :7_4:UnDeeper:
**************************** / |:| noMore                                                           :7_4:UnDeeper:
**************************** \ |:| noMore has returned ([],0)                                       :7_4:UnDeeper:
*************************** \ |:| some has returned (["occurred"],0)                                 :7_4:UnDeeper:
************************** \ |:| deeper has returned (["occurred"],3)                                 :7_4:UnDeeper:
************************* \ |:| some has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
************************ \ slMultiTerm has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>| calling $>>                                                                :7_4:UnDeeper:
************************ / $>>                                                                          :7_4:UnDeeper:
************************* / $>>/recurse                                                                :7_4:UnDeeper:
************************* / $>>/base                                                                   :7_4:UnDeeper:
********************** / RPMT                                                                          :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA                                                                     :6_3:Other "a da:
************************* / $*|                                                                     :6_3:Other "a da:
************************** / slAKA base                                                            :6_3:Other "a da:
*************************** / slInlineDefMT                                                       :6_3:Other "a da:
**************************** / $*|                                                               :6_3:Other "a da:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ $*| has returned (["a data breach","occurred"],3)                    :7_4:UnDeeper:
**************************** / |>| calling $>>                                                      :7_4:UnDeeper:
***************************** / $>>                                                                :7_4:UnDeeper:
****************************** / $>>/recurse                                                      :7_4:UnDeeper:
****************************** / $>>/base                                                         :7_4:UnDeeper:
**************************** / slMultiTerm                                                       :6_3:Other "a da:
***************************** / |:| some                                                        :6_3:Other "a da:
****************************** / |:| base parser                                               :6_3:Other "a da:
****************************** \ |:| base parser has returned ("a data breach",0)               :6_4:GoDeeper:
****************************** / |:| deeper                                                     :6_4:GoDeeper:
******************************* / |:| some GoDeeper                                            :6_4:GoDeeper:
******************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]       :6_6:Other "occu:
******************************* / |:| some                                                          :6_6:Other "occu:
******************************** / |:| base parser                                                 :6_6:Other "occu:
******************************** \ |:| base parser has returned ("occurred",0)                  :7_4:UnDeeper:
******************************** / |:| deeper                                                   :7_4:UnDeeper:
********************************* / |:| some GoDeeper                                          :7_4:UnDeeper:
******************************** / |:| noMore                                                   :7_4:UnDeeper:
******************************** \ |:| noMore has returned ([],0)                               :7_4:UnDeeper:
******************************* \ |:| some has returned (["occurred"],0)                         :7_4:UnDeeper:
****************************** \ |:| deeper has returned (["occurred"],3)                         :7_4:UnDeeper:
***************************** \ |:| some has returned (["a data breach","occurred"],3)             :7_4:UnDeeper:
**************************** \ slMultiTerm has returned (["a data breach","occurred"],3)            :7_4:UnDeeper:
*************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)            :7_4:UnDeeper:
************************** \ slAKA base has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************* \ $*| has returned (["a data breach","occurred"],3)                          :7_4:UnDeeper:
************************* / |>>                                                                        :7_4:UnDeeper:
************************** / |>>/recurse                                                              :7_4:UnDeeper:
************************** / |>>/base                                                                 :7_4:UnDeeper:
*************************** / slAKA optional akapart                                                 :7_4:UnDeeper:
**************************** / |?| optional something                                               :7_4:UnDeeper:
***************************** / |>>                                                                :7_4:UnDeeper:
****************************** / |>>/recurse                                                      :7_4:UnDeeper:
****************************** / |>>/base                                                         :7_4:UnDeeper:
******************************* / PAKA/akapart                                                   :7_4:UnDeeper:
******************************** / $>|                                                          :7_4:UnDeeper:
********************************* / Aka Token                                                  :7_4:UnDeeper:
**************************** \ |?| optional something has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** \ slAKA optional akapart has returned (Nothing,0)                        :7_4:UnDeeper:
*************************** / |>>/base got Nothing                                                   :7_4:UnDeeper:
************************** \ |>>/base has returned (Nothing,0)                                        :7_4:UnDeeper:
************************* \ |>> has returned (Nothing,0)                                               :7_4:UnDeeper:
************************* / |>>                                                                        :7_4:UnDeeper:
************************** / |>>/recurse                                                              :7_4:UnDeeper:
************************** / |>>/base                                                                 :7_4:UnDeeper:
*************************** / slAKA optional typically                                               :7_4:UnDeeper:
**************************** / |?| optional something                                               :7_4:UnDeeper:
***************************** / |>>                                                                :7_4:UnDeeper:
****************************** / |>>/recurse                                                      :7_4:UnDeeper:
****************************** / |>>/base                                                         :7_4:UnDeeper:
******************************* / typically                                                      :7_4:UnDeeper:
******************************** / $>|                                                          :7_4:UnDeeper:
**************************** \ |?| optional something has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** \ slAKA optional typically has returned (Nothing,0)                      :7_4:UnDeeper:
*************************** / |>>/base got Nothing                                                   :7_4:UnDeeper:
************************** \ |>>/base has returned (Nothing,0)                                        :7_4:UnDeeper:
************************* \ |>> has returned (Nothing,0)                                               :7_4:UnDeeper:
************************* / slAKA: proceeding after base and entityalias are retrieved ...             :7_4:UnDeeper:
************************* / pAKA: entityalias = Nothing                                                :7_4:UnDeeper:
************************ \ slAKA has returned (["a data breach","occurred"],3)                          :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                          :7_4:UnDeeper:
********************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                       :7_4:UnDeeper:
********************* / undeepers                                                                          :7_4:UnDeeper:
********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers           :7_4:UnDeeper:
********************** / sameLine: success!                                                            :7_3:Is:
********************* \ undeepers has returned ()                                                       :7_3:Is:
******************** \ pRelPred has returned RPMT ["a data breach","occurred"]                           :7_3:Is:
******************* \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])            :7_3:Is:
****************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                          :7_3:Is:
***************** / binary(Or)                                                                              :7_3:Is:
***************** / binary(And)                                                                             :7_3:Is:
***************** / binary(SetLess)                                                                         :7_3:Is:
***************** / binary(SetPlus)                                                                         :7_3:Is:
**************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])             :7_3:Is:
**************** / myindented: consuming UnDeeper                                                            :7_3:Is:
************ / term p/3:plain p                                                                               :6_2:GoDeeper:
************* / pRelPred                                                                                     :6_2:GoDeeper:
************** / slRelPred                                                                                  :6_2:GoDeeper:
*************** / RPConstraint                                                                             :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slMultiTerm                                                                          :6_2:GoDeeper:
****************** / |:| some                                                                           :6_2:GoDeeper:
******************* / |:| base parser                                                                  :6_2:GoDeeper:
******************** / pNumAsText                                                                     :6_2:GoDeeper:
*************** / RPBoolStructR                                                                            :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slMultiTerm                                                                          :6_2:GoDeeper:
****************** / |:| some                                                                           :6_2:GoDeeper:
******************* / |:| base parser                                                                  :6_2:GoDeeper:
******************** / pNumAsText                                                                     :6_2:GoDeeper:
*************** / RPMT                                                                                     :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA                                                                                :6_2:GoDeeper:
****************** / $*|                                                                                :6_2:GoDeeper:
******************* / slAKA base                                                                       :6_2:GoDeeper:
******************** / slInlineDefMT                                                                  :6_2:GoDeeper:
********************* / $*|                                                                          :6_2:GoDeeper:
********************** / slMultiTerm                                                                :6_2:GoDeeper:
*********************** / |:| some                                                                 :6_2:GoDeeper:
************************ / |:| base parser                                                        :6_2:GoDeeper:
************************* / pNumAsText                                                           :6_2:GoDeeper:
********************* / slMultiTerm                                                                  :6_2:GoDeeper:
********************** / |:| some                                                                   :6_2:GoDeeper:
*********************** / |:| base parser                                                          :6_2:GoDeeper:
************************ / pNumAsText                                                             :6_2:GoDeeper:
********* / withPrePost                                                                                          :6_2:GoDeeper:
********** / |<* starting                                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / pre part                                                                                         :6_2:GoDeeper:
************ / aboveNextLineKeyword                                                                             :6_3:GoDeeper:
************* / expectUnDeepers                                                                                :6_3:GoDeeper:
************** / pNumAsText                                                                                   :6_3:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                        :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                 :6_3:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                :6_3:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                              :6_3:GoDeeper:
************* / $*|                                                                                            :6_3:GoDeeper:
************* \ $*| has returned ((),0)                                                                        :6_3:GoDeeper:
************* / ->| success                                                                                     :6_3:Other "a da:
************* / |>>                                                                                             :6_3:Other "a da:
************** / |>>/recurse                                                                                   :6_3:Other "a da:
************** / |>>/base                                                                                      :6_3:Other "a da:
*************** / slMultiTerm                                                                                 :6_3:Other "a da:
**************** / |:| some                                                                                  :6_3:Other "a da:
***************** / |:| base parser                                                                         :6_3:Other "a da:
***************** \ |:| base parser has returned ("a data breach",0)                                         :6_4:GoDeeper:
***************** / |:| deeper                                                                               :6_4:GoDeeper:
****************** / |:| some GoDeeper                                                                      :6_4:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |:| deeper has returned (["occurred"],3)                                                   :7_4:UnDeeper:
**************** \ |:| some has returned (["a data breach","occurred"],3)                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["a data breach","occurred"],3)                                      :7_4:UnDeeper:
*************** / |>>/base got ["a data breach","occurred"]                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ |>> has returned (["a data breach","occurred"],3)                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 4                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                    :6_3:GoDeeper:
************ / aboveNextLineKeyword                                                                              :6_3:Other "a da:
************* / expectUnDeepers                                                                                 :6_3:Other "a da:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["a data breach","GD","GD","GD","occurred"]                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                  :6_3:Other "a da:
************* / aNLK: determined undp_count = 3                                                                 :6_3:Other "a da:
************* / ->| trying to consume 1 GoDeepers                                                               :6_3:Other "a da:
************* / $*|                                                                                             :6_3:Other "a da:
************* \ $*| has returned ((),0)                                                                         :6_3:Other "a da:
************ / /*= lookAhead failed, delegating to plain /+=                                                     :6_3:Other "a da:
************ / aboveNextLineKeyword                                                                               :6_4:GoDeeper:
************* / expectUnDeepers                                                                                  :6_4:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","GD","occurred"]                                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                   :6_4:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                  :6_4:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                :6_4:GoDeeper:
************* / $*|                                                                                              :6_4:GoDeeper:
************* \ $*| has returned ((),0)                                                                          :6_4:GoDeeper:
************* / ->| success                                                                                        :6_5:GoDeeper:
************* / |>>                                                                                                :6_5:GoDeeper:
************** / |>>/recurse                                                                                      :6_5:GoDeeper:
*************** / |>>                                                                                              :6_6:GoDeeper:
**************** / |>>/recurse                                                                                    :6_6:GoDeeper:
***************** / |>>                                                                                           :6_6:Other "occu:
****************** / |>>/recurse                                                                                 :6_6:Other "occu:
****************** / |>>/base                                                                                    :6_6:Other "occu:
******************* / slMultiTerm                                                                               :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ slMultiTerm has returned (["occurred"],0)                                              :7_4:UnDeeper:
******************* / |>>/base got ["occurred"]                                                              :7_4:UnDeeper:
****************** \ |>>/base has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |>> has returned (["occurred"],0)                                                          :7_4:UnDeeper:
**************** \ |>>/recurse has returned (["occurred"],1)                                                    :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],1)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],2)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],2)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 3                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                      :6_4:GoDeeper:
************ / aboveNextLineKeyword                                                                                 :6_5:GoDeeper:
************* / expectUnDeepers                                                                                    :6_5:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","occurred"]                                                                  :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :6_5:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                    :6_5:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :6_5:GoDeeper:
************* / $*|                                                                                                :6_5:GoDeeper:
************* \ $*| has returned ((),0)                                                                            :6_5:GoDeeper:
************* / ->| success                                                                                          :6_6:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 2                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :6_5:GoDeeper:
************ / aboveNextLineKeyword                                                                                   :6_6:GoDeeper:
************* / expectUnDeepers                                                                                      :6_6:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","occurred"]                                                                       :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                       :6_6:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                      :6_6:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                    :6_6:GoDeeper:
************* / $*|                                                                                                  :6_6:GoDeeper:
************* \ $*| has returned ((),0)                                                                              :6_6:GoDeeper:
************* / ->| success                                                                                           :6_6:Other "occu:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 1                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                          :6_6:GoDeeper:
************ / aboveNextLineKeyword                                                                                    :6_6:Other "occu:
************* / expectUnDeepers                                                                                       :6_6:Other "occu:
************** / ignoring ["occurred"]                                                                            :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                        :6_6:Other "occu:
************* / aNLK: determined undp_count = 3                                                                       :6_6:Other "occu:
************* / ->| trying to consume 1 GoDeepers                                                                     :6_6:Other "occu:
************* / $*|                                                                                                   :6_6:Other "occu:
************* \ $*| has returned ((),0)                                                                               :6_6:Other "occu:
************ / /*= lookAhead failed, delegating to plain /+=                                                           :6_6:Other "occu:
************ / aboveNextLineKeyword                                                                                 :7_4:UnDeeper:
************* / expectUnDeepers                                                                                    :7_4:UnDeeper:
************** / ignoring []                                                                                      :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :7_4:UnDeeper:
************* / aNLK: determined undp_count = 3                                                                    :7_4:UnDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :7_4:UnDeeper:
************* / $*|                                                                                                :7_4:UnDeeper:
************* \ $*| has returned ((),0)                                                                            :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :7_4:UnDeeper:
********* / withPreOnly                                                                                          :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / pre part                                                                                         :6_2:GoDeeper:
************ / aboveNextLineKeyword                                                                             :6_3:GoDeeper:
************* / expectUnDeepers                                                                                :6_3:GoDeeper:
************** / pNumAsText                                                                                   :6_3:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                        :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                 :6_3:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                :6_3:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                              :6_3:GoDeeper:
************* / $*|                                                                                            :6_3:GoDeeper:
************* \ $*| has returned ((),0)                                                                        :6_3:GoDeeper:
************* / ->| success                                                                                     :6_3:Other "a da:
************* / |>>                                                                                             :6_3:Other "a da:
************** / |>>/recurse                                                                                   :6_3:Other "a da:
************** / |>>/base                                                                                      :6_3:Other "a da:
*************** / slMultiTerm                                                                                 :6_3:Other "a da:
**************** / |:| some                                                                                  :6_3:Other "a da:
***************** / |:| base parser                                                                         :6_3:Other "a da:
***************** \ |:| base parser has returned ("a data breach",0)                                         :6_4:GoDeeper:
***************** / |:| deeper                                                                               :6_4:GoDeeper:
****************** / |:| some GoDeeper                                                                      :6_4:GoDeeper:
****************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                 :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |:| deeper has returned (["occurred"],3)                                                   :7_4:UnDeeper:
**************** \ |:| some has returned (["a data breach","occurred"],3)                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["a data breach","occurred"],3)                                      :7_4:UnDeeper:
*************** / |>>/base got ["a data breach","occurred"]                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ |>> has returned (["a data breach","occurred"],3)                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 4                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                    :6_3:GoDeeper:
************ / aboveNextLineKeyword                                                                              :6_3:Other "a da:
************* / expectUnDeepers                                                                                 :6_3:Other "a da:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["a data breach","GD","GD","GD","occurred"]                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                  :6_3:Other "a da:
************* / aNLK: determined undp_count = 3                                                                 :6_3:Other "a da:
************* / ->| trying to consume 1 GoDeepers                                                               :6_3:Other "a da:
************* / $*|                                                                                             :6_3:Other "a da:
************* \ $*| has returned ((),0)                                                                         :6_3:Other "a da:
************ / /*= lookAhead failed, delegating to plain /+=                                                     :6_3:Other "a da:
************ / aboveNextLineKeyword                                                                               :6_4:GoDeeper:
************* / expectUnDeepers                                                                                  :6_4:GoDeeper:
************** / pNumAsText                                                                                     :6_4:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","GD","occurred"]                                                             :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                   :6_4:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                  :6_4:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                :6_4:GoDeeper:
************* / $*|                                                                                              :6_4:GoDeeper:
************* \ $*| has returned ((),0)                                                                          :6_4:GoDeeper:
************* / ->| success                                                                                        :6_5:GoDeeper:
************* / |>>                                                                                                :6_5:GoDeeper:
************** / |>>/recurse                                                                                      :6_5:GoDeeper:
*************** / |>>                                                                                              :6_6:GoDeeper:
**************** / |>>/recurse                                                                                    :6_6:GoDeeper:
***************** / |>>                                                                                           :6_6:Other "occu:
****************** / |>>/recurse                                                                                 :6_6:Other "occu:
****************** / |>>/base                                                                                    :6_6:Other "occu:
******************* / slMultiTerm                                                                               :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ slMultiTerm has returned (["occurred"],0)                                              :7_4:UnDeeper:
******************* / |>>/base got ["occurred"]                                                              :7_4:UnDeeper:
****************** \ |>>/base has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ |>> has returned (["occurred"],0)                                                          :7_4:UnDeeper:
**************** \ |>>/recurse has returned (["occurred"],1)                                                    :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],1)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],2)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],2)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 3                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                      :6_4:GoDeeper:
************ / aboveNextLineKeyword                                                                                 :6_5:GoDeeper:
************* / expectUnDeepers                                                                                    :6_5:GoDeeper:
************** / pNumAsText                                                                                       :6_5:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","GD","occurred"]                                                                  :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :6_5:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                    :6_5:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :6_5:GoDeeper:
************* / $*|                                                                                                :6_5:GoDeeper:
************* \ $*| has returned ((),0)                                                                            :6_5:GoDeeper:
************* / ->| success                                                                                          :6_6:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 2                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :6_5:GoDeeper:
************ / aboveNextLineKeyword                                                                                   :6_6:GoDeeper:
************* / expectUnDeepers                                                                                      :6_6:GoDeeper:
************** / pNumAsText                                                                                         :6_6:GoDeeper:
************** / ignoring ["GD","occurred"]                                                                       :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                       :6_6:GoDeeper:
************* / aNLK: determined undp_count = 3                                                                      :6_6:GoDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                    :6_6:GoDeeper:
************* / $*|                                                                                                  :6_6:GoDeeper:
************* \ $*| has returned ((),0)                                                                              :6_6:GoDeeper:
************* / ->| success                                                                                           :6_6:Other "occu:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************* / aNLK: current depth is 1                                                                           :7_4:UnDeeper:
************* / |<|                                                                                                :7_4:UnDeeper:
************* / |<* starting                                                                                       :7_4:UnDeeper:
************* / |<*/recurse                                                                                        :7_4:UnDeeper:
************* / |<*/base                                                                                           :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                          :6_6:GoDeeper:
************ / aboveNextLineKeyword                                                                                    :6_6:Other "occu:
************* / expectUnDeepers                                                                                       :6_6:Other "occu:
************** / ignoring ["occurred"]                                                                            :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                        :6_6:Other "occu:
************* / aNLK: determined undp_count = 3                                                                       :6_6:Other "occu:
************* / ->| trying to consume 1 GoDeepers                                                                     :6_6:Other "occu:
************* / $*|                                                                                                   :6_6:Other "occu:
************* \ $*| has returned ((),0)                                                                               :6_6:Other "occu:
************ / /*= lookAhead failed, delegating to plain /+=                                                           :6_6:Other "occu:
************ / aboveNextLineKeyword                                                                                 :7_4:UnDeeper:
************* / expectUnDeepers                                                                                    :7_4:UnDeeper:
************** / ignoring []                                                                                      :7_4:UnDeeper:
************** / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                :7_3:Is:
************* \ expectUnDeepers has returned 3                                                                     :7_4:UnDeeper:
************* / aNLK: determined undp_count = 3                                                                    :7_4:UnDeeper:
************* / ->| trying to consume 1 GoDeepers                                                                  :7_4:UnDeeper:
************* / $*|                                                                                                :7_4:UnDeeper:
************* \ $*| has returned ((),0)                                                                            :7_4:UnDeeper:
************ / /*= lookAhead failed, delegating to plain /+=                                                        :7_4:UnDeeper:
*** / pTypeDefinition                                                                                                 :6_1:If:
**** / pRuleLabel                                                                                                    :6_1:If:
***** / $>|                                                                                                         :6_1:If:
**** / pHornlike/uponLimb                                                                                            :6_1:If:
***** / preambleParamText:[Upon]                                                                                    :6_1:If:
****** / $>|                                                                                                       :6_1:If:
**** / pHornlike/givenLimb                                                                                           :6_1:If:
***** / preambleParamText:[Given]                                                                                   :6_1:If:
****** / $>|                                                                                                       :6_1:If:
*** / pConstitutiveRule                                                                                               :6_1:If:
**** / pRuleLabel                                                                                                    :6_1:If:
***** / $>|                                                                                                         :6_1:If:
**** / calling myindented pNameParens                                                                                :6_1:If:
***** / manyIndentation/leaf?                                                                                       :6_1:If:
****** / pMultiTermAka                                                                                             :6_1:If:
******* / pAKA                                                                                                    :6_1:If:
******** / slAKA                                                                                                 :6_1:If:
********* / $*|                                                                                                 :6_1:If:
********** / slAKA base                                                                                        :6_1:If:
*********** / slMultiTerm                                                                                     :6_1:If:
************ / |:| some                                                                                      :6_1:If:
************* / |:| base parser                                                                             :6_1:If:
************** / pNumAsText                                                                                :6_1:If:
***** / manyIndentation/deeper; calling someIndentation                                                             :6_1:If:
****** / someIndentation                                                                                           :6_1:If:
******* / myindented: consuming GoDeeper                                                                          :6_1:If:
*** / pScenarioRule                                                                                                   :6_1:If:
**** / pRuleLabel                                                                                                    :6_1:If:
***** / $>|                                                                                                         :6_1:If:
**** / pExpect                                                                                                       :6_1:If:
*** / pHornlike                                                                                                       :6_1:If:
**** / pSrcRef                                                                                                       :6_1:If:
***** / pRuleLabel                                                                                                  :6_1:If:
****** / $>|                                                                                                       :6_1:If:
**** \ pSrcRef has returned (Nothing,Just (SrcRef {url = "test/Spec", short = "test/Spec", srcrow = 1, srccol = 6, version = Nothing})) :6_1:If:
**** / pHornlike / permute                                                                                           :6_1:If:
***** / whenCase                                                                                                    :6_1:If:
****** / whenMeansIf                                                                                               :6_1:If:
****** \ whenMeansIf has returned If                                                                                :6_2:GoDeeper:
****** / pBSR                                                                                                       :6_2:GoDeeper:
******* / ppp inner                                                                                                :6_2:GoDeeper:
******** / term p                                                                                                 :6_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / |:| some                                                                                         :6_2:GoDeeper:
************ / |:| base parser                                                                                :6_2:GoDeeper:
************* / pNumAsText                                                                                   :6_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :6_2:GoDeeper:
********** / |:| some                                                                                           :6_2:GoDeeper:
*********** / |:| base parser                                                                                  :6_2:GoDeeper:
************ / pNumAsText                                                                                     :6_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :6_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :6_2:GoDeeper:
*********** / someIndentation                                                                                  :6_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :6_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                             :6_3:GoDeeper:
************ / manyIndentation/leaf?                                                                            :6_3:GoDeeper:
************* / term p                                                                                         :6_3:GoDeeper:
************** / term p/1a:label directly above                                                               :6_3:GoDeeper:
*************** / $*|                                                                                        :6_3:GoDeeper:
**************** / |:| some                                                                                 :6_3:GoDeeper:
***************** / |:| base parser                                                                        :6_3:GoDeeper:
****************** / pNumAsText                                                                           :6_3:GoDeeper:
************** / term p/b:label to the left of line below, with EOL                                           :6_3:GoDeeper:
*************** / |:| some                                                                                   :6_3:GoDeeper:
**************** / |:| base parser                                                                          :6_3:GoDeeper:
***************** / pNumAsText                                                                             :6_3:GoDeeper:
************** / term p/notLabelTerm                                                                          :6_3:GoDeeper:
*************** / term p/2:someIndentation expr p                                                            :6_3:GoDeeper:
**************** / someIndentation                                                                          :6_3:GoDeeper:
***************** / myindented: consuming GoDeeper                                                         :6_3:GoDeeper:
***************** \ myindented: consuming GoDeeper has returned GoDeeper                                    :6_3:Other "a da:
***************** / manyIndentation/leaf?                                                                   :6_3:Other "a da:
****************** / term p                                                                                :6_3:Other "a da:
******************* / term p/1a:label directly above                                                      :6_3:Other "a da:
******************** / $*|                                                                               :6_3:Other "a da:
********************* / |:| some                                                                        :6_3:Other "a da:
********************** / |:| base parser                                                               :6_3:Other "a da:
********************** \ |:| base parser has returned ("a data breach",0)                               :6_4:GoDeeper:
********************** / |:| deeper                                                                     :6_4:GoDeeper:
*********************** / |:| some GoDeeper                                                            :6_4:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                       :6_6:Other "occu:
*********************** / |:| some                                                                          :6_6:Other "occu:
************************ / |:| base parser                                                                 :6_6:Other "occu:
************************ \ |:| base parser has returned ("occurred",0)                                  :7_4:UnDeeper:
************************ / |:| deeper                                                                   :7_4:UnDeeper:
************************* / |:| some GoDeeper                                                          :7_4:UnDeeper:
************************ / |:| noMore                                                                   :7_4:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                               :7_4:UnDeeper:
*********************** \ |:| some has returned (["occurred"],0)                                         :7_4:UnDeeper:
********************** \ |:| deeper has returned (["occurred"],3)                                         :7_4:UnDeeper:
********************* \ |:| some has returned (["a data breach","occurred"],3)                             :7_4:UnDeeper:
********************* / pNumAsText                                                                         :7_4:UnDeeper:
******************* / term p/b:label to the left of line below, with EOL                                  :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / undeepers                                                                            :7_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers             :7_4:UnDeeper:
********************* / sameLine: success!                                                              :7_3:Is:
******************** \ undeepers has returned ()                                                         :7_3:Is:
******************** / matching EOL                                                                      :7_3:Is:
******************* / term p/notLabelTerm                                                                 :6_3:Other "a da:
******************** / term p/2:someIndentation expr p                                                   :6_3:Other "a da:
********************* / someIndentation                                                                 :6_3:Other "a da:
********************** / myindented: consuming GoDeeper                                                :6_3:Other "a da:
******************** / term p/3:plain p                                                                  :6_3:Other "a da:
********************* / pRelPred                                                                        :6_3:Other "a da:
********************** / slRelPred                                                                     :6_3:Other "a da:
*********************** / RPConstraint                                                                :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPBoolStructR                                                               :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPMT                                                                        :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slAKA                                                                   :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA base                                                          :6_3:Other "a da:
**************************** / slInlineDefMT                                                     :6_3:Other "a da:
***************************** / $*|                                                             :6_3:Other "a da:
****************************** / slMultiTerm                                                   :6_3:Other "a da:
******************************* / |:| some                                                    :6_3:Other "a da:
******************************** / |:| base parser                                           :6_3:Other "a da:
******************************** \ |:| base parser has returned ("a data breach",0)           :6_4:GoDeeper:
******************************** / |:| deeper                                                 :6_4:GoDeeper:
********************************* / |:| some GoDeeper                                        :6_4:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]   :6_6:Other "occu:
********************************* / |:| some                                                      :6_6:Other "occu:
********************************** / |:| base parser                                             :6_6:Other "occu:
********************************** \ |:| base parser has returned ("occurred",0)              :7_4:UnDeeper:
********************************** / |:| deeper                                               :7_4:UnDeeper:
*********************************** / |:| some GoDeeper                                      :7_4:UnDeeper:
********************************** / |:| noMore                                               :7_4:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                           :7_4:UnDeeper:
********************************* \ |:| some has returned (["occurred"],0)                     :7_4:UnDeeper:
******************************** \ |:| deeper has returned (["occurred"],3)                     :7_4:UnDeeper:
******************************* \ |:| some has returned (["a data breach","occurred"],3)         :7_4:UnDeeper:
****************************** \ slMultiTerm has returned (["a data breach","occurred"],3)        :7_4:UnDeeper:
***************************** \ $*| has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
***************************** / |>| calling $>>                                                    :7_4:UnDeeper:
****************************** / $>>                                                              :7_4:UnDeeper:
******************************* / $>>/recurse                                                    :7_4:UnDeeper:
******************************* / $>>/base                                                       :7_4:UnDeeper:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
*************************** \ slAKA base has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional akapart                                               :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / PAKA/akapart                                                 :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
********************************** / Aka Token                                                :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional akapart has returned (Nothing,0)                      :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional typically                                             :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / typically                                                    :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional typically has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / slAKA: proceeding after base and entityalias are retrieved ...           :7_4:UnDeeper:
************************** / pAKA: entityalias = Nothing                                              :7_4:UnDeeper:
************************* \ slAKA has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
*********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************** \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                     :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************* \ pRelPred has returned RPMT ["a data breach","occurred"]                         :7_3:Is:
******************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])          :7_3:Is:
******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])         :7_3:Is:
****************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                        :7_3:Is:
****************** / binary(Or)                                                                            :7_3:Is:
****************** / binary(And)                                                                           :7_3:Is:
****************** / binary(SetLess)                                                                       :7_3:Is:
****************** / binary(SetPlus)                                                                       :7_3:Is:
***************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** / myindented: consuming UnDeeper                                                          :7_3:Is:
*************** / term p/3:plain p                                                                           :6_3:GoDeeper:
**************** / pRelPred                                                                                 :6_3:GoDeeper:
***************** / slRelPred                                                                              :6_3:GoDeeper:
****************** / RPConstraint                                                                         :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPBoolStructR                                                                        :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPMT                                                                                 :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slAKA                                                                            :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA base                                                                   :6_3:GoDeeper:
*********************** / slInlineDefMT                                                              :6_3:GoDeeper:
************************ / $*|                                                                      :6_3:GoDeeper:
************************* / slMultiTerm                                                            :6_3:GoDeeper:
************************** / |:| some                                                             :6_3:GoDeeper:
*************************** / |:| base parser                                                    :6_3:GoDeeper:
**************************** / pNumAsText                                                       :6_3:GoDeeper:
************************ / slMultiTerm                                                              :6_3:GoDeeper:
************************* / |:| some                                                               :6_3:GoDeeper:
************************** / |:| base parser                                                      :6_3:GoDeeper:
*************************** / pNumAsText                                                         :6_3:GoDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                  :6_3:GoDeeper:
************* / someIndentation                                                                                :6_3:GoDeeper:
************** / myindented: consuming GoDeeper                                                               :6_3:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                          :6_3:Other "a da:
************** / manyIndentation/leaf?                                                                         :6_3:Other "a da:
*************** / term p                                                                                      :6_3:Other "a da:
**************** / term p/1a:label directly above                                                            :6_3:Other "a da:
***************** / $*|                                                                                     :6_3:Other "a da:
****************** / |:| some                                                                              :6_3:Other "a da:
******************* / |:| base parser                                                                     :6_3:Other "a da:
******************* \ |:| base parser has returned ("a data breach",0)                                     :6_4:GoDeeper:
******************* / |:| deeper                                                                           :6_4:GoDeeper:
******************** / |:| some GoDeeper                                                                  :6_4:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                             :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ |:| deeper has returned (["occurred"],3)                                               :7_4:UnDeeper:
****************** \ |:| some has returned (["a data breach","occurred"],3)                                   :7_4:UnDeeper:
****************** / pNumAsText                                                                               :7_4:UnDeeper:
**************** / term p/b:label to the left of line below, with EOL                                        :6_3:Other "a da:
***************** / |:| some                                                                                :6_3:Other "a da:
****************** / |:| base parser                                                                       :6_3:Other "a da:
****************** \ |:| base parser has returned ("a data breach",0)                                       :6_4:GoDeeper:
****************** / |:| deeper                                                                             :6_4:GoDeeper:
******************* / |:| some GoDeeper                                                                    :6_4:GoDeeper:
******************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :6_6:Other "occu:
******************* / |:| some                                                                                  :6_6:Other "occu:
******************** / |:| base parser                                                                         :6_6:Other "occu:
******************** \ |:| base parser has returned ("occurred",0)                                          :7_4:UnDeeper:
******************** / |:| deeper                                                                           :7_4:UnDeeper:
********************* / |:| some GoDeeper                                                                  :7_4:UnDeeper:
******************** / |:| noMore                                                                           :7_4:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                       :7_4:UnDeeper:
******************* \ |:| some has returned (["occurred"],0)                                                 :7_4:UnDeeper:
****************** \ |:| deeper has returned (["occurred"],3)                                                 :7_4:UnDeeper:
***************** \ |:| some has returned (["a data breach","occurred"],3)                                     :7_4:UnDeeper:
***************** / undeepers                                                                                  :7_4:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                   :7_4:UnDeeper:
****************** / sameLine: success!                                                                    :7_3:Is:
***************** \ undeepers has returned ()                                                               :7_3:Is:
***************** / matching EOL                                                                            :7_3:Is:
**************** / term p/notLabelTerm                                                                       :6_3:Other "a da:
***************** / term p/2:someIndentation expr p                                                         :6_3:Other "a da:
****************** / someIndentation                                                                       :6_3:Other "a da:
******************* / myindented: consuming GoDeeper                                                      :6_3:Other "a da:
***************** / term p/3:plain p                                                                        :6_3:Other "a da:
****************** / pRelPred                                                                              :6_3:Other "a da:
******************* / slRelPred                                                                           :6_3:Other "a da:
******************** / RPConstraint                                                                      :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPBoolStructR                                                                     :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPMT                                                                              :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slAKA                                                                         :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA base                                                                :6_3:Other "a da:
************************* / slInlineDefMT                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************** / slMultiTerm                                                           :6_3:Other "a da:
*************************** / |:| some                                                            :6_3:Other "a da:
**************************** / |:| base parser                                                   :6_3:Other "a da:
**************************** \ |:| base parser has returned ("a data breach",0)                   :6_4:GoDeeper:
**************************** / |:| deeper                                                         :6_4:GoDeeper:
***************************** / |:| some GoDeeper                                                :6_4:GoDeeper:
***************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]           :6_6:Other "occu:
***************************** / |:| some                                                              :6_6:Other "occu:
****************************** / |:| base parser                                                     :6_6:Other "occu:
****************************** \ |:| base parser has returned ("occurred",0)                      :7_4:UnDeeper:
****************************** / |:| deeper                                                       :7_4:UnDeeper:
******************************* / |:| some GoDeeper                                              :7_4:UnDeeper:
****************************** / |:| noMore                                                       :7_4:UnDeeper:
****************************** \ |:| noMore has returned ([],0)                                   :7_4:UnDeeper:
***************************** \ |:| some has returned (["occurred"],0)                             :7_4:UnDeeper:
**************************** \ |:| deeper has returned (["occurred"],3)                             :7_4:UnDeeper:
*************************** \ |:| some has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************** \ slMultiTerm has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************* \ slInlineDefMT has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************ \ slAKA base has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional akapart                                                     :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / PAKA/akapart                                                       :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
******************************* / Aka Token                                                      :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional akapart has returned (Nothing,0)                            :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional typically                                                   :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / typically                                                          :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional typically has returned (Nothing,0)                          :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / slAKA: proceeding after base and entityalias are retrieved ...                 :7_4:UnDeeper:
*********************** / pAKA: entityalias = Nothing                                                    :7_4:UnDeeper:
********************** \ slAKA has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
******************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                              :7_4:UnDeeper:
******************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                           :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
****************** \ pRelPred has returned RPMT ["a data breach","occurred"]                               :7_3:Is:
***************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])                :7_3:Is:
**************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])               :7_3:Is:
*************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                              :7_3:Is:
*************** / binary(Or)                                                                                  :7_3:Is:
*************** / binary(And)                                                                                 :7_3:Is:
*************** / binary(SetLess)                                                                             :7_3:Is:
*************** / binary(SetPlus)                                                                             :7_3:Is:
************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])                 :7_3:Is:
************** / myindented: consuming UnDeeper                                                                :7_3:Is:
********** / term p/3:plain p                                                                                   :6_2:GoDeeper:
*********** / pRelPred                                                                                         :6_2:GoDeeper:
************ / slRelPred                                                                                      :6_2:GoDeeper:
************* / RPConstraint                                                                                 :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPBoolStructR                                                                                :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPMT                                                                                         :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slAKA                                                                                    :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA base                                                                           :6_2:GoDeeper:
****************** / slInlineDefMT                                                                      :6_2:GoDeeper:
******************* / $*|                                                                              :6_2:GoDeeper:
******************** / slMultiTerm                                                                    :6_2:GoDeeper:
********************* / |:| some                                                                     :6_2:GoDeeper:
********************** / |:| base parser                                                            :6_2:GoDeeper:
*********************** / pNumAsText                                                               :6_2:GoDeeper:
******************* / slMultiTerm                                                                      :6_2:GoDeeper:
******************** / |:| some                                                                       :6_2:GoDeeper:
********************* / |:| base parser                                                              :6_2:GoDeeper:
********************** / pNumAsText                                                                 :6_2:GoDeeper:
******* / withPrePost                                                                                              :6_2:GoDeeper:
******** / |<* starting                                                                                           :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
******* / withPreOnly                                                                                              :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
****** / Otherwise                                                                                                 :6_1:If:
***** / pHornlike/uponLimb                                                                                          :6_1:If:
****** / preambleParamText:[Upon]                                                                                  :6_1:If:
******* / $>|                                                                                                     :6_1:If:
***** / whenCase                                                                                                    :6_1:If:
****** / whenMeansIf                                                                                               :6_1:If:
****** \ whenMeansIf has returned If                                                                                :6_2:GoDeeper:
****** / pBSR                                                                                                       :6_2:GoDeeper:
******* / ppp inner                                                                                                :6_2:GoDeeper:
******** / term p                                                                                                 :6_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / |:| some                                                                                         :6_2:GoDeeper:
************ / |:| base parser                                                                                :6_2:GoDeeper:
************* / pNumAsText                                                                                   :6_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :6_2:GoDeeper:
********** / |:| some                                                                                           :6_2:GoDeeper:
*********** / |:| base parser                                                                                  :6_2:GoDeeper:
************ / pNumAsText                                                                                     :6_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :6_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :6_2:GoDeeper:
*********** / someIndentation                                                                                  :6_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :6_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                             :6_3:GoDeeper:
************ / manyIndentation/leaf?                                                                            :6_3:GoDeeper:
************* / term p                                                                                         :6_3:GoDeeper:
************** / term p/1a:label directly above                                                               :6_3:GoDeeper:
*************** / $*|                                                                                        :6_3:GoDeeper:
**************** / |:| some                                                                                 :6_3:GoDeeper:
***************** / |:| base parser                                                                        :6_3:GoDeeper:
****************** / pNumAsText                                                                           :6_3:GoDeeper:
************** / term p/b:label to the left of line below, with EOL                                           :6_3:GoDeeper:
*************** / |:| some                                                                                   :6_3:GoDeeper:
**************** / |:| base parser                                                                          :6_3:GoDeeper:
***************** / pNumAsText                                                                             :6_3:GoDeeper:
************** / term p/notLabelTerm                                                                          :6_3:GoDeeper:
*************** / term p/2:someIndentation expr p                                                            :6_3:GoDeeper:
**************** / someIndentation                                                                          :6_3:GoDeeper:
***************** / myindented: consuming GoDeeper                                                         :6_3:GoDeeper:
***************** \ myindented: consuming GoDeeper has returned GoDeeper                                    :6_3:Other "a da:
***************** / manyIndentation/leaf?                                                                   :6_3:Other "a da:
****************** / term p                                                                                :6_3:Other "a da:
******************* / term p/1a:label directly above                                                      :6_3:Other "a da:
******************** / $*|                                                                               :6_3:Other "a da:
********************* / |:| some                                                                        :6_3:Other "a da:
********************** / |:| base parser                                                               :6_3:Other "a da:
********************** \ |:| base parser has returned ("a data breach",0)                               :6_4:GoDeeper:
********************** / |:| deeper                                                                     :6_4:GoDeeper:
*********************** / |:| some GoDeeper                                                            :6_4:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                       :6_6:Other "occu:
*********************** / |:| some                                                                          :6_6:Other "occu:
************************ / |:| base parser                                                                 :6_6:Other "occu:
************************ \ |:| base parser has returned ("occurred",0)                                  :7_4:UnDeeper:
************************ / |:| deeper                                                                   :7_4:UnDeeper:
************************* / |:| some GoDeeper                                                          :7_4:UnDeeper:
************************ / |:| noMore                                                                   :7_4:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                               :7_4:UnDeeper:
*********************** \ |:| some has returned (["occurred"],0)                                         :7_4:UnDeeper:
********************** \ |:| deeper has returned (["occurred"],3)                                         :7_4:UnDeeper:
********************* \ |:| some has returned (["a data breach","occurred"],3)                             :7_4:UnDeeper:
********************* / pNumAsText                                                                         :7_4:UnDeeper:
******************* / term p/b:label to the left of line below, with EOL                                  :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / undeepers                                                                            :7_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers             :7_4:UnDeeper:
********************* / sameLine: success!                                                              :7_3:Is:
******************** \ undeepers has returned ()                                                         :7_3:Is:
******************** / matching EOL                                                                      :7_3:Is:
******************* / term p/notLabelTerm                                                                 :6_3:Other "a da:
******************** / term p/2:someIndentation expr p                                                   :6_3:Other "a da:
********************* / someIndentation                                                                 :6_3:Other "a da:
********************** / myindented: consuming GoDeeper                                                :6_3:Other "a da:
******************** / term p/3:plain p                                                                  :6_3:Other "a da:
********************* / pRelPred                                                                        :6_3:Other "a da:
********************** / slRelPred                                                                     :6_3:Other "a da:
*********************** / RPConstraint                                                                :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPBoolStructR                                                               :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPMT                                                                        :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slAKA                                                                   :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA base                                                          :6_3:Other "a da:
**************************** / slInlineDefMT                                                     :6_3:Other "a da:
***************************** / $*|                                                             :6_3:Other "a da:
****************************** / slMultiTerm                                                   :6_3:Other "a da:
******************************* / |:| some                                                    :6_3:Other "a da:
******************************** / |:| base parser                                           :6_3:Other "a da:
******************************** \ |:| base parser has returned ("a data breach",0)           :6_4:GoDeeper:
******************************** / |:| deeper                                                 :6_4:GoDeeper:
********************************* / |:| some GoDeeper                                        :6_4:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]   :6_6:Other "occu:
********************************* / |:| some                                                      :6_6:Other "occu:
********************************** / |:| base parser                                             :6_6:Other "occu:
********************************** \ |:| base parser has returned ("occurred",0)              :7_4:UnDeeper:
********************************** / |:| deeper                                               :7_4:UnDeeper:
*********************************** / |:| some GoDeeper                                      :7_4:UnDeeper:
********************************** / |:| noMore                                               :7_4:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                           :7_4:UnDeeper:
********************************* \ |:| some has returned (["occurred"],0)                     :7_4:UnDeeper:
******************************** \ |:| deeper has returned (["occurred"],3)                     :7_4:UnDeeper:
******************************* \ |:| some has returned (["a data breach","occurred"],3)         :7_4:UnDeeper:
****************************** \ slMultiTerm has returned (["a data breach","occurred"],3)        :7_4:UnDeeper:
***************************** \ $*| has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
***************************** / |>| calling $>>                                                    :7_4:UnDeeper:
****************************** / $>>                                                              :7_4:UnDeeper:
******************************* / $>>/recurse                                                    :7_4:UnDeeper:
******************************* / $>>/base                                                       :7_4:UnDeeper:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
*************************** \ slAKA base has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional akapart                                               :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / PAKA/akapart                                                 :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
********************************** / Aka Token                                                :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional akapart has returned (Nothing,0)                      :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional typically                                             :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / typically                                                    :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional typically has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / slAKA: proceeding after base and entityalias are retrieved ...           :7_4:UnDeeper:
************************** / pAKA: entityalias = Nothing                                              :7_4:UnDeeper:
************************* \ slAKA has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
*********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************** \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                     :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************* \ pRelPred has returned RPMT ["a data breach","occurred"]                         :7_3:Is:
******************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])          :7_3:Is:
******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])         :7_3:Is:
****************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                        :7_3:Is:
****************** / binary(Or)                                                                            :7_3:Is:
****************** / binary(And)                                                                           :7_3:Is:
****************** / binary(SetLess)                                                                       :7_3:Is:
****************** / binary(SetPlus)                                                                       :7_3:Is:
***************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** / myindented: consuming UnDeeper                                                          :7_3:Is:
*************** / term p/3:plain p                                                                           :6_3:GoDeeper:
**************** / pRelPred                                                                                 :6_3:GoDeeper:
***************** / slRelPred                                                                              :6_3:GoDeeper:
****************** / RPConstraint                                                                         :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPBoolStructR                                                                        :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPMT                                                                                 :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slAKA                                                                            :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA base                                                                   :6_3:GoDeeper:
*********************** / slInlineDefMT                                                              :6_3:GoDeeper:
************************ / $*|                                                                      :6_3:GoDeeper:
************************* / slMultiTerm                                                            :6_3:GoDeeper:
************************** / |:| some                                                             :6_3:GoDeeper:
*************************** / |:| base parser                                                    :6_3:GoDeeper:
**************************** / pNumAsText                                                       :6_3:GoDeeper:
************************ / slMultiTerm                                                              :6_3:GoDeeper:
************************* / |:| some                                                               :6_3:GoDeeper:
************************** / |:| base parser                                                      :6_3:GoDeeper:
*************************** / pNumAsText                                                         :6_3:GoDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                  :6_3:GoDeeper:
************* / someIndentation                                                                                :6_3:GoDeeper:
************** / myindented: consuming GoDeeper                                                               :6_3:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                          :6_3:Other "a da:
************** / manyIndentation/leaf?                                                                         :6_3:Other "a da:
*************** / term p                                                                                      :6_3:Other "a da:
**************** / term p/1a:label directly above                                                            :6_3:Other "a da:
***************** / $*|                                                                                     :6_3:Other "a da:
****************** / |:| some                                                                              :6_3:Other "a da:
******************* / |:| base parser                                                                     :6_3:Other "a da:
******************* \ |:| base parser has returned ("a data breach",0)                                     :6_4:GoDeeper:
******************* / |:| deeper                                                                           :6_4:GoDeeper:
******************** / |:| some GoDeeper                                                                  :6_4:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                             :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ |:| deeper has returned (["occurred"],3)                                               :7_4:UnDeeper:
****************** \ |:| some has returned (["a data breach","occurred"],3)                                   :7_4:UnDeeper:
****************** / pNumAsText                                                                               :7_4:UnDeeper:
**************** / term p/b:label to the left of line below, with EOL                                        :6_3:Other "a da:
***************** / |:| some                                                                                :6_3:Other "a da:
****************** / |:| base parser                                                                       :6_3:Other "a da:
****************** \ |:| base parser has returned ("a data breach",0)                                       :6_4:GoDeeper:
****************** / |:| deeper                                                                             :6_4:GoDeeper:
******************* / |:| some GoDeeper                                                                    :6_4:GoDeeper:
******************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :6_6:Other "occu:
******************* / |:| some                                                                                  :6_6:Other "occu:
******************** / |:| base parser                                                                         :6_6:Other "occu:
******************** \ |:| base parser has returned ("occurred",0)                                          :7_4:UnDeeper:
******************** / |:| deeper                                                                           :7_4:UnDeeper:
********************* / |:| some GoDeeper                                                                  :7_4:UnDeeper:
******************** / |:| noMore                                                                           :7_4:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                       :7_4:UnDeeper:
******************* \ |:| some has returned (["occurred"],0)                                                 :7_4:UnDeeper:
****************** \ |:| deeper has returned (["occurred"],3)                                                 :7_4:UnDeeper:
***************** \ |:| some has returned (["a data breach","occurred"],3)                                     :7_4:UnDeeper:
***************** / undeepers                                                                                  :7_4:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                   :7_4:UnDeeper:
****************** / sameLine: success!                                                                    :7_3:Is:
***************** \ undeepers has returned ()                                                               :7_3:Is:
***************** / matching EOL                                                                            :7_3:Is:
**************** / term p/notLabelTerm                                                                       :6_3:Other "a da:
***************** / term p/2:someIndentation expr p                                                         :6_3:Other "a da:
****************** / someIndentation                                                                       :6_3:Other "a da:
******************* / myindented: consuming GoDeeper                                                      :6_3:Other "a da:
***************** / term p/3:plain p                                                                        :6_3:Other "a da:
****************** / pRelPred                                                                              :6_3:Other "a da:
******************* / slRelPred                                                                           :6_3:Other "a da:
******************** / RPConstraint                                                                      :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPBoolStructR                                                                     :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPMT                                                                              :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slAKA                                                                         :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA base                                                                :6_3:Other "a da:
************************* / slInlineDefMT                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************** / slMultiTerm                                                           :6_3:Other "a da:
*************************** / |:| some                                                            :6_3:Other "a da:
**************************** / |:| base parser                                                   :6_3:Other "a da:
**************************** \ |:| base parser has returned ("a data breach",0)                   :6_4:GoDeeper:
**************************** / |:| deeper                                                         :6_4:GoDeeper:
***************************** / |:| some GoDeeper                                                :6_4:GoDeeper:
***************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]           :6_6:Other "occu:
***************************** / |:| some                                                              :6_6:Other "occu:
****************************** / |:| base parser                                                     :6_6:Other "occu:
****************************** \ |:| base parser has returned ("occurred",0)                      :7_4:UnDeeper:
****************************** / |:| deeper                                                       :7_4:UnDeeper:
******************************* / |:| some GoDeeper                                              :7_4:UnDeeper:
****************************** / |:| noMore                                                       :7_4:UnDeeper:
****************************** \ |:| noMore has returned ([],0)                                   :7_4:UnDeeper:
***************************** \ |:| some has returned (["occurred"],0)                             :7_4:UnDeeper:
**************************** \ |:| deeper has returned (["occurred"],3)                             :7_4:UnDeeper:
*************************** \ |:| some has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************** \ slMultiTerm has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************* \ slInlineDefMT has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************ \ slAKA base has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional akapart                                                     :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / PAKA/akapart                                                       :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
******************************* / Aka Token                                                      :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional akapart has returned (Nothing,0)                            :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional typically                                                   :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / typically                                                          :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional typically has returned (Nothing,0)                          :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / slAKA: proceeding after base and entityalias are retrieved ...                 :7_4:UnDeeper:
*********************** / pAKA: entityalias = Nothing                                                    :7_4:UnDeeper:
********************** \ slAKA has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
******************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                              :7_4:UnDeeper:
******************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                           :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
****************** \ pRelPred has returned RPMT ["a data breach","occurred"]                               :7_3:Is:
***************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])                :7_3:Is:
**************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])               :7_3:Is:
*************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                              :7_3:Is:
*************** / binary(Or)                                                                                  :7_3:Is:
*************** / binary(And)                                                                                 :7_3:Is:
*************** / binary(SetLess)                                                                             :7_3:Is:
*************** / binary(SetPlus)                                                                             :7_3:Is:
************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])                 :7_3:Is:
************** / myindented: consuming UnDeeper                                                                :7_3:Is:
********** / term p/3:plain p                                                                                   :6_2:GoDeeper:
*********** / pRelPred                                                                                         :6_2:GoDeeper:
************ / slRelPred                                                                                      :6_2:GoDeeper:
************* / RPConstraint                                                                                 :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPBoolStructR                                                                                :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPMT                                                                                         :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slAKA                                                                                    :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA base                                                                           :6_2:GoDeeper:
****************** / slInlineDefMT                                                                      :6_2:GoDeeper:
******************* / $*|                                                                              :6_2:GoDeeper:
******************** / slMultiTerm                                                                    :6_2:GoDeeper:
********************* / |:| some                                                                     :6_2:GoDeeper:
********************** / |:| base parser                                                            :6_2:GoDeeper:
*********************** / pNumAsText                                                               :6_2:GoDeeper:
******************* / slMultiTerm                                                                      :6_2:GoDeeper:
******************** / |:| some                                                                       :6_2:GoDeeper:
********************* / |:| base parser                                                              :6_2:GoDeeper:
********************** / pNumAsText                                                                 :6_2:GoDeeper:
******* / withPrePost                                                                                              :6_2:GoDeeper:
******** / |<* starting                                                                                           :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
******* / withPreOnly                                                                                              :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
****** / Otherwise                                                                                                 :6_1:If:
***** / pHornlike/givenLimb                                                                                         :6_1:If:
****** / preambleParamText:[Given]                                                                                 :6_1:If:
******* / $>|                                                                                                     :6_1:If:
***** / whenCase                                                                                                    :6_1:If:
****** / whenMeansIf                                                                                               :6_1:If:
****** \ whenMeansIf has returned If                                                                                :6_2:GoDeeper:
****** / pBSR                                                                                                       :6_2:GoDeeper:
******* / ppp inner                                                                                                :6_2:GoDeeper:
******** / term p                                                                                                 :6_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / |:| some                                                                                         :6_2:GoDeeper:
************ / |:| base parser                                                                                :6_2:GoDeeper:
************* / pNumAsText                                                                                   :6_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :6_2:GoDeeper:
********** / |:| some                                                                                           :6_2:GoDeeper:
*********** / |:| base parser                                                                                  :6_2:GoDeeper:
************ / pNumAsText                                                                                     :6_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :6_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :6_2:GoDeeper:
*********** / someIndentation                                                                                  :6_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :6_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                             :6_3:GoDeeper:
************ / manyIndentation/leaf?                                                                            :6_3:GoDeeper:
************* / term p                                                                                         :6_3:GoDeeper:
************** / term p/1a:label directly above                                                               :6_3:GoDeeper:
*************** / $*|                                                                                        :6_3:GoDeeper:
**************** / |:| some                                                                                 :6_3:GoDeeper:
***************** / |:| base parser                                                                        :6_3:GoDeeper:
****************** / pNumAsText                                                                           :6_3:GoDeeper:
************** / term p/b:label to the left of line below, with EOL                                           :6_3:GoDeeper:
*************** / |:| some                                                                                   :6_3:GoDeeper:
**************** / |:| base parser                                                                          :6_3:GoDeeper:
***************** / pNumAsText                                                                             :6_3:GoDeeper:
************** / term p/notLabelTerm                                                                          :6_3:GoDeeper:
*************** / term p/2:someIndentation expr p                                                            :6_3:GoDeeper:
**************** / someIndentation                                                                          :6_3:GoDeeper:
***************** / myindented: consuming GoDeeper                                                         :6_3:GoDeeper:
***************** \ myindented: consuming GoDeeper has returned GoDeeper                                    :6_3:Other "a da:
***************** / manyIndentation/leaf?                                                                   :6_3:Other "a da:
****************** / term p                                                                                :6_3:Other "a da:
******************* / term p/1a:label directly above                                                      :6_3:Other "a da:
******************** / $*|                                                                               :6_3:Other "a da:
********************* / |:| some                                                                        :6_3:Other "a da:
********************** / |:| base parser                                                               :6_3:Other "a da:
********************** \ |:| base parser has returned ("a data breach",0)                               :6_4:GoDeeper:
********************** / |:| deeper                                                                     :6_4:GoDeeper:
*********************** / |:| some GoDeeper                                                            :6_4:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                       :6_6:Other "occu:
*********************** / |:| some                                                                          :6_6:Other "occu:
************************ / |:| base parser                                                                 :6_6:Other "occu:
************************ \ |:| base parser has returned ("occurred",0)                                  :7_4:UnDeeper:
************************ / |:| deeper                                                                   :7_4:UnDeeper:
************************* / |:| some GoDeeper                                                          :7_4:UnDeeper:
************************ / |:| noMore                                                                   :7_4:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                               :7_4:UnDeeper:
*********************** \ |:| some has returned (["occurred"],0)                                         :7_4:UnDeeper:
********************** \ |:| deeper has returned (["occurred"],3)                                         :7_4:UnDeeper:
********************* \ |:| some has returned (["a data breach","occurred"],3)                             :7_4:UnDeeper:
********************* / pNumAsText                                                                         :7_4:UnDeeper:
******************* / term p/b:label to the left of line below, with EOL                                  :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / undeepers                                                                            :7_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers             :7_4:UnDeeper:
********************* / sameLine: success!                                                              :7_3:Is:
******************** \ undeepers has returned ()                                                         :7_3:Is:
******************** / matching EOL                                                                      :7_3:Is:
******************* / term p/notLabelTerm                                                                 :6_3:Other "a da:
******************** / term p/2:someIndentation expr p                                                   :6_3:Other "a da:
********************* / someIndentation                                                                 :6_3:Other "a da:
********************** / myindented: consuming GoDeeper                                                :6_3:Other "a da:
******************** / term p/3:plain p                                                                  :6_3:Other "a da:
********************* / pRelPred                                                                        :6_3:Other "a da:
********************** / slRelPred                                                                     :6_3:Other "a da:
*********************** / RPConstraint                                                                :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPBoolStructR                                                               :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPMT                                                                        :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slAKA                                                                   :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA base                                                          :6_3:Other "a da:
**************************** / slInlineDefMT                                                     :6_3:Other "a da:
***************************** / $*|                                                             :6_3:Other "a da:
****************************** / slMultiTerm                                                   :6_3:Other "a da:
******************************* / |:| some                                                    :6_3:Other "a da:
******************************** / |:| base parser                                           :6_3:Other "a da:
******************************** \ |:| base parser has returned ("a data breach",0)           :6_4:GoDeeper:
******************************** / |:| deeper                                                 :6_4:GoDeeper:
********************************* / |:| some GoDeeper                                        :6_4:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]   :6_6:Other "occu:
********************************* / |:| some                                                      :6_6:Other "occu:
********************************** / |:| base parser                                             :6_6:Other "occu:
********************************** \ |:| base parser has returned ("occurred",0)              :7_4:UnDeeper:
********************************** / |:| deeper                                               :7_4:UnDeeper:
*********************************** / |:| some GoDeeper                                      :7_4:UnDeeper:
********************************** / |:| noMore                                               :7_4:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                           :7_4:UnDeeper:
********************************* \ |:| some has returned (["occurred"],0)                     :7_4:UnDeeper:
******************************** \ |:| deeper has returned (["occurred"],3)                     :7_4:UnDeeper:
******************************* \ |:| some has returned (["a data breach","occurred"],3)         :7_4:UnDeeper:
****************************** \ slMultiTerm has returned (["a data breach","occurred"],3)        :7_4:UnDeeper:
***************************** \ $*| has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
***************************** / |>| calling $>>                                                    :7_4:UnDeeper:
****************************** / $>>                                                              :7_4:UnDeeper:
******************************* / $>>/recurse                                                    :7_4:UnDeeper:
******************************* / $>>/base                                                       :7_4:UnDeeper:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
*************************** \ slAKA base has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional akapart                                               :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / PAKA/akapart                                                 :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
********************************** / Aka Token                                                :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional akapart has returned (Nothing,0)                      :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional typically                                             :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / typically                                                    :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional typically has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / slAKA: proceeding after base and entityalias are retrieved ...           :7_4:UnDeeper:
************************** / pAKA: entityalias = Nothing                                              :7_4:UnDeeper:
************************* \ slAKA has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
*********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************** \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                     :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************* \ pRelPred has returned RPMT ["a data breach","occurred"]                         :7_3:Is:
******************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])          :7_3:Is:
******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])         :7_3:Is:
****************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                        :7_3:Is:
****************** / binary(Or)                                                                            :7_3:Is:
****************** / binary(And)                                                                           :7_3:Is:
****************** / binary(SetLess)                                                                       :7_3:Is:
****************** / binary(SetPlus)                                                                       :7_3:Is:
***************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** / myindented: consuming UnDeeper                                                          :7_3:Is:
*************** / term p/3:plain p                                                                           :6_3:GoDeeper:
**************** / pRelPred                                                                                 :6_3:GoDeeper:
***************** / slRelPred                                                                              :6_3:GoDeeper:
****************** / RPConstraint                                                                         :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPBoolStructR                                                                        :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPMT                                                                                 :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slAKA                                                                            :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA base                                                                   :6_3:GoDeeper:
*********************** / slInlineDefMT                                                              :6_3:GoDeeper:
************************ / $*|                                                                      :6_3:GoDeeper:
************************* / slMultiTerm                                                            :6_3:GoDeeper:
************************** / |:| some                                                             :6_3:GoDeeper:
*************************** / |:| base parser                                                    :6_3:GoDeeper:
**************************** / pNumAsText                                                       :6_3:GoDeeper:
************************ / slMultiTerm                                                              :6_3:GoDeeper:
************************* / |:| some                                                               :6_3:GoDeeper:
************************** / |:| base parser                                                      :6_3:GoDeeper:
*************************** / pNumAsText                                                         :6_3:GoDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                  :6_3:GoDeeper:
************* / someIndentation                                                                                :6_3:GoDeeper:
************** / myindented: consuming GoDeeper                                                               :6_3:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                          :6_3:Other "a da:
************** / manyIndentation/leaf?                                                                         :6_3:Other "a da:
*************** / term p                                                                                      :6_3:Other "a da:
**************** / term p/1a:label directly above                                                            :6_3:Other "a da:
***************** / $*|                                                                                     :6_3:Other "a da:
****************** / |:| some                                                                              :6_3:Other "a da:
******************* / |:| base parser                                                                     :6_3:Other "a da:
******************* \ |:| base parser has returned ("a data breach",0)                                     :6_4:GoDeeper:
******************* / |:| deeper                                                                           :6_4:GoDeeper:
******************** / |:| some GoDeeper                                                                  :6_4:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                             :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ |:| deeper has returned (["occurred"],3)                                               :7_4:UnDeeper:
****************** \ |:| some has returned (["a data breach","occurred"],3)                                   :7_4:UnDeeper:
****************** / pNumAsText                                                                               :7_4:UnDeeper:
**************** / term p/b:label to the left of line below, with EOL                                        :6_3:Other "a da:
***************** / |:| some                                                                                :6_3:Other "a da:
****************** / |:| base parser                                                                       :6_3:Other "a da:
****************** \ |:| base parser has returned ("a data breach",0)                                       :6_4:GoDeeper:
****************** / |:| deeper                                                                             :6_4:GoDeeper:
******************* / |:| some GoDeeper                                                                    :6_4:GoDeeper:
******************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :6_6:Other "occu:
******************* / |:| some                                                                                  :6_6:Other "occu:
******************** / |:| base parser                                                                         :6_6:Other "occu:
******************** \ |:| base parser has returned ("occurred",0)                                          :7_4:UnDeeper:
******************** / |:| deeper                                                                           :7_4:UnDeeper:
********************* / |:| some GoDeeper                                                                  :7_4:UnDeeper:
******************** / |:| noMore                                                                           :7_4:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                       :7_4:UnDeeper:
******************* \ |:| some has returned (["occurred"],0)                                                 :7_4:UnDeeper:
****************** \ |:| deeper has returned (["occurred"],3)                                                 :7_4:UnDeeper:
***************** \ |:| some has returned (["a data breach","occurred"],3)                                     :7_4:UnDeeper:
***************** / undeepers                                                                                  :7_4:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                   :7_4:UnDeeper:
****************** / sameLine: success!                                                                    :7_3:Is:
***************** \ undeepers has returned ()                                                               :7_3:Is:
***************** / matching EOL                                                                            :7_3:Is:
**************** / term p/notLabelTerm                                                                       :6_3:Other "a da:
***************** / term p/2:someIndentation expr p                                                         :6_3:Other "a da:
****************** / someIndentation                                                                       :6_3:Other "a da:
******************* / myindented: consuming GoDeeper                                                      :6_3:Other "a da:
***************** / term p/3:plain p                                                                        :6_3:Other "a da:
****************** / pRelPred                                                                              :6_3:Other "a da:
******************* / slRelPred                                                                           :6_3:Other "a da:
******************** / RPConstraint                                                                      :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPBoolStructR                                                                     :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPMT                                                                              :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slAKA                                                                         :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA base                                                                :6_3:Other "a da:
************************* / slInlineDefMT                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************** / slMultiTerm                                                           :6_3:Other "a da:
*************************** / |:| some                                                            :6_3:Other "a da:
**************************** / |:| base parser                                                   :6_3:Other "a da:
**************************** \ |:| base parser has returned ("a data breach",0)                   :6_4:GoDeeper:
**************************** / |:| deeper                                                         :6_4:GoDeeper:
***************************** / |:| some GoDeeper                                                :6_4:GoDeeper:
***************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]           :6_6:Other "occu:
***************************** / |:| some                                                              :6_6:Other "occu:
****************************** / |:| base parser                                                     :6_6:Other "occu:
****************************** \ |:| base parser has returned ("occurred",0)                      :7_4:UnDeeper:
****************************** / |:| deeper                                                       :7_4:UnDeeper:
******************************* / |:| some GoDeeper                                              :7_4:UnDeeper:
****************************** / |:| noMore                                                       :7_4:UnDeeper:
****************************** \ |:| noMore has returned ([],0)                                   :7_4:UnDeeper:
***************************** \ |:| some has returned (["occurred"],0)                             :7_4:UnDeeper:
**************************** \ |:| deeper has returned (["occurred"],3)                             :7_4:UnDeeper:
*************************** \ |:| some has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************** \ slMultiTerm has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************* \ slInlineDefMT has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************ \ slAKA base has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional akapart                                                     :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / PAKA/akapart                                                       :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
******************************* / Aka Token                                                      :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional akapart has returned (Nothing,0)                            :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional typically                                                   :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / typically                                                          :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional typically has returned (Nothing,0)                          :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / slAKA: proceeding after base and entityalias are retrieved ...                 :7_4:UnDeeper:
*********************** / pAKA: entityalias = Nothing                                                    :7_4:UnDeeper:
********************** \ slAKA has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
******************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                              :7_4:UnDeeper:
******************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                           :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
****************** \ pRelPred has returned RPMT ["a data breach","occurred"]                               :7_3:Is:
***************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])                :7_3:Is:
**************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])               :7_3:Is:
*************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                              :7_3:Is:
*************** / binary(Or)                                                                                  :7_3:Is:
*************** / binary(And)                                                                                 :7_3:Is:
*************** / binary(SetLess)                                                                             :7_3:Is:
*************** / binary(SetPlus)                                                                             :7_3:Is:
************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])                 :7_3:Is:
************** / myindented: consuming UnDeeper                                                                :7_3:Is:
********** / term p/3:plain p                                                                                   :6_2:GoDeeper:
*********** / pRelPred                                                                                         :6_2:GoDeeper:
************ / slRelPred                                                                                      :6_2:GoDeeper:
************* / RPConstraint                                                                                 :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPBoolStructR                                                                                :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPMT                                                                                         :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slAKA                                                                                    :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA base                                                                           :6_2:GoDeeper:
****************** / slInlineDefMT                                                                      :6_2:GoDeeper:
******************* / $*|                                                                              :6_2:GoDeeper:
******************** / slMultiTerm                                                                    :6_2:GoDeeper:
********************* / |:| some                                                                     :6_2:GoDeeper:
********************** / |:| base parser                                                            :6_2:GoDeeper:
*********************** / pNumAsText                                                               :6_2:GoDeeper:
******************* / slMultiTerm                                                                      :6_2:GoDeeper:
******************** / |:| some                                                                       :6_2:GoDeeper:
********************* / |:| base parser                                                              :6_2:GoDeeper:
********************** / pNumAsText                                                                 :6_2:GoDeeper:
******* / withPrePost                                                                                              :6_2:GoDeeper:
******** / |<* starting                                                                                           :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
******* / withPreOnly                                                                                              :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
****** / Otherwise                                                                                                 :6_1:If:
***** / pHornlike/ambitious                                                                                         :6_1:If:
****** / $>|                                                                                                       :6_1:If:
***** / pHornlike/someStructure                                                                                     :6_1:If:
****** / manyIndentation/leaf?                                                                                     :6_1:If:
******* / relPredNextlineWhen                                                                                     :6_1:If:
******** / pRelPred optIndentedTuple whenCase                                                                    :6_1:If:
********* / optIndentedTuple                                                                                    :6_1:If:
********** / optIndented                                                                                       :6_1:If:
*********** / pRelPred                                                                                        :6_1:If:
************ / slRelPred                                                                                     :6_1:If:
************* / RPConstraint                                                                                :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPBoolStructR                                                                               :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPMT                                                                                        :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slAKA                                                                                   :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slAKA base                                                                          :6_1:If:
****************** / slInlineDefMT                                                                     :6_1:If:
******************* / $*|                                                                             :6_1:If:
******************** / slMultiTerm                                                                   :6_1:If:
********************* / |:| some                                                                    :6_1:If:
********************** / |:| base parser                                                           :6_1:If:
*********************** / pNumAsText                                                              :6_1:If:
******************* / slMultiTerm                                                                     :6_1:If:
******************** / |:| some                                                                      :6_1:If:
********************* / |:| base parser                                                             :6_1:If:
********************** / pNumAsText                                                                :6_1:If:
******* / relPredSamelineWhen                                                                                     :6_1:If:
******** / $*|                                                                                                   :6_1:If:
********* / slRelPred                                                                                           :6_1:If:
********** / RPConstraint                                                                                      :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPBoolStructR                                                                                     :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPMT                                                                                              :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slAKA                                                                                         :6_1:If:
************* / $*|                                                                                         :6_1:If:
************** / slAKA base                                                                                :6_1:If:
*************** / slInlineDefMT                                                                           :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slMultiTerm                                                                         :6_1:If:
****************** / |:| some                                                                          :6_1:If:
******************* / |:| base parser                                                                 :6_1:If:
******************** / pNumAsText                                                                    :6_1:If:
**************** / slMultiTerm                                                                           :6_1:If:
***************** / |:| some                                                                            :6_1:If:
****************** / |:| base parser                                                                   :6_1:If:
******************* / pNumAsText                                                                      :6_1:If:
****** / manyIndentation/deeper; calling someIndentation                                                           :6_1:If:
******* / someIndentation                                                                                         :6_1:If:
******** / myindented: consuming GoDeeper                                                                        :6_1:If:
***** / pHornlike/ambitious                                                                                         :6_1:If:
****** / $>|                                                                                                       :6_1:If:
***** / pHornlike/someStructure                                                                                     :6_1:If:
****** / manyIndentation/leaf?                                                                                     :6_1:If:
******* / relPredNextlineWhen                                                                                     :6_1:If:
******** / pRelPred optIndentedTuple whenCase                                                                    :6_1:If:
********* / optIndentedTuple                                                                                    :6_1:If:
********** / optIndented                                                                                       :6_1:If:
*********** / pRelPred                                                                                        :6_1:If:
************ / slRelPred                                                                                     :6_1:If:
************* / RPConstraint                                                                                :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPBoolStructR                                                                               :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPMT                                                                                        :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slAKA                                                                                   :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slAKA base                                                                          :6_1:If:
****************** / slInlineDefMT                                                                     :6_1:If:
******************* / $*|                                                                             :6_1:If:
******************** / slMultiTerm                                                                   :6_1:If:
********************* / |:| some                                                                    :6_1:If:
********************** / |:| base parser                                                           :6_1:If:
*********************** / pNumAsText                                                              :6_1:If:
******************* / slMultiTerm                                                                     :6_1:If:
******************** / |:| some                                                                      :6_1:If:
********************* / |:| base parser                                                             :6_1:If:
********************** / pNumAsText                                                                :6_1:If:
******* / relPredSamelineWhen                                                                                     :6_1:If:
******** / $*|                                                                                                   :6_1:If:
********* / slRelPred                                                                                           :6_1:If:
********** / RPConstraint                                                                                      :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPBoolStructR                                                                                     :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPMT                                                                                              :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slAKA                                                                                         :6_1:If:
************* / $*|                                                                                         :6_1:If:
************** / slAKA base                                                                                :6_1:If:
*************** / slInlineDefMT                                                                           :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slMultiTerm                                                                         :6_1:If:
****************** / |:| some                                                                          :6_1:If:
******************* / |:| base parser                                                                 :6_1:If:
******************** / pNumAsText                                                                    :6_1:If:
**************** / slMultiTerm                                                                           :6_1:If:
***************** / |:| some                                                                            :6_1:If:
****************** / |:| base parser                                                                   :6_1:If:
******************* / pNumAsText                                                                      :6_1:If:
****** / manyIndentation/deeper; calling someIndentation                                                           :6_1:If:
******* / someIndentation                                                                                         :6_1:If:
******** / myindented: consuming GoDeeper                                                                        :6_1:If:
***** / pHornlike/givenLimb                                                                                         :6_1:If:
****** / preambleParamText:[Given]                                                                                 :6_1:If:
******* / $>|                                                                                                     :6_1:If:
***** / whenCase                                                                                                    :6_1:If:
****** / whenMeansIf                                                                                               :6_1:If:
****** \ whenMeansIf has returned If                                                                                :6_2:GoDeeper:
****** / pBSR                                                                                                       :6_2:GoDeeper:
******* / ppp inner                                                                                                :6_2:GoDeeper:
******** / term p                                                                                                 :6_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / |:| some                                                                                         :6_2:GoDeeper:
************ / |:| base parser                                                                                :6_2:GoDeeper:
************* / pNumAsText                                                                                   :6_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :6_2:GoDeeper:
********** / |:| some                                                                                           :6_2:GoDeeper:
*********** / |:| base parser                                                                                  :6_2:GoDeeper:
************ / pNumAsText                                                                                     :6_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :6_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :6_2:GoDeeper:
*********** / someIndentation                                                                                  :6_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :6_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                             :6_3:GoDeeper:
************ / manyIndentation/leaf?                                                                            :6_3:GoDeeper:
************* / term p                                                                                         :6_3:GoDeeper:
************** / term p/1a:label directly above                                                               :6_3:GoDeeper:
*************** / $*|                                                                                        :6_3:GoDeeper:
**************** / |:| some                                                                                 :6_3:GoDeeper:
***************** / |:| base parser                                                                        :6_3:GoDeeper:
****************** / pNumAsText                                                                           :6_3:GoDeeper:
************** / term p/b:label to the left of line below, with EOL                                           :6_3:GoDeeper:
*************** / |:| some                                                                                   :6_3:GoDeeper:
**************** / |:| base parser                                                                          :6_3:GoDeeper:
***************** / pNumAsText                                                                             :6_3:GoDeeper:
************** / term p/notLabelTerm                                                                          :6_3:GoDeeper:
*************** / term p/2:someIndentation expr p                                                            :6_3:GoDeeper:
**************** / someIndentation                                                                          :6_3:GoDeeper:
***************** / myindented: consuming GoDeeper                                                         :6_3:GoDeeper:
***************** \ myindented: consuming GoDeeper has returned GoDeeper                                    :6_3:Other "a da:
***************** / manyIndentation/leaf?                                                                   :6_3:Other "a da:
****************** / term p                                                                                :6_3:Other "a da:
******************* / term p/1a:label directly above                                                      :6_3:Other "a da:
******************** / $*|                                                                               :6_3:Other "a da:
********************* / |:| some                                                                        :6_3:Other "a da:
********************** / |:| base parser                                                               :6_3:Other "a da:
********************** \ |:| base parser has returned ("a data breach",0)                               :6_4:GoDeeper:
********************** / |:| deeper                                                                     :6_4:GoDeeper:
*********************** / |:| some GoDeeper                                                            :6_4:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                       :6_6:Other "occu:
*********************** / |:| some                                                                          :6_6:Other "occu:
************************ / |:| base parser                                                                 :6_6:Other "occu:
************************ \ |:| base parser has returned ("occurred",0)                                  :7_4:UnDeeper:
************************ / |:| deeper                                                                   :7_4:UnDeeper:
************************* / |:| some GoDeeper                                                          :7_4:UnDeeper:
************************ / |:| noMore                                                                   :7_4:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                               :7_4:UnDeeper:
*********************** \ |:| some has returned (["occurred"],0)                                         :7_4:UnDeeper:
********************** \ |:| deeper has returned (["occurred"],3)                                         :7_4:UnDeeper:
********************* \ |:| some has returned (["a data breach","occurred"],3)                             :7_4:UnDeeper:
********************* / pNumAsText                                                                         :7_4:UnDeeper:
******************* / term p/b:label to the left of line below, with EOL                                  :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / undeepers                                                                            :7_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers             :7_4:UnDeeper:
********************* / sameLine: success!                                                              :7_3:Is:
******************** \ undeepers has returned ()                                                         :7_3:Is:
******************** / matching EOL                                                                      :7_3:Is:
******************* / term p/notLabelTerm                                                                 :6_3:Other "a da:
******************** / term p/2:someIndentation expr p                                                   :6_3:Other "a da:
********************* / someIndentation                                                                 :6_3:Other "a da:
********************** / myindented: consuming GoDeeper                                                :6_3:Other "a da:
******************** / term p/3:plain p                                                                  :6_3:Other "a da:
********************* / pRelPred                                                                        :6_3:Other "a da:
********************** / slRelPred                                                                     :6_3:Other "a da:
*********************** / RPConstraint                                                                :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPBoolStructR                                                               :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPMT                                                                        :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slAKA                                                                   :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA base                                                          :6_3:Other "a da:
**************************** / slInlineDefMT                                                     :6_3:Other "a da:
***************************** / $*|                                                             :6_3:Other "a da:
****************************** / slMultiTerm                                                   :6_3:Other "a da:
******************************* / |:| some                                                    :6_3:Other "a da:
******************************** / |:| base parser                                           :6_3:Other "a da:
******************************** \ |:| base parser has returned ("a data breach",0)           :6_4:GoDeeper:
******************************** / |:| deeper                                                 :6_4:GoDeeper:
********************************* / |:| some GoDeeper                                        :6_4:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]   :6_6:Other "occu:
********************************* / |:| some                                                      :6_6:Other "occu:
********************************** / |:| base parser                                             :6_6:Other "occu:
********************************** \ |:| base parser has returned ("occurred",0)              :7_4:UnDeeper:
********************************** / |:| deeper                                               :7_4:UnDeeper:
*********************************** / |:| some GoDeeper                                      :7_4:UnDeeper:
********************************** / |:| noMore                                               :7_4:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                           :7_4:UnDeeper:
********************************* \ |:| some has returned (["occurred"],0)                     :7_4:UnDeeper:
******************************** \ |:| deeper has returned (["occurred"],3)                     :7_4:UnDeeper:
******************************* \ |:| some has returned (["a data breach","occurred"],3)         :7_4:UnDeeper:
****************************** \ slMultiTerm has returned (["a data breach","occurred"],3)        :7_4:UnDeeper:
***************************** \ $*| has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
***************************** / |>| calling $>>                                                    :7_4:UnDeeper:
****************************** / $>>                                                              :7_4:UnDeeper:
******************************* / $>>/recurse                                                    :7_4:UnDeeper:
******************************* / $>>/base                                                       :7_4:UnDeeper:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
*************************** \ slAKA base has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional akapart                                               :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / PAKA/akapart                                                 :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
********************************** / Aka Token                                                :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional akapart has returned (Nothing,0)                      :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional typically                                             :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / typically                                                    :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional typically has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / slAKA: proceeding after base and entityalias are retrieved ...           :7_4:UnDeeper:
************************** / pAKA: entityalias = Nothing                                              :7_4:UnDeeper:
************************* \ slAKA has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
*********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************** \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                     :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************* \ pRelPred has returned RPMT ["a data breach","occurred"]                         :7_3:Is:
******************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])          :7_3:Is:
******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])         :7_3:Is:
****************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                        :7_3:Is:
****************** / binary(Or)                                                                            :7_3:Is:
****************** / binary(And)                                                                           :7_3:Is:
****************** / binary(SetLess)                                                                       :7_3:Is:
****************** / binary(SetPlus)                                                                       :7_3:Is:
***************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** / myindented: consuming UnDeeper                                                          :7_3:Is:
*************** / term p/3:plain p                                                                           :6_3:GoDeeper:
**************** / pRelPred                                                                                 :6_3:GoDeeper:
***************** / slRelPred                                                                              :6_3:GoDeeper:
****************** / RPConstraint                                                                         :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPBoolStructR                                                                        :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPMT                                                                                 :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slAKA                                                                            :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA base                                                                   :6_3:GoDeeper:
*********************** / slInlineDefMT                                                              :6_3:GoDeeper:
************************ / $*|                                                                      :6_3:GoDeeper:
************************* / slMultiTerm                                                            :6_3:GoDeeper:
************************** / |:| some                                                             :6_3:GoDeeper:
*************************** / |:| base parser                                                    :6_3:GoDeeper:
**************************** / pNumAsText                                                       :6_3:GoDeeper:
************************ / slMultiTerm                                                              :6_3:GoDeeper:
************************* / |:| some                                                               :6_3:GoDeeper:
************************** / |:| base parser                                                      :6_3:GoDeeper:
*************************** / pNumAsText                                                         :6_3:GoDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                  :6_3:GoDeeper:
************* / someIndentation                                                                                :6_3:GoDeeper:
************** / myindented: consuming GoDeeper                                                               :6_3:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                          :6_3:Other "a da:
************** / manyIndentation/leaf?                                                                         :6_3:Other "a da:
*************** / term p                                                                                      :6_3:Other "a da:
**************** / term p/1a:label directly above                                                            :6_3:Other "a da:
***************** / $*|                                                                                     :6_3:Other "a da:
****************** / |:| some                                                                              :6_3:Other "a da:
******************* / |:| base parser                                                                     :6_3:Other "a da:
******************* \ |:| base parser has returned ("a data breach",0)                                     :6_4:GoDeeper:
******************* / |:| deeper                                                                           :6_4:GoDeeper:
******************** / |:| some GoDeeper                                                                  :6_4:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                             :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ |:| deeper has returned (["occurred"],3)                                               :7_4:UnDeeper:
****************** \ |:| some has returned (["a data breach","occurred"],3)                                   :7_4:UnDeeper:
****************** / pNumAsText                                                                               :7_4:UnDeeper:
**************** / term p/b:label to the left of line below, with EOL                                        :6_3:Other "a da:
***************** / |:| some                                                                                :6_3:Other "a da:
****************** / |:| base parser                                                                       :6_3:Other "a da:
****************** \ |:| base parser has returned ("a data breach",0)                                       :6_4:GoDeeper:
****************** / |:| deeper                                                                             :6_4:GoDeeper:
******************* / |:| some GoDeeper                                                                    :6_4:GoDeeper:
******************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :6_6:Other "occu:
******************* / |:| some                                                                                  :6_6:Other "occu:
******************** / |:| base parser                                                                         :6_6:Other "occu:
******************** \ |:| base parser has returned ("occurred",0)                                          :7_4:UnDeeper:
******************** / |:| deeper                                                                           :7_4:UnDeeper:
********************* / |:| some GoDeeper                                                                  :7_4:UnDeeper:
******************** / |:| noMore                                                                           :7_4:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                       :7_4:UnDeeper:
******************* \ |:| some has returned (["occurred"],0)                                                 :7_4:UnDeeper:
****************** \ |:| deeper has returned (["occurred"],3)                                                 :7_4:UnDeeper:
***************** \ |:| some has returned (["a data breach","occurred"],3)                                     :7_4:UnDeeper:
***************** / undeepers                                                                                  :7_4:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                   :7_4:UnDeeper:
****************** / sameLine: success!                                                                    :7_3:Is:
***************** \ undeepers has returned ()                                                               :7_3:Is:
***************** / matching EOL                                                                            :7_3:Is:
**************** / term p/notLabelTerm                                                                       :6_3:Other "a da:
***************** / term p/2:someIndentation expr p                                                         :6_3:Other "a da:
****************** / someIndentation                                                                       :6_3:Other "a da:
******************* / myindented: consuming GoDeeper                                                      :6_3:Other "a da:
***************** / term p/3:plain p                                                                        :6_3:Other "a da:
****************** / pRelPred                                                                              :6_3:Other "a da:
******************* / slRelPred                                                                           :6_3:Other "a da:
******************** / RPConstraint                                                                      :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPBoolStructR                                                                     :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPMT                                                                              :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slAKA                                                                         :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA base                                                                :6_3:Other "a da:
************************* / slInlineDefMT                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************** / slMultiTerm                                                           :6_3:Other "a da:
*************************** / |:| some                                                            :6_3:Other "a da:
**************************** / |:| base parser                                                   :6_3:Other "a da:
**************************** \ |:| base parser has returned ("a data breach",0)                   :6_4:GoDeeper:
**************************** / |:| deeper                                                         :6_4:GoDeeper:
***************************** / |:| some GoDeeper                                                :6_4:GoDeeper:
***************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]           :6_6:Other "occu:
***************************** / |:| some                                                              :6_6:Other "occu:
****************************** / |:| base parser                                                     :6_6:Other "occu:
****************************** \ |:| base parser has returned ("occurred",0)                      :7_4:UnDeeper:
****************************** / |:| deeper                                                       :7_4:UnDeeper:
******************************* / |:| some GoDeeper                                              :7_4:UnDeeper:
****************************** / |:| noMore                                                       :7_4:UnDeeper:
****************************** \ |:| noMore has returned ([],0)                                   :7_4:UnDeeper:
***************************** \ |:| some has returned (["occurred"],0)                             :7_4:UnDeeper:
**************************** \ |:| deeper has returned (["occurred"],3)                             :7_4:UnDeeper:
*************************** \ |:| some has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************** \ slMultiTerm has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************* \ slInlineDefMT has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************ \ slAKA base has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional akapart                                                     :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / PAKA/akapart                                                       :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
******************************* / Aka Token                                                      :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional akapart has returned (Nothing,0)                            :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional typically                                                   :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / typically                                                          :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional typically has returned (Nothing,0)                          :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / slAKA: proceeding after base and entityalias are retrieved ...                 :7_4:UnDeeper:
*********************** / pAKA: entityalias = Nothing                                                    :7_4:UnDeeper:
********************** \ slAKA has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
******************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                              :7_4:UnDeeper:
******************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                           :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
****************** \ pRelPred has returned RPMT ["a data breach","occurred"]                               :7_3:Is:
***************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])                :7_3:Is:
**************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])               :7_3:Is:
*************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                              :7_3:Is:
*************** / binary(Or)                                                                                  :7_3:Is:
*************** / binary(And)                                                                                 :7_3:Is:
*************** / binary(SetLess)                                                                             :7_3:Is:
*************** / binary(SetPlus)                                                                             :7_3:Is:
************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])                 :7_3:Is:
************** / myindented: consuming UnDeeper                                                                :7_3:Is:
********** / term p/3:plain p                                                                                   :6_2:GoDeeper:
*********** / pRelPred                                                                                         :6_2:GoDeeper:
************ / slRelPred                                                                                      :6_2:GoDeeper:
************* / RPConstraint                                                                                 :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPBoolStructR                                                                                :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPMT                                                                                         :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slAKA                                                                                    :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA base                                                                           :6_2:GoDeeper:
****************** / slInlineDefMT                                                                      :6_2:GoDeeper:
******************* / $*|                                                                              :6_2:GoDeeper:
******************** / slMultiTerm                                                                    :6_2:GoDeeper:
********************* / |:| some                                                                     :6_2:GoDeeper:
********************** / |:| base parser                                                            :6_2:GoDeeper:
*********************** / pNumAsText                                                               :6_2:GoDeeper:
******************* / slMultiTerm                                                                      :6_2:GoDeeper:
******************** / |:| some                                                                       :6_2:GoDeeper:
********************* / |:| base parser                                                              :6_2:GoDeeper:
********************** / pNumAsText                                                                 :6_2:GoDeeper:
******* / withPrePost                                                                                              :6_2:GoDeeper:
******** / |<* starting                                                                                           :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
******* / withPreOnly                                                                                              :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
****** / Otherwise                                                                                                 :6_1:If:
***** / pHornlike/uponLimb                                                                                          :6_1:If:
****** / preambleParamText:[Upon]                                                                                  :6_1:If:
******* / $>|                                                                                                     :6_1:If:
***** / whenCase                                                                                                    :6_1:If:
****** / whenMeansIf                                                                                               :6_1:If:
****** \ whenMeansIf has returned If                                                                                :6_2:GoDeeper:
****** / pBSR                                                                                                       :6_2:GoDeeper:
******* / ppp inner                                                                                                :6_2:GoDeeper:
******** / term p                                                                                                 :6_2:GoDeeper:
********* / term p/1a:label directly above                                                                       :6_2:GoDeeper:
********** / $*|                                                                                                :6_2:GoDeeper:
*********** / |:| some                                                                                         :6_2:GoDeeper:
************ / |:| base parser                                                                                :6_2:GoDeeper:
************* / pNumAsText                                                                                   :6_2:GoDeeper:
********* / term p/b:label to the left of line below, with EOL                                                   :6_2:GoDeeper:
********** / |:| some                                                                                           :6_2:GoDeeper:
*********** / |:| base parser                                                                                  :6_2:GoDeeper:
************ / pNumAsText                                                                                     :6_2:GoDeeper:
********* / term p/notLabelTerm                                                                                  :6_2:GoDeeper:
********** / term p/2:someIndentation expr p                                                                    :6_2:GoDeeper:
*********** / someIndentation                                                                                  :6_2:GoDeeper:
************ / myindented: consuming GoDeeper                                                                 :6_2:GoDeeper:
************ \ myindented: consuming GoDeeper has returned GoDeeper                                             :6_3:GoDeeper:
************ / manyIndentation/leaf?                                                                            :6_3:GoDeeper:
************* / term p                                                                                         :6_3:GoDeeper:
************** / term p/1a:label directly above                                                               :6_3:GoDeeper:
*************** / $*|                                                                                        :6_3:GoDeeper:
**************** / |:| some                                                                                 :6_3:GoDeeper:
***************** / |:| base parser                                                                        :6_3:GoDeeper:
****************** / pNumAsText                                                                           :6_3:GoDeeper:
************** / term p/b:label to the left of line below, with EOL                                           :6_3:GoDeeper:
*************** / |:| some                                                                                   :6_3:GoDeeper:
**************** / |:| base parser                                                                          :6_3:GoDeeper:
***************** / pNumAsText                                                                             :6_3:GoDeeper:
************** / term p/notLabelTerm                                                                          :6_3:GoDeeper:
*************** / term p/2:someIndentation expr p                                                            :6_3:GoDeeper:
**************** / someIndentation                                                                          :6_3:GoDeeper:
***************** / myindented: consuming GoDeeper                                                         :6_3:GoDeeper:
***************** \ myindented: consuming GoDeeper has returned GoDeeper                                    :6_3:Other "a da:
***************** / manyIndentation/leaf?                                                                   :6_3:Other "a da:
****************** / term p                                                                                :6_3:Other "a da:
******************* / term p/1a:label directly above                                                      :6_3:Other "a da:
******************** / $*|                                                                               :6_3:Other "a da:
********************* / |:| some                                                                        :6_3:Other "a da:
********************** / |:| base parser                                                               :6_3:Other "a da:
********************** \ |:| base parser has returned ("a data breach",0)                               :6_4:GoDeeper:
********************** / |:| deeper                                                                     :6_4:GoDeeper:
*********************** / |:| some GoDeeper                                                            :6_4:GoDeeper:
*********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                       :6_6:Other "occu:
*********************** / |:| some                                                                          :6_6:Other "occu:
************************ / |:| base parser                                                                 :6_6:Other "occu:
************************ \ |:| base parser has returned ("occurred",0)                                  :7_4:UnDeeper:
************************ / |:| deeper                                                                   :7_4:UnDeeper:
************************* / |:| some GoDeeper                                                          :7_4:UnDeeper:
************************ / |:| noMore                                                                   :7_4:UnDeeper:
************************ \ |:| noMore has returned ([],0)                                               :7_4:UnDeeper:
*********************** \ |:| some has returned (["occurred"],0)                                         :7_4:UnDeeper:
********************** \ |:| deeper has returned (["occurred"],3)                                         :7_4:UnDeeper:
********************* \ |:| some has returned (["a data breach","occurred"],3)                             :7_4:UnDeeper:
********************* / pNumAsText                                                                         :7_4:UnDeeper:
******************* / term p/b:label to the left of line below, with EOL                                  :6_3:Other "a da:
******************** / |:| some                                                                          :6_3:Other "a da:
********************* / |:| base parser                                                                 :6_3:Other "a da:
********************* \ |:| base parser has returned ("a data breach",0)                                 :6_4:GoDeeper:
********************* / |:| deeper                                                                       :6_4:GoDeeper:
********************** / |:| some GoDeeper                                                              :6_4:GoDeeper:
********************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                         :6_6:Other "occu:
********************** / |:| some                                                                            :6_6:Other "occu:
*********************** / |:| base parser                                                                   :6_6:Other "occu:
*********************** \ |:| base parser has returned ("occurred",0)                                    :7_4:UnDeeper:
*********************** / |:| deeper                                                                     :7_4:UnDeeper:
************************ / |:| some GoDeeper                                                            :7_4:UnDeeper:
*********************** / |:| noMore                                                                     :7_4:UnDeeper:
*********************** \ |:| noMore has returned ([],0)                                                 :7_4:UnDeeper:
********************** \ |:| some has returned (["occurred"],0)                                           :7_4:UnDeeper:
********************* \ |:| deeper has returned (["occurred"],3)                                           :7_4:UnDeeper:
******************** \ |:| some has returned (["a data breach","occurred"],3)                               :7_4:UnDeeper:
******************** / undeepers                                                                            :7_4:UnDeeper:
********************* / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers             :7_4:UnDeeper:
********************* / sameLine: success!                                                              :7_3:Is:
******************** \ undeepers has returned ()                                                         :7_3:Is:
******************** / matching EOL                                                                      :7_3:Is:
******************* / term p/notLabelTerm                                                                 :6_3:Other "a da:
******************** / term p/2:someIndentation expr p                                                   :6_3:Other "a da:
********************* / someIndentation                                                                 :6_3:Other "a da:
********************** / myindented: consuming GoDeeper                                                :6_3:Other "a da:
******************** / term p/3:plain p                                                                  :6_3:Other "a da:
********************* / pRelPred                                                                        :6_3:Other "a da:
********************** / slRelPred                                                                     :6_3:Other "a da:
*********************** / RPConstraint                                                                :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPBoolStructR                                                               :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slMultiTerm                                                             :6_3:Other "a da:
************************** / |:| some                                                              :6_3:Other "a da:
*************************** / |:| base parser                                                     :6_3:Other "a da:
*************************** \ |:| base parser has returned ("a data breach",0)                     :6_4:GoDeeper:
*************************** / |:| deeper                                                           :6_4:GoDeeper:
**************************** / |:| some GoDeeper                                                  :6_4:GoDeeper:
**************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]             :6_6:Other "occu:
**************************** / |:| some                                                                :6_6:Other "occu:
***************************** / |:| base parser                                                       :6_6:Other "occu:
***************************** \ |:| base parser has returned ("occurred",0)                        :7_4:UnDeeper:
***************************** / |:| deeper                                                         :7_4:UnDeeper:
****************************** / |:| some GoDeeper                                                :7_4:UnDeeper:
***************************** / |:| noMore                                                         :7_4:UnDeeper:
***************************** \ |:| noMore has returned ([],0)                                     :7_4:UnDeeper:
**************************** \ |:| some has returned (["occurred"],0)                               :7_4:UnDeeper:
*************************** \ |:| deeper has returned (["occurred"],3)                               :7_4:UnDeeper:
************************** \ |:| some has returned (["a data breach","occurred"],3)                   :7_4:UnDeeper:
************************* \ slMultiTerm has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
************************ / |>| calling $>>                                                              :7_4:UnDeeper:
************************* / $>>                                                                        :7_4:UnDeeper:
************************** / $>>/recurse                                                              :7_4:UnDeeper:
************************** / $>>/base                                                                 :7_4:UnDeeper:
*********************** / RPMT                                                                        :6_3:Other "a da:
************************ / $*|                                                                       :6_3:Other "a da:
************************* / slAKA                                                                   :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slAKA base                                                          :6_3:Other "a da:
**************************** / slInlineDefMT                                                     :6_3:Other "a da:
***************************** / $*|                                                             :6_3:Other "a da:
****************************** / slMultiTerm                                                   :6_3:Other "a da:
******************************* / |:| some                                                    :6_3:Other "a da:
******************************** / |:| base parser                                           :6_3:Other "a da:
******************************** \ |:| base parser has returned ("a data breach",0)           :6_4:GoDeeper:
******************************** / |:| deeper                                                 :6_4:GoDeeper:
********************************* / |:| some GoDeeper                                        :6_4:GoDeeper:
********************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]   :6_6:Other "occu:
********************************* / |:| some                                                      :6_6:Other "occu:
********************************** / |:| base parser                                             :6_6:Other "occu:
********************************** \ |:| base parser has returned ("occurred",0)              :7_4:UnDeeper:
********************************** / |:| deeper                                               :7_4:UnDeeper:
*********************************** / |:| some GoDeeper                                      :7_4:UnDeeper:
********************************** / |:| noMore                                               :7_4:UnDeeper:
********************************** \ |:| noMore has returned ([],0)                           :7_4:UnDeeper:
********************************* \ |:| some has returned (["occurred"],0)                     :7_4:UnDeeper:
******************************** \ |:| deeper has returned (["occurred"],3)                     :7_4:UnDeeper:
******************************* \ |:| some has returned (["a data breach","occurred"],3)         :7_4:UnDeeper:
****************************** \ slMultiTerm has returned (["a data breach","occurred"],3)        :7_4:UnDeeper:
***************************** \ $*| has returned (["a data breach","occurred"],3)                  :7_4:UnDeeper:
***************************** / |>| calling $>>                                                    :7_4:UnDeeper:
****************************** / $>>                                                              :7_4:UnDeeper:
******************************* / $>>/recurse                                                    :7_4:UnDeeper:
******************************* / $>>/base                                                       :7_4:UnDeeper:
***************************** / slMultiTerm                                                     :6_3:Other "a da:
****************************** / |:| some                                                      :6_3:Other "a da:
******************************* / |:| base parser                                             :6_3:Other "a da:
******************************* \ |:| base parser has returned ("a data breach",0)             :6_4:GoDeeper:
******************************* / |:| deeper                                                   :6_4:GoDeeper:
******************************** / |:| some GoDeeper                                          :6_4:GoDeeper:
******************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]     :6_6:Other "occu:
******************************** / |:| some                                                        :6_6:Other "occu:
********************************* / |:| base parser                                               :6_6:Other "occu:
********************************* \ |:| base parser has returned ("occurred",0)                :7_4:UnDeeper:
********************************* / |:| deeper                                                 :7_4:UnDeeper:
********************************** / |:| some GoDeeper                                        :7_4:UnDeeper:
********************************* / |:| noMore                                                 :7_4:UnDeeper:
********************************* \ |:| noMore has returned ([],0)                             :7_4:UnDeeper:
******************************** \ |:| some has returned (["occurred"],0)                       :7_4:UnDeeper:
******************************* \ |:| deeper has returned (["occurred"],3)                       :7_4:UnDeeper:
****************************** \ |:| some has returned (["a data breach","occurred"],3)           :7_4:UnDeeper:
***************************** \ slMultiTerm has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
**************************** \ slInlineDefMT has returned (["a data breach","occurred"],3)          :7_4:UnDeeper:
*************************** \ slAKA base has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional akapart                                               :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / PAKA/akapart                                                 :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
********************************** / Aka Token                                                :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional akapart has returned (Nothing,0)                      :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / |>>                                                                      :7_4:UnDeeper:
*************************** / |>>/recurse                                                            :7_4:UnDeeper:
*************************** / |>>/base                                                               :7_4:UnDeeper:
**************************** / slAKA optional typically                                             :7_4:UnDeeper:
***************************** / |?| optional something                                             :7_4:UnDeeper:
****************************** / |>>                                                              :7_4:UnDeeper:
******************************* / |>>/recurse                                                    :7_4:UnDeeper:
******************************* / |>>/base                                                       :7_4:UnDeeper:
******************************** / typically                                                    :7_4:UnDeeper:
********************************* / $>|                                                        :7_4:UnDeeper:
***************************** \ |?| optional something has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** \ slAKA optional typically has returned (Nothing,0)                    :7_4:UnDeeper:
**************************** / |>>/base got Nothing                                                 :7_4:UnDeeper:
*************************** \ |>>/base has returned (Nothing,0)                                      :7_4:UnDeeper:
************************** \ |>> has returned (Nothing,0)                                             :7_4:UnDeeper:
************************** / slAKA: proceeding after base and entityalias are retrieved ...           :7_4:UnDeeper:
************************** / pAKA: entityalias = Nothing                                              :7_4:UnDeeper:
************************* \ slAKA has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************ \ $*| has returned (["a data breach","occurred"],3)                            :7_4:UnDeeper:
*********************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************** \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                     :7_4:UnDeeper:
********************** / undeepers                                                                        :7_4:UnDeeper:
*********************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers         :7_4:UnDeeper:
*********************** / sameLine: success!                                                          :7_3:Is:
********************** \ undeepers has returned ()                                                     :7_3:Is:
********************* \ pRelPred has returned RPMT ["a data breach","occurred"]                         :7_3:Is:
******************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])          :7_3:Is:
******************* \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])         :7_3:Is:
****************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                        :7_3:Is:
****************** / binary(Or)                                                                            :7_3:Is:
****************** / binary(And)                                                                           :7_3:Is:
****************** / binary(SetLess)                                                                       :7_3:Is:
****************** / binary(SetPlus)                                                                       :7_3:Is:
***************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])           :7_3:Is:
***************** / myindented: consuming UnDeeper                                                          :7_3:Is:
*************** / term p/3:plain p                                                                           :6_3:GoDeeper:
**************** / pRelPred                                                                                 :6_3:GoDeeper:
***************** / slRelPred                                                                              :6_3:GoDeeper:
****************** / RPConstraint                                                                         :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPBoolStructR                                                                        :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slMultiTerm                                                                      :6_3:GoDeeper:
********************* / |:| some                                                                       :6_3:GoDeeper:
********************** / |:| base parser                                                              :6_3:GoDeeper:
*********************** / pNumAsText                                                                 :6_3:GoDeeper:
****************** / RPMT                                                                                 :6_3:GoDeeper:
******************* / $*|                                                                                :6_3:GoDeeper:
******************** / slAKA                                                                            :6_3:GoDeeper:
********************* / $*|                                                                            :6_3:GoDeeper:
********************** / slAKA base                                                                   :6_3:GoDeeper:
*********************** / slInlineDefMT                                                              :6_3:GoDeeper:
************************ / $*|                                                                      :6_3:GoDeeper:
************************* / slMultiTerm                                                            :6_3:GoDeeper:
************************** / |:| some                                                             :6_3:GoDeeper:
*************************** / |:| base parser                                                    :6_3:GoDeeper:
**************************** / pNumAsText                                                       :6_3:GoDeeper:
************************ / slMultiTerm                                                              :6_3:GoDeeper:
************************* / |:| some                                                               :6_3:GoDeeper:
************************** / |:| base parser                                                      :6_3:GoDeeper:
*************************** / pNumAsText                                                         :6_3:GoDeeper:
************ / manyIndentation/deeper; calling someIndentation                                                  :6_3:GoDeeper:
************* / someIndentation                                                                                :6_3:GoDeeper:
************** / myindented: consuming GoDeeper                                                               :6_3:GoDeeper:
************** \ myindented: consuming GoDeeper has returned GoDeeper                                          :6_3:Other "a da:
************** / manyIndentation/leaf?                                                                         :6_3:Other "a da:
*************** / term p                                                                                      :6_3:Other "a da:
**************** / term p/1a:label directly above                                                            :6_3:Other "a da:
***************** / $*|                                                                                     :6_3:Other "a da:
****************** / |:| some                                                                              :6_3:Other "a da:
******************* / |:| base parser                                                                     :6_3:Other "a da:
******************* \ |:| base parser has returned ("a data breach",0)                                     :6_4:GoDeeper:
******************* / |:| deeper                                                                           :6_4:GoDeeper:
******************** / |:| some GoDeeper                                                                  :6_4:GoDeeper:
******************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                             :6_6:Other "occu:
******************** / |:| some                                                                                :6_6:Other "occu:
********************* / |:| base parser                                                                       :6_6:Other "occu:
********************* \ |:| base parser has returned ("occurred",0)                                        :7_4:UnDeeper:
********************* / |:| deeper                                                                         :7_4:UnDeeper:
********************** / |:| some GoDeeper                                                                :7_4:UnDeeper:
********************* / |:| noMore                                                                         :7_4:UnDeeper:
********************* \ |:| noMore has returned ([],0)                                                     :7_4:UnDeeper:
******************** \ |:| some has returned (["occurred"],0)                                               :7_4:UnDeeper:
******************* \ |:| deeper has returned (["occurred"],3)                                               :7_4:UnDeeper:
****************** \ |:| some has returned (["a data breach","occurred"],3)                                   :7_4:UnDeeper:
****************** / pNumAsText                                                                               :7_4:UnDeeper:
**************** / term p/b:label to the left of line below, with EOL                                        :6_3:Other "a da:
***************** / |:| some                                                                                :6_3:Other "a da:
****************** / |:| base parser                                                                       :6_3:Other "a da:
****************** \ |:| base parser has returned ("a data breach",0)                                       :6_4:GoDeeper:
****************** / |:| deeper                                                                             :6_4:GoDeeper:
******************* / |:| some GoDeeper                                                                    :6_4:GoDeeper:
******************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                               :6_6:Other "occu:
******************* / |:| some                                                                                  :6_6:Other "occu:
******************** / |:| base parser                                                                         :6_6:Other "occu:
******************** \ |:| base parser has returned ("occurred",0)                                          :7_4:UnDeeper:
******************** / |:| deeper                                                                           :7_4:UnDeeper:
********************* / |:| some GoDeeper                                                                  :7_4:UnDeeper:
******************** / |:| noMore                                                                           :7_4:UnDeeper:
******************** \ |:| noMore has returned ([],0)                                                       :7_4:UnDeeper:
******************* \ |:| some has returned (["occurred"],0)                                                 :7_4:UnDeeper:
****************** \ |:| deeper has returned (["occurred"],3)                                                 :7_4:UnDeeper:
***************** \ |:| some has returned (["a data breach","occurred"],3)                                     :7_4:UnDeeper:
***************** / undeepers                                                                                  :7_4:UnDeeper:
****************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers                   :7_4:UnDeeper:
****************** / sameLine: success!                                                                    :7_3:Is:
***************** \ undeepers has returned ()                                                               :7_3:Is:
***************** / matching EOL                                                                            :7_3:Is:
**************** / term p/notLabelTerm                                                                       :6_3:Other "a da:
***************** / term p/2:someIndentation expr p                                                         :6_3:Other "a da:
****************** / someIndentation                                                                       :6_3:Other "a da:
******************* / myindented: consuming GoDeeper                                                      :6_3:Other "a da:
***************** / term p/3:plain p                                                                        :6_3:Other "a da:
****************** / pRelPred                                                                              :6_3:Other "a da:
******************* / slRelPred                                                                           :6_3:Other "a da:
******************** / RPConstraint                                                                      :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPBoolStructR                                                                     :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slMultiTerm                                                                   :6_3:Other "a da:
*********************** / |:| some                                                                    :6_3:Other "a da:
************************ / |:| base parser                                                           :6_3:Other "a da:
************************ \ |:| base parser has returned ("a data breach",0)                           :6_4:GoDeeper:
************************ / |:| deeper                                                                 :6_4:GoDeeper:
************************* / |:| some GoDeeper                                                        :6_4:GoDeeper:
************************* \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                   :6_6:Other "occu:
************************* / |:| some                                                                      :6_6:Other "occu:
************************** / |:| base parser                                                             :6_6:Other "occu:
************************** \ |:| base parser has returned ("occurred",0)                              :7_4:UnDeeper:
************************** / |:| deeper                                                               :7_4:UnDeeper:
*************************** / |:| some GoDeeper                                                      :7_4:UnDeeper:
************************** / |:| noMore                                                               :7_4:UnDeeper:
************************** \ |:| noMore has returned ([],0)                                           :7_4:UnDeeper:
************************* \ |:| some has returned (["occurred"],0)                                     :7_4:UnDeeper:
************************ \ |:| deeper has returned (["occurred"],3)                                     :7_4:UnDeeper:
*********************** \ |:| some has returned (["a data breach","occurred"],3)                         :7_4:UnDeeper:
********************** \ slMultiTerm has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
********************* / |>| calling $>>                                                                    :7_4:UnDeeper:
********************** / $>>                                                                              :7_4:UnDeeper:
*********************** / $>>/recurse                                                                    :7_4:UnDeeper:
*********************** / $>>/base                                                                       :7_4:UnDeeper:
******************** / RPMT                                                                              :6_3:Other "a da:
********************* / $*|                                                                             :6_3:Other "a da:
********************** / slAKA                                                                         :6_3:Other "a da:
*********************** / $*|                                                                         :6_3:Other "a da:
************************ / slAKA base                                                                :6_3:Other "a da:
************************* / slInlineDefMT                                                           :6_3:Other "a da:
************************** / $*|                                                                   :6_3:Other "a da:
*************************** / slMultiTerm                                                         :6_3:Other "a da:
**************************** / |:| some                                                          :6_3:Other "a da:
***************************** / |:| base parser                                                 :6_3:Other "a da:
***************************** \ |:| base parser has returned ("a data breach",0)                 :6_4:GoDeeper:
***************************** / |:| deeper                                                       :6_4:GoDeeper:
****************************** / |:| some GoDeeper                                              :6_4:GoDeeper:
****************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]         :6_6:Other "occu:
****************************** / |:| some                                                            :6_6:Other "occu:
******************************* / |:| base parser                                                   :6_6:Other "occu:
******************************* \ |:| base parser has returned ("occurred",0)                    :7_4:UnDeeper:
******************************* / |:| deeper                                                     :7_4:UnDeeper:
******************************** / |:| some GoDeeper                                            :7_4:UnDeeper:
******************************* / |:| noMore                                                     :7_4:UnDeeper:
******************************* \ |:| noMore has returned ([],0)                                 :7_4:UnDeeper:
****************************** \ |:| some has returned (["occurred"],0)                           :7_4:UnDeeper:
***************************** \ |:| deeper has returned (["occurred"],3)                           :7_4:UnDeeper:
**************************** \ |:| some has returned (["a data breach","occurred"],3)               :7_4:UnDeeper:
*************************** \ slMultiTerm has returned (["a data breach","occurred"],3)              :7_4:UnDeeper:
************************** \ $*| has returned (["a data breach","occurred"],3)                        :7_4:UnDeeper:
************************** / |>| calling $>>                                                          :7_4:UnDeeper:
*************************** / $>>                                                                    :7_4:UnDeeper:
**************************** / $>>/recurse                                                          :7_4:UnDeeper:
**************************** / $>>/base                                                             :7_4:UnDeeper:
************************** / slMultiTerm                                                           :6_3:Other "a da:
*************************** / |:| some                                                            :6_3:Other "a da:
**************************** / |:| base parser                                                   :6_3:Other "a da:
**************************** \ |:| base parser has returned ("a data breach",0)                   :6_4:GoDeeper:
**************************** / |:| deeper                                                         :6_4:GoDeeper:
***************************** / |:| some GoDeeper                                                :6_4:GoDeeper:
***************************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]           :6_6:Other "occu:
***************************** / |:| some                                                              :6_6:Other "occu:
****************************** / |:| base parser                                                     :6_6:Other "occu:
****************************** \ |:| base parser has returned ("occurred",0)                      :7_4:UnDeeper:
****************************** / |:| deeper                                                       :7_4:UnDeeper:
******************************* / |:| some GoDeeper                                              :7_4:UnDeeper:
****************************** / |:| noMore                                                       :7_4:UnDeeper:
****************************** \ |:| noMore has returned ([],0)                                   :7_4:UnDeeper:
***************************** \ |:| some has returned (["occurred"],0)                             :7_4:UnDeeper:
**************************** \ |:| deeper has returned (["occurred"],3)                             :7_4:UnDeeper:
*************************** \ |:| some has returned (["a data breach","occurred"],3)                 :7_4:UnDeeper:
************************** \ slMultiTerm has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************* \ slInlineDefMT has returned (["a data breach","occurred"],3)                :7_4:UnDeeper:
************************ \ slAKA base has returned (["a data breach","occurred"],3)                     :7_4:UnDeeper:
*********************** \ $*| has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional akapart                                                     :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / PAKA/akapart                                                       :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
******************************* / Aka Token                                                      :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional akapart has returned (Nothing,0)                            :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / |>>                                                                            :7_4:UnDeeper:
************************ / |>>/recurse                                                                  :7_4:UnDeeper:
************************ / |>>/base                                                                     :7_4:UnDeeper:
************************* / slAKA optional typically                                                   :7_4:UnDeeper:
************************** / |?| optional something                                                   :7_4:UnDeeper:
*************************** / |>>                                                                    :7_4:UnDeeper:
**************************** / |>>/recurse                                                          :7_4:UnDeeper:
**************************** / |>>/base                                                             :7_4:UnDeeper:
***************************** / typically                                                          :7_4:UnDeeper:
****************************** / $>|                                                              :7_4:UnDeeper:
************************** \ |?| optional something has returned (Nothing,0)                          :7_4:UnDeeper:
************************* \ slAKA optional typically has returned (Nothing,0)                          :7_4:UnDeeper:
************************* / |>>/base got Nothing                                                       :7_4:UnDeeper:
************************ \ |>>/base has returned (Nothing,0)                                            :7_4:UnDeeper:
*********************** \ |>> has returned (Nothing,0)                                                   :7_4:UnDeeper:
*********************** / slAKA: proceeding after base and entityalias are retrieved ...                 :7_4:UnDeeper:
*********************** / pAKA: entityalias = Nothing                                                    :7_4:UnDeeper:
********************** \ slAKA has returned (["a data breach","occurred"],3)                              :7_4:UnDeeper:
********************* \ $*| has returned (["a data breach","occurred"],3)                                  :7_4:UnDeeper:
******************** \ RPMT has returned (RPMT ["a data breach","occurred"],3)                              :7_4:UnDeeper:
******************* \ slRelPred has returned (RPMT ["a data breach","occurred"],3)                           :7_4:UnDeeper:
******************* / undeepers                                                                              :7_4:UnDeeper:
******************** / sameLine/undeepers: reached end of line; now need to clear 3 UnDeepers               :7_4:UnDeeper:
******************** / sameLine: success!                                                                :7_3:Is:
******************* \ undeepers has returned ()                                                           :7_3:Is:
****************** \ pRelPred has returned RPMT ["a data breach","occurred"]                               :7_3:Is:
***************** \ term p/3:plain p has returned MyLeaf (RPMT ["a data breach","occurred"])                :7_3:Is:
**************** \ term p/notLabelTerm has returned MyLeaf (RPMT ["a data breach","occurred"])               :7_3:Is:
*************** \ term p has returned MyLeaf (RPMT ["a data breach","occurred"])                              :7_3:Is:
*************** / binary(Or)                                                                                  :7_3:Is:
*************** / binary(And)                                                                                 :7_3:Is:
*************** / binary(SetLess)                                                                             :7_3:Is:
*************** / binary(SetPlus)                                                                             :7_3:Is:
************** \ manyIndentation/leaf? has returned MyLeaf (RPMT ["a data breach","occurred"])                 :7_3:Is:
************** / myindented: consuming UnDeeper                                                                :7_3:Is:
********** / term p/3:plain p                                                                                   :6_2:GoDeeper:
*********** / pRelPred                                                                                         :6_2:GoDeeper:
************ / slRelPred                                                                                      :6_2:GoDeeper:
************* / RPConstraint                                                                                 :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPBoolStructR                                                                                :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slMultiTerm                                                                              :6_2:GoDeeper:
**************** / |:| some                                                                               :6_2:GoDeeper:
***************** / |:| base parser                                                                      :6_2:GoDeeper:
****************** / pNumAsText                                                                         :6_2:GoDeeper:
************* / RPMT                                                                                         :6_2:GoDeeper:
************** / $*|                                                                                        :6_2:GoDeeper:
*************** / slAKA                                                                                    :6_2:GoDeeper:
**************** / $*|                                                                                    :6_2:GoDeeper:
***************** / slAKA base                                                                           :6_2:GoDeeper:
****************** / slInlineDefMT                                                                      :6_2:GoDeeper:
******************* / $*|                                                                              :6_2:GoDeeper:
******************** / slMultiTerm                                                                    :6_2:GoDeeper:
********************* / |:| some                                                                     :6_2:GoDeeper:
********************** / |:| base parser                                                            :6_2:GoDeeper:
*********************** / pNumAsText                                                               :6_2:GoDeeper:
******************* / slMultiTerm                                                                      :6_2:GoDeeper:
******************** / |:| some                                                                       :6_2:GoDeeper:
********************* / |:| base parser                                                              :6_2:GoDeeper:
********************** / pNumAsText                                                                 :6_2:GoDeeper:
******* / withPrePost                                                                                              :6_2:GoDeeper:
******** / |<* starting                                                                                           :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
******* / withPreOnly                                                                                              :6_2:GoDeeper:
******** / $*|                                                                                                    :6_2:GoDeeper:
********* / pre part                                                                                             :6_2:GoDeeper:
********** / aboveNextLineKeyword                                                                                 :6_3:GoDeeper:
*********** / expectUnDeepers                                                                                    :6_3:GoDeeper:
************ / pNumAsText                                                                                       :6_3:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","a data breach","GD","GD","GD","occurred"]                                            :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                     :6_3:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                    :6_3:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                  :6_3:GoDeeper:
*********** / $*|                                                                                                :6_3:GoDeeper:
*********** \ $*| has returned ((),0)                                                                            :6_3:GoDeeper:
*********** / ->| success                                                                                         :6_3:Other "a da:
*********** / |>>                                                                                                 :6_3:Other "a da:
************ / |>>/recurse                                                                                       :6_3:Other "a da:
************ / |>>/base                                                                                          :6_3:Other "a da:
************* / slMultiTerm                                                                                     :6_3:Other "a da:
************** / |:| some                                                                                      :6_3:Other "a da:
*************** / |:| base parser                                                                             :6_3:Other "a da:
*************** \ |:| base parser has returned ("a data breach",0)                                             :6_4:GoDeeper:
*************** / |:| deeper                                                                                   :6_4:GoDeeper:
**************** / |:| some GoDeeper                                                                          :6_4:GoDeeper:
**************** \ |:| some GoDeeper has returned [GoDeeper,GoDeeper,GoDeeper]                                     :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |:| deeper has returned (["occurred"],3)                                                       :7_4:UnDeeper:
************** \ |:| some has returned (["a data breach","occurred"],3)                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["a data breach","occurred"],3)                                          :7_4:UnDeeper:
************* / |>>/base got ["a data breach","occurred"]                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["a data breach","occurred"],3)                                               :7_4:UnDeeper:
*********** \ |>> has returned (["a data breach","occurred"],3)                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 4                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                        :6_3:GoDeeper:
********** / aboveNextLineKeyword                                                                                  :6_3:Other "a da:
*********** / expectUnDeepers                                                                                     :6_3:Other "a da:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["a data breach","GD","GD","GD","occurred"]                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                      :6_3:Other "a da:
*********** / aNLK: determined undp_count = 3                                                                     :6_3:Other "a da:
*********** / ->| trying to consume 1 GoDeepers                                                                   :6_3:Other "a da:
*********** / $*|                                                                                                 :6_3:Other "a da:
*********** \ $*| has returned ((),0)                                                                             :6_3:Other "a da:
********** / /*= lookAhead failed, delegating to plain /+=                                                         :6_3:Other "a da:
********** / aboveNextLineKeyword                                                                                   :6_4:GoDeeper:
*********** / expectUnDeepers                                                                                      :6_4:GoDeeper:
************ / pNumAsText                                                                                         :6_4:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","GD","occurred"]                                                                 :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                       :6_4:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                      :6_4:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                    :6_4:GoDeeper:
*********** / $*|                                                                                                  :6_4:GoDeeper:
*********** \ $*| has returned ((),0)                                                                              :6_4:GoDeeper:
*********** / ->| success                                                                                            :6_5:GoDeeper:
*********** / |>>                                                                                                    :6_5:GoDeeper:
************ / |>>/recurse                                                                                          :6_5:GoDeeper:
************* / |>>                                                                                                  :6_6:GoDeeper:
************** / |>>/recurse                                                                                        :6_6:GoDeeper:
*************** / |>>                                                                                               :6_6:Other "occu:
**************** / |>>/recurse                                                                                     :6_6:Other "occu:
**************** / |>>/base                                                                                        :6_6:Other "occu:
***************** / slMultiTerm                                                                                   :6_6:Other "occu:
****************** / |:| some                                                                                    :6_6:Other "occu:
******************* / |:| base parser                                                                           :6_6:Other "occu:
******************* \ |:| base parser has returned ("occurred",0)                                            :7_4:UnDeeper:
******************* / |:| deeper                                                                             :7_4:UnDeeper:
******************** / |:| some GoDeeper                                                                    :7_4:UnDeeper:
******************* / |:| noMore                                                                             :7_4:UnDeeper:
******************* \ |:| noMore has returned ([],0)                                                         :7_4:UnDeeper:
****************** \ |:| some has returned (["occurred"],0)                                                   :7_4:UnDeeper:
***************** \ slMultiTerm has returned (["occurred"],0)                                                  :7_4:UnDeeper:
***************** / |>>/base got ["occurred"]                                                                  :7_4:UnDeeper:
**************** \ |>>/base has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ |>> has returned (["occurred"],0)                                                              :7_4:UnDeeper:
************** \ |>>/recurse has returned (["occurred"],1)                                                        :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],1)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],2)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],2)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 3                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                          :6_4:GoDeeper:
********** / aboveNextLineKeyword                                                                                     :6_5:GoDeeper:
*********** / expectUnDeepers                                                                                        :6_5:GoDeeper:
************ / pNumAsText                                                                                           :6_5:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","GD","occurred"]                                                                      :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :6_5:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :6_5:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :6_5:GoDeeper:
*********** / $*|                                                                                                    :6_5:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                :6_5:GoDeeper:
*********** / ->| success                                                                                              :6_6:GoDeeper:
*********** / |>>                                                                                                      :6_6:GoDeeper:
************ / |>>/recurse                                                                                            :6_6:GoDeeper:
************* / |>>                                                                                                   :6_6:Other "occu:
************** / |>>/recurse                                                                                         :6_6:Other "occu:
************** / |>>/base                                                                                            :6_6:Other "occu:
*************** / slMultiTerm                                                                                       :6_6:Other "occu:
**************** / |:| some                                                                                        :6_6:Other "occu:
***************** / |:| base parser                                                                               :6_6:Other "occu:
***************** \ |:| base parser has returned ("occurred",0)                                                :7_4:UnDeeper:
***************** / |:| deeper                                                                                 :7_4:UnDeeper:
****************** / |:| some GoDeeper                                                                        :7_4:UnDeeper:
***************** / |:| noMore                                                                                 :7_4:UnDeeper:
***************** \ |:| noMore has returned ([],0)                                                             :7_4:UnDeeper:
**************** \ |:| some has returned (["occurred"],0)                                                       :7_4:UnDeeper:
*************** \ slMultiTerm has returned (["occurred"],0)                                                      :7_4:UnDeeper:
*************** / |>>/base got ["occurred"]                                                                      :7_4:UnDeeper:
************** \ |>>/base has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ |>> has returned (["occurred"],0)                                                                  :7_4:UnDeeper:
************ \ |>>/recurse has returned (["occurred"],1)                                                            :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],1)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 2                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :6_5:GoDeeper:
********** / aboveNextLineKeyword                                                                                       :6_6:GoDeeper:
*********** / expectUnDeepers                                                                                          :6_6:GoDeeper:
************ / pNumAsText                                                                                             :6_6:GoDeeper:
************ / ignoring ["GD","occurred"]                                                                           :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                           :6_6:GoDeeper:
*********** / aNLK: determined undp_count = 3                                                                          :6_6:GoDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                        :6_6:GoDeeper:
*********** / $*|                                                                                                      :6_6:GoDeeper:
*********** \ $*| has returned ((),0)                                                                                  :6_6:GoDeeper:
*********** / ->| success                                                                                               :6_6:Other "occu:
*********** / |>>                                                                                                       :6_6:Other "occu:
************ / |>>/recurse                                                                                             :6_6:Other "occu:
************ / |>>/base                                                                                                :6_6:Other "occu:
************* / slMultiTerm                                                                                           :6_6:Other "occu:
************** / |:| some                                                                                            :6_6:Other "occu:
*************** / |:| base parser                                                                                   :6_6:Other "occu:
*************** \ |:| base parser has returned ("occurred",0)                                                    :7_4:UnDeeper:
*************** / |:| deeper                                                                                     :7_4:UnDeeper:
**************** / |:| some GoDeeper                                                                            :7_4:UnDeeper:
*************** / |:| noMore                                                                                     :7_4:UnDeeper:
*************** \ |:| noMore has returned ([],0)                                                                 :7_4:UnDeeper:
************** \ |:| some has returned (["occurred"],0)                                                           :7_4:UnDeeper:
************* \ slMultiTerm has returned (["occurred"],0)                                                          :7_4:UnDeeper:
************* / |>>/base got ["occurred"]                                                                          :7_4:UnDeeper:
************ \ |>>/base has returned (["occurred"],0)                                                               :7_4:UnDeeper:
*********** \ |>> has returned (["occurred"],0)                                                                      :7_4:UnDeeper:
*********** / aNLK: current depth is 1                                                                               :7_4:UnDeeper:
*********** / |<|                                                                                                    :7_4:UnDeeper:
*********** / |<* starting                                                                                           :7_4:UnDeeper:
*********** / |<*/recurse                                                                                            :7_4:UnDeeper:
*********** / |<*/base                                                                                               :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                              :6_6:GoDeeper:
********** / aboveNextLineKeyword                                                                                        :6_6:Other "occu:
*********** / expectUnDeepers                                                                                           :6_6:Other "occu:
************ / ignoring ["occurred"]                                                                                :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                            :6_6:Other "occu:
*********** / aNLK: determined undp_count = 3                                                                           :6_6:Other "occu:
*********** / ->| trying to consume 1 GoDeepers                                                                         :6_6:Other "occu:
*********** / $*|                                                                                                       :6_6:Other "occu:
*********** \ $*| has returned ((),0)                                                                                   :6_6:Other "occu:
********** / /*= lookAhead failed, delegating to plain /+=                                                               :6_6:Other "occu:
********** / aboveNextLineKeyword                                                                                     :7_4:UnDeeper:
*********** / expectUnDeepers                                                                                        :7_4:UnDeeper:
************ / ignoring []                                                                                          :7_4:UnDeeper:
************ / matched undeepers [UnDeeper,UnDeeper,UnDeeper]                                                    :7_3:Is:
*********** \ expectUnDeepers has returned 3                                                                         :7_4:UnDeeper:
*********** / aNLK: determined undp_count = 3                                                                        :7_4:UnDeeper:
*********** / ->| trying to consume 1 GoDeepers                                                                      :7_4:UnDeeper:
*********** / $*|                                                                                                    :7_4:UnDeeper:
*********** \ $*| has returned ((),0)                                                                                :7_4:UnDeeper:
********** / /*= lookAhead failed, delegating to plain /+=                                                            :7_4:UnDeeper:
****** / Otherwise                                                                                                 :6_1:If:
***** / pHornlike/ambitious                                                                                         :6_1:If:
****** / $>|                                                                                                       :6_1:If:
***** / pHornlike/someStructure                                                                                     :6_1:If:
****** / manyIndentation/leaf?                                                                                     :6_1:If:
******* / relPredNextlineWhen                                                                                     :6_1:If:
******** / pRelPred optIndentedTuple whenCase                                                                    :6_1:If:
********* / optIndentedTuple                                                                                    :6_1:If:
********** / optIndented                                                                                       :6_1:If:
*********** / pRelPred                                                                                        :6_1:If:
************ / slRelPred                                                                                     :6_1:If:
************* / RPConstraint                                                                                :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPBoolStructR                                                                               :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPMT                                                                                        :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slAKA                                                                                   :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slAKA base                                                                          :6_1:If:
****************** / slInlineDefMT                                                                     :6_1:If:
******************* / $*|                                                                             :6_1:If:
******************** / slMultiTerm                                                                   :6_1:If:
********************* / |:| some                                                                    :6_1:If:
********************** / |:| base parser                                                           :6_1:If:
*********************** / pNumAsText                                                              :6_1:If:
******************* / slMultiTerm                                                                     :6_1:If:
******************** / |:| some                                                                      :6_1:If:
********************* / |:| base parser                                                             :6_1:If:
********************** / pNumAsText                                                                :6_1:If:
******* / relPredSamelineWhen                                                                                     :6_1:If:
******** / $*|                                                                                                   :6_1:If:
********* / slRelPred                                                                                           :6_1:If:
********** / RPConstraint                                                                                      :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPBoolStructR                                                                                     :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPMT                                                                                              :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slAKA                                                                                         :6_1:If:
************* / $*|                                                                                         :6_1:If:
************** / slAKA base                                                                                :6_1:If:
*************** / slInlineDefMT                                                                           :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slMultiTerm                                                                         :6_1:If:
****************** / |:| some                                                                          :6_1:If:
******************* / |:| base parser                                                                 :6_1:If:
******************** / pNumAsText                                                                    :6_1:If:
**************** / slMultiTerm                                                                           :6_1:If:
***************** / |:| some                                                                            :6_1:If:
****************** / |:| base parser                                                                   :6_1:If:
******************* / pNumAsText                                                                      :6_1:If:
****** / manyIndentation/deeper; calling someIndentation                                                           :6_1:If:
******* / someIndentation                                                                                         :6_1:If:
******** / myindented: consuming GoDeeper                                                                        :6_1:If:
***** / pHornlike/ambitious                                                                                         :6_1:If:
****** / $>|                                                                                                       :6_1:If:
***** / pHornlike/someStructure                                                                                     :6_1:If:
****** / manyIndentation/leaf?                                                                                     :6_1:If:
******* / relPredNextlineWhen                                                                                     :6_1:If:
******** / pRelPred optIndentedTuple whenCase                                                                    :6_1:If:
********* / optIndentedTuple                                                                                    :6_1:If:
********** / optIndented                                                                                       :6_1:If:
*********** / pRelPred                                                                                        :6_1:If:
************ / slRelPred                                                                                     :6_1:If:
************* / RPConstraint                                                                                :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPBoolStructR                                                                               :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPMT                                                                                        :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slAKA                                                                                   :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slAKA base                                                                          :6_1:If:
****************** / slInlineDefMT                                                                     :6_1:If:
******************* / $*|                                                                             :6_1:If:
******************** / slMultiTerm                                                                   :6_1:If:
********************* / |:| some                                                                    :6_1:If:
********************** / |:| base parser                                                           :6_1:If:
*********************** / pNumAsText                                                              :6_1:If:
******************* / slMultiTerm                                                                     :6_1:If:
******************** / |:| some                                                                      :6_1:If:
********************* / |:| base parser                                                             :6_1:If:
********************** / pNumAsText                                                                :6_1:If:
******* / relPredSamelineWhen                                                                                     :6_1:If:
******** / $*|                                                                                                   :6_1:If:
********* / slRelPred                                                                                           :6_1:If:
********** / RPConstraint                                                                                      :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPBoolStructR                                                                                     :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPMT                                                                                              :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slAKA                                                                                         :6_1:If:
************* / $*|                                                                                         :6_1:If:
************** / slAKA base                                                                                :6_1:If:
*************** / slInlineDefMT                                                                           :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slMultiTerm                                                                         :6_1:If:
****************** / |:| some                                                                          :6_1:If:
******************* / |:| base parser                                                                 :6_1:If:
******************** / pNumAsText                                                                    :6_1:If:
**************** / slMultiTerm                                                                           :6_1:If:
***************** / |:| some                                                                            :6_1:If:
****************** / |:| base parser                                                                   :6_1:If:
******************* / pNumAsText                                                                      :6_1:If:
****** / manyIndentation/deeper; calling someIndentation                                                           :6_1:If:
******* / someIndentation                                                                                         :6_1:If:
******** / myindented: consuming GoDeeper                                                                        :6_1:If:
***** / pHornlike/ambitious                                                                                         :6_1:If:
****** / $>|                                                                                                       :6_1:If:
***** / pHornlike/someStructure                                                                                     :6_1:If:
****** / manyIndentation/leaf?                                                                                     :6_1:If:
******* / relPredNextlineWhen                                                                                     :6_1:If:
******** / pRelPred optIndentedTuple whenCase                                                                    :6_1:If:
********* / optIndentedTuple                                                                                    :6_1:If:
********** / optIndented                                                                                       :6_1:If:
*********** / pRelPred                                                                                        :6_1:If:
************ / slRelPred                                                                                     :6_1:If:
************* / RPConstraint                                                                                :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPBoolStructR                                                                               :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slMultiTerm                                                                             :6_1:If:
**************** / |:| some                                                                              :6_1:If:
***************** / |:| base parser                                                                     :6_1:If:
****************** / pNumAsText                                                                        :6_1:If:
************* / RPMT                                                                                        :6_1:If:
************** / $*|                                                                                       :6_1:If:
*************** / slAKA                                                                                   :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slAKA base                                                                          :6_1:If:
****************** / slInlineDefMT                                                                     :6_1:If:
******************* / $*|                                                                             :6_1:If:
******************** / slMultiTerm                                                                   :6_1:If:
********************* / |:| some                                                                    :6_1:If:
********************** / |:| base parser                                                           :6_1:If:
*********************** / pNumAsText                                                              :6_1:If:
******************* / slMultiTerm                                                                     :6_1:If:
******************** / |:| some                                                                      :6_1:If:
********************* / |:| base parser                                                             :6_1:If:
********************** / pNumAsText                                                                :6_1:If:
******* / relPredSamelineWhen                                                                                     :6_1:If:
******** / $*|                                                                                                   :6_1:If:
********* / slRelPred                                                                                           :6_1:If:
********** / RPConstraint                                                                                      :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPBoolStructR                                                                                     :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slMultiTerm                                                                                   :6_1:If:
************* / |:| some                                                                                    :6_1:If:
************** / |:| base parser                                                                           :6_1:If:
*************** / pNumAsText                                                                              :6_1:If:
********** / RPMT                                                                                              :6_1:If:
*********** / $*|                                                                                             :6_1:If:
************ / slAKA                                                                                         :6_1:If:
************* / $*|                                                                                         :6_1:If:
************** / slAKA base                                                                                :6_1:If:
*************** / slInlineDefMT                                                                           :6_1:If:
**************** / $*|                                                                                   :6_1:If:
***************** / slMultiTerm                                                                         :6_1:If:
****************** / |:| some                                                                          :6_1:If:
******************* / |:| base parser                                                                 :6_1:If:
******************** / pNumAsText                                                                    :6_1:If:
**************** / slMultiTerm                                                                           :6_1:If:
***************** / |:| some                                                                            :6_1:If:
****************** / |:| base parser                                                                   :6_1:If:
******************* / pNumAsText                                                                      :6_1:If:
****** / manyIndentation/deeper; calling someIndentation                                                           :6_1:If:
******* / someIndentation                                                                                         :6_1:If:
******** / myindented: consuming GoDeeper                                                                        :6_1:If:
*** / pRuleLabel                                                                                                      :6_1:If:
**** / $>|                                                                                                           :6_1:If:
*** / pRule: unwrapping indentation and recursing                                                                     :6_1:If:
**** / myindented: consuming GoDeeper                                                                                :6_1:If:
* final
:PROPERTIES:
:VISIBILITY: all
:END:


PDPA
  pdpadbno-4 FAILED [1]

Failures:

  test/Spec.hs:120:3: 
  1) PDPA pdpadbno-4
       expected: [[]]
       but parsing failed with error:
       6:1:
       unexpected If
       expecting And, Or, Unless, or end of input
       §                                                                                                                   NDB Qualification
       DEFINE                                                                                                              a Data Breach
       IS                                                                                                                  TRUE                                                                                                                a Notifiable Data Breach


       ✳ IF                                                                                                                TRUE                                                                                                                a data breach                                                                                                                                                                                                                                                                                                                                               occurred                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                               IS                                                                                                                  any                                                                                                                 unauthorised                                                                                                                                                                                                                                                                                                                                                FALSE                                                                                                               access
use                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
disclosure
copying                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
modification
disposal
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       of personal data                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                               OR                                                                                                                  loss of storage medium on which personal data is stored in circumstances where the unauthorisedaccess                                                                                                             
use                                                                                                                
disclosure                                                                                                         
copying                                                                                                            
modification                                                                                                       
disposal                                                                                                           
of the personal data is likely to occur                                                                                                                                                                                                                                                                                                                                                                                                                                        

       UNLESS                                                                                                              FALSE                                                                                                               the data breach occurred only within an organisation

       AND                                                                                                                 TRUE                                                                                                                it results in, or is likely to result in, significant harm to an affected individual
                                                                                                                                                                                                                                               IF                                                                                                                  FALSE                                                                                                               the data breach is in relation to any prescribed personal data or class of personal data relating to the individual
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       IF                                                                                                                  FALSE                                                                                                               the data breach relates to
the individual’s                                                                                                    TRUE                                                                                                                full name
alias
identification number
any of the prescribed personal data or classes of personal data relating to the individual                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
set out in                                                                                                          Part 1 of the Schedule
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       subject to                                                                                                          Part 2 of the Schedule

                                                                                                                                                                                                                                               OR                                                                                                                  TRUE                                                                                                                in other prescribed circumstances
all of                                                                                                              the following personal data relating to an individual’s account with an organisation
the individual’s account identifier
an account                                                                                                                                                                                                                              name
number
a number assigned to any account the individual has with an organisation that is a bank or finance company
any                                                                                                                 FALSE                                                                                                               password
security code
access code
response to a security question
biometric data
other data                                                                                                                                                                                                                              that isused
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           or                                                                                                                  FALSE                                                                                                               required                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

to                                                                                                                  allow                                                                                                                                                                                                                                   FALSE                                                                                                               access to
or                                                                                                                  FALSE                                                                                                               use of

the individual’s account
       

  To rerun use: --match "/PDPA/pdpadbno-4/"

Randomized with seed 1831662864

Finished in 0.1538 seconds
1 example, 1 failure

natural4> Test suite natural4-test failed
Completed 2 action(s).
Test suite failure for package natural4-0.1.0.0
    natural4-test:  exited with: ExitFailure 1
Logs printed to console

