//,,live updates,FALSE,,devMode port,8081,,TRUE,TRUE,FALSE,FALSE
,,,,,,,,,,,
,§,pee two,,,,,,,,,
,GIVEN,userInput,IS,AN,Integer,,,,,,
,,ui2,IS,AN,Integer,,,,,,
,GIVETH,pString,IS,A,String,,,,,,
,,pNum,IS,AN,Integer,,,,,,
,DECIDE,pString,IS,Two,WHEN,userInput,>,2000,,,
//,,,,,AND,ui2,>,0,,,
//,,pString,IS,One,WHEN,userInput,>,1000,,,
//,,,,,AND,ui2,>,0,,,
//,,pString,IS,Zero,AND,pNum,IS,0,OTHERWISE,,
//,,,,,,,,,,,
//,"out(pString : Two, pNum : 2) :- userInput #> 2000, ui2 ># 0.",,,,,,,,,,
//,§,p2 as a dmn table,,,,,,,,,
//,,,,,,,,,,,
//,F,userInput,ui2,pString,pNum,,,,,,
//,,Integer,Integer,String,Integer,,,,,,
//,,> 2000,>0,Two,2,,,,,,
//,,> 1000,>0,One,1,,,,,,
//,,-,-,Zero,,,,,,,
,,,,,,,,,,,
// ,§,Data Breaches in the Abstract,,,,,,,,,
// ,DECLARE,Data Breach,,IS,A,Class,,,,,
// ,HAS,Affected Individuals,,IS,AN,Integer,,,,,
// ,,Excessive,,IS,A,Boolean,,,,,
// ,,Uninterested Individuals,,IS,AN,Float,,,,,
// ,,,,,,,,,,,
// ,§,"A Concrete Data Breach, Case One",,,,,,,,,
// ,DEFINE,db 1,,IS,A,Data Breach,,,,,
// ,HAS,250,,IS,THE,Affected Individuals,,,,,
// ,,,,,,,,,,,
// ,§,"A Concrete Data Breach, Case Two",,,,,,,,,
// ,DEFINE,db 2,,IS,A,Data Breach,,,,,
// ,HAS,750,,IS,THE,Affected Individuals,,,,,
// ,,,,,,,,,,,
// ,,,,,,,,,,,
// ,§,Rule_exceeds1,,,,,,,,,
// ,GIVEN,,db,IS,A,DataBreach,,,,,
// ,DECIDE,,db,IS,Excessive,,,,,,
// ,WHEN,db's,number of Affected Individuals,,,,>=,500,,,
// ,AND,db.,Affected Individuals,,,,>=,500,,,
// ,AND,,some predicate,,Affected Individuals,,,,,,
// ,,,,,,,,,,,
// ,§,boring 1,,,,,,,,,
// ,GIVEN,,ai,IS,AN,Integer,,,,,
// ,DECIDE,,some predicate,IS,1,,,,,,
// ,WHEN,,ai,,,,>,1000,,,
// ,,,,,,,,,,,
//,do we interpret the above as,,,,,,,,,,
//,if (ui > 2000),,,,,,,,,,
//,then p2 2,,,p2(2) :- ui #> 2000.,,,,,,,
,,,,,,,,,,,
//,§,timesTwo,// logical form,,,,,,,,
//,GIVEN,n,IS,AN,Integer,,,,,,
//,GIVETH,OUT,IS,AN,Integer,,,,,,
//,DECIDE,OUT,IS,2 * n,,,,,,,
,,,,,,,,,,,
//,§,timesTwo,// functional style,,,,,,,,
//,GIVEN,n,IS,AN,Integer,,,,,,
//,GIVETH,2 * n,,,,,,,,,
//,,,,,,,,,,,
,,,,,,,,,,,
//,§,timesTwo,// siu dai,,,,,,,,
//,,f(n: Integer) = 2 * n,,,,,,,,,
,,,,,,,,,,,
//,"timesTwo(n, Out) :- Out #= n * 2.",,,,,,,,,,
//,timesTwo :: Integer -> Integer,,,,,,,,,,
//,timesTwo n = n * 2,,,,,,,,,,
//,,,,,,,,,,,
//,Jo Hsi will document a more systematic overview about assumptions and limitations made about our rule format for a valid translation to DMN,,,,,,,,,,
//,then we will take this proposed syntax and examine the extent to which it is compatible with the current rule format,,,,,,,,,,
//,this is so we can ensure our syntax is as generalisable as possible ,,,,,,,,,,
//,in the meantime we'll also experiment with hardcoding all types as 'Any',,,,,,,,,,
,,,,,,,,,,,
,GIVEN,db,IS,A,DataBreach,,,,,,
,,p,IS,A,Person,,,,,,
,DECIDE,exceedsPrescrNumberOfIndividuals,,,,db,,,,,
,WHEN,numberOfAffectedIndividuals,,,,db ,>= ,500,,,
,AND,numberOfAffectedIndividuals,,,,db,,,,,