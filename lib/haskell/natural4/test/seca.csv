//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Constitutive Rules: An X is a Y if Z holds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,IT IS,FALSE,a Constitutive Rule,,,,,,,,//,"A defined term is underlined, and sits at the top of a tree of and/or definitions.",,,,,,,,,,,,,,,,,,,,
//,,,IF,FALSE,it says something counts-as something,,,,,,,//,"Frequently, the prefix ""IT IS"" or ""IT HOLDS THAT"" may appear to the left of the defined term.",,,,,,,,,,,,,,,,,,,,
//,,,OR,FALSE,a judge says it is a constitutive rule ¯\_(ツ)_/¯,,,,,,,//,"We use this pattern for defined terms, inline definitions, and what computer scientists call ""let bindings"" and ""where bindings"".",,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,//,"In a degenerate case, the defined term may be simply assigned a ground value: the Penalty Fee is $20.",,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,DECIDE,Goal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,WHEN,FALSE,precondition 1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,OR,FALSE,precondition 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,"Goal :- precondition1, precondition2.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,rule <SecA_RecoverPassengersVehicleAuthorizedOp>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,for s: Situation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,if secA_Applicability && currentSit s && (s == missingKeys),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,then coverProvided s recoverPassengersVehicleAuthorizedOp SecA_RecoverPassengersVehicleAuthorizedOp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,§,SecA_RecoverPassengersVehicleAuthorizedOp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,GIVEN,sit,IS A,Situation,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,DECIDE,coverProvided,,Situation,recoverPassengersVehicleAuthorizedOp,,,,,SecA_RecoverPassengersVehicleAuthorizedOp,,,,,,,,,,,,,,,,,,,,,
,,,WHEN,FALSE,section A,applies,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,AND,FALSE,currentSit,,sit,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,AND,FALSE,sit,IS,missingKeys,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,GIVEN,sit,IS A,Situation,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,DECIDE,,section A,applies,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,WHEN,FALSE,blah blah,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,DEFINE,Situation,IS,ONE OF,missingKeys,,noPetrol,fire,mechanicalBreakdown,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Constitutive Rules as And/Or Trees,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"And/or structures are ubiquitous in logic and in law. Here we offer a tabular representation in the spirit of Layman Allen, a pioneer in the graphical composition of logical legal primitives.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 1,,A or B or C,,,,,Example 2,,A and B and C,,,,,Example 3,,(A or B) and C,,,,,Example 4,,A and (B or C),,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,IF,A,,,,¶,,IF,A,,,,¶,,IF,A,,,,¶,,IF,A,,,,,,,,,
//,,OR,B,,,,¶,,AND,B,,,,¶,,OR,B,,,,¶,,AND,B,,,,,,,,,
//,,OR,C,,,,¶,,AND,C,,,,¶,,AND,C,,,,¶,,OR,C,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"A vertical line joins a list of predicates. A horizontal separator represents an ""and"" conjunction. The absence of that separator indicates ""or"". This being Conjunctive Normal Form, ""or""s bind tighter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 5,,A or B or C,,,,,Example 6,,A and B and C,,,,,Example 7,,(A or B) and C,,,,,Example 8,,A and (B or C),,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,FALSE,,,,,¶,,FALSE,,,,,¶,,FALSE,,,,,¶,,FALSE,Prerequisites are met,,,,,,,,,
//,,IF,FALSE,A,,,¶,,IF,FALSE,A,,,¶,,IF,FALSE,A,,,¶,,IF,FALSE,A,,,,,,,,
//,,OR,FALSE,B,,,¶,,AND,FALSE,B,,,¶,,OR,FALSE,B,,,¶,,AND,FALSE,B,,,,,,,,
//,,OR,FALSE,C,,,¶,,AND,FALSE,C,,,¶,,AND,FALSE,C,,,¶,,OR,FALSE,C,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"Checkboxes show the value of each predicate. The checkbox at the top left indicates the overall value of the tree. To the right of that checkbox, we have room for a label.
We call that checkbox and label, together, the ""head"", and the rest of the elements below it the ""body"". A horizontal bar separates the head from the body.
In the body, if all the rows are members of the same disjunctive or conjunctive list, all but the final and/or word may be omitted – or replaced with a comma!
The horizontal bar under the head checkbox may be solid or dotted as needed to disambiguate it from an ""and"" conjunction – see example 14 below.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"(The following bit doesn't have to parse for now, it's really hard to get border information out of the spreadsheet so we can just use this as a visual notation to help teach but not actually for implementation.)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 9,,A or B or C,,,,,Example 10,,A and B and C,,,,,Example 11,,(A or B) and C,,,,,Example 12,,A and (B or C),,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,//,FALSE,Prerequisites,,,,¶,,FALSE,Prerequisites,,,,¶,,FALSE,Prerequisites,,,,¶,,FALSE,Prerequisites,,,,,,,,,
//,//,FALSE,A,,,,¶,,FALSE,A,,,,¶,,FALSE,A,,,,¶,,FALSE,A,,,,,,,,,
//,//,FALSE,B,,,,¶,,FALSE,B,,,,¶,,FALSE,B,,,,¶,,FALSE,B,,,,,,,,,
//,//,FALSE,C,,,,¶,,FALSE,C,,,,¶,,FALSE,C,,,,¶,,FALSE,C,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,For a more compact representation we get rid of the words on the left and let the horizontal lines do the work of carrying meaning. The checkboxes move to the left of the vertical pipe.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"As a visual hint, the lower checkboxes align to the right of the top-level checkbox: the top checkbox is aligned center, and the checkboxes below are aligned right.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 13,,(A and B) or C,,,,,,,,,,,,Example 14,,(A and B) or C,,,,,,,,,Example 14B,,(A and B) or C,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,TRUE,Prerequisites are met,,,,,,,,,,//,,,FALSE,Prerequisites are met,,,,,,,,,{,FALSE,Prerequisites are met,,,,,
//,,IF,TRUE,preconditions are met,,,,,,,,,//,,,FALSE,FALSE,A,,,,,,,,,FALSE,A,,,,,
//,,,IF,TRUE,A,,,,,,,,//,,,,FALSE,B,,,,,,,,,FALSE,B,,,,,
//,,,AND,TRUE,B,,,,,,,,//,,,FALSE,C,,,,,,,,,,,,,,,,
//,,OR,FALSE,C,,,,,,,,,//,,,,,,,,,,,,,,FALSE,C,,,,,}
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"A disjunction of conjunctions is represented by nesting a level.
We use a dotted horizontal line instead of a solid one to avoid confusion with ""and"".",,,,,,,,,,,,,,"A compact representation connects the ""and"" child with a dashed line.
A mathematician may be amused to observe the visual similarity to    _ ⊢(a ∧ b)",,,,,,,,,,,"A blank line is an ""OR"" that binds weaker than the ANDs.",,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Unless = And Not,,,,,,,,,,,,,,Or Not,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"No bestiary of logical operators would be complete without NOT. We use the word ""UNLESS"" to mean ""AND NOT"".

The vertical line jogs around the checkbox. Intuition: a carve-out.",,,,,,,,,,,,,,"How do we represent ""Or Not""?
We remove the horizontal line that divides the text of the elements.
This is less common.",,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 15,,A and (not B) and C,,,,,,,,,,,,Example 18,,A or (not B) or C,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,//,FALSE,Prerequisites are met,,,,¶,FALSE,Prerequisites,,,,¶,,,TRUE,Prerequisites are met,,,,¶,FALSE,Prerequisites,,,,,,,,,,
//,//,IF,FALSE,A,,,¶,FALSE,A,,,,¶,,,IF,FALSE,A,,,¶,FALSE,A,,,,,,,,,,
//,//,UNLESS,FALSE,B,,,¶,FALSE,B,,,,¶,,,OR NOT,FALSE,B,,,¶,TRUE,B,,,,,,,,,,
//,//,AND,FALSE,C,,,¶,FALSE,C,,,,¶,,,OR,FALSE,C,,,¶,FALSE,C,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 16,,"(Unless A), if B or C",,,,,,,,,,,,Example 19,,(Not A) or B or C,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,FALSE,Prerequisites are met,,,,,,,,,,,¶,,TRUE,Prerequisites are met,,,,//,FALSE,Prerequisites,,,,,,,,,,
//,,UNLESS,FALSE,A,,,,,,,,,,¶,,IF NOT,FALSE,A,,,//,TRUE,A,,,,,,,,,,
//,,IF,FALSE,B,,,,,,,,,,¶,,OR,FALSE,B,,,//,FALSE,B,,,,,,,,,,
//,,OR,FALSE,C,,,,,,,,,,¶,,OR,FALSE,C,,,//,FALSE,C,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"Laws sometimes give the ""unless"" at the bottom of the list.",,,,,,,,,,,,,,"This is a pretty uncommon structure, but we include it for completeness.",,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 17,,If A or B – unless A,,,,,,,,,,,,Example 20,,If A or B or not C,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,FALSE,Prerequisites are met,,,,,,,,,,,¶,,TRUE,Prerequisites are met,,,,//,TRUE,Prerequisites,,,,,,,,,,
//,,IF,FALSE,A,,,,,,,,,,¶,,IF,FALSE,A,,,//,FALSE,A,,,,,,,,,,
//,,OR,FALSE,B,,,,,,,,,,¶,,OR,FALSE,B,,,//,FALSE,B,,,,,,,,,,
//,,UNLESS,FALSE,C,,,,,,,,,,¶,,OR NOT,FALSE,C,,,//,FALSE,C,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Exclusive Or,,,,,,,,,,,,,,K of N,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,"Sometimes ""or"" means ""exclusive or"": You may choose tea or coffee – but not both.
We represent ""exclusive or"" with a different style of vertical line – parallels.",,,,,,,,,,,,,,"Exclusive or turns out to be a special case: 1 of N. We can generalise to K of N. Or even to <, >, = K of N.
Note that the compact style is not possible – it has to be the style where the checkboxes are to the right of the line.",,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,Example 21,,A xor B xor C,,,,,,,,,,,,Example 22,,1 out of 3,,,,Example 23,,2 out of 3,,,,Example 24,,< 2 out of 3,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,FALSE,Prerequisites,,,¶,,,,,,,//,,,FALSE,Prerequisites,,,¶,,TRUE,Prerequisites,,,¶,,FALSE,Prerequisites,,,,
//,,IF,FALSE,A,,¶,,,,,,,//,,,1,FALSE,A,,¶,,2,TRUE,A,,¶,,< 2,TRUE,A,,,
//,,XOR,FALSE,B,,¶,,,,,,,//,,,OF,FALSE,B,,¶,,OF,FALSE,B,,¶,,OF,FALSE,B,,,
//,,XOR,FALSE,C,,¶,,,,,,,//,,,,FALSE,C,,¶,,,TRUE,C,,¶,,,TRUE,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,"We could also have ""odd count"" or ""even count "" operators to support those who prefer the parity semantic for xor.",,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,